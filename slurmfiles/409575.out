Starting job 409575 on gpu-7 at Wed Jan 17 12:54:25 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_09.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6969.44 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7442.66 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7214.31 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7277.39 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7326.59 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7449.23 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6547.61 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6916.21 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7086.90 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7632.07 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7264.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7276.40 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7101.58 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5435, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.39330703020095825, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2881, 'eval_samples_per_second': 669.104, 'eval_steps_per_second': 83.911, 'epoch': 1.0}
{'loss': 0.4071, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.3922867178916931, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2613, 'eval_samples_per_second': 677.037, 'eval_steps_per_second': 84.906, 'epoch': 2.0}
{'loss': 0.4086, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.39039474725723267, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2585, 'eval_samples_per_second': 677.879, 'eval_steps_per_second': 85.012, 'epoch': 3.0}
{'loss': 0.4069, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.39134547114372253, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2694, 'eval_samples_per_second': 674.637, 'eval_steps_per_second': 84.605, 'epoch': 4.0}
{'loss': 0.4076, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.39363476634025574, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2736, 'eval_samples_per_second': 673.391, 'eval_steps_per_second': 84.449, 'epoch': 5.0}
{'loss': 0.4073, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3922673165798187, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.473, 'eval_steps_per_second': 84.835, 'epoch': 6.0}
{'loss': 0.4069, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.3928271234035492, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.263, 'eval_samples_per_second': 676.544, 'eval_steps_per_second': 84.844, 'epoch': 7.0}
{'loss': 0.4061, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.39083975553512573, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2686, 'eval_samples_per_second': 674.862, 'eval_steps_per_second': 84.633, 'epoch': 8.0}
{'loss': 0.4062, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.3913281261920929, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2601, 'eval_samples_per_second': 677.396, 'eval_steps_per_second': 84.951, 'epoch': 9.0}
{'loss': 0.4058, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.39225539565086365, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2577, 'eval_samples_per_second': 678.12, 'eval_steps_per_second': 85.042, 'epoch': 10.0}
{'loss': 0.406, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3910205662250519, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3321, 'eval_samples_per_second': 656.497, 'eval_steps_per_second': 82.33, 'epoch': 11.0}
{'loss': 0.4057, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.39329275488853455, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2651, 'eval_samples_per_second': 675.905, 'eval_steps_per_second': 84.764, 'epoch': 12.0}
{'loss': 0.4076, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.39159929752349854, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2637, 'eval_samples_per_second': 676.315, 'eval_steps_per_second': 84.815, 'epoch': 13.0}
{'loss': 0.4073, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.39110881090164185, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.217, 'eval_steps_per_second': 84.929, 'epoch': 14.0}
{'loss': 0.4067, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.39149317145347595, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2613, 'eval_samples_per_second': 677.037, 'eval_steps_per_second': 84.906, 'epoch': 15.0}
{'loss': 0.4072, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.39050760865211487, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2643, 'eval_samples_per_second': 676.142, 'eval_steps_per_second': 84.794, 'epoch': 16.0}
{'loss': 0.4057, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.3906029164791107, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2682, 'eval_samples_per_second': 674.975, 'eval_steps_per_second': 84.647, 'epoch': 17.0}
{'loss': 0.4064, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.3906792998313904, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.24, 'eval_steps_per_second': 84.931, 'epoch': 18.0}
{'loss': 0.4056, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.39123547077178955, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2641, 'eval_samples_per_second': 676.216, 'eval_steps_per_second': 84.803, 'epoch': 19.0}
{'loss': 0.4061, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.3905687630176544, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3347, 'eval_samples_per_second': 655.762, 'eval_steps_per_second': 82.238, 'epoch': 20.0}
{'loss': 0.4069, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.39050349593162537, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2573, 'eval_samples_per_second': 678.24, 'eval_steps_per_second': 85.057, 'epoch': 21.0}
{'loss': 0.4053, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3905182480812073, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.615, 'eval_steps_per_second': 84.853, 'epoch': 22.0}
{'loss': 0.4069, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.3908466100692749, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2599, 'eval_samples_per_second': 677.451, 'eval_steps_per_second': 84.958, 'epoch': 23.0}
{'loss': 0.4066, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.39077913761138916, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2584, 'eval_samples_per_second': 677.92, 'eval_steps_per_second': 85.017, 'epoch': 24.0}
{'train_runtime': 782.0456, 'train_samples_per_second': 264.967, 'train_steps_per_second': 6.629, 'train_loss': 0.4123304140420608, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.4123
  train_runtime            = 0:13:02.04
  train_samples            =       8634
  train_samples_per_second =    264.967
  train_steps_per_second   =      6.629
[{'loss': 0.5435, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.39330703020095825, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2881, 'eval_samples_per_second': 669.104, 'eval_steps_per_second': 83.911, 'epoch': 1.0, 'step': 216}, {'loss': 0.4071, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.3922867178916931, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2613, 'eval_samples_per_second': 677.037, 'eval_steps_per_second': 84.906, 'epoch': 2.0, 'step': 432}, {'loss': 0.4086, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.39039474725723267, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2585, 'eval_samples_per_second': 677.879, 'eval_steps_per_second': 85.012, 'epoch': 3.0, 'step': 648}, {'loss': 0.4069, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.39134547114372253, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2694, 'eval_samples_per_second': 674.637, 'eval_steps_per_second': 84.605, 'epoch': 4.0, 'step': 864}, {'loss': 0.4076, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.39363476634025574, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2736, 'eval_samples_per_second': 673.391, 'eval_steps_per_second': 84.449, 'epoch': 5.0, 'step': 1080}, {'loss': 0.4073, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3922673165798187, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.473, 'eval_steps_per_second': 84.835, 'epoch': 6.0, 'step': 1296}, {'loss': 0.4069, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3928271234035492, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.263, 'eval_samples_per_second': 676.544, 'eval_steps_per_second': 84.844, 'epoch': 7.0, 'step': 1512}, {'loss': 0.4061, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.39083975553512573, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2686, 'eval_samples_per_second': 674.862, 'eval_steps_per_second': 84.633, 'epoch': 8.0, 'step': 1728}, {'loss': 0.4062, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3913281261920929, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2601, 'eval_samples_per_second': 677.396, 'eval_steps_per_second': 84.951, 'epoch': 9.0, 'step': 1944}, {'loss': 0.4058, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.39225539565086365, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2577, 'eval_samples_per_second': 678.12, 'eval_steps_per_second': 85.042, 'epoch': 10.0, 'step': 2160}, {'loss': 0.406, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3910205662250519, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3321, 'eval_samples_per_second': 656.497, 'eval_steps_per_second': 82.33, 'epoch': 11.0, 'step': 2376}, {'loss': 0.4057, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.39329275488853455, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2651, 'eval_samples_per_second': 675.905, 'eval_steps_per_second': 84.764, 'epoch': 12.0, 'step': 2592}, {'loss': 0.4076, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.39159929752349854, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2637, 'eval_samples_per_second': 676.315, 'eval_steps_per_second': 84.815, 'epoch': 13.0, 'step': 2808}, {'loss': 0.4073, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.39110881090164185, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.217, 'eval_steps_per_second': 84.929, 'epoch': 14.0, 'step': 3024}, {'loss': 0.4067, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.39149317145347595, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2613, 'eval_samples_per_second': 677.037, 'eval_steps_per_second': 84.906, 'epoch': 15.0, 'step': 3240}, {'loss': 0.4072, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.39050760865211487, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2643, 'eval_samples_per_second': 676.142, 'eval_steps_per_second': 84.794, 'epoch': 16.0, 'step': 3456}, {'loss': 0.4057, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.3906029164791107, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2682, 'eval_samples_per_second': 674.975, 'eval_steps_per_second': 84.647, 'epoch': 17.0, 'step': 3672}, {'loss': 0.4064, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.3906792998313904, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.24, 'eval_steps_per_second': 84.931, 'epoch': 18.0, 'step': 3888}, {'loss': 0.4056, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.39123547077178955, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2641, 'eval_samples_per_second': 676.216, 'eval_steps_per_second': 84.803, 'epoch': 19.0, 'step': 4104}, {'loss': 0.4061, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.3905687630176544, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3347, 'eval_samples_per_second': 655.762, 'eval_steps_per_second': 82.238, 'epoch': 20.0, 'step': 4320}, {'loss': 0.4069, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.39050349593162537, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2573, 'eval_samples_per_second': 678.24, 'eval_steps_per_second': 85.057, 'epoch': 21.0, 'step': 4536}, {'loss': 0.4053, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.3905182480812073, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.615, 'eval_steps_per_second': 84.853, 'epoch': 22.0, 'step': 4752}, {'loss': 0.4069, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.3908466100692749, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2599, 'eval_samples_per_second': 677.451, 'eval_steps_per_second': 84.958, 'epoch': 23.0, 'step': 4968}, {'loss': 0.4066, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.39077913761138916, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2584, 'eval_samples_per_second': 677.92, 'eval_steps_per_second': 85.017, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 782.0456, 'train_samples_per_second': 264.967, 'train_steps_per_second': 6.629, 'total_flos': 7391764724698944.0, 'train_loss': 0.4123304140420608, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     0.3969
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:01.89
  predict_samples_per_second =    670.992
  predict_steps_per_second   =     83.874
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_09.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_39.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6152.76 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6871.27 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6791.08 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6861.79 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6939.25 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7061.76 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6267.18 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6617.78 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6723.10 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7308.58 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6938.79 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6949.44 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6800.68 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3098, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.2259962409734726, 'eval_precision': 0.21140939597315436, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.21343873517786563, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3909, 'eval_samples_per_second': 640.333, 'eval_steps_per_second': 80.303, 'epoch': 1.0}
{'loss': 0.2066, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.21727195382118225, 'eval_precision': 0.257847533632287, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.26003391746749577, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3671, 'eval_samples_per_second': 646.796, 'eval_steps_per_second': 81.114, 'epoch': 2.0}
{'loss': 0.1398, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.23430989682674408, 'eval_precision': 0.2281947261663286, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24154589371980678, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.284, 'eval_steps_per_second': 81.3, 'epoch': 3.0}
{'loss': 0.0993, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.28310272097587585, 'eval_precision': 0.2395659432387312, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.2766265060240964, 'eval_accuracy': 0.9256928896780668, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.156, 'eval_steps_per_second': 81.284, 'epoch': 4.0}
{'loss': 0.0702, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3135664165019989, 'eval_precision': 0.2420185375901133, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2543290043290043, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.264, 'eval_steps_per_second': 81.298, 'epoch': 5.0}
{'loss': 0.0501, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3346482217311859, 'eval_precision': 0.24751580849141824, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2762096774193548, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.246, 'eval_steps_per_second': 81.295, 'epoch': 6.0}
{'loss': 0.0337, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.34990194439888, 'eval_precision': 0.28190899001109876, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.163, 'eval_steps_per_second': 81.285, 'epoch': 7.0}
{'loss': 0.0224, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.36556577682495117, 'eval_precision': 0.27096114519427406, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28571428571428575, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.361, 'eval_samples_per_second': 648.459, 'eval_steps_per_second': 81.322, 'epoch': 8.0}
{'loss': 0.0165, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3919096887111664, 'eval_precision': 0.2932692307692308, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2855471035693388, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.875, 'eval_steps_per_second': 81.249, 'epoch': 9.0}
{'loss': 0.0105, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.4070330560207367, 'eval_precision': 0.2903225806451613, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29391891891891897, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.075, 'eval_steps_per_second': 81.274, 'epoch': 10.0}
{'loss': 0.0078, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.42659643292427063, 'eval_precision': 0.254314259763851, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2831142568250758, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 2.3747, 'eval_samples_per_second': 644.712, 'eval_steps_per_second': 80.852, 'epoch': 11.0}
{'loss': 0.0055, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.4243663251399994, 'eval_precision': 0.2784958871915394, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2743055555555555, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.334, 'eval_steps_per_second': 81.306, 'epoch': 12.0}
{'loss': 0.0037, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.44143810868263245, 'eval_precision': 0.2605769230769231, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2827334376630152, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3629, 'eval_samples_per_second': 647.926, 'eval_steps_per_second': 81.255, 'epoch': 13.0}
{'loss': 0.0025, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4575271010398865, 'eval_precision': 0.2521408182683159, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.27489626556016605, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.593, 'eval_steps_per_second': 81.213, 'epoch': 14.0}
{'loss': 0.0019, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.4637688100337982, 'eval_precision': 0.2921615201900237, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.2862129144851658, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.809, 'eval_steps_per_second': 81.366, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.46867606043815613, 'eval_precision': 0.28536880290205563, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2769953051643193, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.524, 'eval_steps_per_second': 81.205, 'epoch': 16.0}
{'loss': 0.0018, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.476848304271698, 'eval_precision': 0.2540983606557377, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2676740420939018, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.178, 'eval_steps_per_second': 81.287, 'epoch': 17.0}
{'loss': 0.0013, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.46149981021881104, 'eval_precision': 0.28068303094983993, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2899669239250276, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.248, 'eval_steps_per_second': 81.296, 'epoch': 18.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.4787866473197937, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.285, 'eval_steps_per_second': 81.3, 'epoch': 19.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.48617711663246155, 'eval_precision': 0.28167539267015707, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29366812227074235, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.18, 'eval_steps_per_second': 81.287, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.48639023303985596, 'eval_precision': 0.3012318029115342, 'eval_recall': 0.30672748004561, 'eval_f1': 0.303954802259887, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.32, 'eval_steps_per_second': 81.43, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.49006110429763794, 'eval_precision': 0.29228998849252014, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.29095074455899195, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3554, 'eval_samples_per_second': 650.005, 'eval_steps_per_second': 81.516, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.49117961525917053, 'eval_precision': 0.2990455991516437, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3098901098901099, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.768, 'eval_steps_per_second': 81.235, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.48930516839027405, 'eval_precision': 0.2886266094420601, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29740187949143176, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3611, 'eval_samples_per_second': 648.414, 'eval_steps_per_second': 81.316, 'epoch': 24.0}
{'train_runtime': 835.5091, 'train_samples_per_second': 248.012, 'train_steps_per_second': 3.878, 'train_loss': 0.041216869095777285, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0412
  train_runtime            = 0:13:55.50
  train_samples            =       8634
  train_samples_per_second =    248.012
  train_steps_per_second   =      3.878
[{'loss': 0.3098, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.2259962409734726, 'eval_precision': 0.21140939597315436, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.21343873517786563, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3909, 'eval_samples_per_second': 640.333, 'eval_steps_per_second': 80.303, 'epoch': 1.0, 'step': 135}, {'loss': 0.2066, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.21727195382118225, 'eval_precision': 0.257847533632287, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.26003391746749577, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3671, 'eval_samples_per_second': 646.796, 'eval_steps_per_second': 81.114, 'epoch': 2.0, 'step': 270}, {'loss': 0.1398, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.23430989682674408, 'eval_precision': 0.2281947261663286, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24154589371980678, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.284, 'eval_steps_per_second': 81.3, 'epoch': 3.0, 'step': 405}, {'loss': 0.0993, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.28310272097587585, 'eval_precision': 0.2395659432387312, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.2766265060240964, 'eval_accuracy': 0.9256928896780668, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.156, 'eval_steps_per_second': 81.284, 'epoch': 4.0, 'step': 540}, {'loss': 0.0702, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.3135664165019989, 'eval_precision': 0.2420185375901133, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2543290043290043, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.264, 'eval_steps_per_second': 81.298, 'epoch': 5.0, 'step': 675}, {'loss': 0.0501, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3346482217311859, 'eval_precision': 0.24751580849141824, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2762096774193548, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.246, 'eval_steps_per_second': 81.295, 'epoch': 6.0, 'step': 810}, {'loss': 0.0337, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.34990194439888, 'eval_precision': 0.28190899001109876, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.163, 'eval_steps_per_second': 81.285, 'epoch': 7.0, 'step': 945}, {'loss': 0.0224, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.36556577682495117, 'eval_precision': 0.27096114519427406, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28571428571428575, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.361, 'eval_samples_per_second': 648.459, 'eval_steps_per_second': 81.322, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0165, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3919096887111664, 'eval_precision': 0.2932692307692308, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2855471035693388, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.875, 'eval_steps_per_second': 81.249, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0105, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.4070330560207367, 'eval_precision': 0.2903225806451613, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29391891891891897, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.075, 'eval_steps_per_second': 81.274, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0078, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.42659643292427063, 'eval_precision': 0.254314259763851, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2831142568250758, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 2.3747, 'eval_samples_per_second': 644.712, 'eval_steps_per_second': 80.852, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0055, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4243663251399994, 'eval_precision': 0.2784958871915394, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2743055555555555, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.334, 'eval_steps_per_second': 81.306, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0037, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.44143810868263245, 'eval_precision': 0.2605769230769231, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2827334376630152, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3629, 'eval_samples_per_second': 647.926, 'eval_steps_per_second': 81.255, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0025, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4575271010398865, 'eval_precision': 0.2521408182683159, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.27489626556016605, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.593, 'eval_steps_per_second': 81.213, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0019, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4637688100337982, 'eval_precision': 0.2921615201900237, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.2862129144851658, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.809, 'eval_steps_per_second': 81.366, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0019, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.46867606043815613, 'eval_precision': 0.28536880290205563, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2769953051643193, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.524, 'eval_steps_per_second': 81.205, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0018, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.476848304271698, 'eval_precision': 0.2540983606557377, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2676740420939018, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.178, 'eval_steps_per_second': 81.287, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0013, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.46149981021881104, 'eval_precision': 0.28068303094983993, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2899669239250276, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.248, 'eval_steps_per_second': 81.296, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4787866473197937, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.285, 'eval_steps_per_second': 81.3, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.48617711663246155, 'eval_precision': 0.28167539267015707, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29366812227074235, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.18, 'eval_steps_per_second': 81.287, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.48639023303985596, 'eval_precision': 0.3012318029115342, 'eval_recall': 0.30672748004561, 'eval_f1': 0.303954802259887, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.32, 'eval_steps_per_second': 81.43, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.49006110429763794, 'eval_precision': 0.29228998849252014, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.29095074455899195, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3554, 'eval_samples_per_second': 650.005, 'eval_steps_per_second': 81.516, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.49117961525917053, 'eval_precision': 0.2990455991516437, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3098901098901099, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.768, 'eval_steps_per_second': 81.235, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.48930516839027405, 'eval_precision': 0.2886266094420601, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29740187949143176, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3611, 'eval_samples_per_second': 648.414, 'eval_steps_per_second': 81.316, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 835.5091, 'train_samples_per_second': 248.012, 'train_steps_per_second': 3.878, 'total_flos': 8937292497160812.0, 'train_loss': 0.041216869095777285, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9357
  predict_f1                 =     0.2503
  predict_loss               =     0.2259
  predict_precision          =     0.2503
  predict_recall             =     0.2503
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =     646.62
  predict_steps_per_second   =     80.827
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_39.json completed. F1: 0.2503401360544218
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_23.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_23.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6727.51 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7364.61 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7208.98 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7272.92 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7346.21 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7477.71 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6564.29 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6928.03 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7089.04 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7758.47 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7391.00 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7475.58 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7284.36 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4014, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.29753246903419495, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2986, 'eval_samples_per_second': 666.054, 'eval_steps_per_second': 83.529, 'epoch': 1.0}
{'loss': 0.2979, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.2624583840370178, 'eval_precision': 0.1568627450980392, 'eval_recall': 0.04561003420752566, 'eval_f1': 0.0706713780918728, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.276, 'eval_samples_per_second': 672.659, 'eval_steps_per_second': 84.357, 'epoch': 2.0}
{'loss': 0.2631, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.25517410039901733, 'eval_precision': 0.1288981288981289, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.09131075110456555, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 2.2741, 'eval_samples_per_second': 673.221, 'eval_steps_per_second': 84.427, 'epoch': 3.0}
{'loss': 0.2289, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.259430855512619, 'eval_precision': 0.1895910780669145, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.14416961130742048, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.2762, 'eval_samples_per_second': 672.603, 'eval_steps_per_second': 84.35, 'epoch': 4.0}
{'loss': 0.1982, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2637960910797119, 'eval_precision': 0.18309859154929578, 'eval_recall': 0.10376282782212087, 'eval_f1': 0.1324599708879185, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2746, 'eval_samples_per_second': 673.087, 'eval_steps_per_second': 84.411, 'epoch': 5.0}
{'loss': 0.1734, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2832178771495819, 'eval_precision': 0.17825311942959002, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.13908205841446453, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.2794, 'eval_samples_per_second': 671.672, 'eval_steps_per_second': 84.233, 'epoch': 6.0}
{'loss': 0.1534, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.29458752274513245, 'eval_precision': 0.164, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.174746936600959, 'eval_accuracy': 0.9233382228055277, 'eval_runtime': 2.627, 'eval_samples_per_second': 582.804, 'eval_steps_per_second': 73.088, 'epoch': 7.0}
{'loss': 0.1339, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.2984622120857239, 'eval_precision': 0.19750283768444948, 'eval_recall': 0.19840364880273662, 'eval_f1': 0.19795221843003416, 'eval_accuracy': 0.9295916004014514, 'eval_runtime': 2.2793, 'eval_samples_per_second': 671.705, 'eval_steps_per_second': 84.237, 'epoch': 8.0}
{'loss': 0.1156, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3093029856681824, 'eval_precision': 0.20555555555555555, 'eval_recall': 0.21094640820980615, 'eval_f1': 0.20821609454136183, 'eval_accuracy': 0.9254998841967111, 'eval_runtime': 2.2767, 'eval_samples_per_second': 672.452, 'eval_steps_per_second': 84.331, 'epoch': 9.0}
{'loss': 0.1022, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3299369513988495, 'eval_precision': 0.20516304347826086, 'eval_recall': 0.17217787913340935, 'eval_f1': 0.18722876627402357, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.2756, 'eval_samples_per_second': 672.796, 'eval_steps_per_second': 84.374, 'epoch': 10.0}
{'loss': 0.0915, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3323749005794525, 'eval_precision': 0.211864406779661, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.20551967116852612, 'eval_accuracy': 0.9297846058828071, 'eval_runtime': 2.2709, 'eval_samples_per_second': 674.193, 'eval_steps_per_second': 84.549, 'epoch': 11.0}
{'loss': 0.0782, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3616199493408203, 'eval_precision': 0.19484240687679083, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.21205821205821207, 'eval_accuracy': 0.9218327800509535, 'eval_runtime': 2.2691, 'eval_samples_per_second': 674.717, 'eval_steps_per_second': 84.615, 'epoch': 12.0}
{'loss': 0.0678, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.35019171237945557, 'eval_precision': 0.2022132796780684, 'eval_recall': 0.2291904218928164, 'eval_f1': 0.2148583645109567, 'eval_accuracy': 0.9261175017370493, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.679, 'eval_steps_per_second': 84.61, 'epoch': 13.0}
{'loss': 0.0591, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.36938369274139404, 'eval_precision': 0.23838630806845965, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.23008849557522124, 'eval_accuracy': 0.9299390102678916, 'eval_runtime': 2.2716, 'eval_samples_per_second': 673.962, 'eval_steps_per_second': 84.52, 'epoch': 14.0}
{'loss': 0.0527, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.37808218598365784, 'eval_precision': 0.2025819265143992, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.2165605095541401, 'eval_accuracy': 0.9244576545973906, 'eval_runtime': 2.271, 'eval_samples_per_second': 674.144, 'eval_steps_per_second': 84.543, 'epoch': 15.0}
{'loss': 0.0452, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.38830143213272095, 'eval_precision': 0.2010204081632653, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.21217016693591814, 'eval_accuracy': 0.9239558403458659, 'eval_runtime': 2.2693, 'eval_samples_per_second': 674.656, 'eval_steps_per_second': 84.607, 'epoch': 16.0}
{'loss': 0.0391, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.399739146232605, 'eval_precision': 0.217440543601359, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2181818181818182, 'eval_accuracy': 0.9273141357214545, 'eval_runtime': 2.2734, 'eval_samples_per_second': 673.43, 'eval_steps_per_second': 84.454, 'epoch': 17.0}
{'loss': 0.0356, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4017394185066223, 'eval_precision': 0.21658986175115208, 'eval_recall': 0.21436716077537057, 'eval_f1': 0.2154727793696275, 'eval_accuracy': 0.9272369335289122, 'eval_runtime': 2.2729, 'eval_samples_per_second': 673.591, 'eval_steps_per_second': 84.474, 'epoch': 18.0}
{'loss': 0.0303, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4145263135433197, 'eval_precision': 0.20464135021097046, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.21260273972602742, 'eval_accuracy': 0.9261175017370493, 'eval_runtime': 2.2706, 'eval_samples_per_second': 674.282, 'eval_steps_per_second': 84.561, 'epoch': 19.0}
{'loss': 0.0269, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4200498163700104, 'eval_precision': 0.2113289760348584, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.2161559888579387, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 2.2694, 'eval_samples_per_second': 674.621, 'eval_steps_per_second': 84.603, 'epoch': 20.0}
{'loss': 0.0241, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4259667992591858, 'eval_precision': 0.22555555555555556, 'eval_recall': 0.2314709236031927, 'eval_f1': 0.2284749577940349, 'eval_accuracy': 0.9282405620319617, 'eval_runtime': 2.2713, 'eval_samples_per_second': 674.067, 'eval_steps_per_second': 84.534, 'epoch': 21.0}
{'loss': 0.0221, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.43409642577171326, 'eval_precision': 0.212253829321663, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.2166387493020659, 'eval_accuracy': 0.9275071412028102, 'eval_runtime': 2.2728, 'eval_samples_per_second': 673.611, 'eval_steps_per_second': 84.476, 'epoch': 22.0}
{'loss': 0.0205, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.43794092535972595, 'eval_precision': 0.22343921139101863, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.22793296089385473, 'eval_accuracy': 0.9285493708021307, 'eval_runtime': 2.2707, 'eval_samples_per_second': 674.236, 'eval_steps_per_second': 84.555, 'epoch': 23.0}
{'loss': 0.0193, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.43982431292533875, 'eval_precision': 0.21964097148891235, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.2280701754385965, 'eval_accuracy': 0.9272755346251833, 'eval_runtime': 2.2758, 'eval_samples_per_second': 672.742, 'eval_steps_per_second': 84.367, 'epoch': 24.0}
{'train_runtime': 760.4059, 'train_samples_per_second': 272.507, 'train_steps_per_second': 4.261, 'train_loss': 0.11166803800029519, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1117
  train_runtime            = 0:12:40.40
  train_samples            =       8634
  train_samples_per_second =    272.507
  train_steps_per_second   =      4.261
[{'loss': 0.4014, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.29753246903419495, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2986, 'eval_samples_per_second': 666.054, 'eval_steps_per_second': 83.529, 'epoch': 1.0, 'step': 135}, {'loss': 0.2979, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.2624583840370178, 'eval_precision': 0.1568627450980392, 'eval_recall': 0.04561003420752566, 'eval_f1': 0.0706713780918728, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.276, 'eval_samples_per_second': 672.659, 'eval_steps_per_second': 84.357, 'epoch': 2.0, 'step': 270}, {'loss': 0.2631, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.25517410039901733, 'eval_precision': 0.1288981288981289, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.09131075110456555, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 2.2741, 'eval_samples_per_second': 673.221, 'eval_steps_per_second': 84.427, 'epoch': 3.0, 'step': 405}, {'loss': 0.2289, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.259430855512619, 'eval_precision': 0.1895910780669145, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.14416961130742048, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.2762, 'eval_samples_per_second': 672.603, 'eval_steps_per_second': 84.35, 'epoch': 4.0, 'step': 540}, {'loss': 0.1982, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2637960910797119, 'eval_precision': 0.18309859154929578, 'eval_recall': 0.10376282782212087, 'eval_f1': 0.1324599708879185, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2746, 'eval_samples_per_second': 673.087, 'eval_steps_per_second': 84.411, 'epoch': 5.0, 'step': 675}, {'loss': 0.1734, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2832178771495819, 'eval_precision': 0.17825311942959002, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.13908205841446453, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.2794, 'eval_samples_per_second': 671.672, 'eval_steps_per_second': 84.233, 'epoch': 6.0, 'step': 810}, {'loss': 0.1534, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.29458752274513245, 'eval_precision': 0.164, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.174746936600959, 'eval_accuracy': 0.9233382228055277, 'eval_runtime': 2.627, 'eval_samples_per_second': 582.804, 'eval_steps_per_second': 73.088, 'epoch': 7.0, 'step': 945}, {'loss': 0.1339, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2984622120857239, 'eval_precision': 0.19750283768444948, 'eval_recall': 0.19840364880273662, 'eval_f1': 0.19795221843003416, 'eval_accuracy': 0.9295916004014514, 'eval_runtime': 2.2793, 'eval_samples_per_second': 671.705, 'eval_steps_per_second': 84.237, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1156, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3093029856681824, 'eval_precision': 0.20555555555555555, 'eval_recall': 0.21094640820980615, 'eval_f1': 0.20821609454136183, 'eval_accuracy': 0.9254998841967111, 'eval_runtime': 2.2767, 'eval_samples_per_second': 672.452, 'eval_steps_per_second': 84.331, 'epoch': 9.0, 'step': 1215}, {'loss': 0.1022, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3299369513988495, 'eval_precision': 0.20516304347826086, 'eval_recall': 0.17217787913340935, 'eval_f1': 0.18722876627402357, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.2756, 'eval_samples_per_second': 672.796, 'eval_steps_per_second': 84.374, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0915, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3323749005794525, 'eval_precision': 0.211864406779661, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.20551967116852612, 'eval_accuracy': 0.9297846058828071, 'eval_runtime': 2.2709, 'eval_samples_per_second': 674.193, 'eval_steps_per_second': 84.549, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0782, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3616199493408203, 'eval_precision': 0.19484240687679083, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.21205821205821207, 'eval_accuracy': 0.9218327800509535, 'eval_runtime': 2.2691, 'eval_samples_per_second': 674.717, 'eval_steps_per_second': 84.615, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0678, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.35019171237945557, 'eval_precision': 0.2022132796780684, 'eval_recall': 0.2291904218928164, 'eval_f1': 0.2148583645109567, 'eval_accuracy': 0.9261175017370493, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.679, 'eval_steps_per_second': 84.61, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0591, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.36938369274139404, 'eval_precision': 0.23838630806845965, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.23008849557522124, 'eval_accuracy': 0.9299390102678916, 'eval_runtime': 2.2716, 'eval_samples_per_second': 673.962, 'eval_steps_per_second': 84.52, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0527, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.37808218598365784, 'eval_precision': 0.2025819265143992, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.2165605095541401, 'eval_accuracy': 0.9244576545973906, 'eval_runtime': 2.271, 'eval_samples_per_second': 674.144, 'eval_steps_per_second': 84.543, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0452, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.38830143213272095, 'eval_precision': 0.2010204081632653, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.21217016693591814, 'eval_accuracy': 0.9239558403458659, 'eval_runtime': 2.2693, 'eval_samples_per_second': 674.656, 'eval_steps_per_second': 84.607, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0391, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.399739146232605, 'eval_precision': 0.217440543601359, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2181818181818182, 'eval_accuracy': 0.9273141357214545, 'eval_runtime': 2.2734, 'eval_samples_per_second': 673.43, 'eval_steps_per_second': 84.454, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0356, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4017394185066223, 'eval_precision': 0.21658986175115208, 'eval_recall': 0.21436716077537057, 'eval_f1': 0.2154727793696275, 'eval_accuracy': 0.9272369335289122, 'eval_runtime': 2.2729, 'eval_samples_per_second': 673.591, 'eval_steps_per_second': 84.474, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0303, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4145263135433197, 'eval_precision': 0.20464135021097046, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.21260273972602742, 'eval_accuracy': 0.9261175017370493, 'eval_runtime': 2.2706, 'eval_samples_per_second': 674.282, 'eval_steps_per_second': 84.561, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0269, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4200498163700104, 'eval_precision': 0.2113289760348584, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.2161559888579387, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 2.2694, 'eval_samples_per_second': 674.621, 'eval_steps_per_second': 84.603, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0241, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4259667992591858, 'eval_precision': 0.22555555555555556, 'eval_recall': 0.2314709236031927, 'eval_f1': 0.2284749577940349, 'eval_accuracy': 0.9282405620319617, 'eval_runtime': 2.2713, 'eval_samples_per_second': 674.067, 'eval_steps_per_second': 84.534, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0221, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.43409642577171326, 'eval_precision': 0.212253829321663, 'eval_recall': 0.22120866590649943, 'eval_f1': 0.2166387493020659, 'eval_accuracy': 0.9275071412028102, 'eval_runtime': 2.2728, 'eval_samples_per_second': 673.611, 'eval_steps_per_second': 84.476, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0205, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.43794092535972595, 'eval_precision': 0.22343921139101863, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.22793296089385473, 'eval_accuracy': 0.9285493708021307, 'eval_runtime': 2.2707, 'eval_samples_per_second': 674.236, 'eval_steps_per_second': 84.555, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0193, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.43982431292533875, 'eval_precision': 0.21964097148891235, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.2280701754385965, 'eval_accuracy': 0.9272755346251833, 'eval_runtime': 2.2758, 'eval_samples_per_second': 672.742, 'eval_steps_per_second': 84.367, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 760.4059, 'train_samples_per_second': 272.507, 'train_steps_per_second': 4.261, 'total_flos': 8064312308929644.0, 'train_loss': 0.11166803800029519, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9348
  predict_f1                 =     0.0948
  predict_loss               =     0.2628
  predict_precision          =     0.1384
  predict_recall             =     0.0721
  predict_runtime            = 0:00:01.90
  predict_samples_per_second =     667.32
  predict_steps_per_second   =     83.415
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_23.json completed. F1: 0.09481216457960644
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_28.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_28.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6854.69 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7200.51 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6955.83 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6907.64 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6976.30 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7103.68 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7266.62 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7342.99 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6792.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7320.80 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6969.82 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7030.68 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6865.42 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.0119, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.32350587844848633, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9861, 'eval_samples_per_second': 512.708, 'eval_steps_per_second': 64.298, 'epoch': 1.0}
{'loss': 0.3037, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.2712922692298889, 'eval_precision': 0.09036144578313253, 'eval_recall': 0.05131128848346636, 'eval_f1': 0.06545454545454546, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.974, 'eval_samples_per_second': 514.786, 'eval_steps_per_second': 64.558, 'epoch': 2.0}
{'loss': 0.257, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.265180379152298, 'eval_precision': 0.07587548638132295, 'eval_recall': 0.04446978335233751, 'eval_f1': 0.056074766355140186, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.9546, 'eval_samples_per_second': 518.184, 'eval_steps_per_second': 64.985, 'epoch': 3.0}
{'loss': 0.2067, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2697094976902008, 'eval_precision': 0.18351063829787234, 'eval_recall': 0.1573546180159635, 'eval_f1': 0.1694290976058932, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.96, 'eval_samples_per_second': 517.232, 'eval_steps_per_second': 64.865, 'epoch': 4.0}
{'loss': 0.1586, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2751530706882477, 'eval_precision': 0.17330210772833723, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.170999422299249, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.899, 'eval_steps_per_second': 64.949, 'epoch': 5.0}
{'loss': 0.1414, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3044193685054779, 'eval_precision': 0.18651211801896733, 'eval_recall': 0.20182440136830102, 'eval_f1': 0.19386637458926617, 'eval_accuracy': 0.927468540106539, 'eval_runtime': 2.9655, 'eval_samples_per_second': 516.266, 'eval_steps_per_second': 64.744, 'epoch': 6.0}
{'loss': 0.127, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.2984808385372162, 'eval_precision': 0.20324324324324325, 'eval_recall': 0.21436716077537057, 'eval_f1': 0.2086570477247503, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 2.9704, 'eval_samples_per_second': 515.412, 'eval_steps_per_second': 64.637, 'epoch': 7.0}
{'loss': 0.1098, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3230704963207245, 'eval_precision': 0.21853658536585366, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.23554153522607782, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 2.9446, 'eval_samples_per_second': 519.933, 'eval_steps_per_second': 65.204, 'epoch': 8.0}
{'loss': 0.0932, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.31405091285705566, 'eval_precision': 0.2626680455015512, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2754880694143167, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 2.9403, 'eval_samples_per_second': 520.702, 'eval_steps_per_second': 65.3, 'epoch': 9.0}
{'loss': 0.0768, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.330485075712204, 'eval_precision': 0.2504911591355599, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2691292875989446, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 3.021, 'eval_samples_per_second': 506.782, 'eval_steps_per_second': 63.555, 'epoch': 10.0}
{'loss': 0.0664, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3625686466693878, 'eval_precision': 0.22166499498495487, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2358591248665955, 'eval_accuracy': 0.9285107697058597, 'eval_runtime': 2.9553, 'eval_samples_per_second': 518.052, 'eval_steps_per_second': 64.968, 'epoch': 11.0}
{'loss': 0.0571, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.35399705171585083, 'eval_precision': 0.2432723358449946, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.2502768549280177, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.9663, 'eval_samples_per_second': 516.14, 'eval_steps_per_second': 64.728, 'epoch': 12.0}
{'loss': 0.0483, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.3659570813179016, 'eval_precision': 0.2458045409674235, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.26349206349206344, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 2.9691, 'eval_samples_per_second': 515.643, 'eval_steps_per_second': 64.666, 'epoch': 13.0}
{'loss': 0.0425, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.3810666501522064, 'eval_precision': 0.2423945044160942, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26054852320675104, 'eval_accuracy': 0.9268509225662008, 'eval_runtime': 2.9651, 'eval_samples_per_second': 516.334, 'eval_steps_per_second': 64.752, 'epoch': 14.0}
{'loss': 0.0373, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.38473230600357056, 'eval_precision': 0.25, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.27173347214992194, 'eval_accuracy': 0.9269667258550143, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.733, 'eval_steps_per_second': 64.426, 'epoch': 15.0}
{'loss': 0.0335, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3875688910484314, 'eval_precision': 0.25882352941176473, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.26710816777041946, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.9551, 'eval_samples_per_second': 518.084, 'eval_steps_per_second': 64.972, 'epoch': 16.0}
{'loss': 0.0301, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.40029820799827576, 'eval_precision': 0.24183006535947713, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.24735376044568244, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 2.9681, 'eval_samples_per_second': 515.826, 'eval_steps_per_second': 64.689, 'epoch': 17.0}
{'loss': 0.0272, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.41216933727264404, 'eval_precision': 0.25757575757575757, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.28142783238489394, 'eval_accuracy': 0.9282405620319617, 'eval_runtime': 2.964, 'eval_samples_per_second': 516.533, 'eval_steps_per_second': 64.778, 'epoch': 18.0}
{'loss': 0.0249, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.41066932678222656, 'eval_precision': 0.25796812749003983, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2753854332801701, 'eval_accuracy': 0.9293985949200957, 'eval_runtime': 2.9649, 'eval_samples_per_second': 516.368, 'eval_steps_per_second': 64.757, 'epoch': 19.0}
{'loss': 0.023, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.41409310698509216, 'eval_precision': 0.2519305019305019, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2728698379508625, 'eval_accuracy': 0.9287809773797576, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.442, 'eval_steps_per_second': 64.641, 'epoch': 20.0}
{'loss': 0.0214, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.4197290539741516, 'eval_precision': 0.24308300395256918, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26045526733721547, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 2.948, 'eval_samples_per_second': 519.336, 'eval_steps_per_second': 65.129, 'epoch': 21.0}
{'loss': 0.0204, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4206896126270294, 'eval_precision': 0.24423076923076922, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2649973917579551, 'eval_accuracy': 0.9277001466841658, 'eval_runtime': 2.9722, 'eval_samples_per_second': 515.109, 'eval_steps_per_second': 64.599, 'epoch': 22.0}
{'loss': 0.02, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.4210951030254364, 'eval_precision': 0.24677898909811694, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.264050901378579, 'eval_accuracy': 0.9292055894387401, 'eval_runtime': 3.0235, 'eval_samples_per_second': 506.37, 'eval_steps_per_second': 63.503, 'epoch': 23.0}
{'loss': 0.0194, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.420285165309906, 'eval_precision': 0.24674022066198595, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26254002134471716, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 2.9658, 'eval_samples_per_second': 516.226, 'eval_steps_per_second': 64.739, 'epoch': 24.0}
{'train_runtime': 407.9806, 'train_samples_per_second': 507.906, 'train_steps_per_second': 7.942, 'train_loss': 0.12322515094721759, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1232
  train_runtime            = 0:06:47.98
  train_samples            =       8634
  train_samples_per_second =    507.906
  train_steps_per_second   =      7.942
[{'loss': 1.0119, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.32350587844848633, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9861, 'eval_samples_per_second': 512.708, 'eval_steps_per_second': 64.298, 'epoch': 1.0, 'step': 135}, {'loss': 0.3037, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.2712922692298889, 'eval_precision': 0.09036144578313253, 'eval_recall': 0.05131128848346636, 'eval_f1': 0.06545454545454546, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.974, 'eval_samples_per_second': 514.786, 'eval_steps_per_second': 64.558, 'epoch': 2.0, 'step': 270}, {'loss': 0.257, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.265180379152298, 'eval_precision': 0.07587548638132295, 'eval_recall': 0.04446978335233751, 'eval_f1': 0.056074766355140186, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.9546, 'eval_samples_per_second': 518.184, 'eval_steps_per_second': 64.985, 'epoch': 3.0, 'step': 405}, {'loss': 0.2067, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2697094976902008, 'eval_precision': 0.18351063829787234, 'eval_recall': 0.1573546180159635, 'eval_f1': 0.1694290976058932, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.96, 'eval_samples_per_second': 517.232, 'eval_steps_per_second': 64.865, 'epoch': 4.0, 'step': 540}, {'loss': 0.1586, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2751530706882477, 'eval_precision': 0.17330210772833723, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.170999422299249, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.899, 'eval_steps_per_second': 64.949, 'epoch': 5.0, 'step': 675}, {'loss': 0.1414, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3044193685054779, 'eval_precision': 0.18651211801896733, 'eval_recall': 0.20182440136830102, 'eval_f1': 0.19386637458926617, 'eval_accuracy': 0.927468540106539, 'eval_runtime': 2.9655, 'eval_samples_per_second': 516.266, 'eval_steps_per_second': 64.744, 'epoch': 6.0, 'step': 810}, {'loss': 0.127, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2984808385372162, 'eval_precision': 0.20324324324324325, 'eval_recall': 0.21436716077537057, 'eval_f1': 0.2086570477247503, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 2.9704, 'eval_samples_per_second': 515.412, 'eval_steps_per_second': 64.637, 'epoch': 7.0, 'step': 945}, {'loss': 0.1098, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3230704963207245, 'eval_precision': 0.21853658536585366, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.23554153522607782, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 2.9446, 'eval_samples_per_second': 519.933, 'eval_steps_per_second': 65.204, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0932, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.31405091285705566, 'eval_precision': 0.2626680455015512, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2754880694143167, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 2.9403, 'eval_samples_per_second': 520.702, 'eval_steps_per_second': 65.3, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0768, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.330485075712204, 'eval_precision': 0.2504911591355599, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2691292875989446, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 3.021, 'eval_samples_per_second': 506.782, 'eval_steps_per_second': 63.555, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0664, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3625686466693878, 'eval_precision': 0.22166499498495487, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2358591248665955, 'eval_accuracy': 0.9285107697058597, 'eval_runtime': 2.9553, 'eval_samples_per_second': 518.052, 'eval_steps_per_second': 64.968, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0571, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.35399705171585083, 'eval_precision': 0.2432723358449946, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.2502768549280177, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.9663, 'eval_samples_per_second': 516.14, 'eval_steps_per_second': 64.728, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0483, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3659570813179016, 'eval_precision': 0.2458045409674235, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.26349206349206344, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 2.9691, 'eval_samples_per_second': 515.643, 'eval_steps_per_second': 64.666, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0425, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3810666501522064, 'eval_precision': 0.2423945044160942, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26054852320675104, 'eval_accuracy': 0.9268509225662008, 'eval_runtime': 2.9651, 'eval_samples_per_second': 516.334, 'eval_steps_per_second': 64.752, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0373, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.38473230600357056, 'eval_precision': 0.25, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.27173347214992194, 'eval_accuracy': 0.9269667258550143, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.733, 'eval_steps_per_second': 64.426, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0335, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3875688910484314, 'eval_precision': 0.25882352941176473, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.26710816777041946, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.9551, 'eval_samples_per_second': 518.084, 'eval_steps_per_second': 64.972, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0301, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.40029820799827576, 'eval_precision': 0.24183006535947713, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.24735376044568244, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 2.9681, 'eval_samples_per_second': 515.826, 'eval_steps_per_second': 64.689, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0272, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.41216933727264404, 'eval_precision': 0.25757575757575757, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.28142783238489394, 'eval_accuracy': 0.9282405620319617, 'eval_runtime': 2.964, 'eval_samples_per_second': 516.533, 'eval_steps_per_second': 64.778, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0249, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.41066932678222656, 'eval_precision': 0.25796812749003983, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2753854332801701, 'eval_accuracy': 0.9293985949200957, 'eval_runtime': 2.9649, 'eval_samples_per_second': 516.368, 'eval_steps_per_second': 64.757, 'epoch': 19.0, 'step': 2565}, {'loss': 0.023, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.41409310698509216, 'eval_precision': 0.2519305019305019, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2728698379508625, 'eval_accuracy': 0.9287809773797576, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.442, 'eval_steps_per_second': 64.641, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0214, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4197290539741516, 'eval_precision': 0.24308300395256918, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26045526733721547, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 2.948, 'eval_samples_per_second': 519.336, 'eval_steps_per_second': 65.129, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0204, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4206896126270294, 'eval_precision': 0.24423076923076922, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2649973917579551, 'eval_accuracy': 0.9277001466841658, 'eval_runtime': 2.9722, 'eval_samples_per_second': 515.109, 'eval_steps_per_second': 64.599, 'epoch': 22.0, 'step': 2970}, {'loss': 0.02, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4210951030254364, 'eval_precision': 0.24677898909811694, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.264050901378579, 'eval_accuracy': 0.9292055894387401, 'eval_runtime': 3.0235, 'eval_samples_per_second': 506.37, 'eval_steps_per_second': 63.503, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0194, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.420285165309906, 'eval_precision': 0.24674022066198595, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26254002134471716, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 2.9658, 'eval_samples_per_second': 516.226, 'eval_steps_per_second': 64.739, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 407.9806, 'train_samples_per_second': 507.906, 'train_steps_per_second': 7.942, 'total_flos': 1913291761259340.0, 'train_loss': 0.12322515094721759, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9341
  predict_f1                 =      0.042
  predict_loss               =     0.2755
  predict_precision          =     0.0588
  predict_recall             =     0.0327
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.699
  predict_steps_per_second   =     64.462
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_28.json completed. F1: 0.04199475065616798
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_14.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5269.97 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6329.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6442.80 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6559.76 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6694.89 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6869.20 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7089.02 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7181.67 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6491.41 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7335.28 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6933.69 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6981.74 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6822.29 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2877, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.2096540331840515, 'eval_precision': 0.2833333333333333, 'eval_recall': 0.17445838084378562, 'eval_f1': 0.21594918842625266, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 3.0338, 'eval_samples_per_second': 504.647, 'eval_steps_per_second': 63.287, 'epoch': 1.0}
{'loss': 0.19, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.20911362767219543, 'eval_precision': 0.2979310344827586, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.2696629213483146, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 3.0249, 'eval_samples_per_second': 506.136, 'eval_steps_per_second': 63.474, 'epoch': 2.0}
{'loss': 0.1259, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.23825328052043915, 'eval_precision': 0.28440366972477066, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.26463414634146337, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 3.005, 'eval_samples_per_second': 509.487, 'eval_steps_per_second': 63.894, 'epoch': 3.0}
{'loss': 0.0811, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.28376835584640503, 'eval_precision': 0.295906432748538, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.29214780600461887, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 3.0276, 'eval_samples_per_second': 505.673, 'eval_steps_per_second': 63.416, 'epoch': 4.0}
{'loss': 0.0541, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3259579539299011, 'eval_precision': 0.22357723577235772, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.23643202579258463, 'eval_accuracy': 0.9313672508299236, 'eval_runtime': 3.0299, 'eval_samples_per_second': 505.291, 'eval_steps_per_second': 63.368, 'epoch': 5.0}
{'loss': 0.0332, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.38208749890327454, 'eval_precision': 0.25, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26025150355385457, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 3.3496, 'eval_samples_per_second': 457.076, 'eval_steps_per_second': 57.321, 'epoch': 6.0}
{'loss': 0.0198, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.41916313767433167, 'eval_precision': 0.24903474903474904, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2697334030318871, 'eval_accuracy': 0.9300162124604339, 'eval_runtime': 3.0159, 'eval_samples_per_second': 507.651, 'eval_steps_per_second': 63.664, 'epoch': 7.0}
{'loss': 0.0145, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.43934860825538635, 'eval_precision': 0.24417426545086118, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.25858369098712447, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 3.0276, 'eval_samples_per_second': 505.681, 'eval_steps_per_second': 63.417, 'epoch': 8.0}
{'loss': 0.0096, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.4652270972728729, 'eval_precision': 0.2664319248826291, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.2625795257374205, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 3.032, 'eval_samples_per_second': 504.953, 'eval_steps_per_second': 63.325, 'epoch': 9.0}
{'loss': 0.0083, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.4800301492214203, 'eval_precision': 0.2519774011299435, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2531214528944381, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 3.0077, 'eval_samples_per_second': 509.03, 'eval_steps_per_second': 63.837, 'epoch': 10.0}
{'loss': 0.0061, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4938538670539856, 'eval_precision': 0.23556581986143188, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23407917383820998, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 3.0904, 'eval_samples_per_second': 495.401, 'eval_steps_per_second': 62.127, 'epoch': 11.0}
{'loss': 0.0037, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.5102879405021667, 'eval_precision': 0.2430379746835443, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2303539292141572, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.029, 'eval_samples_per_second': 505.452, 'eval_steps_per_second': 63.388, 'epoch': 12.0}
{'loss': 0.0029, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.5056276917457581, 'eval_precision': 0.23696145124716553, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2376350198976691, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 3.0234, 'eval_samples_per_second': 506.376, 'eval_steps_per_second': 63.504, 'epoch': 13.0}
{'loss': 0.0022, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.53450608253479, 'eval_precision': 0.27853260869565216, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2541847489150651, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 3.0081, 'eval_samples_per_second': 508.967, 'eval_steps_per_second': 63.829, 'epoch': 14.0}
{'loss': 0.0018, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.5405001044273376, 'eval_precision': 0.2437070938215103, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.24328954882924045, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.0288, 'eval_samples_per_second': 505.485, 'eval_steps_per_second': 63.392, 'epoch': 15.0}
{'loss': 0.0018, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.5407549738883972, 'eval_precision': 0.28448275862068967, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.27353463587921845, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 3.0256, 'eval_samples_per_second': 506.02, 'eval_steps_per_second': 63.459, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.5477097630500793, 'eval_precision': 0.2572383073496659, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26028169014084507, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 3.01, 'eval_samples_per_second': 508.638, 'eval_steps_per_second': 63.787, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.555598258972168, 'eval_precision': 0.25655644241733183, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.25655644241733183, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 3.0259, 'eval_samples_per_second': 505.96, 'eval_steps_per_second': 63.452, 'epoch': 18.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5547297596931458, 'eval_precision': 0.26691266912669126, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25680473372781065, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.207, 'eval_steps_per_second': 63.859, 'epoch': 19.0}
{'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5617689490318298, 'eval_precision': 0.27078384798099764, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2652705061082025, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.0109, 'eval_samples_per_second': 508.48, 'eval_steps_per_second': 63.768, 'epoch': 20.0}
{'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.5674715042114258, 'eval_precision': 0.2583148558758315, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26194491287240024, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 3.0272, 'eval_samples_per_second': 505.752, 'eval_steps_per_second': 63.425, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5662603974342346, 'eval_precision': 0.26235294117647057, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2582513028372901, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.013, 'eval_samples_per_second': 508.139, 'eval_steps_per_second': 63.725, 'epoch': 22.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5661860108375549, 'eval_precision': 0.2679245283018868, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.25478468899521534, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 3.006, 'eval_samples_per_second': 509.308, 'eval_steps_per_second': 63.871, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5654622316360474, 'eval_precision': 0.2606132075471698, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.256231884057971, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.0912, 'eval_samples_per_second': 495.278, 'eval_steps_per_second': 62.112, 'epoch': 24.0}
{'train_runtime': 460.6432, 'train_samples_per_second': 449.841, 'train_steps_per_second': 11.254, 'train_loss': 0.03537163843061591, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0354
  train_runtime            = 0:07:40.64
  train_samples            =       8634
  train_samples_per_second =    449.841
  train_steps_per_second   =     11.254
[{'loss': 0.2877, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2096540331840515, 'eval_precision': 0.2833333333333333, 'eval_recall': 0.17445838084378562, 'eval_f1': 0.21594918842625266, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 3.0338, 'eval_samples_per_second': 504.647, 'eval_steps_per_second': 63.287, 'epoch': 1.0, 'step': 216}, {'loss': 0.19, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.20911362767219543, 'eval_precision': 0.2979310344827586, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.2696629213483146, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 3.0249, 'eval_samples_per_second': 506.136, 'eval_steps_per_second': 63.474, 'epoch': 2.0, 'step': 432}, {'loss': 0.1259, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.23825328052043915, 'eval_precision': 0.28440366972477066, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.26463414634146337, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 3.005, 'eval_samples_per_second': 509.487, 'eval_steps_per_second': 63.894, 'epoch': 3.0, 'step': 648}, {'loss': 0.0811, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.28376835584640503, 'eval_precision': 0.295906432748538, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.29214780600461887, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 3.0276, 'eval_samples_per_second': 505.673, 'eval_steps_per_second': 63.416, 'epoch': 4.0, 'step': 864}, {'loss': 0.0541, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3259579539299011, 'eval_precision': 0.22357723577235772, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.23643202579258463, 'eval_accuracy': 0.9313672508299236, 'eval_runtime': 3.0299, 'eval_samples_per_second': 505.291, 'eval_steps_per_second': 63.368, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0332, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.38208749890327454, 'eval_precision': 0.25, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26025150355385457, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 3.3496, 'eval_samples_per_second': 457.076, 'eval_steps_per_second': 57.321, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0198, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.41916313767433167, 'eval_precision': 0.24903474903474904, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2697334030318871, 'eval_accuracy': 0.9300162124604339, 'eval_runtime': 3.0159, 'eval_samples_per_second': 507.651, 'eval_steps_per_second': 63.664, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0145, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.43934860825538635, 'eval_precision': 0.24417426545086118, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.25858369098712447, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 3.0276, 'eval_samples_per_second': 505.681, 'eval_steps_per_second': 63.417, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0096, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.4652270972728729, 'eval_precision': 0.2664319248826291, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.2625795257374205, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 3.032, 'eval_samples_per_second': 504.953, 'eval_steps_per_second': 63.325, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0083, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.4800301492214203, 'eval_precision': 0.2519774011299435, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2531214528944381, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 3.0077, 'eval_samples_per_second': 509.03, 'eval_steps_per_second': 63.837, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0061, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4938538670539856, 'eval_precision': 0.23556581986143188, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23407917383820998, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 3.0904, 'eval_samples_per_second': 495.401, 'eval_steps_per_second': 62.127, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0037, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.5102879405021667, 'eval_precision': 0.2430379746835443, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2303539292141572, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.029, 'eval_samples_per_second': 505.452, 'eval_steps_per_second': 63.388, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0029, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.5056276917457581, 'eval_precision': 0.23696145124716553, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2376350198976691, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 3.0234, 'eval_samples_per_second': 506.376, 'eval_steps_per_second': 63.504, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0022, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.53450608253479, 'eval_precision': 0.27853260869565216, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2541847489150651, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 3.0081, 'eval_samples_per_second': 508.967, 'eval_steps_per_second': 63.829, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0018, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.5405001044273376, 'eval_precision': 0.2437070938215103, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.24328954882924045, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.0288, 'eval_samples_per_second': 505.485, 'eval_steps_per_second': 63.392, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0018, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.5407549738883972, 'eval_precision': 0.28448275862068967, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.27353463587921845, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 3.0256, 'eval_samples_per_second': 506.02, 'eval_steps_per_second': 63.459, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5477097630500793, 'eval_precision': 0.2572383073496659, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26028169014084507, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 3.01, 'eval_samples_per_second': 508.638, 'eval_steps_per_second': 63.787, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0011, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.555598258972168, 'eval_precision': 0.25655644241733183, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.25655644241733183, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 3.0259, 'eval_samples_per_second': 505.96, 'eval_steps_per_second': 63.452, 'epoch': 18.0, 'step': 3888}, {'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5547297596931458, 'eval_precision': 0.26691266912669126, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25680473372781065, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.207, 'eval_steps_per_second': 63.859, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5617689490318298, 'eval_precision': 0.27078384798099764, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2652705061082025, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.0109, 'eval_samples_per_second': 508.48, 'eval_steps_per_second': 63.768, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5674715042114258, 'eval_precision': 0.2583148558758315, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26194491287240024, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 3.0272, 'eval_samples_per_second': 505.752, 'eval_steps_per_second': 63.425, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5662603974342346, 'eval_precision': 0.26235294117647057, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2582513028372901, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.013, 'eval_samples_per_second': 508.139, 'eval_steps_per_second': 63.725, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5661860108375549, 'eval_precision': 0.2679245283018868, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.25478468899521534, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 3.006, 'eval_samples_per_second': 509.308, 'eval_steps_per_second': 63.871, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5654622316360474, 'eval_precision': 0.2606132075471698, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.256231884057971, 'eval_accuracy': 0.936115185671273, 'eval_runtime': 3.0912, 'eval_samples_per_second': 495.278, 'eval_steps_per_second': 62.112, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 460.6432, 'train_samples_per_second': 449.841, 'train_steps_per_second': 11.254, 'total_flos': 1753686309874548.0, 'train_loss': 0.03537163843061591, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =      0.938
  predict_f1                 =      0.206
  predict_loss               =     0.2298
  predict_precision          =     0.2439
  predict_recall             =     0.1782
  predict_runtime            = 0:00:02.50
  predict_samples_per_second =    507.565
  predict_steps_per_second   =     63.446
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_14.json completed. F1: 0.2059748427672956
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_41.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5766.90 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6654.81 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6686.93 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6816.31 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6887.40 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7032.87 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7222.36 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6313.70 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6645.47 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7206.10 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6889.48 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6999.36 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6841.13 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8439, 'eval_samples_per_second': 261.985, 'eval_steps_per_second': 32.855, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7835, 'eval_samples_per_second': 264.717, 'eval_steps_per_second': 33.198, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7884, 'eval_samples_per_second': 264.495, 'eval_steps_per_second': 33.17, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7816, 'eval_samples_per_second': 264.807, 'eval_steps_per_second': 33.209, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7745, 'eval_samples_per_second': 265.13, 'eval_steps_per_second': 33.25, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7703, 'eval_samples_per_second': 265.323, 'eval_steps_per_second': 33.274, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7768, 'eval_samples_per_second': 265.023, 'eval_steps_per_second': 33.236, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7684, 'eval_samples_per_second': 265.413, 'eval_steps_per_second': 33.285, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8345, 'eval_samples_per_second': 262.405, 'eval_steps_per_second': 32.908, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7813, 'eval_samples_per_second': 264.821, 'eval_steps_per_second': 33.211, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7673, 'eval_samples_per_second': 265.464, 'eval_steps_per_second': 33.291, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7709, 'eval_samples_per_second': 265.297, 'eval_steps_per_second': 33.27, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.749, 'eval_steps_per_second': 33.327, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7884, 'eval_samples_per_second': 264.496, 'eval_steps_per_second': 33.17, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7624, 'eval_samples_per_second': 265.687, 'eval_steps_per_second': 33.319, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7724, 'eval_samples_per_second': 265.227, 'eval_steps_per_second': 33.262, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.766, 'eval_samples_per_second': 265.522, 'eval_steps_per_second': 33.299, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7777, 'eval_samples_per_second': 264.984, 'eval_steps_per_second': 33.231, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7703, 'eval_samples_per_second': 265.324, 'eval_steps_per_second': 33.274, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.18, 'eval_steps_per_second': 33.381, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7449, 'eval_samples_per_second': 266.499, 'eval_steps_per_second': 33.421, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8168, 'eval_samples_per_second': 263.202, 'eval_steps_per_second': 33.008, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.741, 'eval_samples_per_second': 266.677, 'eval_steps_per_second': 33.443, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7457, 'eval_samples_per_second': 266.458, 'eval_steps_per_second': 33.416, 'epoch': 24.0}
{'train_runtime': 2420.664, 'train_samples_per_second': 85.603, 'train_steps_per_second': 1.338, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:20.66
  train_samples            =       8634
  train_samples_per_second =     85.603
  train_steps_per_second   =      1.338
[{'loss': 0.0, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8439, 'eval_samples_per_second': 261.985, 'eval_steps_per_second': 32.855, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7835, 'eval_samples_per_second': 264.717, 'eval_steps_per_second': 33.198, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7884, 'eval_samples_per_second': 264.495, 'eval_steps_per_second': 33.17, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7816, 'eval_samples_per_second': 264.807, 'eval_steps_per_second': 33.209, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7745, 'eval_samples_per_second': 265.13, 'eval_steps_per_second': 33.25, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7703, 'eval_samples_per_second': 265.323, 'eval_steps_per_second': 33.274, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7768, 'eval_samples_per_second': 265.023, 'eval_steps_per_second': 33.236, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7684, 'eval_samples_per_second': 265.413, 'eval_steps_per_second': 33.285, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8345, 'eval_samples_per_second': 262.405, 'eval_steps_per_second': 32.908, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7813, 'eval_samples_per_second': 264.821, 'eval_steps_per_second': 33.211, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7673, 'eval_samples_per_second': 265.464, 'eval_steps_per_second': 33.291, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7709, 'eval_samples_per_second': 265.297, 'eval_steps_per_second': 33.27, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.749, 'eval_steps_per_second': 33.327, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7884, 'eval_samples_per_second': 264.496, 'eval_steps_per_second': 33.17, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7624, 'eval_samples_per_second': 265.687, 'eval_steps_per_second': 33.319, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7724, 'eval_samples_per_second': 265.227, 'eval_steps_per_second': 33.262, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.766, 'eval_samples_per_second': 265.522, 'eval_steps_per_second': 33.299, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7777, 'eval_samples_per_second': 264.984, 'eval_steps_per_second': 33.231, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7703, 'eval_samples_per_second': 265.324, 'eval_steps_per_second': 33.274, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.18, 'eval_steps_per_second': 33.381, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7449, 'eval_samples_per_second': 266.499, 'eval_steps_per_second': 33.421, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8168, 'eval_samples_per_second': 263.202, 'eval_steps_per_second': 33.008, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.741, 'eval_samples_per_second': 266.677, 'eval_steps_per_second': 33.443, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7457, 'eval_samples_per_second': 266.458, 'eval_steps_per_second': 33.416, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2420.664, 'train_samples_per_second': 85.603, 'train_steps_per_second': 1.338, 'total_flos': 2.705848648987374e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.81
  predict_samples_per_second =    263.997
  predict_steps_per_second   =       33.0
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_41.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_18.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6296.44 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7047.30 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6932.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6996.36 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7061.59 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7189.22 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6342.70 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6697.65 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6819.47 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7349.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6999.81 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7099.76 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6940.63 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2927, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.21788005530834198, 'eval_precision': 0.23391812865497075, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.23094688221709006, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.348, 'eval_steps_per_second': 80.932, 'epoch': 1.0}
{'loss': 0.1966, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.22651122510433197, 'eval_precision': 0.2838499184339315, 'eval_recall': 0.19840364880273662, 'eval_f1': 0.23355704697986576, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.768, 'eval_steps_per_second': 81.486, 'epoch': 2.0}
{'loss': 0.1349, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.24250531196594238, 'eval_precision': 0.2538382804503582, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.267529665587918, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.3521, 'eval_samples_per_second': 650.921, 'eval_steps_per_second': 81.631, 'epoch': 3.0}
{'loss': 0.0978, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.281099408864975, 'eval_precision': 0.2256913470115968, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.25325325325325326, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.681, 'eval_steps_per_second': 81.601, 'epoch': 4.0}
{'loss': 0.0713, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.31234320998191833, 'eval_precision': 0.23851203501094093, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.2434394193188163, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.763, 'eval_steps_per_second': 81.36, 'epoch': 5.0}
{'loss': 0.0494, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3529474139213562, 'eval_precision': 0.26350606394707826, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2679372197309417, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.387, 'eval_steps_per_second': 81.689, 'epoch': 6.0}
{'loss': 0.0353, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3603628873825073, 'eval_precision': 0.2870563674321503, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2997275204359673, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3549, 'eval_samples_per_second': 650.136, 'eval_steps_per_second': 81.532, 'epoch': 7.0}
{'loss': 0.0268, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3873363435268402, 'eval_precision': 0.25668449197860965, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26490066225165565, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.691, 'eval_steps_per_second': 81.477, 'epoch': 8.0}
{'loss': 0.0183, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.40672019124031067, 'eval_precision': 0.2586015538290788, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.2620922384701912, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.3547, 'eval_samples_per_second': 650.182, 'eval_steps_per_second': 81.538, 'epoch': 9.0}
{'loss': 0.0128, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.39005857706069946, 'eval_precision': 0.28754365541327126, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.28456221198156684, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.978, 'eval_steps_per_second': 81.763, 'epoch': 10.0}
{'loss': 0.0083, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4352356493473053, 'eval_precision': 0.24645583424209377, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.25195094760312153, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.4242, 'eval_samples_per_second': 631.544, 'eval_steps_per_second': 79.201, 'epoch': 11.0}
{'loss': 0.0051, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.4385213255882263, 'eval_precision': 0.26753507014028055, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2848, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.287, 'eval_steps_per_second': 81.677, 'epoch': 12.0}
{'loss': 0.0036, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.466713547706604, 'eval_precision': 0.31789737171464333, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.3031026252983294, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3474, 'eval_samples_per_second': 652.204, 'eval_steps_per_second': 81.792, 'epoch': 13.0}
{'loss': 0.0025, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4718686640262604, 'eval_precision': 0.2946859903381642, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.28621700879765394, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.789, 'eval_steps_per_second': 81.74, 'epoch': 14.0}
{'loss': 0.002, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.4986816644668579, 'eval_precision': 0.31135531135531136, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3007075471698113, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.57, 'eval_steps_per_second': 81.712, 'epoch': 15.0}
{'loss': 0.0021, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.4953327775001526, 'eval_precision': 0.33688415446071907, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.31081081081081086, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.298, 'eval_steps_per_second': 81.678, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.5056629776954651, 'eval_precision': 0.2797979797979798, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2967327262988752, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.346, 'eval_samples_per_second': 652.608, 'eval_steps_per_second': 81.842, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.5123660564422607, 'eval_precision': 0.28710725893824485, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29444444444444445, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3511, 'eval_samples_per_second': 651.181, 'eval_steps_per_second': 81.663, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5094053149223328, 'eval_precision': 0.3056872037914692, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.29982568274259147, 'eval_accuracy': 0.9368872075966957, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.156, 'eval_steps_per_second': 81.786, 'epoch': 19.0}
{'loss': 0.0014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5080057382583618, 'eval_precision': 0.28992878942014244, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30645161290322587, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.4237, 'eval_samples_per_second': 631.681, 'eval_steps_per_second': 79.218, 'epoch': 20.0}
{'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.5010961890220642, 'eval_precision': 0.28827877507919747, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.29934210526315796, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.693, 'eval_steps_per_second': 81.602, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5084963440895081, 'eval_precision': 0.2954292084726867, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2987598647125141, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.499, 'eval_steps_per_second': 81.703, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5118570327758789, 'eval_precision': 0.3145933014354067, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.3070636310566258, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.203, 'eval_steps_per_second': 81.666, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5149641036987305, 'eval_precision': 0.30518018018018017, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3070821529745043, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.616, 'eval_steps_per_second': 81.718, 'epoch': 24.0}
{'train_runtime': 856.0093, 'train_samples_per_second': 242.072, 'train_steps_per_second': 6.056, 'train_loss': 0.04027510292678611, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0403
  train_runtime            = 0:14:16.00
  train_samples            =       8634
  train_samples_per_second =    242.072
  train_steps_per_second   =      6.056
[{'loss': 0.2927, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.21788005530834198, 'eval_precision': 0.23391812865497075, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.23094688221709006, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.348, 'eval_steps_per_second': 80.932, 'epoch': 1.0, 'step': 216}, {'loss': 0.1966, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.22651122510433197, 'eval_precision': 0.2838499184339315, 'eval_recall': 0.19840364880273662, 'eval_f1': 0.23355704697986576, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.768, 'eval_steps_per_second': 81.486, 'epoch': 2.0, 'step': 432}, {'loss': 0.1349, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.24250531196594238, 'eval_precision': 0.2538382804503582, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.267529665587918, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.3521, 'eval_samples_per_second': 650.921, 'eval_steps_per_second': 81.631, 'epoch': 3.0, 'step': 648}, {'loss': 0.0978, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.281099408864975, 'eval_precision': 0.2256913470115968, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.25325325325325326, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.681, 'eval_steps_per_second': 81.601, 'epoch': 4.0, 'step': 864}, {'loss': 0.0713, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.31234320998191833, 'eval_precision': 0.23851203501094093, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.2434394193188163, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.763, 'eval_steps_per_second': 81.36, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0494, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3529474139213562, 'eval_precision': 0.26350606394707826, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2679372197309417, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.387, 'eval_steps_per_second': 81.689, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0353, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3603628873825073, 'eval_precision': 0.2870563674321503, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2997275204359673, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3549, 'eval_samples_per_second': 650.136, 'eval_steps_per_second': 81.532, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0268, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3873363435268402, 'eval_precision': 0.25668449197860965, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26490066225165565, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.691, 'eval_steps_per_second': 81.477, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0183, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.40672019124031067, 'eval_precision': 0.2586015538290788, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.2620922384701912, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.3547, 'eval_samples_per_second': 650.182, 'eval_steps_per_second': 81.538, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0128, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.39005857706069946, 'eval_precision': 0.28754365541327126, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.28456221198156684, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.978, 'eval_steps_per_second': 81.763, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0083, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4352356493473053, 'eval_precision': 0.24645583424209377, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.25195094760312153, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.4242, 'eval_samples_per_second': 631.544, 'eval_steps_per_second': 79.201, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0051, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.4385213255882263, 'eval_precision': 0.26753507014028055, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2848, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.287, 'eval_steps_per_second': 81.677, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0036, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.466713547706604, 'eval_precision': 0.31789737171464333, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.3031026252983294, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3474, 'eval_samples_per_second': 652.204, 'eval_steps_per_second': 81.792, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0025, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4718686640262604, 'eval_precision': 0.2946859903381642, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.28621700879765394, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.789, 'eval_steps_per_second': 81.74, 'epoch': 14.0, 'step': 3024}, {'loss': 0.002, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4986816644668579, 'eval_precision': 0.31135531135531136, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3007075471698113, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.57, 'eval_steps_per_second': 81.712, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0021, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4953327775001526, 'eval_precision': 0.33688415446071907, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.31081081081081086, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.298, 'eval_steps_per_second': 81.678, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0014, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5056629776954651, 'eval_precision': 0.2797979797979798, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2967327262988752, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.346, 'eval_samples_per_second': 652.608, 'eval_steps_per_second': 81.842, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0011, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5123660564422607, 'eval_precision': 0.28710725893824485, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29444444444444445, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3511, 'eval_samples_per_second': 651.181, 'eval_steps_per_second': 81.663, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0011, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5094053149223328, 'eval_precision': 0.3056872037914692, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.29982568274259147, 'eval_accuracy': 0.9368872075966957, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.156, 'eval_steps_per_second': 81.786, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5080057382583618, 'eval_precision': 0.28992878942014244, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30645161290322587, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.4237, 'eval_samples_per_second': 631.681, 'eval_steps_per_second': 79.218, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5010961890220642, 'eval_precision': 0.28827877507919747, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.29934210526315796, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.693, 'eval_steps_per_second': 81.602, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5084963440895081, 'eval_precision': 0.2954292084726867, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2987598647125141, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.499, 'eval_steps_per_second': 81.703, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5118570327758789, 'eval_precision': 0.3145933014354067, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.3070636310566258, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.203, 'eval_steps_per_second': 81.666, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5149641036987305, 'eval_precision': 0.30518018018018017, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3070821529745043, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.616, 'eval_steps_per_second': 81.718, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 856.0093, 'train_samples_per_second': 242.072, 'train_steps_per_second': 6.056, 'total_flos': 8233685173548936.0, 'train_loss': 0.04027510292678611, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9343
  predict_f1                 =      0.187
  predict_loss               =     0.2305
  predict_precision          =      0.195
  predict_recall             =     0.1796
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    649.869
  predict_steps_per_second   =     81.234
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_18.json completed. F1: 0.18696883852691215
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_04.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5801.27 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6708.12 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6692.22 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6832.14 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6912.69 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7057.49 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6258.91 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6591.11 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6668.98 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7336.41 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6975.12 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6922.85 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6767.41 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NB-BERT_base/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3056, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21735818684101105, 'eval_precision': 0.25263157894736843, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.24942263279445726, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 2.3817, 'eval_samples_per_second': 642.831, 'eval_steps_per_second': 80.616, 'epoch': 1.0}
{'loss': 0.1971, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.21244844794273376, 'eval_precision': 0.2927927927927928, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.25275437459494493, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.217, 'eval_steps_per_second': 81.417, 'epoch': 2.0}
{'loss': 0.1359, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.22430969774723053, 'eval_precision': 0.2957600827300931, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3101952277657267, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.561, 'eval_steps_per_second': 81.46, 'epoch': 3.0}
{'loss': 0.0981, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2543332278728485, 'eval_precision': 0.27948990435706694, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2893289328932893, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.874, 'eval_steps_per_second': 81.249, 'epoch': 4.0}
{'loss': 0.0688, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.28105616569519043, 'eval_precision': 0.2602739726027397, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.260125499144324, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.21, 'eval_steps_per_second': 81.416, 'epoch': 5.0}
{'loss': 0.0471, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3200944662094116, 'eval_precision': 0.3058139534883721, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.30282095567069667, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.011, 'eval_steps_per_second': 81.391, 'epoch': 6.0}
{'loss': 0.0345, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.33253994584083557, 'eval_precision': 0.29141104294478526, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.307277628032345, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.01, 'eval_steps_per_second': 81.517, 'epoch': 7.0}
{'loss': 0.0232, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3640207350254059, 'eval_precision': 0.2799208704253215, 'eval_recall': 0.322690992018244, 'eval_f1': 0.2997881355932204, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.847, 'eval_steps_per_second': 81.371, 'epoch': 8.0}
{'loss': 0.0151, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3772602677345276, 'eval_precision': 0.27076923076923076, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.285097192224622, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.517, 'eval_steps_per_second': 81.455, 'epoch': 9.0}
{'loss': 0.0106, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4045513868331909, 'eval_precision': 0.2678034102306921, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2849519743863394, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.03, 'eval_steps_per_second': 81.519, 'epoch': 10.0}
{'loss': 0.0079, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.40849876403808594, 'eval_precision': 0.26095238095238094, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2843798650752465, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.4349, 'eval_samples_per_second': 628.778, 'eval_steps_per_second': 78.854, 'epoch': 11.0}
{'loss': 0.0059, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.42531508207321167, 'eval_precision': 0.3166023166023166, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.29746070133010877, 'eval_accuracy': 0.938122442677372, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.541, 'eval_steps_per_second': 81.332, 'epoch': 12.0}
{'loss': 0.0045, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4360925257205963, 'eval_precision': 0.2893347412882788, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30043859649122806, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.3602, 'eval_samples_per_second': 648.662, 'eval_steps_per_second': 81.348, 'epoch': 13.0}
{'loss': 0.0041, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4457622766494751, 'eval_precision': 0.2638753651411879, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2846638655462185, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.27, 'eval_steps_per_second': 81.424, 'epoch': 14.0}
{'loss': 0.0033, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.43424686789512634, 'eval_precision': 0.291710388247639, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3038251366120219, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3531, 'eval_samples_per_second': 650.642, 'eval_steps_per_second': 81.596, 'epoch': 15.0}
{'loss': 0.0026, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4419494569301605, 'eval_precision': 0.31414868105515587, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.30625365283459965, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 2.3569, 'eval_samples_per_second': 649.58, 'eval_steps_per_second': 81.463, 'epoch': 16.0}
{'loss': 0.0015, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4619726240634918, 'eval_precision': 0.3065015479876161, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3217768147345612, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3531, 'eval_samples_per_second': 650.639, 'eval_steps_per_second': 81.595, 'epoch': 17.0}
{'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4745231568813324, 'eval_precision': 0.31412429378531076, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.31555051078320095, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.502, 'eval_steps_per_second': 81.453, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.48918700218200684, 'eval_precision': 0.3204983012457531, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32159090909090915, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.851, 'eval_steps_per_second': 81.371, 'epoch': 19.0}
{'loss': 0.001, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.48727938532829285, 'eval_precision': 0.3068552774755169, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3140311804008909, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.4314, 'eval_samples_per_second': 629.669, 'eval_steps_per_second': 78.966, 'epoch': 20.0}
{'loss': 0.0008, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4865785539150238, 'eval_precision': 0.3172103487064117, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.319365798414496, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.335, 'eval_steps_per_second': 81.557, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.49527227878570557, 'eval_precision': 0.3216374269005848, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3175519630484988, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.247, 'eval_steps_per_second': 81.421, 'epoch': 22.0}
{'loss': 0.0006, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4948231875896454, 'eval_precision': 0.314385150812065, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31167337550316276, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.64, 'eval_steps_per_second': 81.47, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.49759599566459656, 'eval_precision': 0.31780167264038234, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.31038506417736295, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3586, 'eval_samples_per_second': 649.122, 'eval_steps_per_second': 81.405, 'epoch': 24.0}
{'train_runtime': 859.9252, 'train_samples_per_second': 240.97, 'train_steps_per_second': 6.028, 'train_loss': 0.04048273872934788, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0405
  train_runtime            = 0:14:19.92
  train_samples            =       8634
  train_samples_per_second =     240.97
  train_steps_per_second   =      6.028
[{'loss': 0.3056, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.21735818684101105, 'eval_precision': 0.25263157894736843, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.24942263279445726, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 2.3817, 'eval_samples_per_second': 642.831, 'eval_steps_per_second': 80.616, 'epoch': 1.0, 'step': 216}, {'loss': 0.1971, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.21244844794273376, 'eval_precision': 0.2927927927927928, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.25275437459494493, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.217, 'eval_steps_per_second': 81.417, 'epoch': 2.0, 'step': 432}, {'loss': 0.1359, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.22430969774723053, 'eval_precision': 0.2957600827300931, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3101952277657267, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.561, 'eval_steps_per_second': 81.46, 'epoch': 3.0, 'step': 648}, {'loss': 0.0981, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2543332278728485, 'eval_precision': 0.27948990435706694, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2893289328932893, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.874, 'eval_steps_per_second': 81.249, 'epoch': 4.0, 'step': 864}, {'loss': 0.0688, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.28105616569519043, 'eval_precision': 0.2602739726027397, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.260125499144324, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.21, 'eval_steps_per_second': 81.416, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0471, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3200944662094116, 'eval_precision': 0.3058139534883721, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.30282095567069667, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.011, 'eval_steps_per_second': 81.391, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0345, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.33253994584083557, 'eval_precision': 0.29141104294478526, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.307277628032345, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.01, 'eval_steps_per_second': 81.517, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0232, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3640207350254059, 'eval_precision': 0.2799208704253215, 'eval_recall': 0.322690992018244, 'eval_f1': 0.2997881355932204, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.847, 'eval_steps_per_second': 81.371, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0151, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3772602677345276, 'eval_precision': 0.27076923076923076, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.285097192224622, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.517, 'eval_steps_per_second': 81.455, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0106, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.4045513868331909, 'eval_precision': 0.2678034102306921, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2849519743863394, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.03, 'eval_steps_per_second': 81.519, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0079, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.40849876403808594, 'eval_precision': 0.26095238095238094, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2843798650752465, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.4349, 'eval_samples_per_second': 628.778, 'eval_steps_per_second': 78.854, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0059, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.42531508207321167, 'eval_precision': 0.3166023166023166, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.29746070133010877, 'eval_accuracy': 0.938122442677372, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.541, 'eval_steps_per_second': 81.332, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0045, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.4360925257205963, 'eval_precision': 0.2893347412882788, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30043859649122806, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.3602, 'eval_samples_per_second': 648.662, 'eval_steps_per_second': 81.348, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0041, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4457622766494751, 'eval_precision': 0.2638753651411879, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2846638655462185, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.27, 'eval_steps_per_second': 81.424, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0033, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.43424686789512634, 'eval_precision': 0.291710388247639, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3038251366120219, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3531, 'eval_samples_per_second': 650.642, 'eval_steps_per_second': 81.596, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0026, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4419494569301605, 'eval_precision': 0.31414868105515587, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.30625365283459965, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 2.3569, 'eval_samples_per_second': 649.58, 'eval_steps_per_second': 81.463, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0015, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4619726240634918, 'eval_precision': 0.3065015479876161, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3217768147345612, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3531, 'eval_samples_per_second': 650.639, 'eval_steps_per_second': 81.595, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4745231568813324, 'eval_precision': 0.31412429378531076, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.31555051078320095, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.502, 'eval_steps_per_second': 81.453, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0011, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.48918700218200684, 'eval_precision': 0.3204983012457531, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32159090909090915, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.851, 'eval_steps_per_second': 81.371, 'epoch': 19.0, 'step': 4104}, {'loss': 0.001, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.48727938532829285, 'eval_precision': 0.3068552774755169, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3140311804008909, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.4314, 'eval_samples_per_second': 629.669, 'eval_steps_per_second': 78.966, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0008, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.4865785539150238, 'eval_precision': 0.3172103487064117, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.319365798414496, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.335, 'eval_steps_per_second': 81.557, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.49527227878570557, 'eval_precision': 0.3216374269005848, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3175519630484988, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.247, 'eval_steps_per_second': 81.421, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0006, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.4948231875896454, 'eval_precision': 0.314385150812065, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31167337550316276, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.64, 'eval_steps_per_second': 81.47, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.49759599566459656, 'eval_precision': 0.31780167264038234, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.31038506417736295, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3586, 'eval_samples_per_second': 649.122, 'eval_steps_per_second': 81.405, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 859.9252, 'train_samples_per_second': 240.97, 'train_steps_per_second': 6.028, 'total_flos': 8233685173548936.0, 'train_loss': 0.04048273872934788, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9397
  predict_f1                 =     0.2255
  predict_loss               =     0.2294
  predict_precision          =     0.2607
  predict_recall             =     0.1986
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =     648.49
  predict_steps_per_second   =     81.061
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_04.json completed. F1: 0.2254826254826255
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_16.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6437.70 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7168.71 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7077.66 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7182.38 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7261.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7420.35 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6518.91 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6881.68 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7004.70 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7648.56 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7275.85 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7362.65 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7175.75 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4525, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.394467294216156, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2823, 'eval_samples_per_second': 670.823, 'eval_steps_per_second': 84.127, 'epoch': 1.0}
{'loss': 0.4081, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.3910062313079834, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.248, 'eval_steps_per_second': 84.932, 'epoch': 2.0}
{'loss': 0.4083, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.39054936170578003, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2571, 'eval_samples_per_second': 678.293, 'eval_steps_per_second': 85.064, 'epoch': 3.0}
{'loss': 0.407, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.39070194959640503, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2485, 'eval_samples_per_second': 680.909, 'eval_steps_per_second': 85.392, 'epoch': 4.0}
{'loss': 0.4081, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3918016850948334, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2547, 'eval_samples_per_second': 679.027, 'eval_steps_per_second': 85.156, 'epoch': 5.0}
{'loss': 0.4074, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.39174795150756836, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2499, 'eval_samples_per_second': 680.489, 'eval_steps_per_second': 85.339, 'epoch': 6.0}
{'loss': 0.4071, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3917600214481354, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2486, 'eval_samples_per_second': 680.874, 'eval_steps_per_second': 85.387, 'epoch': 7.0}
{'loss': 0.4063, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3907928764820099, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2662, 'eval_samples_per_second': 675.577, 'eval_steps_per_second': 84.723, 'epoch': 8.0}
{'loss': 0.4064, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.39113497734069824, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2572, 'eval_samples_per_second': 678.273, 'eval_steps_per_second': 85.061, 'epoch': 9.0}
{'loss': 0.4057, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.3920811414718628, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.977, 'eval_steps_per_second': 85.149, 'epoch': 10.0}
{'loss': 0.4065, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.3910348117351532, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3271, 'eval_samples_per_second': 657.897, 'eval_steps_per_second': 82.506, 'epoch': 11.0}
{'loss': 0.4055, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.3930365741252899, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2527, 'eval_samples_per_second': 679.624, 'eval_steps_per_second': 85.23, 'epoch': 12.0}
{'loss': 0.4076, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3914157748222351, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2562, 'eval_samples_per_second': 678.582, 'eval_steps_per_second': 85.1, 'epoch': 13.0}
{'loss': 0.4074, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.39106178283691406, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2551, 'eval_samples_per_second': 678.919, 'eval_steps_per_second': 85.142, 'epoch': 14.0}
{'loss': 0.4066, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.39153769612312317, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2543, 'eval_samples_per_second': 679.148, 'eval_steps_per_second': 85.171, 'epoch': 15.0}
{'loss': 0.4072, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3904842734336853, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2485, 'eval_samples_per_second': 680.896, 'eval_steps_per_second': 85.39, 'epoch': 16.0}
{'loss': 0.4056, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.39054200053215027, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.953, 'eval_steps_per_second': 85.146, 'epoch': 17.0}
{'loss': 0.4065, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.3906736671924591, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.488, 'eval_steps_per_second': 85.088, 'epoch': 18.0}
{'loss': 0.4057, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.3913201093673706, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2487, 'eval_samples_per_second': 680.843, 'eval_steps_per_second': 85.383, 'epoch': 19.0}
{'loss': 0.4061, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.39056798815727234, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3341, 'eval_samples_per_second': 655.932, 'eval_steps_per_second': 82.259, 'epoch': 20.0}
{'loss': 0.4069, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.39049550890922546, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2535, 'eval_samples_per_second': 679.401, 'eval_steps_per_second': 85.203, 'epoch': 21.0}
{'loss': 0.4054, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.39050760865211487, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2567, 'eval_samples_per_second': 678.412, 'eval_steps_per_second': 85.078, 'epoch': 22.0}
{'loss': 0.4071, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.39085206389427185, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2555, 'eval_samples_per_second': 678.779, 'eval_steps_per_second': 85.124, 'epoch': 23.0}
{'loss': 0.4065, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3907581567764282, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2523, 'eval_samples_per_second': 679.741, 'eval_steps_per_second': 85.245, 'epoch': 24.0}
{'train_runtime': 780.4857, 'train_samples_per_second': 265.496, 'train_steps_per_second': 6.642, 'train_loss': 0.40864645846096087, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.4086
  train_runtime            = 0:13:00.48
  train_samples            =       8634
  train_samples_per_second =    265.496
  train_steps_per_second   =      6.642
[{'loss': 0.4525, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.394467294216156, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2823, 'eval_samples_per_second': 670.823, 'eval_steps_per_second': 84.127, 'epoch': 1.0, 'step': 216}, {'loss': 0.4081, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.3910062313079834, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.248, 'eval_steps_per_second': 84.932, 'epoch': 2.0, 'step': 432}, {'loss': 0.4083, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.39054936170578003, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2571, 'eval_samples_per_second': 678.293, 'eval_steps_per_second': 85.064, 'epoch': 3.0, 'step': 648}, {'loss': 0.407, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.39070194959640503, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2485, 'eval_samples_per_second': 680.909, 'eval_steps_per_second': 85.392, 'epoch': 4.0, 'step': 864}, {'loss': 0.4081, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3918016850948334, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2547, 'eval_samples_per_second': 679.027, 'eval_steps_per_second': 85.156, 'epoch': 5.0, 'step': 1080}, {'loss': 0.4074, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.39174795150756836, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2499, 'eval_samples_per_second': 680.489, 'eval_steps_per_second': 85.339, 'epoch': 6.0, 'step': 1296}, {'loss': 0.4071, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3917600214481354, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2486, 'eval_samples_per_second': 680.874, 'eval_steps_per_second': 85.387, 'epoch': 7.0, 'step': 1512}, {'loss': 0.4063, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3907928764820099, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2662, 'eval_samples_per_second': 675.577, 'eval_steps_per_second': 84.723, 'epoch': 8.0, 'step': 1728}, {'loss': 0.4064, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.39113497734069824, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2572, 'eval_samples_per_second': 678.273, 'eval_steps_per_second': 85.061, 'epoch': 9.0, 'step': 1944}, {'loss': 0.4057, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.3920811414718628, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.977, 'eval_steps_per_second': 85.149, 'epoch': 10.0, 'step': 2160}, {'loss': 0.4065, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3910348117351532, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3271, 'eval_samples_per_second': 657.897, 'eval_steps_per_second': 82.506, 'epoch': 11.0, 'step': 2376}, {'loss': 0.4055, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3930365741252899, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2527, 'eval_samples_per_second': 679.624, 'eval_steps_per_second': 85.23, 'epoch': 12.0, 'step': 2592}, {'loss': 0.4076, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.3914157748222351, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2562, 'eval_samples_per_second': 678.582, 'eval_steps_per_second': 85.1, 'epoch': 13.0, 'step': 2808}, {'loss': 0.4074, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.39106178283691406, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2551, 'eval_samples_per_second': 678.919, 'eval_steps_per_second': 85.142, 'epoch': 14.0, 'step': 3024}, {'loss': 0.4066, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.39153769612312317, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2543, 'eval_samples_per_second': 679.148, 'eval_steps_per_second': 85.171, 'epoch': 15.0, 'step': 3240}, {'loss': 0.4072, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.3904842734336853, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2485, 'eval_samples_per_second': 680.896, 'eval_steps_per_second': 85.39, 'epoch': 16.0, 'step': 3456}, {'loss': 0.4056, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.39054200053215027, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.953, 'eval_steps_per_second': 85.146, 'epoch': 17.0, 'step': 3672}, {'loss': 0.4065, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.3906736671924591, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.488, 'eval_steps_per_second': 85.088, 'epoch': 18.0, 'step': 3888}, {'loss': 0.4057, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.3913201093673706, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2487, 'eval_samples_per_second': 680.843, 'eval_steps_per_second': 85.383, 'epoch': 19.0, 'step': 4104}, {'loss': 0.4061, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.39056798815727234, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3341, 'eval_samples_per_second': 655.932, 'eval_steps_per_second': 82.259, 'epoch': 20.0, 'step': 4320}, {'loss': 0.4069, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.39049550890922546, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2535, 'eval_samples_per_second': 679.401, 'eval_steps_per_second': 85.203, 'epoch': 21.0, 'step': 4536}, {'loss': 0.4054, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.39050760865211487, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2567, 'eval_samples_per_second': 678.412, 'eval_steps_per_second': 85.078, 'epoch': 22.0, 'step': 4752}, {'loss': 0.4071, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.39085206389427185, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2555, 'eval_samples_per_second': 678.779, 'eval_steps_per_second': 85.124, 'epoch': 23.0, 'step': 4968}, {'loss': 0.4065, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3907581567764282, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2523, 'eval_samples_per_second': 679.741, 'eval_steps_per_second': 85.245, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 780.4857, 'train_samples_per_second': 265.496, 'train_steps_per_second': 6.642, 'total_flos': 7391764724698944.0, 'train_loss': 0.40864645846096087, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     0.3974
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:01.88
  predict_samples_per_second =    673.667
  predict_steps_per_second   =     84.208
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_16.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_31.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6186.96 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7076.99 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7092.16 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7235.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7322.21 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7485.57 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6580.98 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6966.51 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7048.99 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7760.83 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7401.17 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7418.61 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7241.66 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3099, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.22072172164916992, 'eval_precision': 0.2096317280453258, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.18698673404927352, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.2529, 'eval_samples_per_second': 679.58, 'eval_steps_per_second': 85.225, 'epoch': 1.0}
{'loss': 0.1821, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.23371478915214539, 'eval_precision': 0.23378076062639822, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2360248447204969, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2344, 'eval_samples_per_second': 685.197, 'eval_steps_per_second': 85.929, 'epoch': 2.0}
{'loss': 0.1045, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.2594964802265167, 'eval_precision': 0.2510204081632653, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.2649434571890146, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2309, 'eval_samples_per_second': 686.269, 'eval_steps_per_second': 86.064, 'epoch': 3.0}
{'loss': 0.0613, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.3268444240093231, 'eval_precision': 0.2307017543859649, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2607833415964303, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2295, 'eval_samples_per_second': 686.697, 'eval_steps_per_second': 86.117, 'epoch': 4.0}
{'loss': 0.0338, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.35378360748291016, 'eval_precision': 0.22679324894514769, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.2356164383561644, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 2.2308, 'eval_samples_per_second': 686.314, 'eval_steps_per_second': 86.069, 'epoch': 5.0}
{'loss': 0.0194, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.38198626041412354, 'eval_precision': 0.21621621621621623, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2219755826859046, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.2193, 'eval_samples_per_second': 689.866, 'eval_steps_per_second': 86.515, 'epoch': 6.0}
{'loss': 0.011, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.4046132564544678, 'eval_precision': 0.22191011235955055, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.24370179948586118, 'eval_accuracy': 0.9262719061221338, 'eval_runtime': 2.2258, 'eval_samples_per_second': 687.841, 'eval_steps_per_second': 86.261, 'epoch': 7.0}
{'loss': 0.0068, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.4444572925567627, 'eval_precision': 0.22629969418960244, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.23896663078579117, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2318, 'eval_samples_per_second': 686.007, 'eval_steps_per_second': 86.031, 'epoch': 8.0}
{'loss': 0.005, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.4503825306892395, 'eval_precision': 0.2457200402819738, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.26096256684491975, 'eval_accuracy': 0.9310584420597545, 'eval_runtime': 2.2318, 'eval_samples_per_second': 685.988, 'eval_steps_per_second': 86.029, 'epoch': 9.0}
{'loss': 0.0033, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.47674405574798584, 'eval_precision': 0.23221343873517786, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.24880889359449446, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 2.2281, 'eval_samples_per_second': 687.139, 'eval_steps_per_second': 86.173, 'epoch': 10.0}
{'loss': 0.0024, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4735945761203766, 'eval_precision': 0.24636058230683092, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.24858757062146894, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.481, 'eval_steps_per_second': 85.965, 'epoch': 11.0}
{'loss': 0.002, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.49209892749786377, 'eval_precision': 0.2281021897810219, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.25342118601115055, 'eval_accuracy': 0.9258086929668803, 'eval_runtime': 2.2317, 'eval_samples_per_second': 686.032, 'eval_steps_per_second': 86.034, 'epoch': 12.0}
{'loss': 0.0014, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.4997006952762604, 'eval_precision': 0.2403846153846154, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24820739106453393, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.2247, 'eval_samples_per_second': 688.187, 'eval_steps_per_second': 86.304, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.5063251852989197, 'eval_precision': 0.25331858407079644, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.25715889949466586, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 2.2289, 'eval_samples_per_second': 686.883, 'eval_steps_per_second': 86.141, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.5136791467666626, 'eval_precision': 0.24972253052164262, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.25309336332958376, 'eval_accuracy': 0.9309812398672123, 'eval_runtime': 2.2244, 'eval_samples_per_second': 688.289, 'eval_steps_per_second': 86.317, 'epoch': 15.0}
{'loss': 0.0009, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.49508482217788696, 'eval_precision': 0.24736842105263157, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2572523262178435, 'eval_accuracy': 0.9316374585038215, 'eval_runtime': 2.2259, 'eval_samples_per_second': 687.82, 'eval_steps_per_second': 86.258, 'epoch': 16.0}
{'loss': 0.0006, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.5128489136695862, 'eval_precision': 0.24696356275303644, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2616621983914209, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 2.2235, 'eval_samples_per_second': 688.55, 'eval_steps_per_second': 86.35, 'epoch': 17.0}
{'loss': 0.0005, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.5180349349975586, 'eval_precision': 0.2589595375722543, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2571756601607348, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.2226, 'eval_samples_per_second': 688.836, 'eval_steps_per_second': 86.386, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.5214163064956665, 'eval_precision': 0.2599784250269687, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2671840354767184, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.2252, 'eval_samples_per_second': 688.024, 'eval_steps_per_second': 86.284, 'epoch': 19.0}
{'loss': 0.0002, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.5269036889076233, 'eval_precision': 0.25516528925619836, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2677506775067751, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 2.223, 'eval_samples_per_second': 688.695, 'eval_steps_per_second': 86.368, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.5283674597740173, 'eval_precision': 0.25448785638859556, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.26425438596491235, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 2.222, 'eval_samples_per_second': 689.007, 'eval_steps_per_second': 86.407, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5310467481613159, 'eval_precision': 0.25386996904024767, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.266522210184182, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.172, 'eval_steps_per_second': 86.177, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.5349897742271423, 'eval_precision': 0.26010928961748636, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26562500000000006, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2279, 'eval_samples_per_second': 687.188, 'eval_steps_per_second': 86.179, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5358904600143433, 'eval_precision': 0.2603938730853392, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.2657733109994416, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.226, 'eval_samples_per_second': 687.767, 'eval_steps_per_second': 86.252, 'epoch': 24.0}
{'train_runtime': 716.5968, 'train_samples_per_second': 289.167, 'train_steps_per_second': 4.521, 'train_loss': 0.031188879388579983, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0312
  train_runtime            = 0:11:56.59
  train_samples            =       8634
  train_samples_per_second =    289.167
  train_steps_per_second   =      4.521
[{'loss': 0.3099, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.22072172164916992, 'eval_precision': 0.2096317280453258, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.18698673404927352, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.2529, 'eval_samples_per_second': 679.58, 'eval_steps_per_second': 85.225, 'epoch': 1.0, 'step': 135}, {'loss': 0.1821, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.23371478915214539, 'eval_precision': 0.23378076062639822, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2360248447204969, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2344, 'eval_samples_per_second': 685.197, 'eval_steps_per_second': 85.929, 'epoch': 2.0, 'step': 270}, {'loss': 0.1045, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2594964802265167, 'eval_precision': 0.2510204081632653, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.2649434571890146, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2309, 'eval_samples_per_second': 686.269, 'eval_steps_per_second': 86.064, 'epoch': 3.0, 'step': 405}, {'loss': 0.0613, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.3268444240093231, 'eval_precision': 0.2307017543859649, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2607833415964303, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2295, 'eval_samples_per_second': 686.697, 'eval_steps_per_second': 86.117, 'epoch': 4.0, 'step': 540}, {'loss': 0.0338, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.35378360748291016, 'eval_precision': 0.22679324894514769, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.2356164383561644, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 2.2308, 'eval_samples_per_second': 686.314, 'eval_steps_per_second': 86.069, 'epoch': 5.0, 'step': 675}, {'loss': 0.0194, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.38198626041412354, 'eval_precision': 0.21621621621621623, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2219755826859046, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.2193, 'eval_samples_per_second': 689.866, 'eval_steps_per_second': 86.515, 'epoch': 6.0, 'step': 810}, {'loss': 0.011, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.4046132564544678, 'eval_precision': 0.22191011235955055, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.24370179948586118, 'eval_accuracy': 0.9262719061221338, 'eval_runtime': 2.2258, 'eval_samples_per_second': 687.841, 'eval_steps_per_second': 86.261, 'epoch': 7.0, 'step': 945}, {'loss': 0.0068, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.4444572925567627, 'eval_precision': 0.22629969418960244, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.23896663078579117, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2318, 'eval_samples_per_second': 686.007, 'eval_steps_per_second': 86.031, 'epoch': 8.0, 'step': 1080}, {'loss': 0.005, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.4503825306892395, 'eval_precision': 0.2457200402819738, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.26096256684491975, 'eval_accuracy': 0.9310584420597545, 'eval_runtime': 2.2318, 'eval_samples_per_second': 685.988, 'eval_steps_per_second': 86.029, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0033, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.47674405574798584, 'eval_precision': 0.23221343873517786, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.24880889359449446, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 2.2281, 'eval_samples_per_second': 687.139, 'eval_steps_per_second': 86.173, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0024, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4735945761203766, 'eval_precision': 0.24636058230683092, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.24858757062146894, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.481, 'eval_steps_per_second': 85.965, 'epoch': 11.0, 'step': 1485}, {'loss': 0.002, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.49209892749786377, 'eval_precision': 0.2281021897810219, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.25342118601115055, 'eval_accuracy': 0.9258086929668803, 'eval_runtime': 2.2317, 'eval_samples_per_second': 686.032, 'eval_steps_per_second': 86.034, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0014, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4997006952762604, 'eval_precision': 0.2403846153846154, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24820739106453393, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.2247, 'eval_samples_per_second': 688.187, 'eval_steps_per_second': 86.304, 'epoch': 13.0, 'step': 1755}, {'loss': 0.001, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.5063251852989197, 'eval_precision': 0.25331858407079644, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.25715889949466586, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 2.2289, 'eval_samples_per_second': 686.883, 'eval_steps_per_second': 86.141, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.5136791467666626, 'eval_precision': 0.24972253052164262, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.25309336332958376, 'eval_accuracy': 0.9309812398672123, 'eval_runtime': 2.2244, 'eval_samples_per_second': 688.289, 'eval_steps_per_second': 86.317, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0009, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.49508482217788696, 'eval_precision': 0.24736842105263157, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2572523262178435, 'eval_accuracy': 0.9316374585038215, 'eval_runtime': 2.2259, 'eval_samples_per_second': 687.82, 'eval_steps_per_second': 86.258, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0006, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.5128489136695862, 'eval_precision': 0.24696356275303644, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2616621983914209, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 2.2235, 'eval_samples_per_second': 688.55, 'eval_steps_per_second': 86.35, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0005, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.5180349349975586, 'eval_precision': 0.2589595375722543, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2571756601607348, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.2226, 'eval_samples_per_second': 688.836, 'eval_steps_per_second': 86.386, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.5214163064956665, 'eval_precision': 0.2599784250269687, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2671840354767184, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.2252, 'eval_samples_per_second': 688.024, 'eval_steps_per_second': 86.284, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0002, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.5269036889076233, 'eval_precision': 0.25516528925619836, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2677506775067751, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 2.223, 'eval_samples_per_second': 688.695, 'eval_steps_per_second': 86.368, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.5283674597740173, 'eval_precision': 0.25448785638859556, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.26425438596491235, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 2.222, 'eval_samples_per_second': 689.007, 'eval_steps_per_second': 86.407, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.5310467481613159, 'eval_precision': 0.25386996904024767, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.266522210184182, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.172, 'eval_steps_per_second': 86.177, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0002, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.5349897742271423, 'eval_precision': 0.26010928961748636, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26562500000000006, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2279, 'eval_samples_per_second': 687.188, 'eval_steps_per_second': 86.179, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.5358904600143433, 'eval_precision': 0.2603938730853392, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.2657733109994416, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.226, 'eval_samples_per_second': 687.767, 'eval_steps_per_second': 86.252, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 716.5968, 'train_samples_per_second': 289.167, 'train_steps_per_second': 4.521, 'total_flos': 7419427145580792.0, 'train_loss': 0.031188879388579983, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9339
  predict_f1                 =     0.1527
  predict_loss               =     0.2309
  predict_precision          =     0.1762
  predict_recall             =     0.1347
  predict_runtime            = 0:00:01.86
  predict_samples_per_second =    681.363
  predict_steps_per_second   =      85.17
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_31.json completed. F1: 0.15265998457979954
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_38.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_38.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5978.44 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7024.64 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7101.19 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7276.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7414.45 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7573.16 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6634.67 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7034.41 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7097.90 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7847.26 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7463.91 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7541.57 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7340.55 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_2/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2987, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.21982714533805847, 'eval_precision': 0.23030303030303031, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22326674500587546, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.233, 'eval_steps_per_second': 84.931, 'epoch': 1.0}
{'loss': 0.1753, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.22960175573825836, 'eval_precision': 0.24971493728620298, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.24971493728620298, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.2396, 'eval_samples_per_second': 683.59, 'eval_steps_per_second': 85.728, 'epoch': 2.0}
{'loss': 0.0988, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2791290879249573, 'eval_precision': 0.24873096446700507, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.2354354354354354, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.231, 'eval_samples_per_second': 686.226, 'eval_steps_per_second': 86.058, 'epoch': 3.0}
{'loss': 0.0588, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.31351324915885925, 'eval_precision': 0.22598353156450138, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.25076142131979695, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 2.2266, 'eval_samples_per_second': 687.589, 'eval_steps_per_second': 86.229, 'epoch': 4.0}
{'loss': 0.0334, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.34545841813087463, 'eval_precision': 0.22448979591836735, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.25249500998003993, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.2321, 'eval_samples_per_second': 685.891, 'eval_steps_per_second': 86.016, 'epoch': 5.0}
{'loss': 0.0204, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.38341519236564636, 'eval_precision': 0.21694036300777875, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.24680432645034417, 'eval_accuracy': 0.926310507218405, 'eval_runtime': 2.2302, 'eval_samples_per_second': 686.498, 'eval_steps_per_second': 86.093, 'epoch': 6.0}
{'loss': 0.0119, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3838420808315277, 'eval_precision': 0.23026926648096566, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2538382804503583, 'eval_accuracy': 0.9295916004014514, 'eval_runtime': 2.2305, 'eval_samples_per_second': 686.404, 'eval_steps_per_second': 86.081, 'epoch': 7.0}
{'loss': 0.0068, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.4198082685470581, 'eval_precision': 0.24555555555555555, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2487338210467079, 'eval_accuracy': 0.9327182891994132, 'eval_runtime': 2.2292, 'eval_samples_per_second': 686.797, 'eval_steps_per_second': 86.13, 'epoch': 8.0}
{'loss': 0.0042, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.44301125407218933, 'eval_precision': 0.2440041710114703, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2549019607843137, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.068, 'eval_steps_per_second': 86.164, 'epoch': 9.0}
{'loss': 0.0037, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.478629469871521, 'eval_precision': 0.23013698630136986, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.25557809330628806, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.2329, 'eval_samples_per_second': 685.646, 'eval_steps_per_second': 85.986, 'epoch': 10.0}
{'loss': 0.0027, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.46840348839759827, 'eval_precision': 0.23873873873873874, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.24022662889518415, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.231, 'eval_samples_per_second': 686.249, 'eval_steps_per_second': 86.061, 'epoch': 11.0}
{'loss': 0.0019, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.48726633191108704, 'eval_precision': 0.22692307692307692, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.24621804903495048, 'eval_accuracy': 0.9296302014977226, 'eval_runtime': 2.2212, 'eval_samples_per_second': 689.266, 'eval_steps_per_second': 86.44, 'epoch': 12.0}
{'loss': 0.0018, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.4722825586795807, 'eval_precision': 0.22829268292682928, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.24605678233438488, 'eval_accuracy': 0.9287037751872154, 'eval_runtime': 2.2302, 'eval_samples_per_second': 686.491, 'eval_steps_per_second': 86.092, 'epoch': 13.0}
{'loss': 0.0009, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.49592965841293335, 'eval_precision': 0.2502606882168926, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2614379084967321, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.2262, 'eval_samples_per_second': 687.731, 'eval_steps_per_second': 86.247, 'epoch': 14.0}
{'loss': 0.0009, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.5097069144248962, 'eval_precision': 0.24569460390355913, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2448512585812357, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.2257, 'eval_samples_per_second': 687.867, 'eval_steps_per_second': 86.264, 'epoch': 15.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.517777681350708, 'eval_precision': 0.2577565632458234, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.25189504373177846, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.2319, 'eval_samples_per_second': 685.952, 'eval_steps_per_second': 86.024, 'epoch': 16.0}
{'loss': 0.0005, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.5153733491897583, 'eval_precision': 0.2576754385964912, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.26271660145332587, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.226, 'eval_samples_per_second': 687.776, 'eval_steps_per_second': 86.253, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.5195175409317017, 'eval_precision': 0.26498800959232616, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2583284628872005, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2293, 'eval_samples_per_second': 686.764, 'eval_steps_per_second': 86.126, 'epoch': 18.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5264583230018616, 'eval_precision': 0.26575028636884307, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.2651428571428572, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.2248, 'eval_samples_per_second': 688.153, 'eval_steps_per_second': 86.3, 'epoch': 19.0}
{'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5278294682502747, 'eval_precision': 0.2529411764705882, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.24898668210770122, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.081, 'eval_steps_per_second': 86.166, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.5336644649505615, 'eval_precision': 0.2516930022573363, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2529778786159954, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2199, 'eval_samples_per_second': 689.666, 'eval_steps_per_second': 86.49, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5393711924552917, 'eval_precision': 0.2619311875693674, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.26546681664791905, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.2218, 'eval_samples_per_second': 689.094, 'eval_steps_per_second': 86.418, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5430513620376587, 'eval_precision': 0.25667828106852497, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.25431530494821636, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2267, 'eval_samples_per_second': 687.564, 'eval_steps_per_second': 86.226, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5442385077476501, 'eval_precision': 0.25844004656577413, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2557603686635945, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 2.2264, 'eval_samples_per_second': 687.655, 'eval_steps_per_second': 86.238, 'epoch': 24.0}
{'train_runtime': 715.6756, 'train_samples_per_second': 289.539, 'train_steps_per_second': 4.527, 'train_loss': 0.0301380635233435, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0301
  train_runtime            = 0:11:55.67
  train_samples            =       8634
  train_samples_per_second =    289.539
  train_steps_per_second   =      4.527
[{'loss': 0.2987, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21982714533805847, 'eval_precision': 0.23030303030303031, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22326674500587546, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.233, 'eval_steps_per_second': 84.931, 'epoch': 1.0, 'step': 135}, {'loss': 0.1753, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.22960175573825836, 'eval_precision': 0.24971493728620298, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.24971493728620298, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.2396, 'eval_samples_per_second': 683.59, 'eval_steps_per_second': 85.728, 'epoch': 2.0, 'step': 270}, {'loss': 0.0988, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2791290879249573, 'eval_precision': 0.24873096446700507, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.2354354354354354, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.231, 'eval_samples_per_second': 686.226, 'eval_steps_per_second': 86.058, 'epoch': 3.0, 'step': 405}, {'loss': 0.0588, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.31351324915885925, 'eval_precision': 0.22598353156450138, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.25076142131979695, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 2.2266, 'eval_samples_per_second': 687.589, 'eval_steps_per_second': 86.229, 'epoch': 4.0, 'step': 540}, {'loss': 0.0334, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.34545841813087463, 'eval_precision': 0.22448979591836735, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.25249500998003993, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.2321, 'eval_samples_per_second': 685.891, 'eval_steps_per_second': 86.016, 'epoch': 5.0, 'step': 675}, {'loss': 0.0204, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.38341519236564636, 'eval_precision': 0.21694036300777875, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.24680432645034417, 'eval_accuracy': 0.926310507218405, 'eval_runtime': 2.2302, 'eval_samples_per_second': 686.498, 'eval_steps_per_second': 86.093, 'epoch': 6.0, 'step': 810}, {'loss': 0.0119, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3838420808315277, 'eval_precision': 0.23026926648096566, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2538382804503583, 'eval_accuracy': 0.9295916004014514, 'eval_runtime': 2.2305, 'eval_samples_per_second': 686.404, 'eval_steps_per_second': 86.081, 'epoch': 7.0, 'step': 945}, {'loss': 0.0068, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.4198082685470581, 'eval_precision': 0.24555555555555555, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2487338210467079, 'eval_accuracy': 0.9327182891994132, 'eval_runtime': 2.2292, 'eval_samples_per_second': 686.797, 'eval_steps_per_second': 86.13, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0042, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.44301125407218933, 'eval_precision': 0.2440041710114703, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2549019607843137, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.068, 'eval_steps_per_second': 86.164, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0037, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.478629469871521, 'eval_precision': 0.23013698630136986, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.25557809330628806, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.2329, 'eval_samples_per_second': 685.646, 'eval_steps_per_second': 85.986, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0027, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.46840348839759827, 'eval_precision': 0.23873873873873874, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.24022662889518415, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.231, 'eval_samples_per_second': 686.249, 'eval_steps_per_second': 86.061, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0019, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.48726633191108704, 'eval_precision': 0.22692307692307692, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.24621804903495048, 'eval_accuracy': 0.9296302014977226, 'eval_runtime': 2.2212, 'eval_samples_per_second': 689.266, 'eval_steps_per_second': 86.44, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0018, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4722825586795807, 'eval_precision': 0.22829268292682928, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.24605678233438488, 'eval_accuracy': 0.9287037751872154, 'eval_runtime': 2.2302, 'eval_samples_per_second': 686.491, 'eval_steps_per_second': 86.092, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0009, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.49592965841293335, 'eval_precision': 0.2502606882168926, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2614379084967321, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.2262, 'eval_samples_per_second': 687.731, 'eval_steps_per_second': 86.247, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0009, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.5097069144248962, 'eval_precision': 0.24569460390355913, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2448512585812357, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.2257, 'eval_samples_per_second': 687.867, 'eval_steps_per_second': 86.264, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0007, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.517777681350708, 'eval_precision': 0.2577565632458234, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.25189504373177846, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.2319, 'eval_samples_per_second': 685.952, 'eval_steps_per_second': 86.024, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0005, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.5153733491897583, 'eval_precision': 0.2576754385964912, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.26271660145332587, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.226, 'eval_samples_per_second': 687.776, 'eval_steps_per_second': 86.253, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.5195175409317017, 'eval_precision': 0.26498800959232616, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2583284628872005, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2293, 'eval_samples_per_second': 686.764, 'eval_steps_per_second': 86.126, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.5264583230018616, 'eval_precision': 0.26575028636884307, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.2651428571428572, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.2248, 'eval_samples_per_second': 688.153, 'eval_steps_per_second': 86.3, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.5278294682502747, 'eval_precision': 0.2529411764705882, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.24898668210770122, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.081, 'eval_steps_per_second': 86.166, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.5336644649505615, 'eval_precision': 0.2516930022573363, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.2529778786159954, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2199, 'eval_samples_per_second': 689.666, 'eval_steps_per_second': 86.49, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.5393711924552917, 'eval_precision': 0.2619311875693674, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.26546681664791905, 'eval_accuracy': 0.9336061144136494, 'eval_runtime': 2.2218, 'eval_samples_per_second': 689.094, 'eval_steps_per_second': 86.418, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.5430513620376587, 'eval_precision': 0.25667828106852497, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.25431530494821636, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2267, 'eval_samples_per_second': 687.564, 'eval_steps_per_second': 86.226, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.5442385077476501, 'eval_precision': 0.25844004656577413, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2557603686635945, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 2.2264, 'eval_samples_per_second': 687.655, 'eval_steps_per_second': 86.238, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 715.6756, 'train_samples_per_second': 289.539, 'train_steps_per_second': 4.527, 'total_flos': 7419427145580792.0, 'train_loss': 0.0301380635233435, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9345
  predict_f1                 =     0.1832
  predict_loss               =      0.232
  predict_precision          =     0.1984
  predict_recall             =     0.1701
  predict_runtime            = 0:00:01.86
  predict_samples_per_second =    683.493
  predict_steps_per_second   =     85.437
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_38.json completed. F1: 0.18315018315018314
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_30.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5517.84 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6674.07 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6844.17 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7063.43 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7220.86 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7382.87 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6505.25 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6889.39 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6902.27 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7743.27 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7365.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7422.80 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7232.53 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4826, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.3492249846458435, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2841, 'eval_samples_per_second': 670.3, 'eval_steps_per_second': 84.061, 'epoch': 1.0}
{'loss': 0.3311, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.3106369972229004, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2564, 'eval_samples_per_second': 678.526, 'eval_steps_per_second': 85.093, 'epoch': 2.0}
{'loss': 0.3045, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.27727779746055603, 'eval_precision': 0.11280487804878049, 'eval_recall': 0.04218928164196123, 'eval_f1': 0.06141078838174274, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 2.2508, 'eval_samples_per_second': 680.216, 'eval_steps_per_second': 85.305, 'epoch': 3.0}
{'loss': 0.2597, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.25869375467300415, 'eval_precision': 0.22033898305084745, 'eval_recall': 0.029646522234891677, 'eval_f1': 0.05226130653266332, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.2529, 'eval_samples_per_second': 679.58, 'eval_steps_per_second': 85.225, 'epoch': 4.0}
{'loss': 0.2224, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2667371928691864, 'eval_precision': 0.17738359201773837, 'eval_recall': 0.09122006841505131, 'eval_f1': 0.12048192771084336, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2588, 'eval_samples_per_second': 677.786, 'eval_steps_per_second': 85.0, 'epoch': 5.0}
{'loss': 0.1895, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.29849666357040405, 'eval_precision': 0.17889908256880735, 'eval_recall': 0.13340935005701254, 'eval_f1': 0.15284128020901372, 'eval_accuracy': 0.9306724310970431, 'eval_runtime': 2.2574, 'eval_samples_per_second': 678.227, 'eval_steps_per_second': 85.055, 'epoch': 6.0}
{'loss': 0.1619, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.3024095594882965, 'eval_precision': 0.1674259681093394, 'eval_recall': 0.1676168757126568, 'eval_f1': 0.1675213675213675, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2594, 'eval_samples_per_second': 677.618, 'eval_steps_per_second': 84.979, 'epoch': 7.0}
{'loss': 0.1381, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3164350688457489, 'eval_precision': 0.2005813953488372, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.21686746987951805, 'eval_accuracy': 0.9251138732339999, 'eval_runtime': 2.2588, 'eval_samples_per_second': 677.791, 'eval_steps_per_second': 85.001, 'epoch': 8.0}
{'loss': 0.1171, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.337080717086792, 'eval_precision': 0.19784172661870503, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.19286966686148452, 'eval_accuracy': 0.9273141357214545, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.483, 'eval_steps_per_second': 85.087, 'epoch': 9.0}
{'loss': 0.0959, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.34785932302474976, 'eval_precision': 0.1919406150583245, 'eval_recall': 0.2063854047890536, 'eval_f1': 0.19890109890109892, 'eval_accuracy': 0.9241488458272215, 'eval_runtime': 2.2642, 'eval_samples_per_second': 676.188, 'eval_steps_per_second': 84.8, 'epoch': 10.0}
{'loss': 0.078, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.36767449975013733, 'eval_precision': 0.2267515923566879, 'eval_recall': 0.20296465222348917, 'eval_f1': 0.2141997593261131, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.224, 'eval_steps_per_second': 84.929, 'epoch': 11.0}
{'loss': 0.0665, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.3804517686367035, 'eval_precision': 0.20798319327731093, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.21651175505740844, 'eval_accuracy': 0.9239558403458659, 'eval_runtime': 2.2524, 'eval_samples_per_second': 679.718, 'eval_steps_per_second': 85.242, 'epoch': 12.0}
{'loss': 0.0498, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.4001428186893463, 'eval_precision': 0.20813623462630085, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2275077559462254, 'eval_accuracy': 0.9200185285262101, 'eval_runtime': 2.2577, 'eval_samples_per_second': 678.109, 'eval_steps_per_second': 85.041, 'epoch': 13.0}
{'loss': 0.0404, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.4064544439315796, 'eval_precision': 0.21770091556459817, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.23010752688172043, 'eval_accuracy': 0.9244576545973906, 'eval_runtime': 2.2552, 'eval_samples_per_second': 678.865, 'eval_steps_per_second': 85.135, 'epoch': 14.0}
{'loss': 0.0323, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.42402100563049316, 'eval_precision': 0.21252796420581654, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.21456804065499718, 'eval_accuracy': 0.925731490774338, 'eval_runtime': 2.2574, 'eval_samples_per_second': 678.213, 'eval_steps_per_second': 85.053, 'epoch': 15.0}
{'loss': 0.0245, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4401872158050537, 'eval_precision': 0.20123839009287925, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.2112676056338028, 'eval_accuracy': 0.9232996217092565, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.957, 'eval_steps_per_second': 85.147, 'epoch': 16.0}
{'loss': 0.0203, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.447745144367218, 'eval_precision': 0.2, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2090364725095264, 'eval_accuracy': 0.9232996217092565, 'eval_runtime': 2.2528, 'eval_samples_per_second': 679.59, 'eval_steps_per_second': 85.226, 'epoch': 17.0}
{'loss': 0.0168, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.4544747769832611, 'eval_precision': 0.20257234726688103, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.2088397790055249, 'eval_accuracy': 0.9248822666563731, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.49, 'eval_steps_per_second': 85.088, 'epoch': 18.0}
{'loss': 0.0134, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.4710334539413452, 'eval_precision': 0.2098635886673662, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.21857923497267762, 'eval_accuracy': 0.9243032502123061, 'eval_runtime': 2.2442, 'eval_samples_per_second': 682.218, 'eval_steps_per_second': 85.556, 'epoch': 19.0}
{'loss': 0.0114, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.46958157420158386, 'eval_precision': 0.22184300341296928, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.22209567198177677, 'eval_accuracy': 0.9260789006407782, 'eval_runtime': 2.2581, 'eval_samples_per_second': 677.99, 'eval_steps_per_second': 85.026, 'epoch': 20.0}
{'loss': 0.0101, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.4752669334411621, 'eval_precision': 0.21832579185520362, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.21919363997728564, 'eval_accuracy': 0.9252296765228133, 'eval_runtime': 2.2562, 'eval_samples_per_second': 678.566, 'eval_steps_per_second': 85.098, 'epoch': 21.0}
{'loss': 0.0084, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.48798826336860657, 'eval_precision': 0.19579751671442217, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2130977130977131, 'eval_accuracy': 0.9206361460665483, 'eval_runtime': 2.2536, 'eval_samples_per_second': 679.349, 'eval_steps_per_second': 85.196, 'epoch': 22.0}
{'loss': 0.0073, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.49072617292404175, 'eval_precision': 0.20588235294117646, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.21432476763258612, 'eval_accuracy': 0.9224889986875627, 'eval_runtime': 2.259, 'eval_samples_per_second': 677.743, 'eval_steps_per_second': 84.994, 'epoch': 23.0}
{'loss': 0.0072, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4909759759902954, 'eval_precision': 0.2014388489208633, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.21189189189189186, 'eval_accuracy': 0.922257392109936, 'eval_runtime': 2.2647, 'eval_samples_per_second': 676.015, 'eval_steps_per_second': 84.778, 'epoch': 24.0}
{'train_runtime': 757.6897, 'train_samples_per_second': 273.484, 'train_steps_per_second': 4.276, 'train_loss': 0.11204906873129032, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.112
  train_runtime            = 0:12:37.68
  train_samples            =       8634
  train_samples_per_second =    273.484
  train_steps_per_second   =      4.276
[{'loss': 0.4826, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.3492249846458435, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2841, 'eval_samples_per_second': 670.3, 'eval_steps_per_second': 84.061, 'epoch': 1.0, 'step': 135}, {'loss': 0.3311, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.3106369972229004, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2564, 'eval_samples_per_second': 678.526, 'eval_steps_per_second': 85.093, 'epoch': 2.0, 'step': 270}, {'loss': 0.3045, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.27727779746055603, 'eval_precision': 0.11280487804878049, 'eval_recall': 0.04218928164196123, 'eval_f1': 0.06141078838174274, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 2.2508, 'eval_samples_per_second': 680.216, 'eval_steps_per_second': 85.305, 'epoch': 3.0, 'step': 405}, {'loss': 0.2597, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.25869375467300415, 'eval_precision': 0.22033898305084745, 'eval_recall': 0.029646522234891677, 'eval_f1': 0.05226130653266332, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.2529, 'eval_samples_per_second': 679.58, 'eval_steps_per_second': 85.225, 'epoch': 4.0, 'step': 540}, {'loss': 0.2224, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2667371928691864, 'eval_precision': 0.17738359201773837, 'eval_recall': 0.09122006841505131, 'eval_f1': 0.12048192771084336, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2588, 'eval_samples_per_second': 677.786, 'eval_steps_per_second': 85.0, 'epoch': 5.0, 'step': 675}, {'loss': 0.1895, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.29849666357040405, 'eval_precision': 0.17889908256880735, 'eval_recall': 0.13340935005701254, 'eval_f1': 0.15284128020901372, 'eval_accuracy': 0.9306724310970431, 'eval_runtime': 2.2574, 'eval_samples_per_second': 678.227, 'eval_steps_per_second': 85.055, 'epoch': 6.0, 'step': 810}, {'loss': 0.1619, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3024095594882965, 'eval_precision': 0.1674259681093394, 'eval_recall': 0.1676168757126568, 'eval_f1': 0.1675213675213675, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2594, 'eval_samples_per_second': 677.618, 'eval_steps_per_second': 84.979, 'epoch': 7.0, 'step': 945}, {'loss': 0.1381, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3164350688457489, 'eval_precision': 0.2005813953488372, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.21686746987951805, 'eval_accuracy': 0.9251138732339999, 'eval_runtime': 2.2588, 'eval_samples_per_second': 677.791, 'eval_steps_per_second': 85.001, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1171, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.337080717086792, 'eval_precision': 0.19784172661870503, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.19286966686148452, 'eval_accuracy': 0.9273141357214545, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.483, 'eval_steps_per_second': 85.087, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0959, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.34785932302474976, 'eval_precision': 0.1919406150583245, 'eval_recall': 0.2063854047890536, 'eval_f1': 0.19890109890109892, 'eval_accuracy': 0.9241488458272215, 'eval_runtime': 2.2642, 'eval_samples_per_second': 676.188, 'eval_steps_per_second': 84.8, 'epoch': 10.0, 'step': 1350}, {'loss': 0.078, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.36767449975013733, 'eval_precision': 0.2267515923566879, 'eval_recall': 0.20296465222348917, 'eval_f1': 0.2141997593261131, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2607, 'eval_samples_per_second': 677.224, 'eval_steps_per_second': 84.929, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0665, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3804517686367035, 'eval_precision': 0.20798319327731093, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.21651175505740844, 'eval_accuracy': 0.9239558403458659, 'eval_runtime': 2.2524, 'eval_samples_per_second': 679.718, 'eval_steps_per_second': 85.242, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0498, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4001428186893463, 'eval_precision': 0.20813623462630085, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2275077559462254, 'eval_accuracy': 0.9200185285262101, 'eval_runtime': 2.2577, 'eval_samples_per_second': 678.109, 'eval_steps_per_second': 85.041, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0404, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4064544439315796, 'eval_precision': 0.21770091556459817, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.23010752688172043, 'eval_accuracy': 0.9244576545973906, 'eval_runtime': 2.2552, 'eval_samples_per_second': 678.865, 'eval_steps_per_second': 85.135, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0323, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.42402100563049316, 'eval_precision': 0.21252796420581654, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.21456804065499718, 'eval_accuracy': 0.925731490774338, 'eval_runtime': 2.2574, 'eval_samples_per_second': 678.213, 'eval_steps_per_second': 85.053, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0245, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4401872158050537, 'eval_precision': 0.20123839009287925, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.2112676056338028, 'eval_accuracy': 0.9232996217092565, 'eval_runtime': 2.2549, 'eval_samples_per_second': 678.957, 'eval_steps_per_second': 85.147, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0203, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.447745144367218, 'eval_precision': 0.2, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.2090364725095264, 'eval_accuracy': 0.9232996217092565, 'eval_runtime': 2.2528, 'eval_samples_per_second': 679.59, 'eval_steps_per_second': 85.226, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0168, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4544747769832611, 'eval_precision': 0.20257234726688103, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.2088397790055249, 'eval_accuracy': 0.9248822666563731, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.49, 'eval_steps_per_second': 85.088, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0134, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4710334539413452, 'eval_precision': 0.2098635886673662, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.21857923497267762, 'eval_accuracy': 0.9243032502123061, 'eval_runtime': 2.2442, 'eval_samples_per_second': 682.218, 'eval_steps_per_second': 85.556, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0114, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.46958157420158386, 'eval_precision': 0.22184300341296928, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.22209567198177677, 'eval_accuracy': 0.9260789006407782, 'eval_runtime': 2.2581, 'eval_samples_per_second': 677.99, 'eval_steps_per_second': 85.026, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0101, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4752669334411621, 'eval_precision': 0.21832579185520362, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.21919363997728564, 'eval_accuracy': 0.9252296765228133, 'eval_runtime': 2.2562, 'eval_samples_per_second': 678.566, 'eval_steps_per_second': 85.098, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0084, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.48798826336860657, 'eval_precision': 0.19579751671442217, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2130977130977131, 'eval_accuracy': 0.9206361460665483, 'eval_runtime': 2.2536, 'eval_samples_per_second': 679.349, 'eval_steps_per_second': 85.196, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0073, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.49072617292404175, 'eval_precision': 0.20588235294117646, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.21432476763258612, 'eval_accuracy': 0.9224889986875627, 'eval_runtime': 2.259, 'eval_samples_per_second': 677.743, 'eval_steps_per_second': 84.994, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0072, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4909759759902954, 'eval_precision': 0.2014388489208633, 'eval_recall': 0.2234891676168757, 'eval_f1': 0.21189189189189186, 'eval_accuracy': 0.922257392109936, 'eval_runtime': 2.2647, 'eval_samples_per_second': 676.015, 'eval_steps_per_second': 84.778, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 757.6897, 'train_samples_per_second': 273.484, 'train_steps_per_second': 4.276, 'total_flos': 8064312308929644.0, 'train_loss': 0.11204906873129032, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9343
  predict_f1                 =     0.0443
  predict_loss               =     0.2673
  predict_precision          =     0.2308
  predict_recall             =     0.0245
  predict_runtime            = 0:00:01.88
  predict_samples_per_second =    673.383
  predict_steps_per_second   =     84.173
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_30.json completed. F1: 0.04428044280442804
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_03.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7239.31 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7627.28 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7395.61 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7422.31 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7443.45 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7563.05 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 6633.08 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6977.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7189.87 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7717.04 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7339.15 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7366.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7174.80 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2975, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2135918289422989, 'eval_precision': 0.2654320987654321, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.2255737704918033, 'eval_accuracy': 0.9394734810468617, 'eval_runtime': 2.2618, 'eval_samples_per_second': 676.896, 'eval_steps_per_second': 84.888, 'epoch': 1.0}
{'loss': 0.1778, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.2226683348417282, 'eval_precision': 0.2696476964769648, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.24643962848297216, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.734, 'eval_steps_per_second': 85.997, 'epoch': 2.0}
{'loss': 0.1013, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.2436308115720749, 'eval_precision': 0.2557651991614256, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2665210267613326, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.2394, 'eval_samples_per_second': 683.651, 'eval_steps_per_second': 85.736, 'epoch': 3.0}
{'loss': 0.0592, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.29586878418922424, 'eval_precision': 0.2561904761904762, 'eval_recall': 0.30672748004561, 'eval_f1': 0.27919045147898286, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.2366, 'eval_samples_per_second': 684.53, 'eval_steps_per_second': 85.846, 'epoch': 4.0}
{'loss': 0.0325, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.3395961821079254, 'eval_precision': 0.27033218785796104, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.26971428571428574, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.2276, 'eval_samples_per_second': 687.282, 'eval_steps_per_second': 86.191, 'epoch': 5.0}
{'loss': 0.0192, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.38727593421936035, 'eval_precision': 0.2293103448275862, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2611683848797251, 'eval_accuracy': 0.9245734578862039, 'eval_runtime': 2.2362, 'eval_samples_per_second': 684.646, 'eval_steps_per_second': 85.86, 'epoch': 6.0}
{'loss': 0.0112, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.4223804175853729, 'eval_precision': 0.26977248104008666, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.27666666666666667, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.2282, 'eval_samples_per_second': 687.091, 'eval_steps_per_second': 86.167, 'epoch': 7.0}
{'loss': 0.0088, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.42335787415504456, 'eval_precision': 0.2661122661122661, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.27841218053289835, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2347, 'eval_samples_per_second': 685.114, 'eval_steps_per_second': 85.919, 'epoch': 8.0}
{'loss': 0.0049, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.436487078666687, 'eval_precision': 0.24856046065259116, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2699322563835331, 'eval_accuracy': 0.9297846058828071, 'eval_runtime': 2.2339, 'eval_samples_per_second': 685.342, 'eval_steps_per_second': 85.948, 'epoch': 9.0}
{'loss': 0.0033, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4442974328994751, 'eval_precision': 0.28295454545454546, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.28343767785998863, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.2359, 'eval_samples_per_second': 684.73, 'eval_steps_per_second': 85.871, 'epoch': 10.0}
{'loss': 0.0028, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4812898337841034, 'eval_precision': 0.24245283018867925, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.26535880227155395, 'eval_accuracy': 0.928047556550606, 'eval_runtime': 2.308, 'eval_samples_per_second': 663.336, 'eval_steps_per_second': 83.188, 'epoch': 11.0}
{'loss': 0.0019, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.48711156845092773, 'eval_precision': 0.2702702702702703, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28276237085372485, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2437, 'eval_samples_per_second': 682.363, 'eval_steps_per_second': 85.574, 'epoch': 12.0}
{'loss': 0.0015, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.49256631731987, 'eval_precision': 0.2775229357798165, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2767295597484276, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2376, 'eval_samples_per_second': 684.207, 'eval_steps_per_second': 85.805, 'epoch': 13.0}
{'loss': 0.0018, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4930136501789093, 'eval_precision': 0.27680525164113784, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2825237297599107, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.2415, 'eval_samples_per_second': 683.036, 'eval_steps_per_second': 85.658, 'epoch': 14.0}
{'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5040924549102783, 'eval_precision': 0.27534562211981567, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.27392550143266475, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.735, 'eval_steps_per_second': 85.997, 'epoch': 15.0}
{'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.49467939138412476, 'eval_precision': 0.29189789123196447, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2958380202474691, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.2368, 'eval_samples_per_second': 684.458, 'eval_steps_per_second': 85.837, 'epoch': 16.0}
{'loss': 0.0007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.516566812992096, 'eval_precision': 0.290950744558992, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2902857142857143, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.464, 'eval_steps_per_second': 85.963, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5234975218772888, 'eval_precision': 0.271484375, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2924776433456076, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.2386, 'eval_samples_per_second': 683.9, 'eval_steps_per_second': 85.767, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5284262895584106, 'eval_precision': 0.28936170212765955, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.2993946064942213, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 2.2398, 'eval_samples_per_second': 683.555, 'eval_steps_per_second': 85.723, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5225587487220764, 'eval_precision': 0.296127562642369, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2962962962962963, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.3162, 'eval_samples_per_second': 660.996, 'eval_steps_per_second': 82.894, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5240892767906189, 'eval_precision': 0.2884822389666308, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.29678848283499454, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2277, 'eval_samples_per_second': 687.255, 'eval_steps_per_second': 86.187, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5320606827735901, 'eval_precision': 0.29520697167755994, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.30194986072423396, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.24, 'eval_samples_per_second': 683.48, 'eval_steps_per_second': 85.714, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5331535935401917, 'eval_precision': 0.29608938547486036, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29909706546275394, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.2363, 'eval_samples_per_second': 684.604, 'eval_steps_per_second': 85.855, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5344668030738831, 'eval_precision': 0.3002136752136752, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30998345284059564, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.2358, 'eval_samples_per_second': 684.781, 'eval_steps_per_second': 85.877, 'epoch': 24.0}
{'train_runtime': 742.6238, 'train_samples_per_second': 279.032, 'train_steps_per_second': 6.981, 'train_loss': 0.030368471341380092, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0304
  train_runtime            = 0:12:22.62
  train_samples            =       8634
  train_samples_per_second =    279.032
  train_steps_per_second   =      6.981
[{'loss': 0.2975, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2135918289422989, 'eval_precision': 0.2654320987654321, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.2255737704918033, 'eval_accuracy': 0.9394734810468617, 'eval_runtime': 2.2618, 'eval_samples_per_second': 676.896, 'eval_steps_per_second': 84.888, 'epoch': 1.0, 'step': 216}, {'loss': 0.1778, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.2226683348417282, 'eval_precision': 0.2696476964769648, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.24643962848297216, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.734, 'eval_steps_per_second': 85.997, 'epoch': 2.0, 'step': 432}, {'loss': 0.1013, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.2436308115720749, 'eval_precision': 0.2557651991614256, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2665210267613326, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.2394, 'eval_samples_per_second': 683.651, 'eval_steps_per_second': 85.736, 'epoch': 3.0, 'step': 648}, {'loss': 0.0592, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.29586878418922424, 'eval_precision': 0.2561904761904762, 'eval_recall': 0.30672748004561, 'eval_f1': 0.27919045147898286, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.2366, 'eval_samples_per_second': 684.53, 'eval_steps_per_second': 85.846, 'epoch': 4.0, 'step': 864}, {'loss': 0.0325, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3395961821079254, 'eval_precision': 0.27033218785796104, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.26971428571428574, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.2276, 'eval_samples_per_second': 687.282, 'eval_steps_per_second': 86.191, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0192, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.38727593421936035, 'eval_precision': 0.2293103448275862, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2611683848797251, 'eval_accuracy': 0.9245734578862039, 'eval_runtime': 2.2362, 'eval_samples_per_second': 684.646, 'eval_steps_per_second': 85.86, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0112, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.4223804175853729, 'eval_precision': 0.26977248104008666, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.27666666666666667, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.2282, 'eval_samples_per_second': 687.091, 'eval_steps_per_second': 86.167, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0088, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.42335787415504456, 'eval_precision': 0.2661122661122661, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.27841218053289835, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2347, 'eval_samples_per_second': 685.114, 'eval_steps_per_second': 85.919, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0049, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.436487078666687, 'eval_precision': 0.24856046065259116, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2699322563835331, 'eval_accuracy': 0.9297846058828071, 'eval_runtime': 2.2339, 'eval_samples_per_second': 685.342, 'eval_steps_per_second': 85.948, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0033, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.4442974328994751, 'eval_precision': 0.28295454545454546, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.28343767785998863, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.2359, 'eval_samples_per_second': 684.73, 'eval_steps_per_second': 85.871, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0028, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4812898337841034, 'eval_precision': 0.24245283018867925, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.26535880227155395, 'eval_accuracy': 0.928047556550606, 'eval_runtime': 2.308, 'eval_samples_per_second': 663.336, 'eval_steps_per_second': 83.188, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0019, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.48711156845092773, 'eval_precision': 0.2702702702702703, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28276237085372485, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2437, 'eval_samples_per_second': 682.363, 'eval_steps_per_second': 85.574, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0015, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.49256631731987, 'eval_precision': 0.2775229357798165, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2767295597484276, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2376, 'eval_samples_per_second': 684.207, 'eval_steps_per_second': 85.805, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0018, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4930136501789093, 'eval_precision': 0.27680525164113784, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2825237297599107, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.2415, 'eval_samples_per_second': 683.036, 'eval_steps_per_second': 85.658, 'epoch': 14.0, 'step': 3024}, {'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.5040924549102783, 'eval_precision': 0.27534562211981567, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.27392550143266475, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.735, 'eval_steps_per_second': 85.997, 'epoch': 15.0, 'step': 3240}, {'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.49467939138412476, 'eval_precision': 0.29189789123196447, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2958380202474691, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.2368, 'eval_samples_per_second': 684.458, 'eval_steps_per_second': 85.837, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.516566812992096, 'eval_precision': 0.290950744558992, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2902857142857143, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.464, 'eval_steps_per_second': 85.963, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5234975218772888, 'eval_precision': 0.271484375, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2924776433456076, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.2386, 'eval_samples_per_second': 683.9, 'eval_steps_per_second': 85.767, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5284262895584106, 'eval_precision': 0.28936170212765955, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.2993946064942213, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 2.2398, 'eval_samples_per_second': 683.555, 'eval_steps_per_second': 85.723, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5225587487220764, 'eval_precision': 0.296127562642369, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2962962962962963, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.3162, 'eval_samples_per_second': 660.996, 'eval_steps_per_second': 82.894, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5240892767906189, 'eval_precision': 0.2884822389666308, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.29678848283499454, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2277, 'eval_samples_per_second': 687.255, 'eval_steps_per_second': 86.187, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5320606827735901, 'eval_precision': 0.29520697167755994, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.30194986072423396, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.24, 'eval_samples_per_second': 683.48, 'eval_steps_per_second': 85.714, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5331535935401917, 'eval_precision': 0.29608938547486036, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29909706546275394, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.2363, 'eval_samples_per_second': 684.604, 'eval_steps_per_second': 85.855, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5344668030738831, 'eval_precision': 0.3002136752136752, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30998345284059564, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.2358, 'eval_samples_per_second': 684.781, 'eval_steps_per_second': 85.877, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 742.6238, 'train_samples_per_second': 279.032, 'train_steps_per_second': 6.981, 'total_flos': 6811384717195656.0, 'train_loss': 0.030368471341380092, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9376
  predict_f1                 =     0.1852
  predict_loss               =     0.2252
  predict_precision          =     0.2268
  predict_recall             =     0.1565
  predict_runtime            = 0:00:01.87
  predict_samples_per_second =    680.204
  predict_steps_per_second   =     85.025
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_03.json completed. F1: 0.18518518518518517
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_05.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6160.53 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7006.96 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6987.74 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7094.36 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7184.60 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7325.91 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6415.67 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6752.41 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6868.39 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7574.83 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7232.83 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7236.49 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7069.28 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2812, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1982533037662506, 'eval_precision': 0.31095890410958904, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.28251400124455506, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 4.6817, 'eval_samples_per_second': 327.021, 'eval_steps_per_second': 41.011, 'epoch': 1.0}
{'loss': 0.1768, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.20636729896068573, 'eval_precision': 0.2986348122866894, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.23923444976076555, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.737, 'eval_steps_per_second': 41.226, 'epoch': 2.0}
{'loss': 0.1123, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.20590893924236298, 'eval_precision': 0.2955665024630542, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.31712473572938693, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.354, 'eval_steps_per_second': 41.178, 'epoch': 3.0}
{'loss': 0.0748, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2656359076499939, 'eval_precision': 0.3268765133171913, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31708749266001174, 'eval_accuracy': 0.9411333281865205, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.756, 'eval_steps_per_second': 41.229, 'epoch': 4.0}
{'loss': 0.0441, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2843473255634308, 'eval_precision': 0.2932745314222712, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2982062780269058, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.462, 'eval_steps_per_second': 41.192, 'epoch': 5.0}
{'loss': 0.0268, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3367152810096741, 'eval_precision': 0.306640625, 'eval_recall': 0.3580387685290764, 'eval_f1': 0.33035244608100994, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 6.0}
{'loss': 0.016, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.37093642354011536, 'eval_precision': 0.31539424280350437, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.30071599045346065, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6623, 'eval_samples_per_second': 328.382, 'eval_steps_per_second': 41.182, 'epoch': 7.0}
{'loss': 0.0109, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3773762583732605, 'eval_precision': 0.29852320675105487, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3101369863013699, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.911, 'eval_steps_per_second': 41.248, 'epoch': 8.0}
{'loss': 0.0067, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.39146560430526733, 'eval_precision': 0.3071748878923767, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30977953646127754, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.206, 'eval_steps_per_second': 41.285, 'epoch': 9.0}
{'loss': 0.0065, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.41864535212516785, 'eval_precision': 0.2835820895522388, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30286928799149837, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.643, 'eval_steps_per_second': 41.215, 'epoch': 10.0}
{'loss': 0.0036, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.43677422404289246, 'eval_precision': 0.30973451327433627, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31443009545199324, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.579, 'eval_steps_per_second': 41.206, 'epoch': 11.0}
{'loss': 0.0025, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4463834762573242, 'eval_precision': 0.2875675675675676, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2952275249722531, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.648, 'eval_steps_per_second': 41.215, 'epoch': 12.0}
{'loss': 0.003, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.44084596633911133, 'eval_precision': 0.30694275274056027, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.29681978798586567, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.657, 'eval_samples_per_second': 328.749, 'eval_steps_per_second': 41.228, 'epoch': 13.0}
{'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.45734843611717224, 'eval_precision': 0.32195676905574516, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3223234624145786, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 4.6629, 'eval_samples_per_second': 328.34, 'eval_steps_per_second': 41.176, 'epoch': 14.0}
{'loss': 0.0014, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.47046902775764465, 'eval_precision': 0.3124274099883856, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30955120828538546, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6701, 'eval_samples_per_second': 327.828, 'eval_steps_per_second': 41.112, 'epoch': 15.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.49349743127822876, 'eval_precision': 0.31535756154747946, 'eval_recall': 0.30672748004561, 'eval_f1': 0.3109826589595376, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.711, 'eval_steps_per_second': 41.223, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4895573556423187, 'eval_precision': 0.30386740331491713, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3086419753086419, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.568, 'eval_steps_per_second': 41.205, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5039635896682739, 'eval_precision': 0.3169456066945607, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3306055646481178, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.788, 'eval_steps_per_second': 41.233, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.503619372844696, 'eval_precision': 0.33533653846153844, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32650672908133416, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.6555, 'eval_samples_per_second': 328.86, 'eval_steps_per_second': 41.242, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5105925798416138, 'eval_precision': 0.31780167264038234, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.31038506417736295, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6577, 'eval_samples_per_second': 328.704, 'eval_steps_per_second': 41.222, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5099402666091919, 'eval_precision': 0.3313253012048193, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.32220269478617464, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6617, 'eval_samples_per_second': 328.42, 'eval_steps_per_second': 41.187, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.514768660068512, 'eval_precision': 0.3242009132420091, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3240159726183685, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.41, 'eval_steps_per_second': 41.185, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5107656121253967, 'eval_precision': 0.3188888888888889, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3230163196398424, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.115, 'eval_steps_per_second': 41.274, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5127866864204407, 'eval_precision': 0.32222222222222224, 'eval_recall': 0.330672748004561, 'eval_f1': 0.32639279684862127, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.312, 'eval_steps_per_second': 41.173, 'epoch': 24.0}
{'train_runtime': 2104.3268, 'train_samples_per_second': 98.471, 'train_steps_per_second': 2.463, 'train_loss': 0.03221645905495403, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0322
  train_runtime            = 0:35:04.32
  train_samples            =       8634
  train_samples_per_second =     98.471
  train_steps_per_second   =      2.463
[{'loss': 0.2812, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.1982533037662506, 'eval_precision': 0.31095890410958904, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.28251400124455506, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 4.6817, 'eval_samples_per_second': 327.021, 'eval_steps_per_second': 41.011, 'epoch': 1.0, 'step': 216}, {'loss': 0.1768, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.20636729896068573, 'eval_precision': 0.2986348122866894, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.23923444976076555, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.737, 'eval_steps_per_second': 41.226, 'epoch': 2.0, 'step': 432}, {'loss': 0.1123, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.20590893924236298, 'eval_precision': 0.2955665024630542, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.31712473572938693, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.354, 'eval_steps_per_second': 41.178, 'epoch': 3.0, 'step': 648}, {'loss': 0.0748, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2656359076499939, 'eval_precision': 0.3268765133171913, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31708749266001174, 'eval_accuracy': 0.9411333281865205, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.756, 'eval_steps_per_second': 41.229, 'epoch': 4.0, 'step': 864}, {'loss': 0.0441, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2843473255634308, 'eval_precision': 0.2932745314222712, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2982062780269058, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.462, 'eval_steps_per_second': 41.192, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0268, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3367152810096741, 'eval_precision': 0.306640625, 'eval_recall': 0.3580387685290764, 'eval_f1': 0.33035244608100994, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 6.0, 'step': 1296}, {'loss': 0.016, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.37093642354011536, 'eval_precision': 0.31539424280350437, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.30071599045346065, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6623, 'eval_samples_per_second': 328.382, 'eval_steps_per_second': 41.182, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0109, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3773762583732605, 'eval_precision': 0.29852320675105487, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3101369863013699, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.911, 'eval_steps_per_second': 41.248, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0067, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.39146560430526733, 'eval_precision': 0.3071748878923767, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30977953646127754, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.206, 'eval_steps_per_second': 41.285, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0065, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.41864535212516785, 'eval_precision': 0.2835820895522388, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30286928799149837, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.643, 'eval_steps_per_second': 41.215, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0036, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.43677422404289246, 'eval_precision': 0.30973451327433627, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31443009545199324, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.579, 'eval_steps_per_second': 41.206, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0025, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.4463834762573242, 'eval_precision': 0.2875675675675676, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2952275249722531, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.648, 'eval_steps_per_second': 41.215, 'epoch': 12.0, 'step': 2592}, {'loss': 0.003, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.44084596633911133, 'eval_precision': 0.30694275274056027, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.29681978798586567, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.657, 'eval_samples_per_second': 328.749, 'eval_steps_per_second': 41.228, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.45734843611717224, 'eval_precision': 0.32195676905574516, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3223234624145786, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 4.6629, 'eval_samples_per_second': 328.34, 'eval_steps_per_second': 41.176, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0014, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.47046902775764465, 'eval_precision': 0.3124274099883856, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30955120828538546, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6701, 'eval_samples_per_second': 327.828, 'eval_steps_per_second': 41.112, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.49349743127822876, 'eval_precision': 0.31535756154747946, 'eval_recall': 0.30672748004561, 'eval_f1': 0.3109826589595376, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.711, 'eval_steps_per_second': 41.223, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4895573556423187, 'eval_precision': 0.30386740331491713, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3086419753086419, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.568, 'eval_steps_per_second': 41.205, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5039635896682739, 'eval_precision': 0.3169456066945607, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3306055646481178, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.788, 'eval_steps_per_second': 41.233, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.503619372844696, 'eval_precision': 0.33533653846153844, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32650672908133416, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.6555, 'eval_samples_per_second': 328.86, 'eval_steps_per_second': 41.242, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5105925798416138, 'eval_precision': 0.31780167264038234, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.31038506417736295, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6577, 'eval_samples_per_second': 328.704, 'eval_steps_per_second': 41.222, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5099402666091919, 'eval_precision': 0.3313253012048193, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.32220269478617464, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6617, 'eval_samples_per_second': 328.42, 'eval_steps_per_second': 41.187, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.514768660068512, 'eval_precision': 0.3242009132420091, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3240159726183685, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.41, 'eval_steps_per_second': 41.185, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5107656121253967, 'eval_precision': 0.3188888888888889, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3230163196398424, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.115, 'eval_steps_per_second': 41.274, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5127866864204407, 'eval_precision': 0.32222222222222224, 'eval_recall': 0.330672748004561, 'eval_f1': 0.32639279684862127, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.312, 'eval_steps_per_second': 41.173, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2104.3268, 'train_samples_per_second': 98.471, 'train_steps_per_second': 2.463, 'total_flos': 2.388369125393575e+16, 'train_loss': 0.03221645905495403, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9399
  predict_f1                 =     0.2448
  predict_loss               =     0.2129
  predict_precision          =     0.2692
  predict_recall             =     0.2245
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.754
  predict_steps_per_second   =     40.594
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_05.json completed. F1: 0.24480712166172108
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_22.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_22.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6975.80 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7237.62 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7013.08 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7050.58 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7084.62 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7201.44 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7357.18 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7408.79 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6880.32 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7443.82 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7093.07 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7083.80 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6942.84 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0173, 'eval_samples_per_second': 507.41, 'eval_steps_per_second': 63.633, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9932, 'eval_samples_per_second': 511.501, 'eval_steps_per_second': 64.146, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9934, 'eval_samples_per_second': 511.46, 'eval_steps_per_second': 64.141, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.344, 'eval_steps_per_second': 64.628, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9737, 'eval_samples_per_second': 514.839, 'eval_steps_per_second': 64.565, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.993, 'eval_samples_per_second': 511.519, 'eval_steps_per_second': 64.149, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9945, 'eval_samples_per_second': 511.266, 'eval_steps_per_second': 64.117, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.4401, 'eval_samples_per_second': 445.049, 'eval_steps_per_second': 55.813, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9654, 'eval_samples_per_second': 516.293, 'eval_steps_per_second': 64.747, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.058, 'eval_samples_per_second': 500.648, 'eval_steps_per_second': 62.785, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.747, 'eval_steps_per_second': 64.428, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.97, 'eval_samples_per_second': 515.491, 'eval_steps_per_second': 64.647, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.982, 'eval_samples_per_second': 513.407, 'eval_steps_per_second': 64.385, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9704, 'eval_samples_per_second': 515.421, 'eval_steps_per_second': 64.638, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.966, 'eval_samples_per_second': 516.175, 'eval_steps_per_second': 64.733, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.017, 'eval_steps_per_second': 64.838, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9853, 'eval_samples_per_second': 512.849, 'eval_steps_per_second': 64.316, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9658, 'eval_samples_per_second': 516.223, 'eval_steps_per_second': 64.739, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9796, 'eval_samples_per_second': 513.834, 'eval_steps_per_second': 64.439, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.978, 'eval_samples_per_second': 514.096, 'eval_steps_per_second': 64.472, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0435, 'eval_samples_per_second': 503.043, 'eval_steps_per_second': 63.086, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.78, 'eval_steps_per_second': 64.432, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9786, 'eval_samples_per_second': 514.001, 'eval_steps_per_second': 64.46, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.111, 'eval_steps_per_second': 64.85, 'epoch': 24.0}
{'train_runtime': 842.5109, 'train_samples_per_second': 245.951, 'train_steps_per_second': 3.846, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:02.51
  train_samples            =       8634
  train_samples_per_second =    245.951
  train_steps_per_second   =      3.846
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0173, 'eval_samples_per_second': 507.41, 'eval_steps_per_second': 63.633, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9932, 'eval_samples_per_second': 511.501, 'eval_steps_per_second': 64.146, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9934, 'eval_samples_per_second': 511.46, 'eval_steps_per_second': 64.141, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.344, 'eval_steps_per_second': 64.628, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9737, 'eval_samples_per_second': 514.839, 'eval_steps_per_second': 64.565, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.993, 'eval_samples_per_second': 511.519, 'eval_steps_per_second': 64.149, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9945, 'eval_samples_per_second': 511.266, 'eval_steps_per_second': 64.117, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.4401, 'eval_samples_per_second': 445.049, 'eval_steps_per_second': 55.813, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9654, 'eval_samples_per_second': 516.293, 'eval_steps_per_second': 64.747, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.058, 'eval_samples_per_second': 500.648, 'eval_steps_per_second': 62.785, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.747, 'eval_steps_per_second': 64.428, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.97, 'eval_samples_per_second': 515.491, 'eval_steps_per_second': 64.647, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.982, 'eval_samples_per_second': 513.407, 'eval_steps_per_second': 64.385, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9704, 'eval_samples_per_second': 515.421, 'eval_steps_per_second': 64.638, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.966, 'eval_samples_per_second': 516.175, 'eval_steps_per_second': 64.733, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.017, 'eval_steps_per_second': 64.838, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9853, 'eval_samples_per_second': 512.849, 'eval_steps_per_second': 64.316, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9658, 'eval_samples_per_second': 516.223, 'eval_steps_per_second': 64.739, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9796, 'eval_samples_per_second': 513.834, 'eval_steps_per_second': 64.439, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.978, 'eval_samples_per_second': 514.096, 'eval_steps_per_second': 64.472, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0435, 'eval_samples_per_second': 503.043, 'eval_steps_per_second': 63.086, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.78, 'eval_steps_per_second': 64.432, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9786, 'eval_samples_per_second': 514.001, 'eval_steps_per_second': 64.46, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.111, 'eval_steps_per_second': 64.85, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 842.5109, 'train_samples_per_second': 245.951, 'train_steps_per_second': 3.846, 'total_flos': 7642539766724940.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.48
  predict_samples_per_second =    511.106
  predict_steps_per_second   =     63.888
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_22.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_34.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6304.86 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6896.36 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6824.10 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6890.36 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6958.86 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7105.28 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7283.12 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6363.44 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6737.20 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7333.78 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6974.03 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6972.54 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6818.78 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_3_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8445, 'eval_samples_per_second': 261.955, 'eval_steps_per_second': 32.851, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7985, 'eval_samples_per_second': 264.036, 'eval_steps_per_second': 33.112, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7979, 'eval_samples_per_second': 264.061, 'eval_steps_per_second': 33.115, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7946, 'eval_samples_per_second': 264.209, 'eval_steps_per_second': 33.134, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7977, 'eval_samples_per_second': 264.07, 'eval_steps_per_second': 33.117, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7969, 'eval_samples_per_second': 264.105, 'eval_steps_per_second': 33.121, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7994, 'eval_samples_per_second': 263.994, 'eval_steps_per_second': 33.107, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7883, 'eval_samples_per_second': 264.499, 'eval_steps_per_second': 33.17, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8622, 'eval_samples_per_second': 261.164, 'eval_steps_per_second': 32.752, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8004, 'eval_samples_per_second': 263.946, 'eval_steps_per_second': 33.101, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7973, 'eval_samples_per_second': 264.089, 'eval_steps_per_second': 33.119, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7886, 'eval_samples_per_second': 264.483, 'eval_steps_per_second': 33.168, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7999, 'eval_samples_per_second': 263.969, 'eval_steps_per_second': 33.104, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7948, 'eval_samples_per_second': 264.204, 'eval_steps_per_second': 33.133, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7943, 'eval_samples_per_second': 264.225, 'eval_steps_per_second': 33.136, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.799, 'eval_samples_per_second': 264.013, 'eval_steps_per_second': 33.109, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7918, 'eval_samples_per_second': 264.338, 'eval_steps_per_second': 33.15, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7929, 'eval_samples_per_second': 264.29, 'eval_steps_per_second': 33.144, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7828, 'eval_samples_per_second': 264.751, 'eval_steps_per_second': 33.202, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7918, 'eval_samples_per_second': 264.339, 'eval_steps_per_second': 33.15, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7979, 'eval_samples_per_second': 264.063, 'eval_steps_per_second': 33.116, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8616, 'eval_samples_per_second': 261.192, 'eval_steps_per_second': 32.756, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7749, 'eval_samples_per_second': 265.111, 'eval_steps_per_second': 33.247, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7717, 'eval_samples_per_second': 265.262, 'eval_steps_per_second': 33.266, 'epoch': 24.0}
{'train_runtime': 2423.4553, 'train_samples_per_second': 85.504, 'train_steps_per_second': 1.337, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:23.45
  train_samples            =       8634
  train_samples_per_second =     85.504
  train_steps_per_second   =      1.337
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8445, 'eval_samples_per_second': 261.955, 'eval_steps_per_second': 32.851, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7985, 'eval_samples_per_second': 264.036, 'eval_steps_per_second': 33.112, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7979, 'eval_samples_per_second': 264.061, 'eval_steps_per_second': 33.115, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7946, 'eval_samples_per_second': 264.209, 'eval_steps_per_second': 33.134, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7977, 'eval_samples_per_second': 264.07, 'eval_steps_per_second': 33.117, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7969, 'eval_samples_per_second': 264.105, 'eval_steps_per_second': 33.121, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7994, 'eval_samples_per_second': 263.994, 'eval_steps_per_second': 33.107, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7883, 'eval_samples_per_second': 264.499, 'eval_steps_per_second': 33.17, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8622, 'eval_samples_per_second': 261.164, 'eval_steps_per_second': 32.752, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8004, 'eval_samples_per_second': 263.946, 'eval_steps_per_second': 33.101, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7973, 'eval_samples_per_second': 264.089, 'eval_steps_per_second': 33.119, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7886, 'eval_samples_per_second': 264.483, 'eval_steps_per_second': 33.168, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7999, 'eval_samples_per_second': 263.969, 'eval_steps_per_second': 33.104, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7948, 'eval_samples_per_second': 264.204, 'eval_steps_per_second': 33.133, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7943, 'eval_samples_per_second': 264.225, 'eval_steps_per_second': 33.136, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.799, 'eval_samples_per_second': 264.013, 'eval_steps_per_second': 33.109, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7918, 'eval_samples_per_second': 264.338, 'eval_steps_per_second': 33.15, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7929, 'eval_samples_per_second': 264.29, 'eval_steps_per_second': 33.144, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7828, 'eval_samples_per_second': 264.751, 'eval_steps_per_second': 33.202, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7918, 'eval_samples_per_second': 264.339, 'eval_steps_per_second': 33.15, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7979, 'eval_samples_per_second': 264.063, 'eval_steps_per_second': 33.116, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8616, 'eval_samples_per_second': 261.192, 'eval_steps_per_second': 32.756, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7749, 'eval_samples_per_second': 265.111, 'eval_steps_per_second': 33.247, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7717, 'eval_samples_per_second': 265.262, 'eval_steps_per_second': 33.266, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2423.4553, 'train_samples_per_second': 85.504, 'train_steps_per_second': 1.337, 'total_flos': 2.705848648987374e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.84
  predict_samples_per_second =    262.541
  predict_steps_per_second   =     32.818
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_34.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_25.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6052.28 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6855.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6824.67 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6929.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7016.43 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7162.41 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6344.02 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6665.40 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6767.82 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7372.33 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7018.52 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7066.67 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6921.72 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3279, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2279827892780304, 'eval_precision': 0.2178988326848249, 'eval_recall': 0.19156214367160776, 'eval_f1': 0.2038834951456311, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 2.4155, 'eval_samples_per_second': 633.815, 'eval_steps_per_second': 79.486, 'epoch': 1.0}
{'loss': 0.2052, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.20944462716579437, 'eval_precision': 0.2614980289093298, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.24297924297924298, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.288, 'eval_steps_per_second': 81.677, 'epoch': 2.0}
{'loss': 0.1435, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.2255685180425644, 'eval_precision': 0.24311023622047245, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26096143687268886, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.549, 'eval_steps_per_second': 81.584, 'epoch': 3.0}
{'loss': 0.1056, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.26018449664115906, 'eval_precision': 0.26360225140712945, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.28924343798250124, 'eval_accuracy': 0.9336833166061916, 'eval_runtime': 2.3535, 'eval_samples_per_second': 650.512, 'eval_steps_per_second': 81.58, 'epoch': 4.0}
{'loss': 0.0764, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.27668002247810364, 'eval_precision': 0.25236593059936907, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26258205689277897, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.078, 'eval_steps_per_second': 81.776, 'epoch': 5.0}
{'loss': 0.057, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3116791248321533, 'eval_precision': 0.23408071748878923, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2620481927710843, 'eval_accuracy': 0.9299776113641628, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.62, 'eval_steps_per_second': 81.718, 'epoch': 6.0}
{'loss': 0.0406, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3303194046020508, 'eval_precision': 0.28798411122144985, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3078556263269639, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.042, 'eval_steps_per_second': 81.771, 'epoch': 7.0}
{'loss': 0.0291, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3463776707649231, 'eval_precision': 0.2721649484536082, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28586897671900374, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3469, 'eval_samples_per_second': 652.346, 'eval_steps_per_second': 81.809, 'epoch': 8.0}
{'loss': 0.021, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3672419488430023, 'eval_precision': 0.2767094017094017, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 2.3445, 'eval_samples_per_second': 653.021, 'eval_steps_per_second': 81.894, 'epoch': 9.0}
{'loss': 0.0157, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3837720453739166, 'eval_precision': 0.27150259067357513, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28447339847991315, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3519, 'eval_samples_per_second': 650.951, 'eval_steps_per_second': 81.635, 'epoch': 10.0}
{'loss': 0.0123, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3953678011894226, 'eval_precision': 0.2749731471535983, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.28318584070796454, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3513, 'eval_samples_per_second': 651.13, 'eval_steps_per_second': 81.657, 'epoch': 11.0}
{'loss': 0.0079, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.43089789152145386, 'eval_precision': 0.2942453854505972, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3014460511679644, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.036, 'eval_steps_per_second': 81.771, 'epoch': 12.0}
{'loss': 0.0073, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4237912893295288, 'eval_precision': 0.2768304914744233, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2945570971184632, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.876, 'eval_steps_per_second': 81.5, 'epoch': 13.0}
{'loss': 0.0057, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.44030800461769104, 'eval_precision': 0.3034090909090909, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.30392714854866254, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.401, 'eval_steps_per_second': 81.691, 'epoch': 14.0}
{'loss': 0.0039, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.45599326491355896, 'eval_precision': 0.2862862862862863, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.30490405117270786, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3456, 'eval_samples_per_second': 652.711, 'eval_steps_per_second': 81.855, 'epoch': 15.0}
{'loss': 0.0032, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.45634299516677856, 'eval_precision': 0.2966194111232279, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3032329988851728, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.648, 'eval_samples_per_second': 578.17, 'eval_steps_per_second': 72.507, 'epoch': 16.0}
{'loss': 0.0024, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.46889615058898926, 'eval_precision': 0.29245283018867924, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3047515019115237, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.804, 'eval_steps_per_second': 81.616, 'epoch': 17.0}
{'loss': 0.0024, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.463355153799057, 'eval_precision': 0.2813852813852814, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28872848417545816, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.999, 'eval_steps_per_second': 81.766, 'epoch': 18.0}
{'loss': 0.002, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4683876037597656, 'eval_precision': 0.29275970619097585, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30491803278688523, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.785, 'eval_steps_per_second': 81.614, 'epoch': 19.0}
{'loss': 0.0017, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4746394455432892, 'eval_precision': 0.27631578947368424, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.29276139410187674, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 2.3412, 'eval_samples_per_second': 653.936, 'eval_steps_per_second': 82.009, 'epoch': 20.0}
{'loss': 0.0013, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4769289493560791, 'eval_precision': 0.28944504896626766, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2962138084632517, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.3393, 'eval_samples_per_second': 654.481, 'eval_steps_per_second': 82.077, 'epoch': 21.0}
{'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4808708727359772, 'eval_precision': 0.2874058127018299, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2956810631229236, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3458, 'eval_samples_per_second': 652.645, 'eval_steps_per_second': 81.847, 'epoch': 22.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4815284013748169, 'eval_precision': 0.2942453854505972, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3014460511679644, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3493, 'eval_samples_per_second': 651.685, 'eval_steps_per_second': 81.727, 'epoch': 23.0}
{'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.48222070932388306, 'eval_precision': 0.29379760609357997, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30066815144766146, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.754, 'eval_steps_per_second': 81.735, 'epoch': 24.0}
{'train_runtime': 835.4134, 'train_samples_per_second': 248.04, 'train_steps_per_second': 3.878, 'train_loss': 0.044791680080011304, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0448
  train_runtime            = 0:13:55.41
  train_samples            =       8634
  train_samples_per_second =     248.04
  train_steps_per_second   =      3.878
[{'loss': 0.3279, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.2279827892780304, 'eval_precision': 0.2178988326848249, 'eval_recall': 0.19156214367160776, 'eval_f1': 0.2038834951456311, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 2.4155, 'eval_samples_per_second': 633.815, 'eval_steps_per_second': 79.486, 'epoch': 1.0, 'step': 135}, {'loss': 0.2052, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20944462716579437, 'eval_precision': 0.2614980289093298, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.24297924297924298, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.288, 'eval_steps_per_second': 81.677, 'epoch': 2.0, 'step': 270}, {'loss': 0.1435, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2255685180425644, 'eval_precision': 0.24311023622047245, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26096143687268886, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.549, 'eval_steps_per_second': 81.584, 'epoch': 3.0, 'step': 405}, {'loss': 0.1056, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.26018449664115906, 'eval_precision': 0.26360225140712945, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.28924343798250124, 'eval_accuracy': 0.9336833166061916, 'eval_runtime': 2.3535, 'eval_samples_per_second': 650.512, 'eval_steps_per_second': 81.58, 'epoch': 4.0, 'step': 540}, {'loss': 0.0764, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27668002247810364, 'eval_precision': 0.25236593059936907, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26258205689277897, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.078, 'eval_steps_per_second': 81.776, 'epoch': 5.0, 'step': 675}, {'loss': 0.057, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3116791248321533, 'eval_precision': 0.23408071748878923, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2620481927710843, 'eval_accuracy': 0.9299776113641628, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.62, 'eval_steps_per_second': 81.718, 'epoch': 6.0, 'step': 810}, {'loss': 0.0406, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3303194046020508, 'eval_precision': 0.28798411122144985, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3078556263269639, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.042, 'eval_steps_per_second': 81.771, 'epoch': 7.0, 'step': 945}, {'loss': 0.0291, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3463776707649231, 'eval_precision': 0.2721649484536082, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28586897671900374, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3469, 'eval_samples_per_second': 652.346, 'eval_steps_per_second': 81.809, 'epoch': 8.0, 'step': 1080}, {'loss': 0.021, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3672419488430023, 'eval_precision': 0.2767094017094017, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 2.3445, 'eval_samples_per_second': 653.021, 'eval_steps_per_second': 81.894, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0157, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3837720453739166, 'eval_precision': 0.27150259067357513, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28447339847991315, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3519, 'eval_samples_per_second': 650.951, 'eval_steps_per_second': 81.635, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0123, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3953678011894226, 'eval_precision': 0.2749731471535983, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.28318584070796454, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3513, 'eval_samples_per_second': 651.13, 'eval_steps_per_second': 81.657, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0079, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.43089789152145386, 'eval_precision': 0.2942453854505972, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3014460511679644, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.036, 'eval_steps_per_second': 81.771, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0073, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4237912893295288, 'eval_precision': 0.2768304914744233, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2945570971184632, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.876, 'eval_steps_per_second': 81.5, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0057, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.44030800461769104, 'eval_precision': 0.3034090909090909, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.30392714854866254, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.401, 'eval_steps_per_second': 81.691, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0039, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.45599326491355896, 'eval_precision': 0.2862862862862863, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.30490405117270786, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.3456, 'eval_samples_per_second': 652.711, 'eval_steps_per_second': 81.855, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0032, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.45634299516677856, 'eval_precision': 0.2966194111232279, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3032329988851728, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.648, 'eval_samples_per_second': 578.17, 'eval_steps_per_second': 72.507, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0024, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.46889615058898926, 'eval_precision': 0.29245283018867924, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3047515019115237, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.804, 'eval_steps_per_second': 81.616, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0024, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.463355153799057, 'eval_precision': 0.2813852813852814, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28872848417545816, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.999, 'eval_steps_per_second': 81.766, 'epoch': 18.0, 'step': 2430}, {'loss': 0.002, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4683876037597656, 'eval_precision': 0.29275970619097585, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30491803278688523, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.785, 'eval_steps_per_second': 81.614, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0017, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4746394455432892, 'eval_precision': 0.27631578947368424, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.29276139410187674, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 2.3412, 'eval_samples_per_second': 653.936, 'eval_steps_per_second': 82.009, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0013, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4769289493560791, 'eval_precision': 0.28944504896626766, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2962138084632517, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.3393, 'eval_samples_per_second': 654.481, 'eval_steps_per_second': 82.077, 'epoch': 21.0, 'step': 2835}, {'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4808708727359772, 'eval_precision': 0.2874058127018299, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2956810631229236, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3458, 'eval_samples_per_second': 652.645, 'eval_steps_per_second': 81.847, 'epoch': 22.0, 'step': 2970}, {'loss': 0.001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4815284013748169, 'eval_precision': 0.2942453854505972, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3014460511679644, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3493, 'eval_samples_per_second': 651.685, 'eval_steps_per_second': 81.727, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.48222070932388306, 'eval_precision': 0.29379760609357997, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30066815144766146, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.754, 'eval_steps_per_second': 81.735, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 835.4134, 'train_samples_per_second': 248.04, 'train_steps_per_second': 3.878, 'total_flos': 8937292497160812.0, 'train_loss': 0.044791680080011304, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9371
  predict_f1                 =     0.2435
  predict_loss               =      0.221
  predict_precision          =     0.2661
  predict_recall             =     0.2245
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    650.901
  predict_steps_per_second   =     81.363
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_25.json completed. F1: 0.24354243542435422
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_26.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6975.36 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7333.42 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7064.53 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7112.15 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7167.90 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7289.22 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6391.59 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6723.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6923.61 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7461.24 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7092.15 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7113.06 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6941.41 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3078, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.20373569428920746, 'eval_precision': 0.23539823008849559, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.26507224713502736, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 4.7087, 'eval_samples_per_second': 325.141, 'eval_steps_per_second': 40.775, 'epoch': 1.0}
{'loss': 0.1855, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.20081965625286102, 'eval_precision': 0.2681992337164751, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2915148360229047, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 4.6647, 'eval_samples_per_second': 328.209, 'eval_steps_per_second': 41.16, 'epoch': 2.0}
{'loss': 0.1212, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.20940685272216797, 'eval_precision': 0.27307692307692305, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2962962962962963, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6707, 'eval_samples_per_second': 327.785, 'eval_steps_per_second': 41.107, 'epoch': 3.0}
{'loss': 0.0831, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.24491901695728302, 'eval_precision': 0.29887410440122825, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3149946062567422, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.6744, 'eval_samples_per_second': 327.531, 'eval_steps_per_second': 41.075, 'epoch': 4.0}
{'loss': 0.0505, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2757086455821991, 'eval_precision': 0.29917550058892817, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2943221320973349, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.564, 'eval_steps_per_second': 41.205, 'epoch': 5.0}
{'loss': 0.0342, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2955852150917053, 'eval_precision': 0.27079303675048355, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.293040293040293, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.225, 'eval_steps_per_second': 41.162, 'epoch': 6.0}
{'loss': 0.0208, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3368660509586334, 'eval_precision': 0.29364278506559033, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31156316916488225, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6679, 'eval_samples_per_second': 327.982, 'eval_steps_per_second': 41.132, 'epoch': 7.0}
{'loss': 0.0135, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.35544171929359436, 'eval_precision': 0.2990353697749196, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3082872928176796, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.958, 'eval_steps_per_second': 41.129, 'epoch': 8.0}
{'loss': 0.0089, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.37208592891693115, 'eval_precision': 0.281648675171737, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30274261603375524, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.099, 'eval_steps_per_second': 41.146, 'epoch': 9.0}
{'loss': 0.0053, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4152470827102661, 'eval_precision': 0.30223880597014924, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3324781939456131, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 4.6675, 'eval_samples_per_second': 328.016, 'eval_steps_per_second': 41.136, 'epoch': 10.0}
{'loss': 0.0047, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4107683300971985, 'eval_precision': 0.29270729270729273, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3120340788072417, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 4.666, 'eval_samples_per_second': 328.121, 'eval_steps_per_second': 41.149, 'epoch': 11.0}
{'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4127482771873474, 'eval_precision': 0.2739463601532567, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29776158250910983, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 4.667, 'eval_samples_per_second': 328.047, 'eval_steps_per_second': 41.14, 'epoch': 12.0}
{'loss': 0.0027, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.42764315009117126, 'eval_precision': 0.30158730158730157, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.30244457077885156, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.197, 'eval_steps_per_second': 41.159, 'epoch': 13.0}
{'loss': 0.0021, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.43162164092063904, 'eval_precision': 0.2961460446247465, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3134728931830381, 'eval_accuracy': 0.9394734810468617, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.247, 'eval_steps_per_second': 41.165, 'epoch': 14.0}
{'loss': 0.0019, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.43624022603034973, 'eval_precision': 0.2906857727737973, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3063646170442287, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.6724, 'eval_samples_per_second': 327.671, 'eval_steps_per_second': 41.093, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4453200697898865, 'eval_precision': 0.2884012539184953, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3009814612868048, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.405, 'eval_steps_per_second': 41.185, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4463006556034088, 'eval_precision': 0.29758149316508936, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3096280087527352, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6661, 'eval_samples_per_second': 328.111, 'eval_steps_per_second': 41.148, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4592679738998413, 'eval_precision': 0.30558598028477546, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.311731843575419, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.326, 'eval_steps_per_second': 41.175, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.45562541484832764, 'eval_precision': 0.3053763440860215, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.314333148865523, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.205, 'eval_steps_per_second': 41.16, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4651767611503601, 'eval_precision': 0.30888429752066116, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32411924119241187, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.457, 'eval_steps_per_second': 41.191, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4702730178833008, 'eval_precision': 0.30275229357798167, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31969860064585576, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.671, 'eval_samples_per_second': 327.768, 'eval_steps_per_second': 41.105, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.47308149933815, 'eval_precision': 0.3141025641025641, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.32432432432432434, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6678, 'eval_samples_per_second': 327.994, 'eval_steps_per_second': 41.133, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4798842966556549, 'eval_precision': 0.3205849268841395, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3227633069082672, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.193, 'eval_steps_per_second': 41.158, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.47929954528808594, 'eval_precision': 0.31567567567567567, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3240843507214206, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6665, 'eval_samples_per_second': 328.083, 'eval_steps_per_second': 41.144, 'epoch': 24.0}
{'train_runtime': 2096.6483, 'train_samples_per_second': 98.832, 'train_steps_per_second': 1.545, 'train_loss': 0.03541615980412857, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0354
  train_runtime            = 0:34:56.64
  train_samples            =       8634
  train_samples_per_second =     98.832
  train_steps_per_second   =      1.545
[{'loss': 0.3078, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.20373569428920746, 'eval_precision': 0.23539823008849559, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.26507224713502736, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 4.7087, 'eval_samples_per_second': 325.141, 'eval_steps_per_second': 40.775, 'epoch': 1.0, 'step': 135}, {'loss': 0.1855, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20081965625286102, 'eval_precision': 0.2681992337164751, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2915148360229047, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 4.6647, 'eval_samples_per_second': 328.209, 'eval_steps_per_second': 41.16, 'epoch': 2.0, 'step': 270}, {'loss': 0.1212, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.20940685272216797, 'eval_precision': 0.27307692307692305, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2962962962962963, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6707, 'eval_samples_per_second': 327.785, 'eval_steps_per_second': 41.107, 'epoch': 3.0, 'step': 405}, {'loss': 0.0831, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.24491901695728302, 'eval_precision': 0.29887410440122825, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3149946062567422, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.6744, 'eval_samples_per_second': 327.531, 'eval_steps_per_second': 41.075, 'epoch': 4.0, 'step': 540}, {'loss': 0.0505, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2757086455821991, 'eval_precision': 0.29917550058892817, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2943221320973349, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.564, 'eval_steps_per_second': 41.205, 'epoch': 5.0, 'step': 675}, {'loss': 0.0342, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2955852150917053, 'eval_precision': 0.27079303675048355, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.293040293040293, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.225, 'eval_steps_per_second': 41.162, 'epoch': 6.0, 'step': 810}, {'loss': 0.0208, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3368660509586334, 'eval_precision': 0.29364278506559033, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31156316916488225, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6679, 'eval_samples_per_second': 327.982, 'eval_steps_per_second': 41.132, 'epoch': 7.0, 'step': 945}, {'loss': 0.0135, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.35544171929359436, 'eval_precision': 0.2990353697749196, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3082872928176796, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.958, 'eval_steps_per_second': 41.129, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0089, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.37208592891693115, 'eval_precision': 0.281648675171737, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30274261603375524, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.099, 'eval_steps_per_second': 41.146, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0053, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.4152470827102661, 'eval_precision': 0.30223880597014924, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3324781939456131, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 4.6675, 'eval_samples_per_second': 328.016, 'eval_steps_per_second': 41.136, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0047, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4107683300971985, 'eval_precision': 0.29270729270729273, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3120340788072417, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 4.666, 'eval_samples_per_second': 328.121, 'eval_steps_per_second': 41.149, 'epoch': 11.0, 'step': 1485}, {'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4127482771873474, 'eval_precision': 0.2739463601532567, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29776158250910983, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 4.667, 'eval_samples_per_second': 328.047, 'eval_steps_per_second': 41.14, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0027, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.42764315009117126, 'eval_precision': 0.30158730158730157, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.30244457077885156, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.197, 'eval_steps_per_second': 41.159, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0021, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.43162164092063904, 'eval_precision': 0.2961460446247465, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3134728931830381, 'eval_accuracy': 0.9394734810468617, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.247, 'eval_steps_per_second': 41.165, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0019, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.43624022603034973, 'eval_precision': 0.2906857727737973, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3063646170442287, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.6724, 'eval_samples_per_second': 327.671, 'eval_steps_per_second': 41.093, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4453200697898865, 'eval_precision': 0.2884012539184953, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3009814612868048, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.405, 'eval_steps_per_second': 41.185, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4463006556034088, 'eval_precision': 0.29758149316508936, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3096280087527352, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6661, 'eval_samples_per_second': 328.111, 'eval_steps_per_second': 41.148, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4592679738998413, 'eval_precision': 0.30558598028477546, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.311731843575419, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.326, 'eval_steps_per_second': 41.175, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.45562541484832764, 'eval_precision': 0.3053763440860215, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.314333148865523, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.205, 'eval_steps_per_second': 41.16, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4651767611503601, 'eval_precision': 0.30888429752066116, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32411924119241187, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.457, 'eval_steps_per_second': 41.191, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4702730178833008, 'eval_precision': 0.30275229357798167, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31969860064585576, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.671, 'eval_samples_per_second': 327.768, 'eval_steps_per_second': 41.105, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.47308149933815, 'eval_precision': 0.3141025641025641, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.32432432432432434, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6678, 'eval_samples_per_second': 327.994, 'eval_steps_per_second': 41.133, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4798842966556549, 'eval_precision': 0.3205849268841395, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3227633069082672, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.193, 'eval_steps_per_second': 41.158, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.47929954528808594, 'eval_precision': 0.31567567567567567, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3240843507214206, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6665, 'eval_samples_per_second': 328.083, 'eval_steps_per_second': 41.144, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2096.6483, 'train_samples_per_second': 98.832, 'train_steps_per_second': 1.545, 'total_flos': 2.5992409580087436e+16, 'train_loss': 0.03541615980412857, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9375
  predict_f1                 =     0.2879
  predict_loss               =     0.2087
  predict_precision          =     0.2655
  predict_recall             =     0.3143
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.531
  predict_steps_per_second   =     40.566
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_26.json completed. F1: 0.28785046728971964
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_07.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6905.19 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7253.13 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7048.21 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6974.32 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7049.83 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7186.47 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7354.81 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7438.99 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6864.97 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7441.34 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7072.26 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7131.67 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6956.12 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.127, 'eval_steps_per_second': 64.601, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9497, 'eval_samples_per_second': 519.028, 'eval_steps_per_second': 65.09, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9483, 'eval_samples_per_second': 519.284, 'eval_steps_per_second': 65.123, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.613, 'eval_steps_per_second': 65.038, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9923, 'eval_samples_per_second': 511.651, 'eval_steps_per_second': 64.165, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9712, 'eval_samples_per_second': 515.276, 'eval_steps_per_second': 64.62, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.943, 'eval_samples_per_second': 520.216, 'eval_steps_per_second': 65.239, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9415, 'eval_samples_per_second': 520.485, 'eval_steps_per_second': 65.273, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.945, 'eval_steps_per_second': 65.205, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9434, 'eval_samples_per_second': 520.154, 'eval_steps_per_second': 65.232, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.334, 'eval_steps_per_second': 63.875, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9345, 'eval_samples_per_second': 521.725, 'eval_steps_per_second': 65.429, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.654, 'eval_steps_per_second': 64.291, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9246, 'eval_samples_per_second': 523.493, 'eval_steps_per_second': 65.65, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.757, 'eval_steps_per_second': 65.433, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0011, 'eval_samples_per_second': 510.152, 'eval_steps_per_second': 63.977, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9438, 'eval_samples_per_second': 520.071, 'eval_steps_per_second': 65.221, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9654, 'eval_samples_per_second': 516.292, 'eval_steps_per_second': 64.747, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.137, 'eval_steps_per_second': 64.477, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9728, 'eval_samples_per_second': 514.998, 'eval_steps_per_second': 64.585, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.972, 'eval_samples_per_second': 515.146, 'eval_steps_per_second': 64.603, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9264, 'eval_samples_per_second': 523.177, 'eval_steps_per_second': 65.611, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9557, 'eval_samples_per_second': 517.975, 'eval_steps_per_second': 64.958, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.402, 'eval_steps_per_second': 64.009, 'epoch': 24.0}
{'train_runtime': 456.0665, 'train_samples_per_second': 454.355, 'train_steps_per_second': 11.367, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:07:36.06
  train_samples            =       8634
  train_samples_per_second =    454.355
  train_steps_per_second   =     11.367
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.127, 'eval_steps_per_second': 64.601, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9497, 'eval_samples_per_second': 519.028, 'eval_steps_per_second': 65.09, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9483, 'eval_samples_per_second': 519.284, 'eval_steps_per_second': 65.123, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.613, 'eval_steps_per_second': 65.038, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9923, 'eval_samples_per_second': 511.651, 'eval_steps_per_second': 64.165, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9712, 'eval_samples_per_second': 515.276, 'eval_steps_per_second': 64.62, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.943, 'eval_samples_per_second': 520.216, 'eval_steps_per_second': 65.239, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9415, 'eval_samples_per_second': 520.485, 'eval_steps_per_second': 65.273, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.945, 'eval_steps_per_second': 65.205, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9434, 'eval_samples_per_second': 520.154, 'eval_steps_per_second': 65.232, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.334, 'eval_steps_per_second': 63.875, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9345, 'eval_samples_per_second': 521.725, 'eval_steps_per_second': 65.429, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.654, 'eval_steps_per_second': 64.291, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9246, 'eval_samples_per_second': 523.493, 'eval_steps_per_second': 65.65, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.757, 'eval_steps_per_second': 65.433, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0011, 'eval_samples_per_second': 510.152, 'eval_steps_per_second': 63.977, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9438, 'eval_samples_per_second': 520.071, 'eval_steps_per_second': 65.221, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9654, 'eval_samples_per_second': 516.292, 'eval_steps_per_second': 64.747, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.137, 'eval_steps_per_second': 64.477, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9728, 'eval_samples_per_second': 514.998, 'eval_steps_per_second': 64.585, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.972, 'eval_samples_per_second': 515.146, 'eval_steps_per_second': 64.603, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9264, 'eval_samples_per_second': 523.177, 'eval_steps_per_second': 65.611, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9557, 'eval_samples_per_second': 517.975, 'eval_steps_per_second': 64.958, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.402, 'eval_steps_per_second': 64.009, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 456.0665, 'train_samples_per_second': 454.355, 'train_steps_per_second': 11.367, 'total_flos': 1753686309874548.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.45
  predict_samples_per_second =    518.267
  predict_steps_per_second   =     64.783
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_07.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_15.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6825.82 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7092.17 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6897.23 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6945.02 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7011.85 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7130.45 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7304.75 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7363.27 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6802.39 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7330.64 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6986.78 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6996.19 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6834.89 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5769, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.2745720148086548, 'eval_precision': 0.4444444444444444, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.009029345372460498, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0996, 'eval_samples_per_second': 493.932, 'eval_steps_per_second': 61.943, 'epoch': 1.0}
{'loss': 0.2501, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.23067151010036469, 'eval_precision': 0.16506717850287908, 'eval_recall': 0.09806157354618016, 'eval_f1': 0.12303290414878398, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 3.0691, 'eval_samples_per_second': 498.851, 'eval_steps_per_second': 62.56, 'epoch': 2.0}
{'loss': 0.1608, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2522943615913391, 'eval_precision': 0.26584234930448225, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.22572178477690286, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 3.0547, 'eval_samples_per_second': 501.188, 'eval_steps_per_second': 62.853, 'epoch': 3.0}
{'loss': 0.1113, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.2794848382472992, 'eval_precision': 0.28699551569506726, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.24838292367399745, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 3.0848, 'eval_samples_per_second': 496.299, 'eval_steps_per_second': 62.24, 'epoch': 4.0}
{'loss': 0.0805, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3227900564670563, 'eval_precision': 0.21690427698574338, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.2291554599246907, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.0753, 'eval_samples_per_second': 497.831, 'eval_steps_per_second': 62.432, 'epoch': 5.0}
{'loss': 0.0613, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3537391126155853, 'eval_precision': 0.24252136752136752, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.2504136789851075, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 3.0749, 'eval_samples_per_second': 497.903, 'eval_steps_per_second': 62.441, 'epoch': 6.0}
{'loss': 0.0434, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.34798872470855713, 'eval_precision': 0.24463937621832357, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.26379400945874937, 'eval_accuracy': 0.928047556550606, 'eval_runtime': 3.0717, 'eval_samples_per_second': 498.42, 'eval_steps_per_second': 62.506, 'epoch': 7.0}
{'loss': 0.0319, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3846007287502289, 'eval_precision': 0.24759152215799615, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2684073107049609, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 3.0655, 'eval_samples_per_second': 499.432, 'eval_steps_per_second': 62.633, 'epoch': 8.0}
{'loss': 0.0231, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.4006693661212921, 'eval_precision': 0.25759162303664923, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26855895196506546, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 3.0691, 'eval_samples_per_second': 498.851, 'eval_steps_per_second': 62.56, 'epoch': 9.0}
{'loss': 0.0157, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.419429212808609, 'eval_precision': 0.24109867751780265, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.25483870967741934, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 3.0772, 'eval_samples_per_second': 497.538, 'eval_steps_per_second': 62.395, 'epoch': 10.0}
{'loss': 0.0111, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4472752809524536, 'eval_precision': 0.2677165354330709, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24893227577791338, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 3.1351, 'eval_samples_per_second': 488.343, 'eval_steps_per_second': 61.242, 'epoch': 11.0}
{'loss': 0.0085, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.4617774784564972, 'eval_precision': 0.24609375, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.26512361914781696, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 3.0639, 'eval_samples_per_second': 499.689, 'eval_steps_per_second': 62.665, 'epoch': 12.0}
{'loss': 0.0063, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.474021852016449, 'eval_precision': 0.24208566108007448, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2665299846232701, 'eval_accuracy': 0.9256928896780668, 'eval_runtime': 3.0648, 'eval_samples_per_second': 499.545, 'eval_steps_per_second': 62.647, 'epoch': 13.0}
{'loss': 0.0056, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4708322584629059, 'eval_precision': 0.24873096446700507, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2631578947368421, 'eval_accuracy': 0.9274299390102679, 'eval_runtime': 3.0632, 'eval_samples_per_second': 499.801, 'eval_steps_per_second': 62.679, 'epoch': 14.0}
{'loss': 0.0045, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.4992539584636688, 'eval_precision': 0.23846153846153847, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.25873761085028696, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 3.0715, 'eval_samples_per_second': 498.452, 'eval_steps_per_second': 62.51, 'epoch': 15.0}
{'loss': 0.0038, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.48735761642456055, 'eval_precision': 0.2605128205128205, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2742980561555075, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 3.0639, 'eval_samples_per_second': 499.696, 'eval_steps_per_second': 62.666, 'epoch': 16.0}
{'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.5045542120933533, 'eval_precision': 0.257843137254902, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2772799156562994, 'eval_accuracy': 0.9277001466841658, 'eval_runtime': 3.0728, 'eval_samples_per_second': 498.242, 'eval_steps_per_second': 62.484, 'epoch': 17.0}
{'loss': 0.0023, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.5098230242729187, 'eval_precision': 0.26180257510729615, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2697622996130458, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 3.0503, 'eval_samples_per_second': 501.913, 'eval_steps_per_second': 62.944, 'epoch': 18.0}
{'loss': 0.002, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5081304907798767, 'eval_precision': 0.27804295942720764, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.27172011661807577, 'eval_accuracy': 0.9329884968733112, 'eval_runtime': 3.0562, 'eval_samples_per_second': 500.952, 'eval_steps_per_second': 62.823, 'epoch': 19.0}
{'loss': 0.0016, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5116696953773499, 'eval_precision': 0.2671232876712329, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2669709070165431, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.0629, 'eval_samples_per_second': 499.852, 'eval_steps_per_second': 62.686, 'epoch': 20.0}
{'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.5263127684593201, 'eval_precision': 0.25500526870389884, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2650602409638554, 'eval_accuracy': 0.9300934146529761, 'eval_runtime': 3.0699, 'eval_samples_per_second': 498.721, 'eval_steps_per_second': 62.544, 'epoch': 21.0}
{'loss': 0.0011, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5228802561759949, 'eval_precision': 0.26643990929705214, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.267197271176805, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.0501, 'eval_samples_per_second': 501.95, 'eval_steps_per_second': 62.949, 'epoch': 22.0}
{'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5259426832199097, 'eval_precision': 0.25917686318131256, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26238738738738737, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 3.0623, 'eval_samples_per_second': 499.943, 'eval_steps_per_second': 62.697, 'epoch': 23.0}
{'loss': 0.0008, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5274402499198914, 'eval_precision': 0.2630992196209587, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.266065388951522, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 3.1447, 'eval_samples_per_second': 486.852, 'eval_steps_per_second': 61.055, 'epoch': 24.0}
{'train_runtime': 869.3875, 'train_samples_per_second': 238.347, 'train_steps_per_second': 5.963, 'train_loss': 0.058644900644588986, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0586
  train_runtime            = 0:14:29.38
  train_samples            =       8634
  train_samples_per_second =    238.347
  train_steps_per_second   =      5.963
[{'loss': 0.5769, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2745720148086548, 'eval_precision': 0.4444444444444444, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.009029345372460498, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0996, 'eval_samples_per_second': 493.932, 'eval_steps_per_second': 61.943, 'epoch': 1.0, 'step': 216}, {'loss': 0.2501, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.23067151010036469, 'eval_precision': 0.16506717850287908, 'eval_recall': 0.09806157354618016, 'eval_f1': 0.12303290414878398, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 3.0691, 'eval_samples_per_second': 498.851, 'eval_steps_per_second': 62.56, 'epoch': 2.0, 'step': 432}, {'loss': 0.1608, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.2522943615913391, 'eval_precision': 0.26584234930448225, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.22572178477690286, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 3.0547, 'eval_samples_per_second': 501.188, 'eval_steps_per_second': 62.853, 'epoch': 3.0, 'step': 648}, {'loss': 0.1113, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2794848382472992, 'eval_precision': 0.28699551569506726, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.24838292367399745, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 3.0848, 'eval_samples_per_second': 496.299, 'eval_steps_per_second': 62.24, 'epoch': 4.0, 'step': 864}, {'loss': 0.0805, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3227900564670563, 'eval_precision': 0.21690427698574338, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.2291554599246907, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.0753, 'eval_samples_per_second': 497.831, 'eval_steps_per_second': 62.432, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0613, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3537391126155853, 'eval_precision': 0.24252136752136752, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.2504136789851075, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 3.0749, 'eval_samples_per_second': 497.903, 'eval_steps_per_second': 62.441, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0434, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.34798872470855713, 'eval_precision': 0.24463937621832357, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.26379400945874937, 'eval_accuracy': 0.928047556550606, 'eval_runtime': 3.0717, 'eval_samples_per_second': 498.42, 'eval_steps_per_second': 62.506, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0319, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3846007287502289, 'eval_precision': 0.24759152215799615, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2684073107049609, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 3.0655, 'eval_samples_per_second': 499.432, 'eval_steps_per_second': 62.633, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0231, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.4006693661212921, 'eval_precision': 0.25759162303664923, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26855895196506546, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 3.0691, 'eval_samples_per_second': 498.851, 'eval_steps_per_second': 62.56, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0157, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.419429212808609, 'eval_precision': 0.24109867751780265, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.25483870967741934, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 3.0772, 'eval_samples_per_second': 497.538, 'eval_steps_per_second': 62.395, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0111, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4472752809524536, 'eval_precision': 0.2677165354330709, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24893227577791338, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 3.1351, 'eval_samples_per_second': 488.343, 'eval_steps_per_second': 61.242, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0085, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.4617774784564972, 'eval_precision': 0.24609375, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.26512361914781696, 'eval_accuracy': 0.9281247587431483, 'eval_runtime': 3.0639, 'eval_samples_per_second': 499.689, 'eval_steps_per_second': 62.665, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0063, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.474021852016449, 'eval_precision': 0.24208566108007448, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2665299846232701, 'eval_accuracy': 0.9256928896780668, 'eval_runtime': 3.0648, 'eval_samples_per_second': 499.545, 'eval_steps_per_second': 62.647, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0056, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4708322584629059, 'eval_precision': 0.24873096446700507, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2631578947368421, 'eval_accuracy': 0.9274299390102679, 'eval_runtime': 3.0632, 'eval_samples_per_second': 499.801, 'eval_steps_per_second': 62.679, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0045, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4992539584636688, 'eval_precision': 0.23846153846153847, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.25873761085028696, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 3.0715, 'eval_samples_per_second': 498.452, 'eval_steps_per_second': 62.51, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0038, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.48735761642456055, 'eval_precision': 0.2605128205128205, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2742980561555075, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 3.0639, 'eval_samples_per_second': 499.696, 'eval_steps_per_second': 62.666, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5045542120933533, 'eval_precision': 0.257843137254902, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2772799156562994, 'eval_accuracy': 0.9277001466841658, 'eval_runtime': 3.0728, 'eval_samples_per_second': 498.242, 'eval_steps_per_second': 62.484, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0023, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5098230242729187, 'eval_precision': 0.26180257510729615, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2697622996130458, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 3.0503, 'eval_samples_per_second': 501.913, 'eval_steps_per_second': 62.944, 'epoch': 18.0, 'step': 3888}, {'loss': 0.002, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5081304907798767, 'eval_precision': 0.27804295942720764, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.27172011661807577, 'eval_accuracy': 0.9329884968733112, 'eval_runtime': 3.0562, 'eval_samples_per_second': 500.952, 'eval_steps_per_second': 62.823, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0016, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5116696953773499, 'eval_precision': 0.2671232876712329, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2669709070165431, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.0629, 'eval_samples_per_second': 499.852, 'eval_steps_per_second': 62.686, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5263127684593201, 'eval_precision': 0.25500526870389884, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2650602409638554, 'eval_accuracy': 0.9300934146529761, 'eval_runtime': 3.0699, 'eval_samples_per_second': 498.721, 'eval_steps_per_second': 62.544, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0011, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5228802561759949, 'eval_precision': 0.26643990929705214, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.267197271176805, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.0501, 'eval_samples_per_second': 501.95, 'eval_steps_per_second': 62.949, 'epoch': 22.0, 'step': 4752}, {'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5259426832199097, 'eval_precision': 0.25917686318131256, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26238738738738737, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 3.0623, 'eval_samples_per_second': 499.943, 'eval_steps_per_second': 62.697, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0008, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5274402499198914, 'eval_precision': 0.2630992196209587, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.266065388951522, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 3.1447, 'eval_samples_per_second': 486.852, 'eval_steps_per_second': 61.055, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 869.3875, 'train_samples_per_second': 238.347, 'train_steps_per_second': 5.963, 'total_flos': 7005004481258868.0, 'train_loss': 0.058644900644588986, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9369
  predict_f1                 =     0.1149
  predict_loss               =     0.2481
  predict_precision          =     0.1641
  predict_recall             =     0.0884
  predict_runtime            = 0:00:02.54
  predict_samples_per_second =    499.885
  predict_steps_per_second   =     62.486
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_15.json completed. F1: 0.1149425287356322
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_37.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7025.71 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7448.09 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7264.08 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7328.95 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7389.54 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7510.23 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6578.75 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6947.04 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7125.38 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7740.98 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7358.96 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7372.62 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7174.26 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4342, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.39206990599632263, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2769, 'eval_samples_per_second': 672.403, 'eval_steps_per_second': 84.325, 'epoch': 1.0}
{'loss': 0.4085, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.3909379541873932, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2725, 'eval_samples_per_second': 673.705, 'eval_steps_per_second': 84.488, 'epoch': 2.0}
{'loss': 0.4087, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.3901812434196472, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2706, 'eval_samples_per_second': 674.271, 'eval_steps_per_second': 84.559, 'epoch': 3.0}
{'loss': 0.408, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.38959676027297974, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2635, 'eval_samples_per_second': 676.38, 'eval_steps_per_second': 84.824, 'epoch': 4.0}
{'loss': 0.4101, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3910910487174988, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2653, 'eval_samples_per_second': 675.854, 'eval_steps_per_second': 84.758, 'epoch': 5.0}
{'loss': 0.4086, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3919341564178467, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.26, 'eval_samples_per_second': 677.438, 'eval_steps_per_second': 84.956, 'epoch': 6.0}
{'loss': 0.4081, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3921743929386139, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.266, 'eval_samples_per_second': 675.633, 'eval_steps_per_second': 84.73, 'epoch': 7.0}
{'loss': 0.4069, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3905956447124481, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2655, 'eval_samples_per_second': 675.797, 'eval_steps_per_second': 84.751, 'epoch': 8.0}
{'loss': 0.4223, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.38779327273368835, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2709, 'eval_samples_per_second': 674.19, 'eval_steps_per_second': 84.549, 'epoch': 9.0}
{'loss': 0.432, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.38675472140312195, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2664, 'eval_samples_per_second': 675.522, 'eval_steps_per_second': 84.716, 'epoch': 10.0}
{'loss': 0.4018, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.3863216042518616, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2638, 'eval_samples_per_second': 676.292, 'eval_steps_per_second': 84.813, 'epoch': 11.0}
{'loss': 0.4021, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.38721588253974915, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.634, 'eval_steps_per_second': 84.855, 'epoch': 12.0}
{'loss': 0.4028, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3860641419887543, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2609, 'eval_samples_per_second': 677.15, 'eval_steps_per_second': 84.92, 'epoch': 13.0}
{'loss': 0.4031, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.3856181204319, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2634, 'eval_samples_per_second': 676.413, 'eval_steps_per_second': 84.828, 'epoch': 14.0}
{'loss': 0.4026, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.3862307071685791, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2691, 'eval_samples_per_second': 674.719, 'eval_steps_per_second': 84.615, 'epoch': 15.0}
{'loss': 0.4019, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.38556596636772156, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2643, 'eval_samples_per_second': 676.146, 'eval_steps_per_second': 84.794, 'epoch': 16.0}
{'loss': 0.4018, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.38539695739746094, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2605, 'eval_samples_per_second': 677.286, 'eval_steps_per_second': 84.937, 'epoch': 17.0}
{'loss': 0.4028, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.3857067823410034, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.617, 'eval_steps_per_second': 84.853, 'epoch': 18.0}
{'loss': 0.4009, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.38584205508232117, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.688, 'eval_steps_per_second': 84.737, 'epoch': 19.0}
{'loss': 0.4014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.385545015335083, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2622, 'eval_samples_per_second': 676.761, 'eval_steps_per_second': 84.871, 'epoch': 20.0}
{'loss': 0.4026, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.38545554876327515, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.478, 'eval_steps_per_second': 84.836, 'epoch': 21.0}
{'loss': 0.4013, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.3854350447654724, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2575, 'eval_samples_per_second': 678.181, 'eval_steps_per_second': 85.05, 'epoch': 22.0}
{'loss': 0.4015, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.3856028914451599, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.935, 'eval_steps_per_second': 81.382, 'epoch': 23.0}
{'loss': 0.4018, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.38558289408683777, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2642, 'eval_samples_per_second': 676.186, 'eval_steps_per_second': 84.799, 'epoch': 24.0}
{'train_runtime': 756.949, 'train_samples_per_second': 273.752, 'train_steps_per_second': 4.28, 'train_loss': 0.4073195645838608, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.4073
  train_runtime            = 0:12:36.94
  train_samples            =       8634
  train_samples_per_second =    273.752
  train_steps_per_second   =       4.28
[{'loss': 0.4342, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.39206990599632263, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2769, 'eval_samples_per_second': 672.403, 'eval_steps_per_second': 84.325, 'epoch': 1.0, 'step': 135}, {'loss': 0.4085, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.3909379541873932, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2725, 'eval_samples_per_second': 673.705, 'eval_steps_per_second': 84.488, 'epoch': 2.0, 'step': 270}, {'loss': 0.4087, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.3901812434196472, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2706, 'eval_samples_per_second': 674.271, 'eval_steps_per_second': 84.559, 'epoch': 3.0, 'step': 405}, {'loss': 0.408, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.38959676027297974, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2635, 'eval_samples_per_second': 676.38, 'eval_steps_per_second': 84.824, 'epoch': 4.0, 'step': 540}, {'loss': 0.4101, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.3910910487174988, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2653, 'eval_samples_per_second': 675.854, 'eval_steps_per_second': 84.758, 'epoch': 5.0, 'step': 675}, {'loss': 0.4086, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3919341564178467, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.26, 'eval_samples_per_second': 677.438, 'eval_steps_per_second': 84.956, 'epoch': 6.0, 'step': 810}, {'loss': 0.4081, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3921743929386139, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.266, 'eval_samples_per_second': 675.633, 'eval_steps_per_second': 84.73, 'epoch': 7.0, 'step': 945}, {'loss': 0.4069, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3905956447124481, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2655, 'eval_samples_per_second': 675.797, 'eval_steps_per_second': 84.751, 'epoch': 8.0, 'step': 1080}, {'loss': 0.4223, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.38779327273368835, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2709, 'eval_samples_per_second': 674.19, 'eval_steps_per_second': 84.549, 'epoch': 9.0, 'step': 1215}, {'loss': 0.432, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.38675472140312195, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2664, 'eval_samples_per_second': 675.522, 'eval_steps_per_second': 84.716, 'epoch': 10.0, 'step': 1350}, {'loss': 0.4018, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3863216042518616, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2638, 'eval_samples_per_second': 676.292, 'eval_steps_per_second': 84.813, 'epoch': 11.0, 'step': 1485}, {'loss': 0.4021, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.38721588253974915, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.634, 'eval_steps_per_second': 84.855, 'epoch': 12.0, 'step': 1620}, {'loss': 0.4028, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3860641419887543, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2609, 'eval_samples_per_second': 677.15, 'eval_steps_per_second': 84.92, 'epoch': 13.0, 'step': 1755}, {'loss': 0.4031, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3856181204319, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2634, 'eval_samples_per_second': 676.413, 'eval_steps_per_second': 84.828, 'epoch': 14.0, 'step': 1890}, {'loss': 0.4026, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3862307071685791, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2691, 'eval_samples_per_second': 674.719, 'eval_steps_per_second': 84.615, 'epoch': 15.0, 'step': 2025}, {'loss': 0.4019, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.38556596636772156, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2643, 'eval_samples_per_second': 676.146, 'eval_steps_per_second': 84.794, 'epoch': 16.0, 'step': 2160}, {'loss': 0.4018, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.38539695739746094, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2605, 'eval_samples_per_second': 677.286, 'eval_steps_per_second': 84.937, 'epoch': 17.0, 'step': 2295}, {'loss': 0.4028, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3857067823410034, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2627, 'eval_samples_per_second': 676.617, 'eval_steps_per_second': 84.853, 'epoch': 18.0, 'step': 2430}, {'loss': 0.4009, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.38584205508232117, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.688, 'eval_steps_per_second': 84.737, 'epoch': 19.0, 'step': 2565}, {'loss': 0.4014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.385545015335083, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2622, 'eval_samples_per_second': 676.761, 'eval_steps_per_second': 84.871, 'epoch': 20.0, 'step': 2700}, {'loss': 0.4026, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.38545554876327515, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.478, 'eval_steps_per_second': 84.836, 'epoch': 21.0, 'step': 2835}, {'loss': 0.4013, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3854350447654724, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2575, 'eval_samples_per_second': 678.181, 'eval_steps_per_second': 85.05, 'epoch': 22.0, 'step': 2970}, {'loss': 0.4015, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3856028914451599, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.935, 'eval_steps_per_second': 81.382, 'epoch': 23.0, 'step': 3105}, {'loss': 0.4018, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.38558289408683777, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2642, 'eval_samples_per_second': 676.186, 'eval_steps_per_second': 84.799, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 756.949, 'train_samples_per_second': 273.752, 'train_steps_per_second': 4.28, 'total_flos': 8064312308929644.0, 'train_loss': 0.4073195645838608, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     0.3886
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:01.89
  predict_samples_per_second =    669.688
  predict_steps_per_second   =     83.711
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_37.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_17.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7337.02 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7707.12 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7481.57 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7504.20 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7536.52 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7671.00 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 6713.34 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7088.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7289.21 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7848.40 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7498.94 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7576.44 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7375.30 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_2/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2942, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.223801389336586, 'eval_precision': 0.2451708766716196, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.2129032258064516, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.2462, 'eval_samples_per_second': 681.585, 'eval_steps_per_second': 85.476, 'epoch': 1.0}
{'loss': 0.1752, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.24467156827449799, 'eval_precision': 0.30393996247654786, 'eval_recall': 0.1847206385404789, 'eval_f1': 0.22978723404255316, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 2.2394, 'eval_samples_per_second': 683.672, 'eval_steps_per_second': 85.738, 'epoch': 2.0}
{'loss': 0.1024, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2703428864479065, 'eval_precision': 0.2117758784425451, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.23108808290155441, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.462, 'eval_steps_per_second': 85.963, 'epoch': 3.0}
{'loss': 0.0645, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.3297218084335327, 'eval_precision': 0.218804920913884, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.24714640198511165, 'eval_accuracy': 0.9250752721377287, 'eval_runtime': 2.2341, 'eval_samples_per_second': 685.278, 'eval_steps_per_second': 85.939, 'epoch': 4.0}
{'loss': 0.0392, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.3424496352672577, 'eval_precision': 0.2055378061767838, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.21255506607929514, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.2364, 'eval_samples_per_second': 684.572, 'eval_steps_per_second': 85.851, 'epoch': 5.0}
{'loss': 0.0231, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3989996910095215, 'eval_precision': 0.2644230769230769, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2574605032182563, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2316, 'eval_samples_per_second': 686.062, 'eval_steps_per_second': 86.038, 'epoch': 6.0}
{'loss': 0.0148, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.4463057518005371, 'eval_precision': 0.24734982332155478, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.24333719582850522, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.2287, 'eval_samples_per_second': 686.949, 'eval_steps_per_second': 86.149, 'epoch': 7.0}
{'loss': 0.012, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.44623497128486633, 'eval_precision': 0.23733862959285004, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2537154989384289, 'eval_accuracy': 0.9284721686095885, 'eval_runtime': 2.2334, 'eval_samples_per_second': 685.5, 'eval_steps_per_second': 85.967, 'epoch': 8.0}
{'loss': 0.0078, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.4427965581417084, 'eval_precision': 0.236569274269557, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2590299277605779, 'eval_accuracy': 0.9285493708021307, 'eval_runtime': 2.2324, 'eval_samples_per_second': 685.812, 'eval_steps_per_second': 86.007, 'epoch': 9.0}
{'loss': 0.0052, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.47381627559661865, 'eval_precision': 0.26691266912669126, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25680473372781065, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2254, 'eval_samples_per_second': 687.956, 'eval_steps_per_second': 86.275, 'epoch': 10.0}
{'loss': 0.0038, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.48179566860198975, 'eval_precision': 0.22767419038272815, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.24472573839662443, 'eval_accuracy': 0.9283563653207751, 'eval_runtime': 2.3065, 'eval_samples_per_second': 663.776, 'eval_steps_per_second': 83.243, 'epoch': 11.0}
{'loss': 0.0034, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.5081831216812134, 'eval_precision': 0.24494142705005326, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2533039647577093, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.062, 'eval_steps_per_second': 86.163, 'epoch': 12.0}
{'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.5152878761291504, 'eval_precision': 0.26455026455026454, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.24494794856093083, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2336, 'eval_samples_per_second': 685.433, 'eval_steps_per_second': 85.959, 'epoch': 13.0}
{'loss': 0.0021, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.5013508796691895, 'eval_precision': 0.2570093457943925, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.25389497980380843, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2319, 'eval_samples_per_second': 685.954, 'eval_steps_per_second': 86.024, 'epoch': 14.0}
{'loss': 0.0013, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.5427447557449341, 'eval_precision': 0.2617611580217129, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.2543962485345838, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.2288, 'eval_samples_per_second': 686.923, 'eval_steps_per_second': 86.146, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.5378513932228088, 'eval_precision': 0.26064516129032256, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24455205811138012, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.2288, 'eval_samples_per_second': 686.912, 'eval_steps_per_second': 86.144, 'epoch': 16.0}
{'loss': 0.0007, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.5486891269683838, 'eval_precision': 0.23666666666666666, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.2397298818232977, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.2282, 'eval_samples_per_second': 687.106, 'eval_steps_per_second': 86.169, 'epoch': 17.0}
{'loss': 0.0004, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.5598799586296082, 'eval_precision': 0.2395005675368899, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.24004550625711035, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.2315, 'eval_samples_per_second': 686.091, 'eval_steps_per_second': 86.041, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5603278279304504, 'eval_precision': 0.24708926261319533, 'eval_recall': 0.217787913340935, 'eval_f1': 0.2315151515151515, 'eval_accuracy': 0.932370879332973, 'eval_runtime': 2.2334, 'eval_samples_per_second': 685.487, 'eval_steps_per_second': 85.966, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5670099258422852, 'eval_precision': 0.25907990314769974, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.25132119788608337, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.3094, 'eval_samples_per_second': 662.948, 'eval_steps_per_second': 83.139, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.566455602645874, 'eval_precision': 0.25518925518925517, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.24646226415094338, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.2275, 'eval_samples_per_second': 687.315, 'eval_steps_per_second': 86.195, 'epoch': 21.0}
{'loss': 0.0001, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5729032158851624, 'eval_precision': 0.25333333333333335, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.24559341950646302, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.741, 'eval_steps_per_second': 85.998, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5771055817604065, 'eval_precision': 0.25552825552825553, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.24600827912477824, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.2271, 'eval_samples_per_second': 687.454, 'eval_steps_per_second': 86.212, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5784475207328796, 'eval_precision': 0.2574626865671642, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.24628197501487212, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.2348, 'eval_samples_per_second': 685.084, 'eval_steps_per_second': 85.915, 'epoch': 24.0}
{'train_runtime': 744.4179, 'train_samples_per_second': 278.36, 'train_steps_per_second': 6.964, 'train_loss': 0.03145708214925648, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0315
  train_runtime            = 0:12:24.41
  train_samples            =       8634
  train_samples_per_second =     278.36
  train_steps_per_second   =      6.964
[{'loss': 0.2942, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.223801389336586, 'eval_precision': 0.2451708766716196, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.2129032258064516, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.2462, 'eval_samples_per_second': 681.585, 'eval_steps_per_second': 85.476, 'epoch': 1.0, 'step': 216}, {'loss': 0.1752, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.24467156827449799, 'eval_precision': 0.30393996247654786, 'eval_recall': 0.1847206385404789, 'eval_f1': 0.22978723404255316, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 2.2394, 'eval_samples_per_second': 683.672, 'eval_steps_per_second': 85.738, 'epoch': 2.0, 'step': 432}, {'loss': 0.1024, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.2703428864479065, 'eval_precision': 0.2117758784425451, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.23108808290155441, 'eval_accuracy': 0.9318304639851772, 'eval_runtime': 2.2335, 'eval_samples_per_second': 685.462, 'eval_steps_per_second': 85.963, 'epoch': 3.0, 'step': 648}, {'loss': 0.0645, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.3297218084335327, 'eval_precision': 0.218804920913884, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.24714640198511165, 'eval_accuracy': 0.9250752721377287, 'eval_runtime': 2.2341, 'eval_samples_per_second': 685.278, 'eval_steps_per_second': 85.939, 'epoch': 4.0, 'step': 864}, {'loss': 0.0392, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3424496352672577, 'eval_precision': 0.2055378061767838, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.21255506607929514, 'eval_accuracy': 0.928896780668571, 'eval_runtime': 2.2364, 'eval_samples_per_second': 684.572, 'eval_steps_per_second': 85.851, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0231, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3989996910095215, 'eval_precision': 0.2644230769230769, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2574605032182563, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.2316, 'eval_samples_per_second': 686.062, 'eval_steps_per_second': 86.038, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0148, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.4463057518005371, 'eval_precision': 0.24734982332155478, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.24333719582850522, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.2287, 'eval_samples_per_second': 686.949, 'eval_steps_per_second': 86.149, 'epoch': 7.0, 'step': 1512}, {'loss': 0.012, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.44623497128486633, 'eval_precision': 0.23733862959285004, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2537154989384289, 'eval_accuracy': 0.9284721686095885, 'eval_runtime': 2.2334, 'eval_samples_per_second': 685.5, 'eval_steps_per_second': 85.967, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0078, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.4427965581417084, 'eval_precision': 0.236569274269557, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2590299277605779, 'eval_accuracy': 0.9285493708021307, 'eval_runtime': 2.2324, 'eval_samples_per_second': 685.812, 'eval_steps_per_second': 86.007, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0052, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.47381627559661865, 'eval_precision': 0.26691266912669126, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25680473372781065, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2254, 'eval_samples_per_second': 687.956, 'eval_steps_per_second': 86.275, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0038, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.48179566860198975, 'eval_precision': 0.22767419038272815, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.24472573839662443, 'eval_accuracy': 0.9283563653207751, 'eval_runtime': 2.3065, 'eval_samples_per_second': 663.776, 'eval_steps_per_second': 83.243, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0034, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.5081831216812134, 'eval_precision': 0.24494142705005326, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2533039647577093, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.062, 'eval_steps_per_second': 86.163, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.5152878761291504, 'eval_precision': 0.26455026455026454, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.24494794856093083, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2336, 'eval_samples_per_second': 685.433, 'eval_steps_per_second': 85.959, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0021, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.5013508796691895, 'eval_precision': 0.2570093457943925, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.25389497980380843, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2319, 'eval_samples_per_second': 685.954, 'eval_steps_per_second': 86.024, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0013, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.5427447557449341, 'eval_precision': 0.2617611580217129, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.2543962485345838, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.2288, 'eval_samples_per_second': 686.923, 'eval_steps_per_second': 86.146, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0011, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.5378513932228088, 'eval_precision': 0.26064516129032256, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24455205811138012, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.2288, 'eval_samples_per_second': 686.912, 'eval_steps_per_second': 86.144, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0007, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5486891269683838, 'eval_precision': 0.23666666666666666, 'eval_recall': 0.24287343215507412, 'eval_f1': 0.2397298818232977, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.2282, 'eval_samples_per_second': 687.106, 'eval_steps_per_second': 86.169, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0004, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5598799586296082, 'eval_precision': 0.2395005675368899, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.24004550625711035, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.2315, 'eval_samples_per_second': 686.091, 'eval_steps_per_second': 86.041, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0004, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5603278279304504, 'eval_precision': 0.24708926261319533, 'eval_recall': 0.217787913340935, 'eval_f1': 0.2315151515151515, 'eval_accuracy': 0.932370879332973, 'eval_runtime': 2.2334, 'eval_samples_per_second': 685.487, 'eval_steps_per_second': 85.966, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5670099258422852, 'eval_precision': 0.25907990314769974, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.25132119788608337, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.3094, 'eval_samples_per_second': 662.948, 'eval_steps_per_second': 83.139, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.566455602645874, 'eval_precision': 0.25518925518925517, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.24646226415094338, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.2275, 'eval_samples_per_second': 687.315, 'eval_steps_per_second': 86.195, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0001, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5729032158851624, 'eval_precision': 0.25333333333333335, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.24559341950646302, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.2326, 'eval_samples_per_second': 685.741, 'eval_steps_per_second': 85.998, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5771055817604065, 'eval_precision': 0.25552825552825553, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.24600827912477824, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 2.2271, 'eval_samples_per_second': 687.454, 'eval_steps_per_second': 86.212, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5784475207328796, 'eval_precision': 0.2574626865671642, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.24628197501487212, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.2348, 'eval_samples_per_second': 685.084, 'eval_steps_per_second': 85.915, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 744.4179, 'train_samples_per_second': 278.36, 'train_steps_per_second': 6.964, 'total_flos': 6811384717195656.0, 'train_loss': 0.03145708214925648, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9352
  predict_f1                 =      0.155
  predict_loss               =     0.2348
  predict_precision          =     0.1935
  predict_recall             =     0.1293
  predict_runtime            = 0:00:01.86
  predict_samples_per_second =     683.22
  predict_steps_per_second   =     85.403
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_17.json completed. F1: 0.15497553017944535
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_40.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6371.24 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7139.17 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7032.21 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7123.48 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7197.77 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7335.35 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6426.70 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6789.70 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6926.16 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7557.32 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7192.56 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7239.23 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7083.22 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2998, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.20375514030456543, 'eval_precision': 0.22107081174438686, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2515970515970516, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 4.6894, 'eval_samples_per_second': 326.484, 'eval_steps_per_second': 40.944, 'epoch': 1.0}
{'loss': 0.1871, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.21153727173805237, 'eval_precision': 0.22666666666666666, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2386609071274298, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 4.6718, 'eval_samples_per_second': 327.714, 'eval_steps_per_second': 41.098, 'epoch': 2.0}
{'loss': 0.126, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.22226384282112122, 'eval_precision': 0.311886586695747, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31884057971014496, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 4.6701, 'eval_samples_per_second': 327.832, 'eval_steps_per_second': 41.113, 'epoch': 3.0}
{'loss': 0.0887, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.27238091826438904, 'eval_precision': 0.28269617706237427, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30037413148049175, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 4.6613, 'eval_samples_per_second': 328.452, 'eval_steps_per_second': 41.191, 'epoch': 4.0}
{'loss': 0.0591, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.2796603739261627, 'eval_precision': 0.25199203187250996, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2690058479532164, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 4.6629, 'eval_samples_per_second': 328.337, 'eval_steps_per_second': 41.176, 'epoch': 5.0}
{'loss': 0.0374, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.30438724160194397, 'eval_precision': 0.2747148288973384, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.29963711767755313, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 4.6672, 'eval_samples_per_second': 328.034, 'eval_steps_per_second': 41.138, 'epoch': 6.0}
{'loss': 0.0224, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.34332534670829773, 'eval_precision': 0.27552986512524086, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29869451697127936, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 4.663, 'eval_samples_per_second': 328.327, 'eval_steps_per_second': 41.175, 'epoch': 7.0}
{'loss': 0.014, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.37750715017318726, 'eval_precision': 0.2504672897196262, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.27529532614278374, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 4.6686, 'eval_samples_per_second': 327.937, 'eval_steps_per_second': 41.126, 'epoch': 8.0}
{'loss': 0.0078, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.40219205617904663, 'eval_precision': 0.2861328125, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.30825881115202525, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 4.6667, 'eval_samples_per_second': 328.066, 'eval_steps_per_second': 41.142, 'epoch': 9.0}
{'loss': 0.0047, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.42014947533607483, 'eval_precision': 0.3027624309392265, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3075196408529742, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.454, 'eval_steps_per_second': 41.191, 'epoch': 10.0}
{'loss': 0.0032, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4396422207355499, 'eval_precision': 0.28066914498141265, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3092677931387609, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 4.6681, 'eval_samples_per_second': 327.97, 'eval_steps_per_second': 41.13, 'epoch': 11.0}
{'loss': 0.0032, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.43948838114738464, 'eval_precision': 0.3046709129511677, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31555799890049474, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.6666, 'eval_samples_per_second': 328.074, 'eval_steps_per_second': 41.143, 'epoch': 12.0}
{'loss': 0.0024, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.4474920630455017, 'eval_precision': 0.3045793397231097, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31497797356828194, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6609, 'eval_samples_per_second': 328.476, 'eval_steps_per_second': 41.194, 'epoch': 13.0}
{'loss': 0.0029, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4510393738746643, 'eval_precision': 0.28695652173913044, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31066945606694557, 'eval_accuracy': 0.9371574152705937, 'eval_runtime': 4.6695, 'eval_samples_per_second': 327.872, 'eval_steps_per_second': 41.118, 'epoch': 14.0}
{'loss': 0.002, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.44394025206565857, 'eval_precision': 0.27408793264733394, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.30113052415210695, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.781, 'eval_steps_per_second': 41.232, 'epoch': 15.0}
{'loss': 0.0014, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.4741722047328949, 'eval_precision': 0.3016216216216216, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30965593784683687, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6665, 'eval_samples_per_second': 328.085, 'eval_steps_per_second': 41.145, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.4730653166770935, 'eval_precision': 0.32, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.319634703196347, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6625, 'eval_samples_per_second': 328.362, 'eval_steps_per_second': 41.179, 'epoch': 17.0}
{'loss': 0.0007, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.4771074056625366, 'eval_precision': 0.284796573875803, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2937603533959139, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.201, 'eval_steps_per_second': 41.159, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.48351141810417175, 'eval_precision': 0.29308452250274425, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2986577181208054, 'eval_accuracy': 0.9399366942021153, 'eval_runtime': 4.6592, 'eval_samples_per_second': 328.599, 'eval_steps_per_second': 41.209, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4915649890899658, 'eval_precision': 0.3027624309392265, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3075196408529742, 'eval_accuracy': 0.9397436887207596, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.79, 'eval_steps_per_second': 41.233, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.49734675884246826, 'eval_precision': 0.30337078651685395, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30560271646859083, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6555, 'eval_samples_per_second': 328.856, 'eval_steps_per_second': 41.241, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5028067827224731, 'eval_precision': 0.3111587982832618, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3206191265892758, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6637, 'eval_samples_per_second': 328.277, 'eval_steps_per_second': 41.169, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.505060076713562, 'eval_precision': 0.305159165751921, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3109619686800895, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6589, 'eval_samples_per_second': 328.621, 'eval_steps_per_second': 41.212, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5041635632514954, 'eval_precision': 0.3029637760702525, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3087248322147651, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6563, 'eval_samples_per_second': 328.802, 'eval_steps_per_second': 41.234, 'epoch': 24.0}
{'train_runtime': 2100.29, 'train_samples_per_second': 98.661, 'train_steps_per_second': 1.543, 'train_loss': 0.036075598144052944, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0361
  train_runtime            = 0:35:00.28
  train_samples            =       8634
  train_samples_per_second =     98.661
  train_steps_per_second   =      1.543
[{'loss': 0.2998, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.20375514030456543, 'eval_precision': 0.22107081174438686, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2515970515970516, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 4.6894, 'eval_samples_per_second': 326.484, 'eval_steps_per_second': 40.944, 'epoch': 1.0, 'step': 135}, {'loss': 0.1871, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.21153727173805237, 'eval_precision': 0.22666666666666666, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2386609071274298, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 4.6718, 'eval_samples_per_second': 327.714, 'eval_steps_per_second': 41.098, 'epoch': 2.0, 'step': 270}, {'loss': 0.126, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.22226384282112122, 'eval_precision': 0.311886586695747, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31884057971014496, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 4.6701, 'eval_samples_per_second': 327.832, 'eval_steps_per_second': 41.113, 'epoch': 3.0, 'step': 405}, {'loss': 0.0887, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.27238091826438904, 'eval_precision': 0.28269617706237427, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30037413148049175, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 4.6613, 'eval_samples_per_second': 328.452, 'eval_steps_per_second': 41.191, 'epoch': 4.0, 'step': 540}, {'loss': 0.0591, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2796603739261627, 'eval_precision': 0.25199203187250996, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2690058479532164, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 4.6629, 'eval_samples_per_second': 328.337, 'eval_steps_per_second': 41.176, 'epoch': 5.0, 'step': 675}, {'loss': 0.0374, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.30438724160194397, 'eval_precision': 0.2747148288973384, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.29963711767755313, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 4.6672, 'eval_samples_per_second': 328.034, 'eval_steps_per_second': 41.138, 'epoch': 6.0, 'step': 810}, {'loss': 0.0224, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.34332534670829773, 'eval_precision': 0.27552986512524086, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29869451697127936, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 4.663, 'eval_samples_per_second': 328.327, 'eval_steps_per_second': 41.175, 'epoch': 7.0, 'step': 945}, {'loss': 0.014, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.37750715017318726, 'eval_precision': 0.2504672897196262, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.27529532614278374, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 4.6686, 'eval_samples_per_second': 327.937, 'eval_steps_per_second': 41.126, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0078, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.40219205617904663, 'eval_precision': 0.2861328125, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.30825881115202525, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 4.6667, 'eval_samples_per_second': 328.066, 'eval_steps_per_second': 41.142, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0047, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.42014947533607483, 'eval_precision': 0.3027624309392265, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3075196408529742, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.454, 'eval_steps_per_second': 41.191, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0032, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4396422207355499, 'eval_precision': 0.28066914498141265, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3092677931387609, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 4.6681, 'eval_samples_per_second': 327.97, 'eval_steps_per_second': 41.13, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0032, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.43948838114738464, 'eval_precision': 0.3046709129511677, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31555799890049474, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.6666, 'eval_samples_per_second': 328.074, 'eval_steps_per_second': 41.143, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0024, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4474920630455017, 'eval_precision': 0.3045793397231097, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31497797356828194, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6609, 'eval_samples_per_second': 328.476, 'eval_steps_per_second': 41.194, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0029, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4510393738746643, 'eval_precision': 0.28695652173913044, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31066945606694557, 'eval_accuracy': 0.9371574152705937, 'eval_runtime': 4.6695, 'eval_samples_per_second': 327.872, 'eval_steps_per_second': 41.118, 'epoch': 14.0, 'step': 1890}, {'loss': 0.002, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.44394025206565857, 'eval_precision': 0.27408793264733394, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.30113052415210695, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.781, 'eval_steps_per_second': 41.232, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0014, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4741722047328949, 'eval_precision': 0.3016216216216216, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30965593784683687, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6665, 'eval_samples_per_second': 328.085, 'eval_steps_per_second': 41.145, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0008, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4730653166770935, 'eval_precision': 0.32, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.319634703196347, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6625, 'eval_samples_per_second': 328.362, 'eval_steps_per_second': 41.179, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0007, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4771074056625366, 'eval_precision': 0.284796573875803, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2937603533959139, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.201, 'eval_steps_per_second': 41.159, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.48351141810417175, 'eval_precision': 0.29308452250274425, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2986577181208054, 'eval_accuracy': 0.9399366942021153, 'eval_runtime': 4.6592, 'eval_samples_per_second': 328.599, 'eval_steps_per_second': 41.209, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4915649890899658, 'eval_precision': 0.3027624309392265, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3075196408529742, 'eval_accuracy': 0.9397436887207596, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.79, 'eval_steps_per_second': 41.233, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.49734675884246826, 'eval_precision': 0.30337078651685395, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30560271646859083, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6555, 'eval_samples_per_second': 328.856, 'eval_steps_per_second': 41.241, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.5028067827224731, 'eval_precision': 0.3111587982832618, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3206191265892758, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6637, 'eval_samples_per_second': 328.277, 'eval_steps_per_second': 41.169, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.505060076713562, 'eval_precision': 0.305159165751921, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3109619686800895, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6589, 'eval_samples_per_second': 328.621, 'eval_steps_per_second': 41.212, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.5041635632514954, 'eval_precision': 0.3029637760702525, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3087248322147651, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6563, 'eval_samples_per_second': 328.802, 'eval_steps_per_second': 41.234, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2100.29, 'train_samples_per_second': 98.661, 'train_steps_per_second': 1.543, 'total_flos': 2.5992409580087436e+16, 'train_loss': 0.036075598144052944, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9303
  predict_f1                 =     0.2188
  predict_loss               =      0.235
  predict_precision          =     0.1943
  predict_recall             =     0.2503
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.745
  predict_steps_per_second   =     40.593
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_40.json completed. F1: 0.2187871581450654
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_10.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_10.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7166.53 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7584.42 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7354.77 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7390.48 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7427.30 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7546.48 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 6593.18 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6956.74 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7163.70 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7742.63 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7373.76 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7438.36 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7233.82 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_2/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2939, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.22303178906440735, 'eval_precision': 0.2276657060518732, 'eval_recall': 0.18015963511972635, 'eval_f1': 0.20114576702737114, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.2492, 'eval_samples_per_second': 680.686, 'eval_steps_per_second': 85.364, 'epoch': 1.0}
{'loss': 0.178, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.22242292761802673, 'eval_precision': 0.29420505200594355, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.25548387096774194, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 2.2185, 'eval_samples_per_second': 690.092, 'eval_steps_per_second': 86.543, 'epoch': 2.0}
{'loss': 0.1, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.2769147753715515, 'eval_precision': 0.22300706357214933, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.23661670235546037, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2196, 'eval_samples_per_second': 689.771, 'eval_steps_per_second': 86.503, 'epoch': 3.0}
{'loss': 0.0603, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.3154453635215759, 'eval_precision': 0.22694394213381555, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.25315179021684314, 'eval_accuracy': 0.9303250212306029, 'eval_runtime': 2.2162, 'eval_samples_per_second': 690.827, 'eval_steps_per_second': 86.635, 'epoch': 4.0}
{'loss': 0.0343, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.36948639154434204, 'eval_precision': 0.24567099567099568, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.252082176568573, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.933, 'eval_steps_per_second': 86.649, 'epoch': 5.0}
{'loss': 0.019, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.4103434979915619, 'eval_precision': 0.22972972972972974, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2403480152256661, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.214, 'eval_samples_per_second': 691.51, 'eval_steps_per_second': 86.721, 'epoch': 6.0}
{'loss': 0.0126, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.39298874139785767, 'eval_precision': 0.24623655913978496, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.25345877144438295, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.215, 'eval_samples_per_second': 691.199, 'eval_steps_per_second': 86.682, 'epoch': 7.0}
{'loss': 0.0087, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.4283837080001831, 'eval_precision': 0.22865013774104684, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2533062054933876, 'eval_accuracy': 0.9268123214699298, 'eval_runtime': 2.2142, 'eval_samples_per_second': 691.458, 'eval_steps_per_second': 86.714, 'epoch': 8.0}
{'loss': 0.0058, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.44754883646965027, 'eval_precision': 0.22823098075160403, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2530487804878049, 'eval_accuracy': 0.9256156874855246, 'eval_runtime': 2.2164, 'eval_samples_per_second': 690.75, 'eval_steps_per_second': 86.626, 'epoch': 9.0}
{'loss': 0.0049, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.43994611501693726, 'eval_precision': 0.27241379310344827, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.271322266742988, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.2151, 'eval_samples_per_second': 691.159, 'eval_steps_per_second': 86.677, 'epoch': 10.0}
{'loss': 0.0031, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4955185353755951, 'eval_precision': 0.26322115384615385, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.25629022820362785, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2784, 'eval_samples_per_second': 671.975, 'eval_steps_per_second': 84.271, 'epoch': 11.0}
{'loss': 0.0026, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.4822555184364319, 'eval_precision': 0.23333333333333334, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.25092250922509224, 'eval_accuracy': 0.9277773488767082, 'eval_runtime': 2.2147, 'eval_samples_per_second': 691.277, 'eval_steps_per_second': 86.692, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.49342402815818787, 'eval_precision': 0.2788104089219331, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.26722090261282666, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.298, 'eval_steps_per_second': 86.569, 'epoch': 13.0}
{'loss': 0.0025, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.48579949140548706, 'eval_precision': 0.27933673469387754, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.2636965683323299, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.2061, 'eval_samples_per_second': 693.979, 'eval_steps_per_second': 87.031, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.5026521682739258, 'eval_precision': 0.263771186440678, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2734761120263592, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.2062, 'eval_samples_per_second': 693.943, 'eval_steps_per_second': 87.026, 'epoch': 15.0}
{'loss': 0.0009, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.5185865759849548, 'eval_precision': 0.2611534276387378, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.267260579064588, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2201, 'eval_samples_per_second': 689.605, 'eval_steps_per_second': 86.482, 'epoch': 16.0}
{'loss': 0.0009, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.5141074061393738, 'eval_precision': 0.27197149643705465, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.266433973240256, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.2164, 'eval_samples_per_second': 690.752, 'eval_steps_per_second': 86.626, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.5268068909645081, 'eval_precision': 0.26521239954075776, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26430205949656754, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.2144, 'eval_samples_per_second': 691.386, 'eval_steps_per_second': 86.706, 'epoch': 18.0}
{'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.5384024977684021, 'eval_precision': 0.2681242807825086, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26689576174112256, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2156, 'eval_samples_per_second': 691.003, 'eval_steps_per_second': 86.657, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.5527667999267578, 'eval_precision': 0.26787741203178206, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2684869169510808, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.2817, 'eval_samples_per_second': 670.99, 'eval_steps_per_second': 84.148, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.5508434772491455, 'eval_precision': 0.24215686274509804, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2604111755403269, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2241, 'eval_samples_per_second': 688.358, 'eval_steps_per_second': 86.326, 'epoch': 21.0}
{'loss': 0.0001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5505695343017578, 'eval_precision': 0.26440677966101694, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2656072644721907, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2161, 'eval_samples_per_second': 690.857, 'eval_steps_per_second': 86.639, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.5531702041625977, 'eval_precision': 0.2633371169125993, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.2639362912400455, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.2272, 'eval_samples_per_second': 687.412, 'eval_steps_per_second': 86.207, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5538572669029236, 'eval_precision': 0.26590909090909093, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2663631189527603, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.2218, 'eval_samples_per_second': 689.079, 'eval_steps_per_second': 86.416, 'epoch': 24.0}
{'train_runtime': 748.2459, 'train_samples_per_second': 276.936, 'train_steps_per_second': 6.928, 'train_loss': 0.030510834600046322, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0305
  train_runtime            = 0:12:28.24
  train_samples            =       8634
  train_samples_per_second =    276.936
  train_steps_per_second   =      6.928
[{'loss': 0.2939, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.22303178906440735, 'eval_precision': 0.2276657060518732, 'eval_recall': 0.18015963511972635, 'eval_f1': 0.20114576702737114, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.2492, 'eval_samples_per_second': 680.686, 'eval_steps_per_second': 85.364, 'epoch': 1.0, 'step': 216}, {'loss': 0.178, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.22242292761802673, 'eval_precision': 0.29420505200594355, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.25548387096774194, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 2.2185, 'eval_samples_per_second': 690.092, 'eval_steps_per_second': 86.543, 'epoch': 2.0, 'step': 432}, {'loss': 0.1, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.2769147753715515, 'eval_precision': 0.22300706357214933, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.23661670235546037, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2196, 'eval_samples_per_second': 689.771, 'eval_steps_per_second': 86.503, 'epoch': 3.0, 'step': 648}, {'loss': 0.0603, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.3154453635215759, 'eval_precision': 0.22694394213381555, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.25315179021684314, 'eval_accuracy': 0.9303250212306029, 'eval_runtime': 2.2162, 'eval_samples_per_second': 690.827, 'eval_steps_per_second': 86.635, 'epoch': 4.0, 'step': 864}, {'loss': 0.0343, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.36948639154434204, 'eval_precision': 0.24567099567099568, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.252082176568573, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.933, 'eval_steps_per_second': 86.649, 'epoch': 5.0, 'step': 1080}, {'loss': 0.019, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.4103434979915619, 'eval_precision': 0.22972972972972974, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2403480152256661, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.214, 'eval_samples_per_second': 691.51, 'eval_steps_per_second': 86.721, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0126, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.39298874139785767, 'eval_precision': 0.24623655913978496, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.25345877144438295, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.215, 'eval_samples_per_second': 691.199, 'eval_steps_per_second': 86.682, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0087, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.4283837080001831, 'eval_precision': 0.22865013774104684, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2533062054933876, 'eval_accuracy': 0.9268123214699298, 'eval_runtime': 2.2142, 'eval_samples_per_second': 691.458, 'eval_steps_per_second': 86.714, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0058, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.44754883646965027, 'eval_precision': 0.22823098075160403, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2530487804878049, 'eval_accuracy': 0.9256156874855246, 'eval_runtime': 2.2164, 'eval_samples_per_second': 690.75, 'eval_steps_per_second': 86.626, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0049, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.43994611501693726, 'eval_precision': 0.27241379310344827, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.271322266742988, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.2151, 'eval_samples_per_second': 691.159, 'eval_steps_per_second': 86.677, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0031, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4955185353755951, 'eval_precision': 0.26322115384615385, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.25629022820362785, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 2.2784, 'eval_samples_per_second': 671.975, 'eval_steps_per_second': 84.271, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0026, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.4822555184364319, 'eval_precision': 0.23333333333333334, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.25092250922509224, 'eval_accuracy': 0.9277773488767082, 'eval_runtime': 2.2147, 'eval_samples_per_second': 691.277, 'eval_steps_per_second': 86.692, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0019, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.49342402815818787, 'eval_precision': 0.2788104089219331, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.26722090261282666, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.298, 'eval_steps_per_second': 86.569, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0025, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.48579949140548706, 'eval_precision': 0.27933673469387754, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.2636965683323299, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.2061, 'eval_samples_per_second': 693.979, 'eval_steps_per_second': 87.031, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.5026521682739258, 'eval_precision': 0.263771186440678, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2734761120263592, 'eval_accuracy': 0.9322164749478885, 'eval_runtime': 2.2062, 'eval_samples_per_second': 693.943, 'eval_steps_per_second': 87.026, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0009, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.5185865759849548, 'eval_precision': 0.2611534276387378, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.267260579064588, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2201, 'eval_samples_per_second': 689.605, 'eval_steps_per_second': 86.482, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0009, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5141074061393738, 'eval_precision': 0.27197149643705465, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.266433973240256, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.2164, 'eval_samples_per_second': 690.752, 'eval_steps_per_second': 86.626, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0006, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.5268068909645081, 'eval_precision': 0.26521239954075776, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26430205949656754, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.2144, 'eval_samples_per_second': 691.386, 'eval_steps_per_second': 86.706, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5384024977684021, 'eval_precision': 0.2681242807825086, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.26689576174112256, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.2156, 'eval_samples_per_second': 691.003, 'eval_steps_per_second': 86.657, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5527667999267578, 'eval_precision': 0.26787741203178206, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2684869169510808, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.2817, 'eval_samples_per_second': 670.99, 'eval_steps_per_second': 84.148, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5508434772491455, 'eval_precision': 0.24215686274509804, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2604111755403269, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 2.2241, 'eval_samples_per_second': 688.358, 'eval_steps_per_second': 86.326, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5505695343017578, 'eval_precision': 0.26440677966101694, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2656072644721907, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.2161, 'eval_samples_per_second': 690.857, 'eval_steps_per_second': 86.639, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5531702041625977, 'eval_precision': 0.2633371169125993, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.2639362912400455, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.2272, 'eval_samples_per_second': 687.412, 'eval_steps_per_second': 86.207, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5538572669029236, 'eval_precision': 0.26590909090909093, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2663631189527603, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.2218, 'eval_samples_per_second': 689.079, 'eval_steps_per_second': 86.416, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 748.2459, 'train_samples_per_second': 276.936, 'train_steps_per_second': 6.928, 'total_flos': 6811384717195656.0, 'train_loss': 0.030510834600046322, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9382
  predict_f1                 =     0.2355
  predict_loss               =     0.2435
  predict_precision          =     0.2783
  predict_recall             =     0.2041
  predict_runtime            = 0:00:01.85
  predict_samples_per_second =    686.858
  predict_steps_per_second   =     85.857
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_10.json completed. F1: 0.23547880690737835
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_08.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6719.75 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7137.04 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6951.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6999.99 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7030.63 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7153.47 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7318.75 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7379.32 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6822.86 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7318.24 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6999.48 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7048.61 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6888.48 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0291, 'eval_samples_per_second': 505.436, 'eval_steps_per_second': 63.386, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.843, 'eval_steps_per_second': 64.064, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9837, 'eval_samples_per_second': 513.129, 'eval_steps_per_second': 64.351, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.65, 'eval_steps_per_second': 64.291, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9745, 'eval_samples_per_second': 514.701, 'eval_steps_per_second': 64.548, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.014, 'eval_samples_per_second': 507.957, 'eval_steps_per_second': 63.702, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0039, 'eval_samples_per_second': 509.669, 'eval_steps_per_second': 63.917, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9955, 'eval_samples_per_second': 511.094, 'eval_steps_per_second': 64.095, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9692, 'eval_samples_per_second': 515.629, 'eval_steps_per_second': 64.664, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9751, 'eval_samples_per_second': 514.611, 'eval_steps_per_second': 64.536, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0727, 'eval_samples_per_second': 498.264, 'eval_steps_per_second': 62.486, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.545, 'eval_steps_per_second': 64.528, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.357, 'eval_steps_per_second': 64.63, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.042, 'eval_steps_per_second': 64.214, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9817, 'eval_samples_per_second': 513.458, 'eval_steps_per_second': 64.392, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9899, 'eval_samples_per_second': 512.049, 'eval_steps_per_second': 64.215, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9881, 'eval_samples_per_second': 512.367, 'eval_steps_per_second': 64.255, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9889, 'eval_samples_per_second': 512.236, 'eval_steps_per_second': 64.239, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9659, 'eval_samples_per_second': 516.196, 'eval_steps_per_second': 64.735, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9634, 'eval_samples_per_second': 516.63, 'eval_steps_per_second': 64.79, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9533, 'eval_samples_per_second': 518.397, 'eval_steps_per_second': 65.011, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0041, 'eval_samples_per_second': 509.634, 'eval_steps_per_second': 63.912, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9661, 'eval_samples_per_second': 516.16, 'eval_steps_per_second': 64.731, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0339, 'eval_samples_per_second': 504.628, 'eval_steps_per_second': 63.285, 'epoch': 24.0}
{'train_runtime': 859.0972, 'train_samples_per_second': 241.202, 'train_steps_per_second': 6.034, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:19.09
  train_samples            =       8634
  train_samples_per_second =    241.202
  train_steps_per_second   =      6.034
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0291, 'eval_samples_per_second': 505.436, 'eval_steps_per_second': 63.386, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.843, 'eval_steps_per_second': 64.064, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9837, 'eval_samples_per_second': 513.129, 'eval_steps_per_second': 64.351, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.65, 'eval_steps_per_second': 64.291, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9745, 'eval_samples_per_second': 514.701, 'eval_steps_per_second': 64.548, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.014, 'eval_samples_per_second': 507.957, 'eval_steps_per_second': 63.702, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0039, 'eval_samples_per_second': 509.669, 'eval_steps_per_second': 63.917, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9955, 'eval_samples_per_second': 511.094, 'eval_steps_per_second': 64.095, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9692, 'eval_samples_per_second': 515.629, 'eval_steps_per_second': 64.664, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9751, 'eval_samples_per_second': 514.611, 'eval_steps_per_second': 64.536, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0727, 'eval_samples_per_second': 498.264, 'eval_steps_per_second': 62.486, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.545, 'eval_steps_per_second': 64.528, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.357, 'eval_steps_per_second': 64.63, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.042, 'eval_steps_per_second': 64.214, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9817, 'eval_samples_per_second': 513.458, 'eval_steps_per_second': 64.392, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9899, 'eval_samples_per_second': 512.049, 'eval_steps_per_second': 64.215, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9881, 'eval_samples_per_second': 512.367, 'eval_steps_per_second': 64.255, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9889, 'eval_samples_per_second': 512.236, 'eval_steps_per_second': 64.239, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9659, 'eval_samples_per_second': 516.196, 'eval_steps_per_second': 64.735, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9634, 'eval_samples_per_second': 516.63, 'eval_steps_per_second': 64.79, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9533, 'eval_samples_per_second': 518.397, 'eval_steps_per_second': 65.011, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0041, 'eval_samples_per_second': 509.634, 'eval_steps_per_second': 63.912, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9661, 'eval_samples_per_second': 516.16, 'eval_steps_per_second': 64.731, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0339, 'eval_samples_per_second': 504.628, 'eval_steps_per_second': 63.285, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 859.0972, 'train_samples_per_second': 241.202, 'train_steps_per_second': 6.034, 'total_flos': 7005004481258868.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =      513.8
  predict_steps_per_second   =     64.225
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_08.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_32.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_32.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6662.52 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7054.01 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6834.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6858.14 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6916.09 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7010.88 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6197.02 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6512.32 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6686.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7232.07 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6867.25 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6950.03 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6785.37 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3114, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.21720382571220398, 'eval_precision': 0.24586549062844543, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.25, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 2.3841, 'eval_samples_per_second': 642.158, 'eval_steps_per_second': 80.532, 'epoch': 1.0}
{'loss': 0.1966, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.22053074836730957, 'eval_precision': 0.276218611521418, 'eval_recall': 0.21322690992018245, 'eval_f1': 0.24066924066924067, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 2.3751, 'eval_samples_per_second': 644.612, 'eval_steps_per_second': 80.84, 'epoch': 2.0}
{'loss': 0.1354, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.23495353758335114, 'eval_precision': 0.26651735722284436, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.2689265536723164, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.3695, 'eval_samples_per_second': 646.118, 'eval_steps_per_second': 81.028, 'epoch': 3.0}
{'loss': 0.0953, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2772427797317505, 'eval_precision': 0.2617230098146129, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26755852842809363, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.313, 'eval_steps_per_second': 81.178, 'epoch': 4.0}
{'loss': 0.0698, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2900138199329376, 'eval_precision': 0.2784090909090909, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2788844621513944, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.01, 'eval_steps_per_second': 80.89, 'epoch': 5.0}
{'loss': 0.0485, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.31057009100914, 'eval_precision': 0.2625968992248062, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28391828182294393, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.689, 'eval_steps_per_second': 81.351, 'epoch': 6.0}
{'loss': 0.0318, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.34163689613342285, 'eval_precision': 0.2782258064516129, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29534510433386835, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.3744, 'eval_samples_per_second': 644.787, 'eval_steps_per_second': 80.862, 'epoch': 7.0}
{'loss': 0.0214, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.37154439091682434, 'eval_precision': 0.2761363636363636, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.27660785429709733, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.126, 'eval_steps_per_second': 80.904, 'epoch': 8.0}
{'loss': 0.0139, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.38767072558403015, 'eval_precision': 0.28271604938271605, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.27148784825133376, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.166, 'eval_steps_per_second': 81.16, 'epoch': 9.0}
{'loss': 0.0107, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.39217865467071533, 'eval_precision': 0.26504751847940866, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.27521929824561403, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 2.3735, 'eval_samples_per_second': 645.039, 'eval_steps_per_second': 80.893, 'epoch': 10.0}
{'loss': 0.0077, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4208182990550995, 'eval_precision': 0.24807692307692308, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.26917057902973396, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.674, 'eval_steps_per_second': 80.847, 'epoch': 11.0}
{'loss': 0.0059, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.43155941367149353, 'eval_precision': 0.26715945089757126, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2774122807017544, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.745, 'eval_steps_per_second': 81.358, 'epoch': 12.0}
{'loss': 0.004, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.437112033367157, 'eval_precision': 0.2951388888888889, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2929350947731189, 'eval_accuracy': 0.9365783988265267, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.61, 'eval_steps_per_second': 81.09, 'epoch': 13.0}
{'loss': 0.0037, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.4523615539073944, 'eval_precision': 0.26147704590818366, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.278871740287387, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.177, 'eval_steps_per_second': 81.412, 'epoch': 14.0}
{'loss': 0.0025, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.4566514790058136, 'eval_precision': 0.28042959427207637, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2740524781341108, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3527, 'eval_samples_per_second': 650.736, 'eval_steps_per_second': 81.608, 'epoch': 15.0}
{'loss': 0.002, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4632193148136139, 'eval_precision': 0.2818713450292398, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.27829099307159355, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.668, 'eval_steps_per_second': 81.474, 'epoch': 16.0}
{'loss': 0.0017, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.4709058701992035, 'eval_precision': 0.28434504792332266, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2940528634361233, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.369, 'eval_samples_per_second': 646.259, 'eval_steps_per_second': 81.046, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.47239455580711365, 'eval_precision': 0.29418886198547217, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.28537874339401054, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3693, 'eval_samples_per_second': 646.186, 'eval_steps_per_second': 81.037, 'epoch': 18.0}
{'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.4830591678619385, 'eval_precision': 0.29208472686733555, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29537767756482525, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.683, 'eval_steps_per_second': 81.099, 'epoch': 19.0}
{'loss': 0.0013, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.4774303138256073, 'eval_precision': 0.29467455621301775, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.289198606271777, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3664, 'eval_samples_per_second': 646.983, 'eval_steps_per_second': 81.137, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.48315465450286865, 'eval_precision': 0.2985781990521327, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2928529924462522, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.61, 'eval_steps_per_second': 81.09, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.48981526494026184, 'eval_precision': 0.2971098265895954, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.29506314580941445, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.891, 'eval_steps_per_second': 81.125, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.49144765734672546, 'eval_precision': 0.29418472063854045, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.29418472063854045, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.891, 'eval_steps_per_second': 81.126, 'epoch': 23.0}
{'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4915681481361389, 'eval_precision': 0.29260089686098656, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29508196721311475, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3749, 'eval_samples_per_second': 644.657, 'eval_steps_per_second': 80.845, 'epoch': 24.0}
{'train_runtime': 837.3798, 'train_samples_per_second': 247.458, 'train_steps_per_second': 3.869, 'train_loss': 0.04033169212900562, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0403
  train_runtime            = 0:13:57.37
  train_samples            =       8634
  train_samples_per_second =    247.458
  train_steps_per_second   =      3.869
[{'loss': 0.3114, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21720382571220398, 'eval_precision': 0.24586549062844543, 'eval_recall': 0.2542759407069555, 'eval_f1': 0.25, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 2.3841, 'eval_samples_per_second': 642.158, 'eval_steps_per_second': 80.532, 'epoch': 1.0, 'step': 135}, {'loss': 0.1966, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.22053074836730957, 'eval_precision': 0.276218611521418, 'eval_recall': 0.21322690992018245, 'eval_f1': 0.24066924066924067, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 2.3751, 'eval_samples_per_second': 644.612, 'eval_steps_per_second': 80.84, 'epoch': 2.0, 'step': 270}, {'loss': 0.1354, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.23495353758335114, 'eval_precision': 0.26651735722284436, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.2689265536723164, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.3695, 'eval_samples_per_second': 646.118, 'eval_steps_per_second': 81.028, 'epoch': 3.0, 'step': 405}, {'loss': 0.0953, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2772427797317505, 'eval_precision': 0.2617230098146129, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.26755852842809363, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.313, 'eval_steps_per_second': 81.178, 'epoch': 4.0, 'step': 540}, {'loss': 0.0698, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2900138199329376, 'eval_precision': 0.2784090909090909, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2788844621513944, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.01, 'eval_steps_per_second': 80.89, 'epoch': 5.0, 'step': 675}, {'loss': 0.0485, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.31057009100914, 'eval_precision': 0.2625968992248062, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28391828182294393, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.689, 'eval_steps_per_second': 81.351, 'epoch': 6.0, 'step': 810}, {'loss': 0.0318, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.34163689613342285, 'eval_precision': 0.2782258064516129, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29534510433386835, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.3744, 'eval_samples_per_second': 644.787, 'eval_steps_per_second': 80.862, 'epoch': 7.0, 'step': 945}, {'loss': 0.0214, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.37154439091682434, 'eval_precision': 0.2761363636363636, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.27660785429709733, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.126, 'eval_steps_per_second': 80.904, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0139, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.38767072558403015, 'eval_precision': 0.28271604938271605, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.27148784825133376, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.166, 'eval_steps_per_second': 81.16, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0107, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.39217865467071533, 'eval_precision': 0.26504751847940866, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.27521929824561403, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 2.3735, 'eval_samples_per_second': 645.039, 'eval_steps_per_second': 80.893, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0077, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4208182990550995, 'eval_precision': 0.24807692307692308, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.26917057902973396, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.674, 'eval_steps_per_second': 80.847, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0059, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.43155941367149353, 'eval_precision': 0.26715945089757126, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2774122807017544, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.745, 'eval_steps_per_second': 81.358, 'epoch': 12.0, 'step': 1620}, {'loss': 0.004, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.437112033367157, 'eval_precision': 0.2951388888888889, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2929350947731189, 'eval_accuracy': 0.9365783988265267, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.61, 'eval_steps_per_second': 81.09, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0037, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4523615539073944, 'eval_precision': 0.26147704590818366, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.278871740287387, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.177, 'eval_steps_per_second': 81.412, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0025, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4566514790058136, 'eval_precision': 0.28042959427207637, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2740524781341108, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3527, 'eval_samples_per_second': 650.736, 'eval_steps_per_second': 81.608, 'epoch': 15.0, 'step': 2025}, {'loss': 0.002, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4632193148136139, 'eval_precision': 0.2818713450292398, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.27829099307159355, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.668, 'eval_steps_per_second': 81.474, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0017, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4709058701992035, 'eval_precision': 0.28434504792332266, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2940528634361233, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.369, 'eval_samples_per_second': 646.259, 'eval_steps_per_second': 81.046, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0011, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.47239455580711365, 'eval_precision': 0.29418886198547217, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.28537874339401054, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3693, 'eval_samples_per_second': 646.186, 'eval_steps_per_second': 81.037, 'epoch': 18.0, 'step': 2430}, {'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4830591678619385, 'eval_precision': 0.29208472686733555, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29537767756482525, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.683, 'eval_steps_per_second': 81.099, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0013, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4774303138256073, 'eval_precision': 0.29467455621301775, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.289198606271777, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.3664, 'eval_samples_per_second': 646.983, 'eval_steps_per_second': 81.137, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0006, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.48315465450286865, 'eval_precision': 0.2985781990521327, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2928529924462522, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.61, 'eval_steps_per_second': 81.09, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0006, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.48981526494026184, 'eval_precision': 0.2971098265895954, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.29506314580941445, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.891, 'eval_steps_per_second': 81.125, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.49144765734672546, 'eval_precision': 0.29418472063854045, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.29418472063854045, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.891, 'eval_steps_per_second': 81.126, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4915681481361389, 'eval_precision': 0.29260089686098656, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29508196721311475, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3749, 'eval_samples_per_second': 644.657, 'eval_steps_per_second': 80.845, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 837.3798, 'train_samples_per_second': 247.458, 'train_steps_per_second': 3.869, 'total_flos': 8937292497160812.0, 'train_loss': 0.04033169212900562, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9339
  predict_f1                 =     0.1826
  predict_loss               =     0.2301
  predict_precision          =     0.1842
  predict_recall             =      0.181
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =    644.465
  predict_steps_per_second   =     80.558
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_32.json completed. F1: 0.182566918325326
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_12.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6318.81 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7020.88 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6908.65 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6990.97 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7091.31 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7189.61 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6324.60 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6678.77 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6816.49 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7452.27 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7086.75 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7104.40 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6934.50 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2787, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.20000192523002625, 'eval_precision': 0.2958801498127341, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2824791418355184, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6752, 'eval_samples_per_second': 327.473, 'eval_steps_per_second': 41.068, 'epoch': 1.0}
{'loss': 0.1784, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.20475298166275024, 'eval_precision': 0.3328402366863905, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.2897617514488087, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 4.6593, 'eval_samples_per_second': 328.594, 'eval_steps_per_second': 41.208, 'epoch': 2.0}
{'loss': 0.117, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.22082550823688507, 'eval_precision': 0.2805755395683453, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2951351351351352, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.886, 'eval_steps_per_second': 41.245, 'epoch': 3.0}
{'loss': 0.0806, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2743673026561737, 'eval_precision': 0.2915742793791574, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29567172568858907, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.648, 'eval_steps_per_second': 41.215, 'epoch': 4.0}
{'loss': 0.0506, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2909504473209381, 'eval_precision': 0.2698237885462555, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2745098039215686, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.204, 'eval_steps_per_second': 41.285, 'epoch': 5.0}
{'loss': 0.0329, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3393060266971588, 'eval_precision': 0.3119496855345912, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2966507177033493, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.033, 'eval_steps_per_second': 41.263, 'epoch': 6.0}
{'loss': 0.0197, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.3577015697956085, 'eval_precision': 0.2716873212583413, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.2959501557632398, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 4.6544, 'eval_samples_per_second': 328.933, 'eval_steps_per_second': 41.251, 'epoch': 7.0}
{'loss': 0.0119, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3923023045063019, 'eval_precision': 0.2630057803468208, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2851174934725849, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 4.6534, 'eval_samples_per_second': 329.007, 'eval_steps_per_second': 41.26, 'epoch': 8.0}
{'loss': 0.0087, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.3653523325920105, 'eval_precision': 0.2780806979280262, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.28428093645484953, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 4.6501, 'eval_samples_per_second': 329.238, 'eval_steps_per_second': 41.289, 'epoch': 9.0}
{'loss': 0.0056, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.42519673705101013, 'eval_precision': 0.2926078028747433, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3079416531604538, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.852, 'eval_steps_per_second': 41.241, 'epoch': 10.0}
{'loss': 0.0048, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4325178861618042, 'eval_precision': 0.2948430493273543, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2973431317128321, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6449, 'eval_samples_per_second': 329.605, 'eval_steps_per_second': 41.335, 'epoch': 11.0}
{'loss': 0.0035, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.43616044521331787, 'eval_precision': 0.3227931488801054, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2995110024449878, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.227, 'eval_steps_per_second': 41.288, 'epoch': 12.0}
{'loss': 0.0027, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.4601806402206421, 'eval_precision': 0.32054794520547947, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2912258867454885, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.556, 'eval_steps_per_second': 41.204, 'epoch': 13.0}
{'loss': 0.0024, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.4644767940044403, 'eval_precision': 0.32904884318766064, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30936555891238676, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.791, 'eval_steps_per_second': 41.233, 'epoch': 14.0}
{'loss': 0.0033, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.4479312300682068, 'eval_precision': 0.3237063778580024, 'eval_recall': 0.30672748004561, 'eval_f1': 0.3149882903981264, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 4.6578, 'eval_samples_per_second': 328.693, 'eval_steps_per_second': 41.221, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4594085216522217, 'eval_precision': 0.2770475227502528, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29367631296891744, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.449, 'eval_steps_per_second': 41.316, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.46541959047317505, 'eval_precision': 0.3047722342733189, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3123957754307949, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 4.6553, 'eval_samples_per_second': 328.871, 'eval_steps_per_second': 41.243, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.4712185561656952, 'eval_precision': 0.3168674698795181, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.3081429408318688, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6488, 'eval_samples_per_second': 329.332, 'eval_steps_per_second': 41.301, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.48050177097320557, 'eval_precision': 0.3141809290953545, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.3032448377581121, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.961, 'eval_steps_per_second': 41.254, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.5037807822227478, 'eval_precision': 0.29694323144104806, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3034021193530397, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.84, 'eval_steps_per_second': 41.239, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.5055516362190247, 'eval_precision': 0.3107344632768362, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.31214528944381387, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.078, 'eval_steps_per_second': 41.269, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5075876712799072, 'eval_precision': 0.309662398137369, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3064516129032258, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.013, 'eval_steps_per_second': 41.261, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.5110092759132385, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9383540492549989, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.982, 'eval_steps_per_second': 41.257, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5139965415000916, 'eval_precision': 0.3077816492450639, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3049482163406214, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.615, 'eval_steps_per_second': 41.336, 'epoch': 24.0}
{'train_runtime': 2098.7298, 'train_samples_per_second': 98.734, 'train_steps_per_second': 2.47, 'train_loss': 0.033592415410151455, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0336
  train_runtime            = 0:34:58.72
  train_samples            =       8634
  train_samples_per_second =     98.734
  train_steps_per_second   =       2.47
[{'loss': 0.2787, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.20000192523002625, 'eval_precision': 0.2958801498127341, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2824791418355184, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6752, 'eval_samples_per_second': 327.473, 'eval_steps_per_second': 41.068, 'epoch': 1.0, 'step': 216}, {'loss': 0.1784, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.20475298166275024, 'eval_precision': 0.3328402366863905, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.2897617514488087, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 4.6593, 'eval_samples_per_second': 328.594, 'eval_steps_per_second': 41.208, 'epoch': 2.0, 'step': 432}, {'loss': 0.117, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.22082550823688507, 'eval_precision': 0.2805755395683453, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2951351351351352, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.886, 'eval_steps_per_second': 41.245, 'epoch': 3.0, 'step': 648}, {'loss': 0.0806, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2743673026561737, 'eval_precision': 0.2915742793791574, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29567172568858907, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.648, 'eval_steps_per_second': 41.215, 'epoch': 4.0, 'step': 864}, {'loss': 0.0506, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2909504473209381, 'eval_precision': 0.2698237885462555, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2745098039215686, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.204, 'eval_steps_per_second': 41.285, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0329, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3393060266971588, 'eval_precision': 0.3119496855345912, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2966507177033493, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.033, 'eval_steps_per_second': 41.263, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0197, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3577015697956085, 'eval_precision': 0.2716873212583413, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.2959501557632398, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 4.6544, 'eval_samples_per_second': 328.933, 'eval_steps_per_second': 41.251, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0119, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3923023045063019, 'eval_precision': 0.2630057803468208, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2851174934725849, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 4.6534, 'eval_samples_per_second': 329.007, 'eval_steps_per_second': 41.26, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0087, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3653523325920105, 'eval_precision': 0.2780806979280262, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.28428093645484953, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 4.6501, 'eval_samples_per_second': 329.238, 'eval_steps_per_second': 41.289, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0056, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.42519673705101013, 'eval_precision': 0.2926078028747433, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3079416531604538, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.852, 'eval_steps_per_second': 41.241, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0048, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4325178861618042, 'eval_precision': 0.2948430493273543, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2973431317128321, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6449, 'eval_samples_per_second': 329.605, 'eval_steps_per_second': 41.335, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0035, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.43616044521331787, 'eval_precision': 0.3227931488801054, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2995110024449878, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.227, 'eval_steps_per_second': 41.288, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0027, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.4601806402206421, 'eval_precision': 0.32054794520547947, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2912258867454885, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.556, 'eval_steps_per_second': 41.204, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0024, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4644767940044403, 'eval_precision': 0.32904884318766064, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30936555891238676, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.791, 'eval_steps_per_second': 41.233, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0033, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4479312300682068, 'eval_precision': 0.3237063778580024, 'eval_recall': 0.30672748004561, 'eval_f1': 0.3149882903981264, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 4.6578, 'eval_samples_per_second': 328.693, 'eval_steps_per_second': 41.221, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0019, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4594085216522217, 'eval_precision': 0.2770475227502528, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29367631296891744, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.449, 'eval_steps_per_second': 41.316, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0012, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.46541959047317505, 'eval_precision': 0.3047722342733189, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3123957754307949, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 4.6553, 'eval_samples_per_second': 328.871, 'eval_steps_per_second': 41.243, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0008, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4712185561656952, 'eval_precision': 0.3168674698795181, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.3081429408318688, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 4.6488, 'eval_samples_per_second': 329.332, 'eval_steps_per_second': 41.301, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.48050177097320557, 'eval_precision': 0.3141809290953545, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.3032448377581121, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.961, 'eval_steps_per_second': 41.254, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5037807822227478, 'eval_precision': 0.29694323144104806, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3034021193530397, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.84, 'eval_steps_per_second': 41.239, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5055516362190247, 'eval_precision': 0.3107344632768362, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.31214528944381387, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.078, 'eval_steps_per_second': 41.269, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5075876712799072, 'eval_precision': 0.309662398137369, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3064516129032258, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.013, 'eval_steps_per_second': 41.261, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5110092759132385, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9383540492549989, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.982, 'eval_steps_per_second': 41.257, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5139965415000916, 'eval_precision': 0.3077816492450639, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3049482163406214, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.615, 'eval_steps_per_second': 41.336, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2098.7298, 'train_samples_per_second': 98.734, 'train_steps_per_second': 2.47, 'total_flos': 2.388369125393575e+16, 'train_loss': 0.033592415410151455, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9388
  predict_f1                 =     0.2672
  predict_loss               =     0.2139
  predict_precision          =     0.2798
  predict_recall             =     0.2558
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.661
  predict_steps_per_second   =     40.708
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_12.json completed. F1: 0.26723525230987916
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_27.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_27.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6830.44 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7231.98 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7006.47 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7038.96 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7060.42 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7192.33 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7350.19 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6393.96 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6842.00 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7325.17 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7000.10 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7082.99 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6915.57 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_3_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8609, 'eval_samples_per_second': 261.224, 'eval_steps_per_second': 32.76, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.77, 'eval_samples_per_second': 265.337, 'eval_steps_per_second': 33.275, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.184, 'eval_steps_per_second': 33.382, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.576, 'eval_steps_per_second': 33.431, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7386, 'eval_samples_per_second': 266.791, 'eval_steps_per_second': 33.458, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.732, 'eval_samples_per_second': 267.099, 'eval_steps_per_second': 33.496, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7484, 'eval_samples_per_second': 266.333, 'eval_steps_per_second': 33.4, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7943, 'eval_samples_per_second': 264.225, 'eval_steps_per_second': 33.136, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8148, 'eval_samples_per_second': 263.293, 'eval_steps_per_second': 33.019, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7366, 'eval_samples_per_second': 266.883, 'eval_steps_per_second': 33.469, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7818, 'eval_samples_per_second': 264.795, 'eval_steps_per_second': 33.207, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7181, 'eval_samples_per_second': 267.744, 'eval_steps_per_second': 33.577, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7776, 'eval_samples_per_second': 264.99, 'eval_steps_per_second': 33.232, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7292, 'eval_samples_per_second': 267.227, 'eval_steps_per_second': 33.512, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.775, 'eval_samples_per_second': 265.106, 'eval_steps_per_second': 33.247, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7431, 'eval_samples_per_second': 266.582, 'eval_steps_per_second': 33.432, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7794, 'eval_samples_per_second': 264.905, 'eval_steps_per_second': 33.221, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.717, 'eval_samples_per_second': 267.798, 'eval_steps_per_second': 33.584, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7011, 'eval_samples_per_second': 268.545, 'eval_steps_per_second': 33.678, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7116, 'eval_samples_per_second': 268.053, 'eval_steps_per_second': 33.616, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7627, 'eval_samples_per_second': 265.674, 'eval_steps_per_second': 33.318, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8184, 'eval_samples_per_second': 263.132, 'eval_steps_per_second': 32.999, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7186, 'eval_samples_per_second': 267.722, 'eval_steps_per_second': 33.575, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7612, 'eval_samples_per_second': 265.744, 'eval_steps_per_second': 33.326, 'epoch': 24.0}
{'train_runtime': 2418.9231, 'train_samples_per_second': 85.665, 'train_steps_per_second': 1.339, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:18.92
  train_samples            =       8634
  train_samples_per_second =     85.665
  train_steps_per_second   =      1.339
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8609, 'eval_samples_per_second': 261.224, 'eval_steps_per_second': 32.76, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.77, 'eval_samples_per_second': 265.337, 'eval_steps_per_second': 33.275, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.184, 'eval_steps_per_second': 33.382, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.576, 'eval_steps_per_second': 33.431, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7386, 'eval_samples_per_second': 266.791, 'eval_steps_per_second': 33.458, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.732, 'eval_samples_per_second': 267.099, 'eval_steps_per_second': 33.496, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7484, 'eval_samples_per_second': 266.333, 'eval_steps_per_second': 33.4, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7943, 'eval_samples_per_second': 264.225, 'eval_steps_per_second': 33.136, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8148, 'eval_samples_per_second': 263.293, 'eval_steps_per_second': 33.019, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7366, 'eval_samples_per_second': 266.883, 'eval_steps_per_second': 33.469, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7818, 'eval_samples_per_second': 264.795, 'eval_steps_per_second': 33.207, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7181, 'eval_samples_per_second': 267.744, 'eval_steps_per_second': 33.577, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7776, 'eval_samples_per_second': 264.99, 'eval_steps_per_second': 33.232, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7292, 'eval_samples_per_second': 267.227, 'eval_steps_per_second': 33.512, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.775, 'eval_samples_per_second': 265.106, 'eval_steps_per_second': 33.247, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7431, 'eval_samples_per_second': 266.582, 'eval_steps_per_second': 33.432, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7794, 'eval_samples_per_second': 264.905, 'eval_steps_per_second': 33.221, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.717, 'eval_samples_per_second': 267.798, 'eval_steps_per_second': 33.584, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7011, 'eval_samples_per_second': 268.545, 'eval_steps_per_second': 33.678, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7116, 'eval_samples_per_second': 268.053, 'eval_steps_per_second': 33.616, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7627, 'eval_samples_per_second': 265.674, 'eval_steps_per_second': 33.318, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8184, 'eval_samples_per_second': 263.132, 'eval_steps_per_second': 32.999, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7186, 'eval_samples_per_second': 267.722, 'eval_steps_per_second': 33.575, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7612, 'eval_samples_per_second': 265.744, 'eval_steps_per_second': 33.326, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2418.9231, 'train_samples_per_second': 85.665, 'train_steps_per_second': 1.339, 'total_flos': 2.705848648987374e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.82
  predict_samples_per_second =    263.709
  predict_steps_per_second   =     32.964
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_27.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_11.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_11.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6833.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7236.11 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7038.97 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7047.67 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7079.13 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7216.64 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6379.44 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6706.98 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6874.63 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7390.73 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7039.30 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7059.51 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6884.11 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
slurmstepd: error: *** JOB 409575 ON gpu-7 CANCELLED AT 2024-01-17T21:54:43 DUE TO TIME LIMIT ***

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
409575       tsa_norbe+          1                                             09:00:19      0:0 
409575.batch      batch          1        1   08:50:01          0   08:50:01   09:00:20     0:15 
409575.exte+     extern          1        1   00:00:00          0   00:00:00   09:00:19      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
409575                                                                           
409575.batch   3883320K          0   3883320K        0              0          0 
409575.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
409575                                                                                                
409575.batch     9764.13M               0       9764.13M  1441119.72M                0    1441119.72M 
409575.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 409575 completed at Wed Jan 17 21:54:45 CET 2024
