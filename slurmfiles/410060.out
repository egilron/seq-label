Starting job 410060 on gpu-7 at Thu Jan 18 11:02:36 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_09.json
01170944_tsa-intensity_NorBERT_1_09.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_39.json
01170944_tsa-intensity_NB-BERT_base_39.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_23.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_23.json
01170944_tsa-intensity_NorBERT_1_23.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_28.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_28.json
01170944_tsa-intensity_NorBERT_3_small_28.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_14.json
01170944_tsa-intensity_NorBERT_3_small_14.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_41.json
01170944_tsa-intensity_NorBERT_3_large_41.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_18.json
01170944_tsa-intensity_NB-BERT_base_18.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_04.json
01170944_tsa-intensity_NB-BERT_base_04.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_16.json
01170944_tsa-intensity_NorBERT_1_16.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_31.json
01170944_tsa-intensity_NorBERT_2_31.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_38.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_38.json
01170944_tsa-intensity_NorBERT_2_38.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_30.json
01170944_tsa-intensity_NorBERT_1_30.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_03.json
01170944_tsa-intensity_NorBERT_2_03.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_05.json
01170944_tsa-intensity_NB-BERT_large_05.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_22.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_22.json
01170944_tsa-intensity_NorBERT_3_base_22.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_34.json
01170944_tsa-intensity_NorBERT_3_large_34.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_25.json
01170944_tsa-intensity_NB-BERT_base_25.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_26.json
01170944_tsa-intensity_NB-BERT_large_26.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_07.json
01170944_tsa-intensity_NorBERT_3_small_07.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_15.json
01170944_tsa-intensity_NorBERT_3_base_15.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_37.json
01170944_tsa-intensity_NorBERT_1_37.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_17.json
01170944_tsa-intensity_NorBERT_2_17.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_40.json
01170944_tsa-intensity_NB-BERT_large_40.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_10.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_10.json
01170944_tsa-intensity_NorBERT_2_10.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_08.json
01170944_tsa-intensity_NorBERT_3_base_08.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_32.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_32.json
01170944_tsa-intensity_NB-BERT_base_32.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_12.json
01170944_tsa-intensity_NB-BERT_large_12.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_27.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_27.json
01170944_tsa-intensity_NorBERT_3_large_27.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_11.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_11.json
01170944_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 4779.72 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6050.49 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6301.18 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6564.75 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6731.92 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6928.06 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6186.76 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6519.75 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6327.54 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6094.93 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6181.18 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6948.54 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6777.71 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NB-BERT_base/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2972, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.21619418263435364, 'eval_precision': 0.2369109947643979, 'eval_recall': 0.2063854047890536, 'eval_f1': 0.22059719683120052, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3845, 'eval_samples_per_second': 642.051, 'eval_steps_per_second': 80.518, 'epoch': 1.0}
{'loss': 0.1958, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.22149111330509186, 'eval_precision': 0.3011093502377179, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2519893899204244, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.516, 'eval_steps_per_second': 81.455, 'epoch': 2.0}
{'loss': 0.136, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.24153214693069458, 'eval_precision': 0.23768115942028986, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.25732217573221755, 'eval_accuracy': 0.9308654365783988, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.901, 'eval_steps_per_second': 81.252, 'epoch': 3.0}
{'loss': 0.0985, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2801849842071533, 'eval_precision': 0.21728786677240286, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.25631431244153413, 'eval_accuracy': 0.9258086929668803, 'eval_runtime': 2.3578, 'eval_samples_per_second': 649.326, 'eval_steps_per_second': 81.431, 'epoch': 4.0}
{'loss': 0.0662, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2968991696834564, 'eval_precision': 0.2476489028213166, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2584514721919302, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.3578, 'eval_samples_per_second': 649.329, 'eval_steps_per_second': 81.431, 'epoch': 5.0}
{'loss': 0.0489, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3292624056339264, 'eval_precision': 0.24096385542168675, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2458100558659218, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.3716, 'eval_samples_per_second': 645.566, 'eval_steps_per_second': 80.959, 'epoch': 6.0}
{'loss': 0.0318, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.3666563332080841, 'eval_precision': 0.23769100169779286, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2725060827250608, 'eval_accuracy': 0.9240716436346792, 'eval_runtime': 2.3894, 'eval_samples_per_second': 640.742, 'eval_steps_per_second': 80.354, 'epoch': 7.0}
{'loss': 0.0194, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3740311861038208, 'eval_precision': 0.2578046324269889, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2737967914438503, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4076, 'eval_samples_per_second': 635.902, 'eval_steps_per_second': 79.747, 'epoch': 8.0}
{'loss': 0.0164, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.3940310776233673, 'eval_precision': 0.2492753623188406, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2698744769874477, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 2.3833, 'eval_samples_per_second': 642.387, 'eval_steps_per_second': 80.561, 'epoch': 9.0}
{'loss': 0.0108, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.43407946825027466, 'eval_precision': 0.2807377049180328, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29573664328116567, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.181, 'eval_steps_per_second': 81.162, 'epoch': 10.0}
{'loss': 0.0065, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.43044427037239075, 'eval_precision': 0.2748414376321353, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2852441031267142, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.4476, 'eval_samples_per_second': 625.523, 'eval_steps_per_second': 78.446, 'epoch': 11.0}
{'loss': 0.004, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.44958776235580444, 'eval_precision': 0.29180327868852457, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2979910714285714, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.5562, 'eval_samples_per_second': 598.945, 'eval_steps_per_second': 75.113, 'epoch': 12.0}
{'loss': 0.0042, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.446728378534317, 'eval_precision': 0.2914847161572052, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2978248745119911, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.119, 'eval_steps_per_second': 81.279, 'epoch': 13.0}
{'loss': 0.0026, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.4705902934074402, 'eval_precision': 0.28771551724137934, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2958448753462604, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.599, 'eval_steps_per_second': 81.214, 'epoch': 14.0}
{'loss': 0.0026, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.47353458404541016, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.884, 'eval_steps_per_second': 81.25, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4831494987010956, 'eval_precision': 0.30672748004561, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30672748004561, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.367, 'eval_samples_per_second': 646.81, 'eval_steps_per_second': 81.115, 'epoch': 16.0}
{'loss': 0.0016, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.5034204721450806, 'eval_precision': 0.29836829836829837, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29510086455331414, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.241, 'eval_steps_per_second': 81.42, 'epoch': 17.0}
{'loss': 0.0012, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.508039116859436, 'eval_precision': 0.26452905811623245, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2816, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.062, 'eval_steps_per_second': 81.147, 'epoch': 18.0}
{'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.5014714598655701, 'eval_precision': 0.3039443155452436, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3013225991949396, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.104, 'eval_steps_per_second': 81.278, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.5116361379623413, 'eval_precision': 0.30205949656750575, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30154197601370647, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.4416, 'eval_samples_per_second': 627.048, 'eval_steps_per_second': 78.637, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.5164017677307129, 'eval_precision': 0.3039332538736591, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.29720279720279724, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.25, 'eval_steps_per_second': 81.296, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5190087556838989, 'eval_precision': 0.294250281848929, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29591836734693877, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.193, 'eval_steps_per_second': 81.163, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.5239507555961609, 'eval_precision': 0.29607609988109396, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.289871944121071, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.691, 'eval_steps_per_second': 81.226, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5243465304374695, 'eval_precision': 0.29308323563892147, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2890173410404624, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.729, 'eval_steps_per_second': 81.231, 'epoch': 24.0}
{'train_runtime': 861.0283, 'train_samples_per_second': 240.661, 'train_steps_per_second': 6.021, 'train_loss': 0.039540994754291056, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0395
  train_runtime            = 0:14:21.02
  train_samples            =       8634
  train_samples_per_second =    240.661
  train_steps_per_second   =      6.021
[{'loss': 0.2972, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.21619418263435364, 'eval_precision': 0.2369109947643979, 'eval_recall': 0.2063854047890536, 'eval_f1': 0.22059719683120052, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.3845, 'eval_samples_per_second': 642.051, 'eval_steps_per_second': 80.518, 'epoch': 1.0, 'step': 216}, {'loss': 0.1958, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.22149111330509186, 'eval_precision': 0.3011093502377179, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2519893899204244, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.516, 'eval_steps_per_second': 81.455, 'epoch': 2.0, 'step': 432}, {'loss': 0.136, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.24153214693069458, 'eval_precision': 0.23768115942028986, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.25732217573221755, 'eval_accuracy': 0.9308654365783988, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.901, 'eval_steps_per_second': 81.252, 'epoch': 3.0, 'step': 648}, {'loss': 0.0985, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2801849842071533, 'eval_precision': 0.21728786677240286, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.25631431244153413, 'eval_accuracy': 0.9258086929668803, 'eval_runtime': 2.3578, 'eval_samples_per_second': 649.326, 'eval_steps_per_second': 81.431, 'epoch': 4.0, 'step': 864}, {'loss': 0.0662, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2968991696834564, 'eval_precision': 0.2476489028213166, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2584514721919302, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.3578, 'eval_samples_per_second': 649.329, 'eval_steps_per_second': 81.431, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0489, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3292624056339264, 'eval_precision': 0.24096385542168675, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.2458100558659218, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.3716, 'eval_samples_per_second': 645.566, 'eval_steps_per_second': 80.959, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0318, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3666563332080841, 'eval_precision': 0.23769100169779286, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2725060827250608, 'eval_accuracy': 0.9240716436346792, 'eval_runtime': 2.3894, 'eval_samples_per_second': 640.742, 'eval_steps_per_second': 80.354, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0194, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3740311861038208, 'eval_precision': 0.2578046324269889, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2737967914438503, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4076, 'eval_samples_per_second': 635.902, 'eval_steps_per_second': 79.747, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0164, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3940310776233673, 'eval_precision': 0.2492753623188406, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2698744769874477, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 2.3833, 'eval_samples_per_second': 642.387, 'eval_steps_per_second': 80.561, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0108, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.43407946825027466, 'eval_precision': 0.2807377049180328, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29573664328116567, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.181, 'eval_steps_per_second': 81.162, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0065, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.43044427037239075, 'eval_precision': 0.2748414376321353, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2852441031267142, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.4476, 'eval_samples_per_second': 625.523, 'eval_steps_per_second': 78.446, 'epoch': 11.0, 'step': 2376}, {'loss': 0.004, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.44958776235580444, 'eval_precision': 0.29180327868852457, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2979910714285714, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.5562, 'eval_samples_per_second': 598.945, 'eval_steps_per_second': 75.113, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0042, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.446728378534317, 'eval_precision': 0.2914847161572052, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2978248745119911, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.119, 'eval_steps_per_second': 81.279, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0026, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4705902934074402, 'eval_precision': 0.28771551724137934, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2958448753462604, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.599, 'eval_steps_per_second': 81.214, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0026, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.47353458404541016, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.3631, 'eval_samples_per_second': 647.884, 'eval_steps_per_second': 81.25, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0019, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4831494987010956, 'eval_precision': 0.30672748004561, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30672748004561, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.367, 'eval_samples_per_second': 646.81, 'eval_steps_per_second': 81.115, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0016, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.5034204721450806, 'eval_precision': 0.29836829836829837, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29510086455331414, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.241, 'eval_steps_per_second': 81.42, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0012, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.508039116859436, 'eval_precision': 0.26452905811623245, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2816, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.062, 'eval_steps_per_second': 81.147, 'epoch': 18.0, 'step': 3888}, {'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5014714598655701, 'eval_precision': 0.3039443155452436, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3013225991949396, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.104, 'eval_steps_per_second': 81.278, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0006, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5116361379623413, 'eval_precision': 0.30205949656750575, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30154197601370647, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.4416, 'eval_samples_per_second': 627.048, 'eval_steps_per_second': 78.637, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0006, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5164017677307129, 'eval_precision': 0.3039332538736591, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.29720279720279724, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.25, 'eval_steps_per_second': 81.296, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0004, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5190087556838989, 'eval_precision': 0.294250281848929, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29591836734693877, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.193, 'eval_steps_per_second': 81.163, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5239507555961609, 'eval_precision': 0.29607609988109396, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.289871944121071, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.691, 'eval_steps_per_second': 81.226, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5243465304374695, 'eval_precision': 0.29308323563892147, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2890173410404624, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.729, 'eval_steps_per_second': 81.231, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 861.0283, 'train_samples_per_second': 240.661, 'train_steps_per_second': 6.021, 'total_flos': 8233685173548936.0, 'train_loss': 0.039540994754291056, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9371
  predict_f1                 =     0.1925
  predict_loss               =     0.2301
  predict_precision          =     0.2195
  predict_recall             =     0.1714
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    647.267
  predict_steps_per_second   =     80.908
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_base_11.json completed. F1: 0.1925133689839572
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_13.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_13.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6017.91 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6763.70 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6712.85 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6800.24 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6856.82 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6986.04 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7155.17 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6260.51 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6627.37 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7148.06 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6819.85 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6912.41 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6748.41 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8142, 'eval_samples_per_second': 263.322, 'eval_steps_per_second': 33.023, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.777, 'eval_samples_per_second': 265.015, 'eval_steps_per_second': 33.235, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7828, 'eval_samples_per_second': 264.749, 'eval_steps_per_second': 33.202, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7752, 'eval_samples_per_second': 265.1, 'eval_steps_per_second': 33.246, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.775, 'eval_samples_per_second': 265.107, 'eval_steps_per_second': 33.247, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7423, 'eval_samples_per_second': 266.617, 'eval_steps_per_second': 33.436, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8256, 'eval_samples_per_second': 262.807, 'eval_steps_per_second': 32.958, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7409, 'eval_samples_per_second': 266.684, 'eval_steps_per_second': 33.444, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7713, 'eval_samples_per_second': 265.278, 'eval_steps_per_second': 33.268, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7479, 'eval_samples_per_second': 266.359, 'eval_steps_per_second': 33.404, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.746, 'eval_samples_per_second': 266.447, 'eval_steps_per_second': 33.415, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.576, 'eval_steps_per_second': 33.431, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8199, 'eval_samples_per_second': 263.064, 'eval_steps_per_second': 32.99, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8647, 'eval_samples_per_second': 261.053, 'eval_steps_per_second': 32.738, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8596, 'eval_samples_per_second': 261.282, 'eval_steps_per_second': 32.767, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9398, 'eval_samples_per_second': 257.755, 'eval_steps_per_second': 32.325, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8446, 'eval_samples_per_second': 261.95, 'eval_steps_per_second': 32.851, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7441, 'eval_samples_per_second': 266.535, 'eval_steps_per_second': 33.426, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7805, 'eval_samples_per_second': 264.855, 'eval_steps_per_second': 33.215, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8288, 'eval_samples_per_second': 262.662, 'eval_steps_per_second': 32.94, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7715, 'eval_samples_per_second': 265.268, 'eval_steps_per_second': 33.267, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7679, 'eval_samples_per_second': 265.433, 'eval_steps_per_second': 33.288, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7756, 'eval_samples_per_second': 265.081, 'eval_steps_per_second': 33.243, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7478, 'eval_samples_per_second': 266.363, 'eval_steps_per_second': 33.404, 'epoch': 24.0}
{'train_runtime': 2413.4579, 'train_samples_per_second': 85.859, 'train_steps_per_second': 2.148, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:13.45
  train_samples            =       8634
  train_samples_per_second =     85.859
  train_steps_per_second   =      2.148
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8142, 'eval_samples_per_second': 263.322, 'eval_steps_per_second': 33.023, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.777, 'eval_samples_per_second': 265.015, 'eval_steps_per_second': 33.235, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7828, 'eval_samples_per_second': 264.749, 'eval_steps_per_second': 33.202, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7752, 'eval_samples_per_second': 265.1, 'eval_steps_per_second': 33.246, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.775, 'eval_samples_per_second': 265.107, 'eval_steps_per_second': 33.247, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7423, 'eval_samples_per_second': 266.617, 'eval_steps_per_second': 33.436, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8256, 'eval_samples_per_second': 262.807, 'eval_steps_per_second': 32.958, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7409, 'eval_samples_per_second': 266.684, 'eval_steps_per_second': 33.444, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7713, 'eval_samples_per_second': 265.278, 'eval_steps_per_second': 33.268, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7479, 'eval_samples_per_second': 266.359, 'eval_steps_per_second': 33.404, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.746, 'eval_samples_per_second': 266.447, 'eval_steps_per_second': 33.415, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.576, 'eval_steps_per_second': 33.431, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8199, 'eval_samples_per_second': 263.064, 'eval_steps_per_second': 32.99, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8647, 'eval_samples_per_second': 261.053, 'eval_steps_per_second': 32.738, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8596, 'eval_samples_per_second': 261.282, 'eval_steps_per_second': 32.767, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9398, 'eval_samples_per_second': 257.755, 'eval_steps_per_second': 32.325, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8446, 'eval_samples_per_second': 261.95, 'eval_steps_per_second': 32.851, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7441, 'eval_samples_per_second': 266.535, 'eval_steps_per_second': 33.426, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7805, 'eval_samples_per_second': 264.855, 'eval_steps_per_second': 33.215, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8288, 'eval_samples_per_second': 262.662, 'eval_steps_per_second': 32.94, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7715, 'eval_samples_per_second': 265.268, 'eval_steps_per_second': 33.267, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7679, 'eval_samples_per_second': 265.433, 'eval_steps_per_second': 33.288, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7756, 'eval_samples_per_second': 265.081, 'eval_steps_per_second': 33.243, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7478, 'eval_samples_per_second': 266.363, 'eval_steps_per_second': 33.404, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2413.4579, 'train_samples_per_second': 85.859, 'train_steps_per_second': 2.148, 'total_flos': 2.4801286601466228e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.82
  predict_samples_per_second =    263.674
  predict_steps_per_second   =     32.959
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_13.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_33.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_33.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6446.34 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7058.46 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6932.63 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7009.81 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7050.55 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7190.73 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6320.54 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6662.19 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6809.86 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7468.50 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7057.84 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7162.84 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6980.86 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2971, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.1938822865486145, 'eval_precision': 0.28587962962962965, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.28374497415278577, 'eval_accuracy': 0.9425229676522813, 'eval_runtime': 4.6906, 'eval_samples_per_second': 326.399, 'eval_steps_per_second': 40.933, 'epoch': 1.0}
{'loss': 0.1817, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.19694209098815918, 'eval_precision': 0.27681307456588355, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.29202586206896547, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.36, 'eval_steps_per_second': 41.179, 'epoch': 2.0}
{'loss': 0.1149, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.21894849836826324, 'eval_precision': 0.25908221797323133, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28185127405096205, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.665, 'eval_samples_per_second': 328.185, 'eval_steps_per_second': 41.157, 'epoch': 3.0}
{'loss': 0.0767, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.27548936009407043, 'eval_precision': 0.300921187308086, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31715210355987056, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.311, 'eval_steps_per_second': 41.173, 'epoch': 4.0}
{'loss': 0.0487, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.27911609411239624, 'eval_precision': 0.2834285714285714, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2831050228310502, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.71, 'eval_steps_per_second': 41.223, 'epoch': 5.0}
{'loss': 0.0277, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.31220200657844543, 'eval_precision': 0.2842960288808664, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.31738035264483627, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 4.6657, 'eval_samples_per_second': 328.141, 'eval_steps_per_second': 41.152, 'epoch': 6.0}
{'loss': 0.0172, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.34362122416496277, 'eval_precision': 0.2769089236430543, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3065173116089613, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.195, 'eval_steps_per_second': 41.158, 'epoch': 7.0}
{'loss': 0.0128, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3625069558620453, 'eval_precision': 0.30182232346241455, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.30199430199430205, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6714, 'eval_samples_per_second': 327.736, 'eval_steps_per_second': 41.101, 'epoch': 8.0}
{'loss': 0.0067, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.37845057249069214, 'eval_precision': 0.2955010224948875, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3115902964959569, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.134, 'eval_steps_per_second': 41.151, 'epoch': 9.0}
{'loss': 0.0054, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4143880605697632, 'eval_precision': 0.327710843373494, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3186877562975981, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.487, 'eval_steps_per_second': 41.195, 'epoch': 10.0}
{'loss': 0.0035, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.40479815006256104, 'eval_precision': 0.2936991869918699, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3105857066093498, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.37, 'eval_steps_per_second': 41.18, 'epoch': 11.0}
{'loss': 0.0035, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.42147281765937805, 'eval_precision': 0.29690721649484536, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3118570655116405, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.577, 'eval_steps_per_second': 41.206, 'epoch': 12.0}
{'loss': 0.0021, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.44875049591064453, 'eval_precision': 0.33121019108280253, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.3128760529482551, 'eval_accuracy': 0.942715973133637, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.231, 'eval_steps_per_second': 41.163, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.44900330901145935, 'eval_precision': 0.3270588235294118, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3219455703532137, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 4.7831, 'eval_samples_per_second': 320.083, 'eval_steps_per_second': 40.141, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.454142689704895, 'eval_precision': 0.32083792723263505, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.32623318385650224, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6666, 'eval_samples_per_second': 328.076, 'eval_steps_per_second': 41.143, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.45516347885131836, 'eval_precision': 0.3271537622682661, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.33444816053511706, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.356, 'eval_steps_per_second': 41.178, 'epoch': 16.0}
{'loss': 0.0007, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.4691956341266632, 'eval_precision': 0.31861575178997614, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3113702623906706, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.836, 'eval_steps_per_second': 41.239, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.4687378704547882, 'eval_precision': 0.30184581976112923, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3092324805339266, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.374, 'eval_steps_per_second': 41.181, 'epoch': 18.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.47815775871276855, 'eval_precision': 0.3202247191011236, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3225806451612903, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.48755258321762085, 'eval_precision': 0.31797235023041476, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3163323782234957, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.7413, 'eval_samples_per_second': 322.907, 'eval_steps_per_second': 40.495, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.48032906651496887, 'eval_precision': 0.31838074398249455, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3249581239530988, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.971, 'eval_steps_per_second': 41.256, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4873514771461487, 'eval_precision': 0.32319819819819817, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.32521246458923514, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.604, 'eval_steps_per_second': 41.21, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.48609092831611633, 'eval_precision': 0.32531500572737687, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32457142857142857, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 4.6694, 'eval_samples_per_second': 327.876, 'eval_steps_per_second': 41.118, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4861880838871002, 'eval_precision': 0.32531500572737687, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32457142857142857, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.1, 'eval_steps_per_second': 41.146, 'epoch': 24.0}
{'train_runtime': 2099.7875, 'train_samples_per_second': 98.684, 'train_steps_per_second': 1.543, 'train_loss': 0.033510077054853794, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0335
  train_runtime            = 0:34:59.78
  train_samples            =       8634
  train_samples_per_second =     98.684
  train_steps_per_second   =      1.543
[{'loss': 0.2971, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.1938822865486145, 'eval_precision': 0.28587962962962965, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.28374497415278577, 'eval_accuracy': 0.9425229676522813, 'eval_runtime': 4.6906, 'eval_samples_per_second': 326.399, 'eval_steps_per_second': 40.933, 'epoch': 1.0, 'step': 135}, {'loss': 0.1817, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.19694209098815918, 'eval_precision': 0.27681307456588355, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.29202586206896547, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.36, 'eval_steps_per_second': 41.179, 'epoch': 2.0, 'step': 270}, {'loss': 0.1149, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.21894849836826324, 'eval_precision': 0.25908221797323133, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28185127405096205, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.665, 'eval_samples_per_second': 328.185, 'eval_steps_per_second': 41.157, 'epoch': 3.0, 'step': 405}, {'loss': 0.0767, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.27548936009407043, 'eval_precision': 0.300921187308086, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31715210355987056, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.311, 'eval_steps_per_second': 41.173, 'epoch': 4.0, 'step': 540}, {'loss': 0.0487, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27911609411239624, 'eval_precision': 0.2834285714285714, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2831050228310502, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.71, 'eval_steps_per_second': 41.223, 'epoch': 5.0, 'step': 675}, {'loss': 0.0277, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.31220200657844543, 'eval_precision': 0.2842960288808664, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.31738035264483627, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 4.6657, 'eval_samples_per_second': 328.141, 'eval_steps_per_second': 41.152, 'epoch': 6.0, 'step': 810}, {'loss': 0.0172, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.34362122416496277, 'eval_precision': 0.2769089236430543, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3065173116089613, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.195, 'eval_steps_per_second': 41.158, 'epoch': 7.0, 'step': 945}, {'loss': 0.0128, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3625069558620453, 'eval_precision': 0.30182232346241455, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.30199430199430205, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 4.6714, 'eval_samples_per_second': 327.736, 'eval_steps_per_second': 41.101, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0067, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.37845057249069214, 'eval_precision': 0.2955010224948875, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3115902964959569, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.134, 'eval_steps_per_second': 41.151, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0054, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.4143880605697632, 'eval_precision': 0.327710843373494, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3186877562975981, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.487, 'eval_steps_per_second': 41.195, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0035, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.40479815006256104, 'eval_precision': 0.2936991869918699, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3105857066093498, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.37, 'eval_steps_per_second': 41.18, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0035, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.42147281765937805, 'eval_precision': 0.29690721649484536, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3118570655116405, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.577, 'eval_steps_per_second': 41.206, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0021, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.44875049591064453, 'eval_precision': 0.33121019108280253, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.3128760529482551, 'eval_accuracy': 0.942715973133637, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.231, 'eval_steps_per_second': 41.163, 'epoch': 13.0, 'step': 1755}, {'loss': 0.001, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.44900330901145935, 'eval_precision': 0.3270588235294118, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3219455703532137, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 4.7831, 'eval_samples_per_second': 320.083, 'eval_steps_per_second': 40.141, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0011, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.454142689704895, 'eval_precision': 0.32083792723263505, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.32623318385650224, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6666, 'eval_samples_per_second': 328.076, 'eval_steps_per_second': 41.143, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0011, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.45516347885131836, 'eval_precision': 0.3271537622682661, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.33444816053511706, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.356, 'eval_steps_per_second': 41.178, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0007, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4691956341266632, 'eval_precision': 0.31861575178997614, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3113702623906706, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.836, 'eval_steps_per_second': 41.239, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4687378704547882, 'eval_precision': 0.30184581976112923, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3092324805339266, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.374, 'eval_steps_per_second': 41.181, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.47815775871276855, 'eval_precision': 0.3202247191011236, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3225806451612903, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.48755258321762085, 'eval_precision': 0.31797235023041476, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3163323782234957, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.7413, 'eval_samples_per_second': 322.907, 'eval_steps_per_second': 40.495, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0004, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.48032906651496887, 'eval_precision': 0.31838074398249455, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3249581239530988, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.971, 'eval_steps_per_second': 41.256, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0003, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4873514771461487, 'eval_precision': 0.32319819819819817, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.32521246458923514, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.604, 'eval_steps_per_second': 41.21, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.48609092831611633, 'eval_precision': 0.32531500572737687, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32457142857142857, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 4.6694, 'eval_samples_per_second': 327.876, 'eval_steps_per_second': 41.118, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4861880838871002, 'eval_precision': 0.32531500572737687, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32457142857142857, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.1, 'eval_steps_per_second': 41.146, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2099.7875, 'train_samples_per_second': 98.684, 'train_steps_per_second': 1.543, 'total_flos': 2.5992409580087436e+16, 'train_loss': 0.033510077054853794, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9397
  predict_f1                 =     0.2376
  predict_loss               =     0.2107
  predict_precision          =     0.2443
  predict_recall             =     0.2313
  predict_runtime            = 0:00:03.92
  predict_samples_per_second =    323.857
  predict_steps_per_second   =     40.482
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_33.json completed. F1: 0.23759608665269044
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_36.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6663.53 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6992.37 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6754.68 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6802.30 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6844.52 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6939.63 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7109.44 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7171.69 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6644.49 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7221.45 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6906.90 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6954.81 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6778.75 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.7424, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.28269389271736145, 'eval_precision': 0.17032967032967034, 'eval_recall': 0.03534777651083238, 'eval_f1': 0.058545797922568456, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 3.2018, 'eval_samples_per_second': 478.173, 'eval_steps_per_second': 59.967, 'epoch': 1.0}
{'loss': 0.2614, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.23598161339759827, 'eval_precision': 0.17932148626817448, 'eval_recall': 0.1265678449258837, 'eval_f1': 0.1483957219251337, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 3.0177, 'eval_samples_per_second': 507.342, 'eval_steps_per_second': 63.625, 'epoch': 2.0}
{'loss': 0.1812, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2380007952451706, 'eval_precision': 0.2546689303904924, 'eval_recall': 0.17103762827822122, 'eval_f1': 0.20463847203274216, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 3.0358, 'eval_samples_per_second': 504.309, 'eval_steps_per_second': 63.244, 'epoch': 3.0}
{'loss': 0.1274, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.2609514594078064, 'eval_precision': 0.24295010845986983, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.24902723735408558, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.082, 'eval_steps_per_second': 63.216, 'epoch': 4.0}
{'loss': 0.0944, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.2958628237247467, 'eval_precision': 0.2478813559322034, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.257001647446458, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 3.0377, 'eval_samples_per_second': 503.998, 'eval_steps_per_second': 63.206, 'epoch': 5.0}
{'loss': 0.07, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3078436255455017, 'eval_precision': 0.2440087145969499, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.24958217270194988, 'eval_accuracy': 0.9305566278082298, 'eval_runtime': 3.0355, 'eval_samples_per_second': 504.36, 'eval_steps_per_second': 63.251, 'epoch': 6.0}
{'loss': 0.0557, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3568003475666046, 'eval_precision': 0.2462686567164179, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.2545454545454546, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 3.0355, 'eval_samples_per_second': 504.372, 'eval_steps_per_second': 63.252, 'epoch': 7.0}
{'loss': 0.0398, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3811417818069458, 'eval_precision': 0.24976873265494912, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2757916241062308, 'eval_accuracy': 0.92341542499807, 'eval_runtime': 3.0452, 'eval_samples_per_second': 502.765, 'eval_steps_per_second': 63.051, 'epoch': 8.0}
{'loss': 0.0283, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.38858792185783386, 'eval_precision': 0.25766283524904215, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2800624674648621, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 3.0062, 'eval_samples_per_second': 509.273, 'eval_steps_per_second': 63.867, 'epoch': 9.0}
{'loss': 0.0208, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.4129474461078644, 'eval_precision': 0.242728184553661, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.25827107790821774, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 3.0931, 'eval_samples_per_second': 494.975, 'eval_steps_per_second': 62.074, 'epoch': 10.0}
{'loss': 0.0162, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4311921298503876, 'eval_precision': 0.25357873210633947, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.26738544474393533, 'eval_accuracy': 0.9307110321933143, 'eval_runtime': 3.0136, 'eval_samples_per_second': 508.024, 'eval_steps_per_second': 63.71, 'epoch': 11.0}
{'loss': 0.0125, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.43372270464897156, 'eval_precision': 0.25127161749745675, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26559139784946234, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 3.0087, 'eval_samples_per_second': 508.863, 'eval_steps_per_second': 63.816, 'epoch': 12.0}
{'loss': 0.0106, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.42419129610061646, 'eval_precision': 0.2665350444225074, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9297074036902648, 'eval_runtime': 3.0699, 'eval_samples_per_second': 498.71, 'eval_steps_per_second': 62.542, 'epoch': 13.0}
{'loss': 0.0072, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.45434609055519104, 'eval_precision': 0.2672858617131063, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.28060671722643554, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 3.1135, 'eval_samples_per_second': 491.727, 'eval_steps_per_second': 61.667, 'epoch': 14.0}
{'loss': 0.0054, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.47403913736343384, 'eval_precision': 0.2711670480549199, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.27070245573957735, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 3.0431, 'eval_samples_per_second': 503.111, 'eval_steps_per_second': 63.094, 'epoch': 15.0}
{'loss': 0.005, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.46149343252182007, 'eval_precision': 0.26492942453854507, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27141268075639596, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 3.008, 'eval_samples_per_second': 508.974, 'eval_steps_per_second': 63.829, 'epoch': 16.0}
{'loss': 0.0045, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.4716256260871887, 'eval_precision': 0.2654320987654321, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27906976744186046, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 3.0381, 'eval_samples_per_second': 503.934, 'eval_steps_per_second': 63.197, 'epoch': 17.0}
{'loss': 0.0035, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.4752350449562073, 'eval_precision': 0.27628635346756153, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2789384528514964, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.065, 'eval_steps_per_second': 63.214, 'epoch': 18.0}
{'loss': 0.003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.48255854845046997, 'eval_precision': 0.27015706806282724, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2816593886462882, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.013, 'eval_samples_per_second': 508.14, 'eval_steps_per_second': 63.725, 'epoch': 19.0}
{'loss': 0.0025, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4873037338256836, 'eval_precision': 0.27395833333333336, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.286336418072945, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 3.1435, 'eval_samples_per_second': 487.034, 'eval_steps_per_second': 61.078, 'epoch': 20.0}
{'loss': 0.0022, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.4949032962322235, 'eval_precision': 0.2602040816326531, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2746365105008078, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 3.0208, 'eval_samples_per_second': 506.813, 'eval_steps_per_second': 63.558, 'epoch': 21.0}
{'loss': 0.002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.494926780462265, 'eval_precision': 0.274468085106383, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2839845899834893, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 3.0124, 'eval_samples_per_second': 508.23, 'eval_steps_per_second': 63.736, 'epoch': 22.0}
{'loss': 0.0019, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.498710960149765, 'eval_precision': 0.26517571884984026, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.27422907488986786, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 3.0841, 'eval_samples_per_second': 496.423, 'eval_steps_per_second': 62.256, 'epoch': 23.0}
{'loss': 0.0017, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.49665337800979614, 'eval_precision': 0.27759562841530055, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.28348214285714285, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 3.018, 'eval_samples_per_second': 507.294, 'eval_steps_per_second': 63.619, 'epoch': 24.0}
{'train_runtime': 850.7453, 'train_samples_per_second': 243.57, 'train_steps_per_second': 3.808, 'train_loss': 0.07080974838707918, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0708
  train_runtime            = 0:14:10.74
  train_samples            =       8634
  train_samples_per_second =     243.57
  train_steps_per_second   =      3.808
[{'loss': 0.7424, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.28269389271736145, 'eval_precision': 0.17032967032967034, 'eval_recall': 0.03534777651083238, 'eval_f1': 0.058545797922568456, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 3.2018, 'eval_samples_per_second': 478.173, 'eval_steps_per_second': 59.967, 'epoch': 1.0, 'step': 135}, {'loss': 0.2614, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.23598161339759827, 'eval_precision': 0.17932148626817448, 'eval_recall': 0.1265678449258837, 'eval_f1': 0.1483957219251337, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 3.0177, 'eval_samples_per_second': 507.342, 'eval_steps_per_second': 63.625, 'epoch': 2.0, 'step': 270}, {'loss': 0.1812, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2380007952451706, 'eval_precision': 0.2546689303904924, 'eval_recall': 0.17103762827822122, 'eval_f1': 0.20463847203274216, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 3.0358, 'eval_samples_per_second': 504.309, 'eval_steps_per_second': 63.244, 'epoch': 3.0, 'step': 405}, {'loss': 0.1274, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2609514594078064, 'eval_precision': 0.24295010845986983, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.24902723735408558, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.082, 'eval_steps_per_second': 63.216, 'epoch': 4.0, 'step': 540}, {'loss': 0.0944, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2958628237247467, 'eval_precision': 0.2478813559322034, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.257001647446458, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 3.0377, 'eval_samples_per_second': 503.998, 'eval_steps_per_second': 63.206, 'epoch': 5.0, 'step': 675}, {'loss': 0.07, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3078436255455017, 'eval_precision': 0.2440087145969499, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.24958217270194988, 'eval_accuracy': 0.9305566278082298, 'eval_runtime': 3.0355, 'eval_samples_per_second': 504.36, 'eval_steps_per_second': 63.251, 'epoch': 6.0, 'step': 810}, {'loss': 0.0557, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3568003475666046, 'eval_precision': 0.2462686567164179, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.2545454545454546, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 3.0355, 'eval_samples_per_second': 504.372, 'eval_steps_per_second': 63.252, 'epoch': 7.0, 'step': 945}, {'loss': 0.0398, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3811417818069458, 'eval_precision': 0.24976873265494912, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2757916241062308, 'eval_accuracy': 0.92341542499807, 'eval_runtime': 3.0452, 'eval_samples_per_second': 502.765, 'eval_steps_per_second': 63.051, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0283, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.38858792185783386, 'eval_precision': 0.25766283524904215, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2800624674648621, 'eval_accuracy': 0.9290125839573844, 'eval_runtime': 3.0062, 'eval_samples_per_second': 509.273, 'eval_steps_per_second': 63.867, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0208, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.4129474461078644, 'eval_precision': 0.242728184553661, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.25827107790821774, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 3.0931, 'eval_samples_per_second': 494.975, 'eval_steps_per_second': 62.074, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0162, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4311921298503876, 'eval_precision': 0.25357873210633947, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.26738544474393533, 'eval_accuracy': 0.9307110321933143, 'eval_runtime': 3.0136, 'eval_samples_per_second': 508.024, 'eval_steps_per_second': 63.71, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0125, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.43372270464897156, 'eval_precision': 0.25127161749745675, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26559139784946234, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 3.0087, 'eval_samples_per_second': 508.863, 'eval_steps_per_second': 63.816, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0106, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.42419129610061646, 'eval_precision': 0.2665350444225074, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9297074036902648, 'eval_runtime': 3.0699, 'eval_samples_per_second': 498.71, 'eval_steps_per_second': 62.542, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0072, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.45434609055519104, 'eval_precision': 0.2672858617131063, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.28060671722643554, 'eval_accuracy': 0.931753261792635, 'eval_runtime': 3.1135, 'eval_samples_per_second': 491.727, 'eval_steps_per_second': 61.667, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0054, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.47403913736343384, 'eval_precision': 0.2711670480549199, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.27070245573957735, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 3.0431, 'eval_samples_per_second': 503.111, 'eval_steps_per_second': 63.094, 'epoch': 15.0, 'step': 2025}, {'loss': 0.005, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.46149343252182007, 'eval_precision': 0.26492942453854507, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27141268075639596, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 3.008, 'eval_samples_per_second': 508.974, 'eval_steps_per_second': 63.829, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0045, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4716256260871887, 'eval_precision': 0.2654320987654321, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27906976744186046, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 3.0381, 'eval_samples_per_second': 503.934, 'eval_steps_per_second': 63.197, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0035, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4752350449562073, 'eval_precision': 0.27628635346756153, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2789384528514964, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.065, 'eval_steps_per_second': 63.214, 'epoch': 18.0, 'step': 2430}, {'loss': 0.003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.48255854845046997, 'eval_precision': 0.27015706806282724, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2816593886462882, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.013, 'eval_samples_per_second': 508.14, 'eval_steps_per_second': 63.725, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0025, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4873037338256836, 'eval_precision': 0.27395833333333336, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.286336418072945, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 3.1435, 'eval_samples_per_second': 487.034, 'eval_steps_per_second': 61.078, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0022, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4949032962322235, 'eval_precision': 0.2602040816326531, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2746365105008078, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 3.0208, 'eval_samples_per_second': 506.813, 'eval_steps_per_second': 63.558, 'epoch': 21.0, 'step': 2835}, {'loss': 0.002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.494926780462265, 'eval_precision': 0.274468085106383, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2839845899834893, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 3.0124, 'eval_samples_per_second': 508.23, 'eval_steps_per_second': 63.736, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0019, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.498710960149765, 'eval_precision': 0.26517571884984026, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.27422907488986786, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 3.0841, 'eval_samples_per_second': 496.423, 'eval_steps_per_second': 62.256, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0017, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.49665337800979614, 'eval_precision': 0.27759562841530055, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.28348214285714285, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 3.018, 'eval_samples_per_second': 507.294, 'eval_steps_per_second': 63.619, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 850.7453, 'train_samples_per_second': 243.57, 'train_steps_per_second': 3.808, 'total_flos': 7642539766724940.0, 'train_loss': 0.07080974838707918, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9356
  predict_f1                 =     0.1331
  predict_loss               =     0.2454
  predict_precision          =     0.1785
  predict_recall             =     0.1061
  predict_runtime            = 0:00:02.52
  predict_samples_per_second =    504.587
  predict_steps_per_second   =     63.073
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_36.json completed. F1: 0.13310580204778155
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_00.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5547.02 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6473.91 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6444.06 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6576.95 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6688.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6850.14 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7030.69 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7120.92 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6485.66 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7151.19 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6811.44 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6895.87 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6703.50 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_3_small/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 7621079572783.407, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1268, 'eval_samples_per_second': 489.64, 'eval_steps_per_second': 61.405, 'epoch': 1.0}
{'loss': 7648354354972.444, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0897, 'eval_samples_per_second': 495.521, 'eval_steps_per_second': 62.142, 'epoch': 2.0}
{'loss': 7646324933214.814, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.217, 'eval_samples_per_second': 475.903, 'eval_steps_per_second': 59.682, 'epoch': 3.0}
{'loss': 7675592475837.63, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1006, 'eval_samples_per_second': 493.77, 'eval_steps_per_second': 61.923, 'epoch': 4.0}
{'loss': 7658136714657.186, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1557, 'eval_samples_per_second': 485.161, 'eval_steps_per_second': 60.843, 'epoch': 5.0}
{'loss': 7642507184507.259, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0984, 'eval_samples_per_second': 494.122, 'eval_steps_per_second': 61.967, 'epoch': 6.0}
{'loss': 7656563384623.407, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0942, 'eval_samples_per_second': 494.797, 'eval_steps_per_second': 62.052, 'epoch': 7.0}
{'loss': 7633605939351.704, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.221, 'eval_samples_per_second': 475.313, 'eval_steps_per_second': 59.608, 'epoch': 8.0}
{'loss': 7644921239476.148, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.093, 'eval_samples_per_second': 494.986, 'eval_steps_per_second': 62.075, 'epoch': 9.0}
{'loss': 7677750522917.926, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0882, 'eval_samples_per_second': 495.755, 'eval_steps_per_second': 62.172, 'epoch': 10.0}
{'loss': 7677889090294.519, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1719, 'eval_samples_per_second': 482.677, 'eval_steps_per_second': 60.532, 'epoch': 11.0}
{'loss': 7644229645349.926, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1515, 'eval_samples_per_second': 485.805, 'eval_steps_per_second': 60.924, 'epoch': 12.0}
{'loss': 7646630651373.037, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0958, 'eval_samples_per_second': 494.545, 'eval_steps_per_second': 62.02, 'epoch': 13.0}
{'loss': 7668203044257.186, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1954, 'eval_samples_per_second': 479.128, 'eval_steps_per_second': 60.087, 'epoch': 14.0}
{'loss': 7681650293570.37, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1198, 'eval_samples_per_second': 490.729, 'eval_steps_per_second': 61.541, 'epoch': 15.0}
{'loss': 7672872081332.148, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1845, 'eval_samples_per_second': 480.76, 'eval_steps_per_second': 60.291, 'epoch': 16.0}
{'loss': 7647513008658.963, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.085, 'eval_samples_per_second': 496.28, 'eval_steps_per_second': 62.238, 'epoch': 17.0}
{'loss': 7688848340612.741, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.09, 'eval_samples_per_second': 495.464, 'eval_steps_per_second': 62.135, 'epoch': 18.0}
{'loss': 7645670000412.444, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0906, 'eval_samples_per_second': 495.368, 'eval_steps_per_second': 62.123, 'epoch': 19.0}
{'loss': 7672095979747.556, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1375, 'eval_samples_per_second': 487.962, 'eval_steps_per_second': 61.194, 'epoch': 20.0}
{'loss': 7679912919646.814, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1759, 'eval_samples_per_second': 482.073, 'eval_steps_per_second': 60.456, 'epoch': 21.0}
{'loss': 7660957151080.296, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0924, 'eval_samples_per_second': 495.08, 'eval_steps_per_second': 62.087, 'epoch': 22.0}
{'loss': 7654497922920.296, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0779, 'eval_samples_per_second': 497.415, 'eval_steps_per_second': 62.38, 'epoch': 23.0}
{'loss': 7664664915816.296, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1718, 'eval_samples_per_second': 482.685, 'eval_steps_per_second': 60.533, 'epoch': 24.0}
{'train_runtime': 467.3937, 'train_samples_per_second': 443.344, 'train_steps_per_second': 11.091, 'train_loss': 7658769640308.938, 'epoch': 24.0}
***** train metrics *****
  epoch                    =              24.0
  train_loss               = 7658769640308.938
  train_runtime            =        0:07:47.39
  train_samples            =              8634
  train_samples_per_second =           443.344
  train_steps_per_second   =            11.091
[{'loss': 7621079572783.407, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1268, 'eval_samples_per_second': 489.64, 'eval_steps_per_second': 61.405, 'epoch': 1.0, 'step': 216}, {'loss': 7648354354972.444, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0897, 'eval_samples_per_second': 495.521, 'eval_steps_per_second': 62.142, 'epoch': 2.0, 'step': 432}, {'loss': 7646324933214.814, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.217, 'eval_samples_per_second': 475.903, 'eval_steps_per_second': 59.682, 'epoch': 3.0, 'step': 648}, {'loss': 7675592475837.63, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1006, 'eval_samples_per_second': 493.77, 'eval_steps_per_second': 61.923, 'epoch': 4.0, 'step': 864}, {'loss': 7658136714657.186, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1557, 'eval_samples_per_second': 485.161, 'eval_steps_per_second': 60.843, 'epoch': 5.0, 'step': 1080}, {'loss': 7642507184507.259, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0984, 'eval_samples_per_second': 494.122, 'eval_steps_per_second': 61.967, 'epoch': 6.0, 'step': 1296}, {'loss': 7656563384623.407, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0942, 'eval_samples_per_second': 494.797, 'eval_steps_per_second': 62.052, 'epoch': 7.0, 'step': 1512}, {'loss': 7633605939351.704, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.221, 'eval_samples_per_second': 475.313, 'eval_steps_per_second': 59.608, 'epoch': 8.0, 'step': 1728}, {'loss': 7644921239476.148, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.093, 'eval_samples_per_second': 494.986, 'eval_steps_per_second': 62.075, 'epoch': 9.0, 'step': 1944}, {'loss': 7677750522917.926, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0882, 'eval_samples_per_second': 495.755, 'eval_steps_per_second': 62.172, 'epoch': 10.0, 'step': 2160}, {'loss': 7677889090294.519, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1719, 'eval_samples_per_second': 482.677, 'eval_steps_per_second': 60.532, 'epoch': 11.0, 'step': 2376}, {'loss': 7644229645349.926, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1515, 'eval_samples_per_second': 485.805, 'eval_steps_per_second': 60.924, 'epoch': 12.0, 'step': 2592}, {'loss': 7646630651373.037, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0958, 'eval_samples_per_second': 494.545, 'eval_steps_per_second': 62.02, 'epoch': 13.0, 'step': 2808}, {'loss': 7668203044257.186, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1954, 'eval_samples_per_second': 479.128, 'eval_steps_per_second': 60.087, 'epoch': 14.0, 'step': 3024}, {'loss': 7681650293570.37, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1198, 'eval_samples_per_second': 490.729, 'eval_steps_per_second': 61.541, 'epoch': 15.0, 'step': 3240}, {'loss': 7672872081332.148, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1845, 'eval_samples_per_second': 480.76, 'eval_steps_per_second': 60.291, 'epoch': 16.0, 'step': 3456}, {'loss': 7647513008658.963, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.085, 'eval_samples_per_second': 496.28, 'eval_steps_per_second': 62.238, 'epoch': 17.0, 'step': 3672}, {'loss': 7688848340612.741, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.09, 'eval_samples_per_second': 495.464, 'eval_steps_per_second': 62.135, 'epoch': 18.0, 'step': 3888}, {'loss': 7645670000412.444, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0906, 'eval_samples_per_second': 495.368, 'eval_steps_per_second': 62.123, 'epoch': 19.0, 'step': 4104}, {'loss': 7672095979747.556, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1375, 'eval_samples_per_second': 487.962, 'eval_steps_per_second': 61.194, 'epoch': 20.0, 'step': 4320}, {'loss': 7679912919646.814, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1759, 'eval_samples_per_second': 482.073, 'eval_steps_per_second': 60.456, 'epoch': 21.0, 'step': 4536}, {'loss': 7660957151080.296, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0924, 'eval_samples_per_second': 495.08, 'eval_steps_per_second': 62.087, 'epoch': 22.0, 'step': 4752}, {'loss': 7654497922920.296, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.0779, 'eval_samples_per_second': 497.415, 'eval_steps_per_second': 62.38, 'epoch': 23.0, 'step': 4968}, {'loss': 7664664915816.296, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 7131757543424.0, 'eval_precision': 0.00045717768972874126, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.0008570816370259267, 'eval_accuracy': 0.0003088087701690728, 'eval_runtime': 3.1718, 'eval_samples_per_second': 482.685, 'eval_steps_per_second': 60.533, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 467.3937, 'train_samples_per_second': 443.344, 'train_steps_per_second': 11.091, 'total_flos': 1753686309874548.0, 'train_loss': 7658769640308.938, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =          0.0003
  predict_f1                 =          0.0002
  predict_loss               = 7430848643072.0
  predict_precision          =          0.0001
  predict_recall             =          0.0014
  predict_runtime            =      0:00:02.56
  predict_samples_per_second =         496.526
  predict_steps_per_second   =          62.066
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_00.json completed. F1: 0.0001651118632873772
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_02.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_02.json
01170944_tsa-intensity_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6209.78 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7076.16 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7024.30 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7132.50 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7211.99 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7358.23 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6474.04 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6848.41 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6948.99 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7683.38 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7277.80 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7360.24 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7147.92 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3808, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2782834768295288, 'eval_precision': 0.2356687898089172, 'eval_recall': 0.04218928164196123, 'eval_f1': 0.07156673114119923, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3044, 'eval_samples_per_second': 664.392, 'eval_steps_per_second': 83.32, 'epoch': 1.0}
{'loss': 0.2623, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.2484026402235031, 'eval_precision': 0.2328042328042328, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.0825515947467167, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.2773, 'eval_samples_per_second': 672.279, 'eval_steps_per_second': 84.309, 'epoch': 2.0}
{'loss': 0.2125, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.24144777655601501, 'eval_precision': 0.24416135881104034, 'eval_recall': 0.13112884834663627, 'eval_f1': 0.17062314540059348, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.4134, 'eval_samples_per_second': 634.385, 'eval_steps_per_second': 79.557, 'epoch': 3.0}
{'loss': 0.1702, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2550162971019745, 'eval_precision': 0.21739130434782608, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.21984216459977451, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.697, 'eval_steps_per_second': 84.613, 'epoch': 4.0}
{'loss': 0.1325, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.28294694423675537, 'eval_precision': 0.2254791431792559, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.22675736961451246, 'eval_accuracy': 0.9278931521655215, 'eval_runtime': 2.2715, 'eval_samples_per_second': 674.004, 'eval_steps_per_second': 84.526, 'epoch': 5.0}
{'loss': 0.1083, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.30170881748199463, 'eval_precision': 0.2288888888888889, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.23185143500281372, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2789, 'eval_samples_per_second': 671.803, 'eval_steps_per_second': 84.25, 'epoch': 6.0}
{'loss': 0.0863, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3334892690181732, 'eval_precision': 0.2210144927536232, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2463402322059566, 'eval_accuracy': 0.9241874469234926, 'eval_runtime': 2.2882, 'eval_samples_per_second': 669.089, 'eval_steps_per_second': 83.909, 'epoch': 7.0}
{'loss': 0.0709, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3412322998046875, 'eval_precision': 0.23069403714565004, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.24842105263157896, 'eval_accuracy': 0.927738747780437, 'eval_runtime': 2.2716, 'eval_samples_per_second': 673.962, 'eval_steps_per_second': 84.52, 'epoch': 8.0}
{'loss': 0.0561, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.36664170026779175, 'eval_precision': 0.19574119574119575, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2278360343183985, 'eval_accuracy': 0.9206361460665483, 'eval_runtime': 2.2738, 'eval_samples_per_second': 673.327, 'eval_steps_per_second': 84.441, 'epoch': 9.0}
{'loss': 0.0448, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.36385858058929443, 'eval_precision': 0.23370577281191807, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2573039466940031, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2664, 'eval_samples_per_second': 675.534, 'eval_steps_per_second': 84.717, 'epoch': 10.0}
{'loss': 0.0362, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3831383287906647, 'eval_precision': 0.23265306122448978, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2455573505654281, 'eval_accuracy': 0.928317764224504, 'eval_runtime': 2.3434, 'eval_samples_per_second': 653.323, 'eval_steps_per_second': 81.932, 'epoch': 11.0}
{'loss': 0.0279, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.41987690329551697, 'eval_precision': 0.21026156941649898, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2234099412079102, 'eval_accuracy': 0.927738747780437, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.698, 'eval_steps_per_second': 84.738, 'epoch': 12.0}
{'loss': 0.0236, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.41215357184410095, 'eval_precision': 0.22489539748953974, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.23458810692853244, 'eval_accuracy': 0.9287037751872154, 'eval_runtime': 2.272, 'eval_samples_per_second': 673.842, 'eval_steps_per_second': 84.505, 'epoch': 13.0}
{'loss': 0.0182, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4316381514072418, 'eval_precision': 0.22808764940239043, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.2434875066454014, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2681, 'eval_samples_per_second': 675.017, 'eval_steps_per_second': 84.653, 'epoch': 14.0}
{'loss': 0.015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4408954977989197, 'eval_precision': 0.22831505483549352, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.24361702127659576, 'eval_accuracy': 0.927198332432641, 'eval_runtime': 2.2752, 'eval_samples_per_second': 672.907, 'eval_steps_per_second': 84.388, 'epoch': 15.0}
{'loss': 0.012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.43774622678756714, 'eval_precision': 0.23943661971830985, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23597455176402543, 'eval_accuracy': 0.9307110321933143, 'eval_runtime': 2.3342, 'eval_samples_per_second': 655.912, 'eval_steps_per_second': 82.257, 'epoch': 16.0}
{'loss': 0.0101, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4498307704925537, 'eval_precision': 0.23289183222958057, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.23667975322490184, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.3163, 'eval_samples_per_second': 660.968, 'eval_steps_per_second': 82.891, 'epoch': 17.0}
{'loss': 0.008, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4628247618675232, 'eval_precision': 0.23348519362186787, 'eval_recall': 0.233751425313569, 'eval_f1': 0.23361823361823358, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.2741, 'eval_samples_per_second': 673.242, 'eval_steps_per_second': 84.43, 'epoch': 18.0}
{'loss': 0.0061, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.464114248752594, 'eval_precision': 0.2260127931769723, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.23360881542699724, 'eval_accuracy': 0.9287423762834864, 'eval_runtime': 2.2745, 'eval_samples_per_second': 673.127, 'eval_steps_per_second': 84.416, 'epoch': 19.0}
{'loss': 0.0053, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4760870635509491, 'eval_precision': 0.22043010752688172, 'eval_recall': 0.233751425313569, 'eval_f1': 0.22689540675152184, 'eval_accuracy': 0.9287809773797576, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.226, 'eval_steps_per_second': 81.418, 'epoch': 20.0}
{'loss': 0.0041, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.48185718059539795, 'eval_precision': 0.234375, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24496461622210125, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 2.2749, 'eval_samples_per_second': 672.999, 'eval_steps_per_second': 84.4, 'epoch': 21.0}
{'loss': 0.0036, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.48232659697532654, 'eval_precision': 0.23365487674169347, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.24088397790055252, 'eval_accuracy': 0.9293599938238246, 'eval_runtime': 2.2707, 'eval_samples_per_second': 674.238, 'eval_steps_per_second': 84.555, 'epoch': 22.0}
{'loss': 0.0032, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.48421329259872437, 'eval_precision': 0.231335436382755, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.24070021881838075, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2768, 'eval_samples_per_second': 672.429, 'eval_steps_per_second': 84.328, 'epoch': 23.0}
{'loss': 0.0032, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.48587173223495483, 'eval_precision': 0.23125, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2416984213391399, 'eval_accuracy': 0.9285879718984019, 'eval_runtime': 2.2675, 'eval_samples_per_second': 675.187, 'eval_steps_per_second': 84.674, 'epoch': 24.0}
{'train_runtime': 781.5544, 'train_samples_per_second': 265.133, 'train_steps_per_second': 6.633, 'train_loss': 0.07087866606673708, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0709
  train_runtime            = 0:13:01.55
  train_samples            =       8634
  train_samples_per_second =    265.133
  train_steps_per_second   =      6.633
[{'loss': 0.3808, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2782834768295288, 'eval_precision': 0.2356687898089172, 'eval_recall': 0.04218928164196123, 'eval_f1': 0.07156673114119923, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3044, 'eval_samples_per_second': 664.392, 'eval_steps_per_second': 83.32, 'epoch': 1.0, 'step': 216}, {'loss': 0.2623, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.2484026402235031, 'eval_precision': 0.2328042328042328, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.0825515947467167, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.2773, 'eval_samples_per_second': 672.279, 'eval_steps_per_second': 84.309, 'epoch': 2.0, 'step': 432}, {'loss': 0.2125, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.24144777655601501, 'eval_precision': 0.24416135881104034, 'eval_recall': 0.13112884834663627, 'eval_f1': 0.17062314540059348, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.4134, 'eval_samples_per_second': 634.385, 'eval_steps_per_second': 79.557, 'epoch': 3.0, 'step': 648}, {'loss': 0.1702, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2550162971019745, 'eval_precision': 0.21739130434782608, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.21984216459977451, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.697, 'eval_steps_per_second': 84.613, 'epoch': 4.0, 'step': 864}, {'loss': 0.1325, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.28294694423675537, 'eval_precision': 0.2254791431792559, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.22675736961451246, 'eval_accuracy': 0.9278931521655215, 'eval_runtime': 2.2715, 'eval_samples_per_second': 674.004, 'eval_steps_per_second': 84.526, 'epoch': 5.0, 'step': 1080}, {'loss': 0.1083, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.30170881748199463, 'eval_precision': 0.2288888888888889, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.23185143500281372, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2789, 'eval_samples_per_second': 671.803, 'eval_steps_per_second': 84.25, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0863, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3334892690181732, 'eval_precision': 0.2210144927536232, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2463402322059566, 'eval_accuracy': 0.9241874469234926, 'eval_runtime': 2.2882, 'eval_samples_per_second': 669.089, 'eval_steps_per_second': 83.909, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0709, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3412322998046875, 'eval_precision': 0.23069403714565004, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.24842105263157896, 'eval_accuracy': 0.927738747780437, 'eval_runtime': 2.2716, 'eval_samples_per_second': 673.962, 'eval_steps_per_second': 84.52, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0561, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.36664170026779175, 'eval_precision': 0.19574119574119575, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2278360343183985, 'eval_accuracy': 0.9206361460665483, 'eval_runtime': 2.2738, 'eval_samples_per_second': 673.327, 'eval_steps_per_second': 84.441, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0448, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.36385858058929443, 'eval_precision': 0.23370577281191807, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2573039466940031, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2664, 'eval_samples_per_second': 675.534, 'eval_steps_per_second': 84.717, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0362, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3831383287906647, 'eval_precision': 0.23265306122448978, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2455573505654281, 'eval_accuracy': 0.928317764224504, 'eval_runtime': 2.3434, 'eval_samples_per_second': 653.323, 'eval_steps_per_second': 81.932, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0279, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.41987690329551697, 'eval_precision': 0.21026156941649898, 'eval_recall': 0.23831242873432154, 'eval_f1': 0.2234099412079102, 'eval_accuracy': 0.927738747780437, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.698, 'eval_steps_per_second': 84.738, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0236, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.41215357184410095, 'eval_precision': 0.22489539748953974, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.23458810692853244, 'eval_accuracy': 0.9287037751872154, 'eval_runtime': 2.272, 'eval_samples_per_second': 673.842, 'eval_steps_per_second': 84.505, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0182, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4316381514072418, 'eval_precision': 0.22808764940239043, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.2434875066454014, 'eval_accuracy': 0.9273527368177257, 'eval_runtime': 2.2681, 'eval_samples_per_second': 675.017, 'eval_steps_per_second': 84.653, 'epoch': 14.0, 'step': 3024}, {'loss': 0.015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4408954977989197, 'eval_precision': 0.22831505483549352, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.24361702127659576, 'eval_accuracy': 0.927198332432641, 'eval_runtime': 2.2752, 'eval_samples_per_second': 672.907, 'eval_steps_per_second': 84.388, 'epoch': 15.0, 'step': 3240}, {'loss': 0.012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.43774622678756714, 'eval_precision': 0.23943661971830985, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23597455176402543, 'eval_accuracy': 0.9307110321933143, 'eval_runtime': 2.3342, 'eval_samples_per_second': 655.912, 'eval_steps_per_second': 82.257, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0101, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4498307704925537, 'eval_precision': 0.23289183222958057, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.23667975322490184, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.3163, 'eval_samples_per_second': 660.968, 'eval_steps_per_second': 82.891, 'epoch': 17.0, 'step': 3672}, {'loss': 0.008, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4628247618675232, 'eval_precision': 0.23348519362186787, 'eval_recall': 0.233751425313569, 'eval_f1': 0.23361823361823358, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.2741, 'eval_samples_per_second': 673.242, 'eval_steps_per_second': 84.43, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0061, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.464114248752594, 'eval_precision': 0.2260127931769723, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.23360881542699724, 'eval_accuracy': 0.9287423762834864, 'eval_runtime': 2.2745, 'eval_samples_per_second': 673.127, 'eval_steps_per_second': 84.416, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0053, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4760870635509491, 'eval_precision': 0.22043010752688172, 'eval_recall': 0.233751425313569, 'eval_f1': 0.22689540675152184, 'eval_accuracy': 0.9287809773797576, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.226, 'eval_steps_per_second': 81.418, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0041, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.48185718059539795, 'eval_precision': 0.234375, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.24496461622210125, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 2.2749, 'eval_samples_per_second': 672.999, 'eval_steps_per_second': 84.4, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0036, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.48232659697532654, 'eval_precision': 0.23365487674169347, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.24088397790055252, 'eval_accuracy': 0.9293599938238246, 'eval_runtime': 2.2707, 'eval_samples_per_second': 674.238, 'eval_steps_per_second': 84.555, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0032, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.48421329259872437, 'eval_precision': 0.231335436382755, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.24070021881838075, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2768, 'eval_samples_per_second': 672.429, 'eval_steps_per_second': 84.328, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0032, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.48587173223495483, 'eval_precision': 0.23125, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2416984213391399, 'eval_accuracy': 0.9285879718984019, 'eval_runtime': 2.2675, 'eval_samples_per_second': 675.187, 'eval_steps_per_second': 84.674, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 781.5544, 'train_samples_per_second': 265.133, 'train_steps_per_second': 6.633, 'total_flos': 7391764724698944.0, 'train_loss': 0.07087866606673708, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9377
  predict_f1                 =     0.1566
  predict_loss               =     0.2461
  predict_precision          =     0.2262
  predict_recall             =     0.1197
  predict_runtime            = 0:00:01.90
  predict_samples_per_second =    668.191
  predict_steps_per_second   =     83.524
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_1_02.json completed. F1: 0.15658362989323843
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_21.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_21.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6652.13 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6986.51 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6681.93 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6724.50 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6770.69 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6882.80 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7038.41 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7101.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6586.79 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7104.44 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6754.43 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6833.95 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6653.87 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.4205, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.4718569219112396, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0443, 'eval_samples_per_second': 502.906, 'eval_steps_per_second': 63.068, 'epoch': 1.0}
{'loss': 0.3775, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.29293984174728394, 'eval_precision': 0.42857142857142855, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0067873303167420825, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 3.0598, 'eval_samples_per_second': 500.362, 'eval_steps_per_second': 62.75, 'epoch': 2.0}
{'loss': 0.2846, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.2668956518173218, 'eval_precision': 0.11333333333333333, 'eval_recall': 0.03876852907639681, 'eval_f1': 0.05777400169923534, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 3.0568, 'eval_samples_per_second': 500.854, 'eval_steps_per_second': 62.811, 'epoch': 3.0}
{'loss': 0.242, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.26714321970939636, 'eval_precision': 0.2045028142589118, 'eval_recall': 0.12428734321550741, 'eval_f1': 0.15460992907801419, 'eval_accuracy': 0.9385084536400834, 'eval_runtime': 3.259, 'eval_samples_per_second': 469.772, 'eval_steps_per_second': 58.913, 'epoch': 4.0}
{'loss': 0.1884, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2623860836029053, 'eval_precision': 0.1920374707259953, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.1894858463316002, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 3.0538, 'eval_samples_per_second': 501.348, 'eval_steps_per_second': 62.873, 'epoch': 5.0}
{'loss': 0.1591, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.27518415451049805, 'eval_precision': 0.1970260223048327, 'eval_recall': 0.18129988597491448, 'eval_f1': 0.1888361045130641, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 3.1463, 'eval_samples_per_second': 486.61, 'eval_steps_per_second': 61.025, 'epoch': 6.0}
{'loss': 0.143, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.288054496049881, 'eval_precision': 0.15805168986083498, 'eval_recall': 0.18129988597491448, 'eval_f1': 0.16887944768985658, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 3.0944, 'eval_samples_per_second': 494.769, 'eval_steps_per_second': 62.048, 'epoch': 7.0}
{'loss': 0.1298, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.2918868362903595, 'eval_precision': 0.21566632756866735, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.22795698924731186, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.0376, 'eval_samples_per_second': 504.024, 'eval_steps_per_second': 63.209, 'epoch': 8.0}
{'loss': 0.1161, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.29036951065063477, 'eval_precision': 0.22757847533632286, 'eval_recall': 0.2314709236031927, 'eval_f1': 0.22950819672131148, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 3.2288, 'eval_samples_per_second': 474.174, 'eval_steps_per_second': 59.465, 'epoch': 9.0}
{'loss': 0.1039, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2916962504386902, 'eval_precision': 0.22546161321671526, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.24344176285414482, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 3.1075, 'eval_samples_per_second': 492.676, 'eval_steps_per_second': 61.786, 'epoch': 10.0}
{'loss': 0.0921, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.301628440618515, 'eval_precision': 0.2540650406504065, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2686727565824825, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 3.0537, 'eval_samples_per_second': 501.351, 'eval_steps_per_second': 62.874, 'epoch': 11.0}
{'loss': 0.0826, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3134726881980896, 'eval_precision': 0.2837326607818411, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.2694610778443114, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 3.0593, 'eval_samples_per_second': 500.434, 'eval_steps_per_second': 62.759, 'epoch': 12.0}
{'loss': 0.074, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3128446936607361, 'eval_precision': 0.26173826173826176, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27902023429179984, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.8, 'eval_steps_per_second': 63.181, 'epoch': 13.0}
{'loss': 0.0663, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.31653347611427307, 'eval_precision': 0.2515090543259557, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2672367717797969, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 3.0504, 'eval_samples_per_second': 501.898, 'eval_steps_per_second': 62.942, 'epoch': 14.0}
{'loss': 0.059, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3219541013240814, 'eval_precision': 0.25318940137389595, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27215189873417717, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.33, 'eval_steps_per_second': 63.874, 'epoch': 15.0}
{'loss': 0.0534, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.33536869287490845, 'eval_precision': 0.24877571008814886, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.26765015806111697, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.02, 'eval_samples_per_second': 506.952, 'eval_steps_per_second': 63.576, 'epoch': 16.0}
{'loss': 0.0493, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.333533376455307, 'eval_precision': 0.2687830687830688, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.278814489571899, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 3.0111, 'eval_samples_per_second': 508.455, 'eval_steps_per_second': 63.764, 'epoch': 17.0}
{'loss': 0.0462, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.34132739901542664, 'eval_precision': 0.25461613216715256, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27492130115424973, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.09, 'eval_steps_per_second': 63.217, 'epoch': 18.0}
{'loss': 0.0424, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.34163621068000793, 'eval_precision': 0.26434426229508196, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2784673502428494, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.112, 'eval_steps_per_second': 63.22, 'epoch': 19.0}
{'loss': 0.0398, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.35050851106643677, 'eval_precision': 0.260019550342131, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.27999999999999997, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 3.0403, 'eval_samples_per_second': 503.566, 'eval_steps_per_second': 63.151, 'epoch': 20.0}
{'loss': 0.0382, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3524194359779358, 'eval_precision': 0.26326326326326327, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2803837953091684, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 3.0113, 'eval_samples_per_second': 508.423, 'eval_steps_per_second': 63.76, 'epoch': 21.0}
{'loss': 0.0363, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.35529711842536926, 'eval_precision': 0.263103802672148, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.27675675675675676, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 3.0203, 'eval_samples_per_second': 506.898, 'eval_steps_per_second': 63.569, 'epoch': 22.0}
{'loss': 0.0355, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.35776209831237793, 'eval_precision': 0.2595573440643863, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2757883484767504, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 3.1067, 'eval_samples_per_second': 492.803, 'eval_steps_per_second': 61.802, 'epoch': 23.0}
{'loss': 0.0345, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3586649000644684, 'eval_precision': 0.26422764227642276, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27941966684578184, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 3.0349, 'eval_samples_per_second': 504.466, 'eval_steps_per_second': 63.264, 'epoch': 24.0}
{'train_runtime': 418.4374, 'train_samples_per_second': 495.214, 'train_steps_per_second': 7.743, 'train_loss': 0.16310584942499798, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1631
  train_runtime            = 0:06:58.43
  train_samples            =       8634
  train_samples_per_second =    495.214
  train_steps_per_second   =      7.743
[{'loss': 1.4205, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.4718569219112396, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0443, 'eval_samples_per_second': 502.906, 'eval_steps_per_second': 63.068, 'epoch': 1.0, 'step': 135}, {'loss': 0.3775, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.29293984174728394, 'eval_precision': 0.42857142857142855, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0067873303167420825, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 3.0598, 'eval_samples_per_second': 500.362, 'eval_steps_per_second': 62.75, 'epoch': 2.0, 'step': 270}, {'loss': 0.2846, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2668956518173218, 'eval_precision': 0.11333333333333333, 'eval_recall': 0.03876852907639681, 'eval_f1': 0.05777400169923534, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 3.0568, 'eval_samples_per_second': 500.854, 'eval_steps_per_second': 62.811, 'epoch': 3.0, 'step': 405}, {'loss': 0.242, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.26714321970939636, 'eval_precision': 0.2045028142589118, 'eval_recall': 0.12428734321550741, 'eval_f1': 0.15460992907801419, 'eval_accuracy': 0.9385084536400834, 'eval_runtime': 3.259, 'eval_samples_per_second': 469.772, 'eval_steps_per_second': 58.913, 'epoch': 4.0, 'step': 540}, {'loss': 0.1884, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2623860836029053, 'eval_precision': 0.1920374707259953, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.1894858463316002, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 3.0538, 'eval_samples_per_second': 501.348, 'eval_steps_per_second': 62.873, 'epoch': 5.0, 'step': 675}, {'loss': 0.1591, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.27518415451049805, 'eval_precision': 0.1970260223048327, 'eval_recall': 0.18129988597491448, 'eval_f1': 0.1888361045130641, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 3.1463, 'eval_samples_per_second': 486.61, 'eval_steps_per_second': 61.025, 'epoch': 6.0, 'step': 810}, {'loss': 0.143, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.288054496049881, 'eval_precision': 0.15805168986083498, 'eval_recall': 0.18129988597491448, 'eval_f1': 0.16887944768985658, 'eval_accuracy': 0.9292441905350112, 'eval_runtime': 3.0944, 'eval_samples_per_second': 494.769, 'eval_steps_per_second': 62.048, 'epoch': 7.0, 'step': 945}, {'loss': 0.1298, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2918868362903595, 'eval_precision': 0.21566632756866735, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.22795698924731186, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 3.0376, 'eval_samples_per_second': 504.024, 'eval_steps_per_second': 63.209, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1161, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.29036951065063477, 'eval_precision': 0.22757847533632286, 'eval_recall': 0.2314709236031927, 'eval_f1': 0.22950819672131148, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 3.2288, 'eval_samples_per_second': 474.174, 'eval_steps_per_second': 59.465, 'epoch': 9.0, 'step': 1215}, {'loss': 0.1039, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2916962504386902, 'eval_precision': 0.22546161321671526, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.24344176285414482, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 3.1075, 'eval_samples_per_second': 492.676, 'eval_steps_per_second': 61.786, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0921, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.301628440618515, 'eval_precision': 0.2540650406504065, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2686727565824825, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 3.0537, 'eval_samples_per_second': 501.351, 'eval_steps_per_second': 62.874, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0826, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3134726881980896, 'eval_precision': 0.2837326607818411, 'eval_recall': 0.25655644241733183, 'eval_f1': 0.2694610778443114, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 3.0593, 'eval_samples_per_second': 500.434, 'eval_steps_per_second': 62.759, 'epoch': 12.0, 'step': 1620}, {'loss': 0.074, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3128446936607361, 'eval_precision': 0.26173826173826176, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27902023429179984, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.8, 'eval_steps_per_second': 63.181, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0663, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.31653347611427307, 'eval_precision': 0.2515090543259557, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2672367717797969, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 3.0504, 'eval_samples_per_second': 501.898, 'eval_steps_per_second': 62.942, 'epoch': 14.0, 'step': 1890}, {'loss': 0.059, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3219541013240814, 'eval_precision': 0.25318940137389595, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27215189873417717, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.33, 'eval_steps_per_second': 63.874, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0534, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.33536869287490845, 'eval_precision': 0.24877571008814886, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.26765015806111697, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.02, 'eval_samples_per_second': 506.952, 'eval_steps_per_second': 63.576, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0493, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.333533376455307, 'eval_precision': 0.2687830687830688, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.278814489571899, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 3.0111, 'eval_samples_per_second': 508.455, 'eval_steps_per_second': 63.764, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0462, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.34132739901542664, 'eval_precision': 0.25461613216715256, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27492130115424973, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.09, 'eval_steps_per_second': 63.217, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0424, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.34163621068000793, 'eval_precision': 0.26434426229508196, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2784673502428494, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.112, 'eval_steps_per_second': 63.22, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0398, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.35050851106643677, 'eval_precision': 0.260019550342131, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.27999999999999997, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 3.0403, 'eval_samples_per_second': 503.566, 'eval_steps_per_second': 63.151, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0382, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3524194359779358, 'eval_precision': 0.26326326326326327, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2803837953091684, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 3.0113, 'eval_samples_per_second': 508.423, 'eval_steps_per_second': 63.76, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0363, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.35529711842536926, 'eval_precision': 0.263103802672148, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.27675675675675676, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 3.0203, 'eval_samples_per_second': 506.898, 'eval_steps_per_second': 63.569, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0355, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.35776209831237793, 'eval_precision': 0.2595573440643863, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2757883484767504, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 3.1067, 'eval_samples_per_second': 492.803, 'eval_steps_per_second': 61.802, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0345, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3586649000644684, 'eval_precision': 0.26422764227642276, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27941966684578184, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 3.0349, 'eval_samples_per_second': 504.466, 'eval_steps_per_second': 63.264, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 418.4374, 'train_samples_per_second': 495.214, 'train_steps_per_second': 7.743, 'total_flos': 1913291761259340.0, 'train_loss': 0.16310584942499798, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9291
  predict_f1                 =     0.1406
  predict_loss               =     0.2722
  predict_precision          =     0.1439
  predict_recall             =     0.1374
  predict_runtime            = 0:00:02.53
  predict_samples_per_second =    501.939
  predict_steps_per_second   =     62.742
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_21.json completed. F1: 0.14057063326374392
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_06.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6715.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7069.53 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6836.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6864.13 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6879.59 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7010.62 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7169.32 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6255.22 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6685.46 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7231.42 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6874.69 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6928.27 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6787.01 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170944_tsa-intensity_NorBERT_3_large/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4961, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2525508403778076, 'eval_precision': 0.1293634496919918, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.09237536656891494, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 5.8623, 'eval_samples_per_second': 261.162, 'eval_steps_per_second': 32.752, 'epoch': 1.0}
{'loss': 0.2249, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.21744276583194733, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.1847206385404789, 'eval_f1': 0.20519316022799242, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 5.8248, 'eval_samples_per_second': 262.844, 'eval_steps_per_second': 32.963, 'epoch': 2.0}
{'loss': 0.1437, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.23391784727573395, 'eval_precision': 0.28398058252427183, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2751322751322751, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 5.8271, 'eval_samples_per_second': 262.736, 'eval_steps_per_second': 32.949, 'epoch': 3.0}
{'loss': 0.0981, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2502747178077698, 'eval_precision': 0.2911111111111111, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29487900956668545, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 5.8331, 'eval_samples_per_second': 262.469, 'eval_steps_per_second': 32.916, 'epoch': 4.0}
{'loss': 0.0703, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.3064699172973633, 'eval_precision': 0.2627669452181987, 'eval_recall': 0.322690992018244, 'eval_f1': 0.28966223132036845, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 5.8523, 'eval_samples_per_second': 261.604, 'eval_steps_per_second': 32.807, 'epoch': 5.0}
{'loss': 0.0485, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.31577491760253906, 'eval_precision': 0.2871842843779233, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.31551901336074, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 5.8441, 'eval_samples_per_second': 261.975, 'eval_steps_per_second': 32.854, 'epoch': 6.0}
{'loss': 0.0334, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.33413204550743103, 'eval_precision': 0.2899239543726236, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.31622602384655263, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 5.9205, 'eval_samples_per_second': 258.593, 'eval_steps_per_second': 32.43, 'epoch': 7.0}
{'loss': 0.0242, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.36027780175209045, 'eval_precision': 0.30325288562434416, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3158469945355191, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 5.9032, 'eval_samples_per_second': 259.352, 'eval_steps_per_second': 32.525, 'epoch': 8.0}
{'loss': 0.0171, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3806028366088867, 'eval_precision': 0.28663594470046083, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.31702344546381245, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 5.8405, 'eval_samples_per_second': 262.137, 'eval_steps_per_second': 32.874, 'epoch': 9.0}
{'loss': 0.0119, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.40281373262405396, 'eval_precision': 0.2995910020449898, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31590296495956877, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 5.8419, 'eval_samples_per_second': 262.073, 'eval_steps_per_second': 32.866, 'epoch': 10.0}
{'loss': 0.0092, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.41782912611961365, 'eval_precision': 0.2803738317757009, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3081664098613251, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.84, 'eval_samples_per_second': 262.158, 'eval_steps_per_second': 32.877, 'epoch': 11.0}
{'loss': 0.0067, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.41608479619026184, 'eval_precision': 0.30458515283842796, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31121026213050756, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 5.8869, 'eval_samples_per_second': 260.071, 'eval_steps_per_second': 32.615, 'epoch': 12.0}
{'loss': 0.005, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4315601885318756, 'eval_precision': 0.30978260869565216, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31719532554257096, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 5.9058, 'eval_samples_per_second': 259.237, 'eval_steps_per_second': 32.51, 'epoch': 13.0}
{'loss': 0.004, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.44071799516677856, 'eval_precision': 0.30158730158730157, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32254641909814324, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8212, 'eval_samples_per_second': 263.005, 'eval_steps_per_second': 32.983, 'epoch': 14.0}
{'loss': 0.0032, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.45327410101890564, 'eval_precision': 0.30825496342737724, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.32170119956379495, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.818, 'eval_samples_per_second': 263.148, 'eval_steps_per_second': 33.001, 'epoch': 15.0}
{'loss': 0.0027, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4581170380115509, 'eval_precision': 0.30620985010706636, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.315847598012148, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 5.8091, 'eval_samples_per_second': 263.552, 'eval_steps_per_second': 33.052, 'epoch': 16.0}
{'loss': 0.0021, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4709216058254242, 'eval_precision': 0.29411764705882354, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3187042842215256, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 5.8232, 'eval_samples_per_second': 262.913, 'eval_steps_per_second': 32.971, 'epoch': 17.0}
{'loss': 0.0019, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4813612699508667, 'eval_precision': 0.29361296472831266, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3198338525441329, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.8091, 'eval_samples_per_second': 263.551, 'eval_steps_per_second': 33.051, 'epoch': 18.0}
{'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.47992053627967834, 'eval_precision': 0.3073852295409182, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.32783395423097395, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 5.8768, 'eval_samples_per_second': 260.515, 'eval_steps_per_second': 32.671, 'epoch': 19.0}
{'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.48546749353408813, 'eval_precision': 0.30028598665395617, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.32710280373831774, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 5.9646, 'eval_samples_per_second': 256.681, 'eval_steps_per_second': 32.19, 'epoch': 20.0}
{'loss': 0.0013, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.49208030104637146, 'eval_precision': 0.3017689906347555, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3155603917301415, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.7852, 'eval_samples_per_second': 264.641, 'eval_steps_per_second': 33.188, 'epoch': 21.0}
{'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.49387842416763306, 'eval_precision': 0.3094736842105263, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3218390804597701, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 5.7832, 'eval_samples_per_second': 264.732, 'eval_steps_per_second': 33.2, 'epoch': 22.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4951688051223755, 'eval_precision': 0.30809674027339645, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3205689277899344, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 5.7902, 'eval_samples_per_second': 264.414, 'eval_steps_per_second': 33.16, 'epoch': 23.0}
{'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.49537596106529236, 'eval_precision': 0.308839190628328, 'eval_recall': 0.330672748004561, 'eval_f1': 0.31938325991189426, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 5.7712, 'eval_samples_per_second': 265.281, 'eval_steps_per_second': 33.268, 'epoch': 24.0}
{'train_runtime': 2448.0279, 'train_samples_per_second': 84.646, 'train_steps_per_second': 2.118, 'train_loss': 0.05043925357879036, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0504
  train_runtime            = 0:40:48.02
  train_samples            =       8634
  train_samples_per_second =     84.646
  train_steps_per_second   =      2.118
[{'loss': 0.4961, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2525508403778076, 'eval_precision': 0.1293634496919918, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.09237536656891494, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 5.8623, 'eval_samples_per_second': 261.162, 'eval_steps_per_second': 32.752, 'epoch': 1.0, 'step': 216}, {'loss': 0.2249, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.21744276583194733, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.1847206385404789, 'eval_f1': 0.20519316022799242, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 5.8248, 'eval_samples_per_second': 262.844, 'eval_steps_per_second': 32.963, 'epoch': 2.0, 'step': 432}, {'loss': 0.1437, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.23391784727573395, 'eval_precision': 0.28398058252427183, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2751322751322751, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 5.8271, 'eval_samples_per_second': 262.736, 'eval_steps_per_second': 32.949, 'epoch': 3.0, 'step': 648}, {'loss': 0.0981, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2502747178077698, 'eval_precision': 0.2911111111111111, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29487900956668545, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 5.8331, 'eval_samples_per_second': 262.469, 'eval_steps_per_second': 32.916, 'epoch': 4.0, 'step': 864}, {'loss': 0.0703, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.3064699172973633, 'eval_precision': 0.2627669452181987, 'eval_recall': 0.322690992018244, 'eval_f1': 0.28966223132036845, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 5.8523, 'eval_samples_per_second': 261.604, 'eval_steps_per_second': 32.807, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0485, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.31577491760253906, 'eval_precision': 0.2871842843779233, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.31551901336074, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 5.8441, 'eval_samples_per_second': 261.975, 'eval_steps_per_second': 32.854, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0334, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.33413204550743103, 'eval_precision': 0.2899239543726236, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.31622602384655263, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 5.9205, 'eval_samples_per_second': 258.593, 'eval_steps_per_second': 32.43, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0242, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.36027780175209045, 'eval_precision': 0.30325288562434416, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3158469945355191, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 5.9032, 'eval_samples_per_second': 259.352, 'eval_steps_per_second': 32.525, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0171, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3806028366088867, 'eval_precision': 0.28663594470046083, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.31702344546381245, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 5.8405, 'eval_samples_per_second': 262.137, 'eval_steps_per_second': 32.874, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0119, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.40281373262405396, 'eval_precision': 0.2995910020449898, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31590296495956877, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 5.8419, 'eval_samples_per_second': 262.073, 'eval_steps_per_second': 32.866, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0092, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.41782912611961365, 'eval_precision': 0.2803738317757009, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3081664098613251, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.84, 'eval_samples_per_second': 262.158, 'eval_steps_per_second': 32.877, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0067, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.41608479619026184, 'eval_precision': 0.30458515283842796, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31121026213050756, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 5.8869, 'eval_samples_per_second': 260.071, 'eval_steps_per_second': 32.615, 'epoch': 12.0, 'step': 2592}, {'loss': 0.005, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.4315601885318756, 'eval_precision': 0.30978260869565216, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31719532554257096, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 5.9058, 'eval_samples_per_second': 259.237, 'eval_steps_per_second': 32.51, 'epoch': 13.0, 'step': 2808}, {'loss': 0.004, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.44071799516677856, 'eval_precision': 0.30158730158730157, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32254641909814324, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8212, 'eval_samples_per_second': 263.005, 'eval_steps_per_second': 32.983, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0032, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.45327410101890564, 'eval_precision': 0.30825496342737724, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.32170119956379495, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.818, 'eval_samples_per_second': 263.148, 'eval_steps_per_second': 33.001, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0027, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4581170380115509, 'eval_precision': 0.30620985010706636, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.315847598012148, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 5.8091, 'eval_samples_per_second': 263.552, 'eval_steps_per_second': 33.052, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0021, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4709216058254242, 'eval_precision': 0.29411764705882354, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3187042842215256, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 5.8232, 'eval_samples_per_second': 262.913, 'eval_steps_per_second': 32.971, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0019, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4813612699508667, 'eval_precision': 0.29361296472831266, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3198338525441329, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.8091, 'eval_samples_per_second': 263.551, 'eval_steps_per_second': 33.051, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.47992053627967834, 'eval_precision': 0.3073852295409182, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.32783395423097395, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 5.8768, 'eval_samples_per_second': 260.515, 'eval_steps_per_second': 32.671, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.48546749353408813, 'eval_precision': 0.30028598665395617, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.32710280373831774, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 5.9646, 'eval_samples_per_second': 256.681, 'eval_steps_per_second': 32.19, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0013, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.49208030104637146, 'eval_precision': 0.3017689906347555, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3155603917301415, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.7852, 'eval_samples_per_second': 264.641, 'eval_steps_per_second': 33.188, 'epoch': 21.0, 'step': 4536}, {'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.49387842416763306, 'eval_precision': 0.3094736842105263, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3218390804597701, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 5.7832, 'eval_samples_per_second': 264.732, 'eval_steps_per_second': 33.2, 'epoch': 22.0, 'step': 4752}, {'loss': 0.001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.4951688051223755, 'eval_precision': 0.30809674027339645, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3205689277899344, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 5.7902, 'eval_samples_per_second': 264.414, 'eval_steps_per_second': 33.16, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.49537596106529236, 'eval_precision': 0.308839190628328, 'eval_recall': 0.330672748004561, 'eval_f1': 0.31938325991189426, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 5.7712, 'eval_samples_per_second': 265.281, 'eval_steps_per_second': 33.268, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2448.0279, 'train_samples_per_second': 84.646, 'train_steps_per_second': 2.118, 'total_flos': 2.4801286601466228e+16, 'train_loss': 0.05043925357879036, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9422
  predict_f1                 =     0.2009
  predict_loss               =     0.2225
  predict_precision          =     0.2258
  predict_recall             =      0.181
  predict_runtime            = 0:00:04.84
  predict_samples_per_second =    262.659
  predict_steps_per_second   =     32.832
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_06.json completed. F1: 0.20090634441087613
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_24.json
01170944_tsa-intensity_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6271.35 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6985.66 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6899.07 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7007.31 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7044.44 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7168.63 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6204.96 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6587.75 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6746.06 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7425.66 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7028.44 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7477.28 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7273.90 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3127, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21482904255390167, 'eval_precision': 0.22173274596182085, 'eval_recall': 0.17217787913340935, 'eval_f1': 0.1938382541720154, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.2469, 'eval_samples_per_second': 681.37, 'eval_steps_per_second': 85.449, 'epoch': 1.0}
{'loss': 0.1823, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.21986393630504608, 'eval_precision': 0.24641148325358853, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.24051371862230006, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.373, 'eval_steps_per_second': 86.202, 'epoch': 2.0}
{'loss': 0.1116, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.24352768063545227, 'eval_precision': 0.26153846153846155, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.275377969762419, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.151, 'eval_steps_per_second': 86.174, 'epoch': 3.0}
{'loss': 0.0673, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2858085036277771, 'eval_precision': 0.24834749763928235, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.27169421487603307, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.394, 'eval_steps_per_second': 86.205, 'epoch': 4.0}
{'loss': 0.0392, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.31904304027557373, 'eval_precision': 0.24259789875835722, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.264033264033264, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.2252, 'eval_samples_per_second': 688.043, 'eval_steps_per_second': 86.286, 'epoch': 5.0}
{'loss': 0.0242, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.35652774572372437, 'eval_precision': 0.24, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.25572722429408623, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.372, 'eval_steps_per_second': 86.202, 'epoch': 6.0}
{'loss': 0.0134, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.40824034810066223, 'eval_precision': 0.2514231499051233, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2744691869497669, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.2169, 'eval_samples_per_second': 690.614, 'eval_steps_per_second': 86.609, 'epoch': 7.0}
{'loss': 0.0094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.4130496680736542, 'eval_precision': 0.2470472440944882, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.26518753301637615, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.2183, 'eval_samples_per_second': 690.178, 'eval_steps_per_second': 86.554, 'epoch': 8.0}
{'loss': 0.0057, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.4205648899078369, 'eval_precision': 0.25705645161290325, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.27287319422150885, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.2137, 'eval_samples_per_second': 691.605, 'eval_steps_per_second': 86.733, 'epoch': 9.0}
{'loss': 0.004, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.44553494453430176, 'eval_precision': 0.25093283582089554, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2760389943560801, 'eval_accuracy': 0.9309812398672123, 'eval_runtime': 2.2167, 'eval_samples_per_second': 690.664, 'eval_steps_per_second': 86.615, 'epoch': 10.0}
{'loss': 0.0036, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.44570043683052063, 'eval_precision': 0.26160815402038506, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.2625, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.2178, 'eval_samples_per_second': 690.312, 'eval_steps_per_second': 86.571, 'epoch': 11.0}
{'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4603508412837982, 'eval_precision': 0.2456935630099728, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2737373737373738, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.157, 'eval_steps_per_second': 86.175, 'epoch': 12.0}
{'loss': 0.0018, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.46940723061561584, 'eval_precision': 0.2634730538922156, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2810005321979777, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.2268, 'eval_samples_per_second': 687.528, 'eval_steps_per_second': 86.222, 'epoch': 13.0}
{'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.48798033595085144, 'eval_precision': 0.25891946992864423, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2734122712594187, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 2.2233, 'eval_samples_per_second': 688.601, 'eval_steps_per_second': 86.356, 'epoch': 14.0}
{'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4932350516319275, 'eval_precision': 0.2494949494949495, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26459560792715586, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.655, 'eval_steps_per_second': 86.363, 'epoch': 15.0}
{'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.49364373087882996, 'eval_precision': 0.2594594594594595, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2663706992230855, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.061, 'eval_steps_per_second': 86.163, 'epoch': 16.0}
{'loss': 0.0006, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.5008546710014343, 'eval_precision': 0.25367286973555336, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27291886195995785, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.2296, 'eval_samples_per_second': 686.683, 'eval_steps_per_second': 86.116, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4958949089050293, 'eval_precision': 0.2621761658031088, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.27470141150922905, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2231, 'eval_samples_per_second': 688.689, 'eval_steps_per_second': 86.367, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5049303770065308, 'eval_precision': 0.2781875658587987, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28915662650602403, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.2196, 'eval_samples_per_second': 689.769, 'eval_steps_per_second': 86.503, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.511478841304779, 'eval_precision': 0.26814516129032256, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28464419475655434, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 2.2169, 'eval_samples_per_second': 690.594, 'eval_steps_per_second': 86.606, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5130029916763306, 'eval_precision': 0.27167019027484146, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2819528250137137, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.295, 'eval_steps_per_second': 86.569, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5136686563491821, 'eval_precision': 0.2768421052631579, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.28790366721401206, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.076, 'eval_steps_per_second': 86.667, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5155630707740784, 'eval_precision': 0.2740021574973031, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2815964523281596, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.2185, 'eval_samples_per_second': 690.117, 'eval_steps_per_second': 86.546, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.51643306016922, 'eval_precision': 0.275377969762419, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2828618968386023, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.2291, 'eval_samples_per_second': 686.836, 'eval_steps_per_second': 86.135, 'epoch': 24.0}
{'train_runtime': 714.4079, 'train_samples_per_second': 290.053, 'train_steps_per_second': 4.535, 'train_loss': 0.032683346549301974, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0327
  train_runtime            = 0:11:54.40
  train_samples            =       8634
  train_samples_per_second =    290.053
  train_steps_per_second   =      4.535
[{'loss': 0.3127, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21482904255390167, 'eval_precision': 0.22173274596182085, 'eval_recall': 0.17217787913340935, 'eval_f1': 0.1938382541720154, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.2469, 'eval_samples_per_second': 681.37, 'eval_steps_per_second': 85.449, 'epoch': 1.0, 'step': 135}, {'loss': 0.1823, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.21986393630504608, 'eval_precision': 0.24641148325358853, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.24051371862230006, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.373, 'eval_steps_per_second': 86.202, 'epoch': 2.0, 'step': 270}, {'loss': 0.1116, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.24352768063545227, 'eval_precision': 0.26153846153846155, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.275377969762419, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.151, 'eval_steps_per_second': 86.174, 'epoch': 3.0, 'step': 405}, {'loss': 0.0673, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2858085036277771, 'eval_precision': 0.24834749763928235, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.27169421487603307, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.394, 'eval_steps_per_second': 86.205, 'epoch': 4.0, 'step': 540}, {'loss': 0.0392, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.31904304027557373, 'eval_precision': 0.24259789875835722, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.264033264033264, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.2252, 'eval_samples_per_second': 688.043, 'eval_steps_per_second': 86.286, 'epoch': 5.0, 'step': 675}, {'loss': 0.0242, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.35652774572372437, 'eval_precision': 0.24, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.25572722429408623, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.2273, 'eval_samples_per_second': 687.372, 'eval_steps_per_second': 86.202, 'epoch': 6.0, 'step': 810}, {'loss': 0.0134, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.40824034810066223, 'eval_precision': 0.2514231499051233, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2744691869497669, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.2169, 'eval_samples_per_second': 690.614, 'eval_steps_per_second': 86.609, 'epoch': 7.0, 'step': 945}, {'loss': 0.0094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.4130496680736542, 'eval_precision': 0.2470472440944882, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.26518753301637615, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 2.2183, 'eval_samples_per_second': 690.178, 'eval_steps_per_second': 86.554, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0057, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.4205648899078369, 'eval_precision': 0.25705645161290325, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.27287319422150885, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.2137, 'eval_samples_per_second': 691.605, 'eval_steps_per_second': 86.733, 'epoch': 9.0, 'step': 1215}, {'loss': 0.004, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.44553494453430176, 'eval_precision': 0.25093283582089554, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2760389943560801, 'eval_accuracy': 0.9309812398672123, 'eval_runtime': 2.2167, 'eval_samples_per_second': 690.664, 'eval_steps_per_second': 86.615, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0036, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.44570043683052063, 'eval_precision': 0.26160815402038506, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.2625, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.2178, 'eval_samples_per_second': 690.312, 'eval_steps_per_second': 86.571, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4603508412837982, 'eval_precision': 0.2456935630099728, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2737373737373738, 'eval_accuracy': 0.930054813556705, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.157, 'eval_steps_per_second': 86.175, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0018, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.46940723061561584, 'eval_precision': 0.2634730538922156, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2810005321979777, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.2268, 'eval_samples_per_second': 687.528, 'eval_steps_per_second': 86.222, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.48798033595085144, 'eval_precision': 0.25891946992864423, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2734122712594187, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 2.2233, 'eval_samples_per_second': 688.601, 'eval_steps_per_second': 86.356, 'epoch': 14.0, 'step': 1890}, {'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4932350516319275, 'eval_precision': 0.2494949494949495, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.26459560792715586, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.655, 'eval_steps_per_second': 86.363, 'epoch': 15.0, 'step': 2025}, {'loss': 0.001, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.49364373087882996, 'eval_precision': 0.2594594594594595, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2663706992230855, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.2283, 'eval_samples_per_second': 687.061, 'eval_steps_per_second': 86.163, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0006, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.5008546710014343, 'eval_precision': 0.25367286973555336, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27291886195995785, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.2296, 'eval_samples_per_second': 686.683, 'eval_steps_per_second': 86.116, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4958949089050293, 'eval_precision': 0.2621761658031088, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.27470141150922905, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2231, 'eval_samples_per_second': 688.689, 'eval_steps_per_second': 86.367, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0006, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.5049303770065308, 'eval_precision': 0.2781875658587987, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28915662650602403, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.2196, 'eval_samples_per_second': 689.769, 'eval_steps_per_second': 86.503, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.511478841304779, 'eval_precision': 0.26814516129032256, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28464419475655434, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 2.2169, 'eval_samples_per_second': 690.594, 'eval_steps_per_second': 86.606, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.5130029916763306, 'eval_precision': 0.27167019027484146, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2819528250137137, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.295, 'eval_steps_per_second': 86.569, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.5136686563491821, 'eval_precision': 0.2768421052631579, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.28790366721401206, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.076, 'eval_steps_per_second': 86.667, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.5155630707740784, 'eval_precision': 0.2740021574973031, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2815964523281596, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.2185, 'eval_samples_per_second': 690.117, 'eval_steps_per_second': 86.546, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.51643306016922, 'eval_precision': 0.275377969762419, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2828618968386023, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.2291, 'eval_samples_per_second': 686.836, 'eval_steps_per_second': 86.135, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 714.4079, 'train_samples_per_second': 290.053, 'train_steps_per_second': 4.535, 'total_flos': 7419427145580792.0, 'train_loss': 0.032683346549301974, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9378
  predict_f1                 =     0.1872
  predict_loss               =     0.2252
  predict_precision          =     0.2243
  predict_recall             =     0.1605
  predict_runtime            = 0:00:01.84
  predict_samples_per_second =    687.809
  predict_steps_per_second   =     85.976
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_2_24.json completed. F1: 0.18715305313243458
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_01.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6149.92 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6772.64 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6713.41 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6831.47 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6911.70 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7032.94 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7185.88 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7276.05 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6681.30 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7256.74 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6921.83 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7041.92 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6861.44 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 4.2445, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0465, 'eval_samples_per_second': 502.55, 'eval_steps_per_second': 63.024, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0201, 'eval_samples_per_second': 506.934, 'eval_steps_per_second': 63.574, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0213, 'eval_samples_per_second': 506.734, 'eval_steps_per_second': 63.549, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0208, 'eval_samples_per_second': 506.814, 'eval_steps_per_second': 63.559, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0155, 'eval_samples_per_second': 507.712, 'eval_steps_per_second': 63.671, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0158, 'eval_samples_per_second': 507.666, 'eval_steps_per_second': 63.665, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.645, 'eval_steps_per_second': 63.161, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9986, 'eval_samples_per_second': 510.575, 'eval_steps_per_second': 64.03, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0045, 'eval_samples_per_second': 509.562, 'eval_steps_per_second': 63.903, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0244, 'eval_samples_per_second': 506.211, 'eval_steps_per_second': 63.483, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0892, 'eval_samples_per_second': 495.597, 'eval_steps_per_second': 62.152, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0099, 'eval_samples_per_second': 508.653, 'eval_steps_per_second': 63.789, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0021, 'eval_samples_per_second': 509.976, 'eval_steps_per_second': 63.955, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.898, 'eval_steps_per_second': 63.945, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.024, 'eval_samples_per_second': 506.28, 'eval_steps_per_second': 63.492, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.025, 'eval_samples_per_second': 506.121, 'eval_steps_per_second': 63.472, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0661, 'eval_samples_per_second': 499.326, 'eval_steps_per_second': 62.62, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.089, 'eval_steps_per_second': 63.217, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0118, 'eval_samples_per_second': 508.335, 'eval_steps_per_second': 63.749, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9964, 'eval_samples_per_second': 510.952, 'eval_steps_per_second': 64.078, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0045, 'eval_samples_per_second': 509.572, 'eval_steps_per_second': 63.905, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0017, 'eval_samples_per_second': 510.043, 'eval_steps_per_second': 63.964, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0189, 'eval_samples_per_second': 507.139, 'eval_steps_per_second': 63.599, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0948, 'eval_samples_per_second': 494.696, 'eval_steps_per_second': 62.039, 'epoch': 24.0}
{'train_runtime': 867.6701, 'train_samples_per_second': 238.819, 'train_steps_per_second': 5.975, 'train_loss': 0.17685293268274377, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1769
  train_runtime            = 0:14:27.67
  train_samples            =       8634
  train_samples_per_second =    238.819
  train_steps_per_second   =      5.975
[{'loss': 4.2445, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0465, 'eval_samples_per_second': 502.55, 'eval_steps_per_second': 63.024, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0201, 'eval_samples_per_second': 506.934, 'eval_steps_per_second': 63.574, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0213, 'eval_samples_per_second': 506.734, 'eval_steps_per_second': 63.549, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0208, 'eval_samples_per_second': 506.814, 'eval_steps_per_second': 63.559, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0155, 'eval_samples_per_second': 507.712, 'eval_steps_per_second': 63.671, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0158, 'eval_samples_per_second': 507.666, 'eval_steps_per_second': 63.665, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.645, 'eval_steps_per_second': 63.161, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9986, 'eval_samples_per_second': 510.575, 'eval_steps_per_second': 64.03, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0045, 'eval_samples_per_second': 509.562, 'eval_steps_per_second': 63.903, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0244, 'eval_samples_per_second': 506.211, 'eval_steps_per_second': 63.483, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0892, 'eval_samples_per_second': 495.597, 'eval_steps_per_second': 62.152, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0099, 'eval_samples_per_second': 508.653, 'eval_steps_per_second': 63.789, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0021, 'eval_samples_per_second': 509.976, 'eval_steps_per_second': 63.955, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.898, 'eval_steps_per_second': 63.945, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.024, 'eval_samples_per_second': 506.28, 'eval_steps_per_second': 63.492, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.025, 'eval_samples_per_second': 506.121, 'eval_steps_per_second': 63.472, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0661, 'eval_samples_per_second': 499.326, 'eval_steps_per_second': 62.62, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.089, 'eval_steps_per_second': 63.217, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0118, 'eval_samples_per_second': 508.335, 'eval_steps_per_second': 63.749, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9964, 'eval_samples_per_second': 510.952, 'eval_steps_per_second': 64.078, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0045, 'eval_samples_per_second': 509.572, 'eval_steps_per_second': 63.905, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0017, 'eval_samples_per_second': 510.043, 'eval_steps_per_second': 63.964, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0189, 'eval_samples_per_second': 507.139, 'eval_steps_per_second': 63.599, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0948, 'eval_samples_per_second': 494.696, 'eval_steps_per_second': 62.039, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 867.6701, 'train_samples_per_second': 238.819, 'train_steps_per_second': 5.975, 'total_flos': 7005004481258868.0, 'train_loss': 0.17685293268274377, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    510.051
  predict_steps_per_second   =     63.756
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_01.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_19.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_19.json
01170944_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:02, 3773.47 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 5388.70 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 5952.82 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6376.20 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6681.28 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6930.60 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6192.40 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6595.22 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6316.27 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7513.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7157.99 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7152.66 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7003.62 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2807, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.22678148746490479, 'eval_precision': 0.3, 'eval_recall': 0.14709236031927023, 'eval_f1': 0.197398622800306, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.7011, 'eval_samples_per_second': 325.671, 'eval_steps_per_second': 40.842, 'epoch': 1.0}
{'loss': 0.1808, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.2100275605916977, 'eval_precision': 0.2965722801788376, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.25710594315245483, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.457, 'eval_steps_per_second': 41.191, 'epoch': 2.0}
{'loss': 0.1235, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2420387864112854, 'eval_precision': 0.2828649138712602, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.3151515151515152, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 4.7428, 'eval_samples_per_second': 322.803, 'eval_steps_per_second': 40.482, 'epoch': 3.0}
{'loss': 0.0825, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.2713795602321625, 'eval_precision': 0.2943871706758305, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2937142857142857, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6662, 'eval_samples_per_second': 328.105, 'eval_steps_per_second': 41.147, 'epoch': 4.0}
{'loss': 0.0586, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.30475515127182007, 'eval_precision': 0.2759009009009009, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2776203966005666, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 4.6913, 'eval_samples_per_second': 326.351, 'eval_steps_per_second': 40.927, 'epoch': 5.0}
{'loss': 0.038, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3240809440612793, 'eval_precision': 0.28672032193158953, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30464991982896844, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.822, 'eval_steps_per_second': 41.237, 'epoch': 6.0}
{'loss': 0.0264, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.35922977328300476, 'eval_precision': 0.28642714570858285, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30548163916977117, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.22, 'eval_steps_per_second': 41.162, 'epoch': 7.0}
{'loss': 0.0152, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.39116615056991577, 'eval_precision': 0.28699551569506726, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2894290559638214, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 4.6737, 'eval_samples_per_second': 327.579, 'eval_steps_per_second': 41.081, 'epoch': 8.0}
{'loss': 0.0102, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.39648470282554626, 'eval_precision': 0.3141104294478528, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.3026004728132388, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 4.6753, 'eval_samples_per_second': 327.464, 'eval_steps_per_second': 41.067, 'epoch': 9.0}
{'loss': 0.0075, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.4078456461429596, 'eval_precision': 0.26632124352331604, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.27904451682953313, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 4.6763, 'eval_samples_per_second': 327.395, 'eval_steps_per_second': 41.058, 'epoch': 10.0}
{'loss': 0.0064, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.4101182222366333, 'eval_precision': 0.315, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.3005366726296959, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6824, 'eval_samples_per_second': 326.971, 'eval_steps_per_second': 41.005, 'epoch': 11.0}
{'loss': 0.0044, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.44670215249061584, 'eval_precision': 0.29243119266055045, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.29159519725557465, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 4.6723, 'eval_samples_per_second': 327.675, 'eval_steps_per_second': 41.093, 'epoch': 12.0}
{'loss': 0.0035, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.4557015597820282, 'eval_precision': 0.27204502814258913, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2985074626865672, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 4.6641, 'eval_samples_per_second': 328.25, 'eval_steps_per_second': 41.165, 'epoch': 13.0}
{'loss': 0.003, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4580319821834564, 'eval_precision': 0.2812135355892649, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2779700115340254, 'eval_accuracy': 0.938122442677372, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.783, 'eval_steps_per_second': 41.232, 'epoch': 14.0}
{'loss': 0.0018, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.4794052541255951, 'eval_precision': 0.2975663716814159, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30207748455923633, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 4.6669, 'eval_samples_per_second': 328.054, 'eval_steps_per_second': 41.141, 'epoch': 15.0}
{'loss': 0.0017, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.4848625957965851, 'eval_precision': 0.3052516411378556, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31155778894472363, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 16.0}
{'loss': 0.0011, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.49849942326545715, 'eval_precision': 0.31138392857142855, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3147208121827411, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.462, 'eval_steps_per_second': 41.192, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.4941112697124481, 'eval_precision': 0.30815347721822545, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.30040911747516075, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.321, 'eval_steps_per_second': 41.174, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.5056360363960266, 'eval_precision': 0.311495673671199, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.298932384341637, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.6545, 'eval_samples_per_second': 328.929, 'eval_steps_per_second': 41.25, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.5013173222541809, 'eval_precision': 0.31981460023174973, 'eval_recall': 0.314709236031927, 'eval_f1': 0.31724137931034485, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.655, 'eval_samples_per_second': 328.896, 'eval_steps_per_second': 41.246, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.508882462978363, 'eval_precision': 0.30751708428246016, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 4.6625, 'eval_samples_per_second': 328.364, 'eval_steps_per_second': 41.18, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5196874737739563, 'eval_precision': 0.31597633136094677, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.31010452961672474, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 4.659, 'eval_samples_per_second': 328.614, 'eval_steps_per_second': 41.211, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.5268046855926514, 'eval_precision': 0.3194774346793349, 'eval_recall': 0.30672748004561, 'eval_f1': 0.31297265852239675, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.987, 'eval_steps_per_second': 41.258, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5299518704414368, 'eval_precision': 0.3220747889022919, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3130128956623682, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.473, 'eval_steps_per_second': 41.193, 'epoch': 24.0}
{'train_runtime': 2114.8228, 'train_samples_per_second': 97.983, 'train_steps_per_second': 2.451, 'train_loss': 0.035334831717018796, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0353
  train_runtime            = 0:35:14.82
  train_samples            =       8634
  train_samples_per_second =     97.983
  train_steps_per_second   =      2.451
[{'loss': 0.2807, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.22678148746490479, 'eval_precision': 0.3, 'eval_recall': 0.14709236031927023, 'eval_f1': 0.197398622800306, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.7011, 'eval_samples_per_second': 325.671, 'eval_steps_per_second': 40.842, 'epoch': 1.0, 'step': 216}, {'loss': 0.1808, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.2100275605916977, 'eval_precision': 0.2965722801788376, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.25710594315245483, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.457, 'eval_steps_per_second': 41.191, 'epoch': 2.0, 'step': 432}, {'loss': 0.1235, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.2420387864112854, 'eval_precision': 0.2828649138712602, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.3151515151515152, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 4.7428, 'eval_samples_per_second': 322.803, 'eval_steps_per_second': 40.482, 'epoch': 3.0, 'step': 648}, {'loss': 0.0825, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.2713795602321625, 'eval_precision': 0.2943871706758305, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.2937142857142857, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6662, 'eval_samples_per_second': 328.105, 'eval_steps_per_second': 41.147, 'epoch': 4.0, 'step': 864}, {'loss': 0.0586, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.30475515127182007, 'eval_precision': 0.2759009009009009, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2776203966005666, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 4.6913, 'eval_samples_per_second': 326.351, 'eval_steps_per_second': 40.927, 'epoch': 5.0, 'step': 1080}, {'loss': 0.038, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3240809440612793, 'eval_precision': 0.28672032193158953, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30464991982896844, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.822, 'eval_steps_per_second': 41.237, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0264, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.35922977328300476, 'eval_precision': 0.28642714570858285, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30548163916977117, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.22, 'eval_steps_per_second': 41.162, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0152, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.39116615056991577, 'eval_precision': 0.28699551569506726, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2894290559638214, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 4.6737, 'eval_samples_per_second': 327.579, 'eval_steps_per_second': 41.081, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0102, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.39648470282554626, 'eval_precision': 0.3141104294478528, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.3026004728132388, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 4.6753, 'eval_samples_per_second': 327.464, 'eval_steps_per_second': 41.067, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0075, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.4078456461429596, 'eval_precision': 0.26632124352331604, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.27904451682953313, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 4.6763, 'eval_samples_per_second': 327.395, 'eval_steps_per_second': 41.058, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0064, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4101182222366333, 'eval_precision': 0.315, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.3005366726296959, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6824, 'eval_samples_per_second': 326.971, 'eval_steps_per_second': 41.005, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0044, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.44670215249061584, 'eval_precision': 0.29243119266055045, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.29159519725557465, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 4.6723, 'eval_samples_per_second': 327.675, 'eval_steps_per_second': 41.093, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0035, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.4557015597820282, 'eval_precision': 0.27204502814258913, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2985074626865672, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 4.6641, 'eval_samples_per_second': 328.25, 'eval_steps_per_second': 41.165, 'epoch': 13.0, 'step': 2808}, {'loss': 0.003, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4580319821834564, 'eval_precision': 0.2812135355892649, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2779700115340254, 'eval_accuracy': 0.938122442677372, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.783, 'eval_steps_per_second': 41.232, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0018, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4794052541255951, 'eval_precision': 0.2975663716814159, 'eval_recall': 0.30672748004561, 'eval_f1': 0.30207748455923633, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 4.6669, 'eval_samples_per_second': 328.054, 'eval_steps_per_second': 41.141, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0017, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4848625957965851, 'eval_precision': 0.3052516411378556, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31155778894472363, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0011, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.49849942326545715, 'eval_precision': 0.31138392857142855, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3147208121827411, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.462, 'eval_steps_per_second': 41.192, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0008, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4941112697124481, 'eval_precision': 0.30815347721822545, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.30040911747516075, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.321, 'eval_steps_per_second': 41.174, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.5056360363960266, 'eval_precision': 0.311495673671199, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.298932384341637, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.6545, 'eval_samples_per_second': 328.929, 'eval_steps_per_second': 41.25, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.5013173222541809, 'eval_precision': 0.31981460023174973, 'eval_recall': 0.314709236031927, 'eval_f1': 0.31724137931034485, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.655, 'eval_samples_per_second': 328.896, 'eval_steps_per_second': 41.246, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.508882462978363, 'eval_precision': 0.30751708428246016, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 4.6625, 'eval_samples_per_second': 328.364, 'eval_steps_per_second': 41.18, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5196874737739563, 'eval_precision': 0.31597633136094677, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.31010452961672474, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 4.659, 'eval_samples_per_second': 328.614, 'eval_steps_per_second': 41.211, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.5268046855926514, 'eval_precision': 0.3194774346793349, 'eval_recall': 0.30672748004561, 'eval_f1': 0.31297265852239675, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.987, 'eval_steps_per_second': 41.258, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5299518704414368, 'eval_precision': 0.3220747889022919, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3130128956623682, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.473, 'eval_steps_per_second': 41.193, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2114.8228, 'train_samples_per_second': 97.983, 'train_steps_per_second': 2.451, 'total_flos': 2.388369125393575e+16, 'train_loss': 0.035334831717018796, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9388
  predict_f1                 =     0.2139
  predict_loss               =     0.2296
  predict_precision          =     0.2587
  predict_recall             =     0.1823
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =     324.68
  predict_steps_per_second   =     40.585
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NB-BERT_large_19.json completed. F1: 0.21388667198723063
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_20.json
01170944_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6836.74 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7186.42 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6929.57 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6951.23 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6953.43 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7072.02 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7229.35 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6312.07 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6750.62 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7336.75 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6936.98 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6970.34 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6807.34 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4947, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.2554204761981964, 'eval_precision': 0.15041782729805014, 'eval_recall': 0.06157354618015964, 'eval_f1': 0.08737864077669903, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 5.8568, 'eval_samples_per_second': 261.405, 'eval_steps_per_second': 32.782, 'epoch': 1.0}
{'loss': 0.2444, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.23582999408245087, 'eval_precision': 0.2144082332761578, 'eval_recall': 0.14253135689851767, 'eval_f1': 0.17123287671232879, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 5.8826, 'eval_samples_per_second': 260.261, 'eval_steps_per_second': 32.639, 'epoch': 2.0}
{'loss': 0.1518, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.23745103180408478, 'eval_precision': 0.23694779116465864, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2520021356113187, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 5.8357, 'eval_samples_per_second': 262.352, 'eval_steps_per_second': 32.901, 'epoch': 3.0}
{'loss': 0.107, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.262037992477417, 'eval_precision': 0.296010296010296, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2781136638452237, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 5.8279, 'eval_samples_per_second': 262.702, 'eval_steps_per_second': 32.945, 'epoch': 4.0}
{'loss': 0.0792, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.30493658781051636, 'eval_precision': 0.2698249227600412, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28354978354978355, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.8383, 'eval_samples_per_second': 262.234, 'eval_steps_per_second': 32.886, 'epoch': 5.0}
{'loss': 0.0528, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.3386342227458954, 'eval_precision': 0.27655310621242485, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29439999999999994, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 5.8335, 'eval_samples_per_second': 262.452, 'eval_steps_per_second': 32.914, 'epoch': 6.0}
{'loss': 0.0366, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.3761076331138611, 'eval_precision': 0.257761053621825, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2824742268041237, 'eval_accuracy': 0.9313672508299236, 'eval_runtime': 5.9056, 'eval_samples_per_second': 259.243, 'eval_steps_per_second': 32.511, 'epoch': 7.0}
{'loss': 0.0252, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3838714361190796, 'eval_precision': 0.26627218934911245, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2855631940772078, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 5.8193, 'eval_samples_per_second': 263.089, 'eval_steps_per_second': 32.994, 'epoch': 8.0}
{'loss': 0.0175, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.4001183807849884, 'eval_precision': 0.28651685393258425, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.28862478777589134, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 5.9397, 'eval_samples_per_second': 257.756, 'eval_steps_per_second': 32.325, 'epoch': 9.0}
{'loss': 0.0135, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.4311387538909912, 'eval_precision': 0.25384615384615383, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.27543035993740217, 'eval_accuracy': 0.9286651740909442, 'eval_runtime': 5.8348, 'eval_samples_per_second': 262.39, 'eval_steps_per_second': 32.906, 'epoch': 10.0}
{'loss': 0.0094, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.41376572847366333, 'eval_precision': 0.29379157427937913, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.297920179876335, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8415, 'eval_samples_per_second': 262.088, 'eval_steps_per_second': 32.868, 'epoch': 11.0}
{'loss': 0.0064, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.4214548170566559, 'eval_precision': 0.29356846473029047, 'eval_recall': 0.322690992018244, 'eval_f1': 0.307441607821836, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.8428, 'eval_samples_per_second': 262.033, 'eval_steps_per_second': 32.861, 'epoch': 12.0}
{'loss': 0.0042, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.4426867663860321, 'eval_precision': 0.3181818181818182, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3105662580268535, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.9217, 'eval_samples_per_second': 258.542, 'eval_steps_per_second': 32.423, 'epoch': 13.0}
{'loss': 0.0033, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.4369108974933624, 'eval_precision': 0.31297709923664124, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3199554069119287, 'eval_accuracy': 0.9371574152705937, 'eval_runtime': 5.8334, 'eval_samples_per_second': 262.452, 'eval_steps_per_second': 32.914, 'epoch': 14.0}
{'loss': 0.0021, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.4708135426044464, 'eval_precision': 0.2982062780269058, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3007348784624081, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8211, 'eval_samples_per_second': 263.01, 'eval_steps_per_second': 32.984, 'epoch': 15.0}
{'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.4764167368412018, 'eval_precision': 0.3023516237402016, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.3050847457627119, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8948, 'eval_samples_per_second': 259.719, 'eval_steps_per_second': 32.571, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.4824787378311157, 'eval_precision': 0.28058252427184466, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.303093864708967, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 5.8149, 'eval_samples_per_second': 263.288, 'eval_steps_per_second': 33.018, 'epoch': 17.0}
{'loss': 0.001, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.4858900010585785, 'eval_precision': 0.3080568720379147, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.30214991284137127, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 5.8511, 'eval_samples_per_second': 261.661, 'eval_steps_per_second': 32.814, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.49959638714790344, 'eval_precision': 0.3073341094295693, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30414746543778803, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 5.9084, 'eval_samples_per_second': 259.121, 'eval_steps_per_second': 32.496, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4959101378917694, 'eval_precision': 0.3026166097838453, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3029612756264237, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 5.8353, 'eval_samples_per_second': 262.368, 'eval_steps_per_second': 32.903, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.5039353370666504, 'eval_precision': 0.3112128146453089, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3106796116504854, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8495, 'eval_samples_per_second': 261.73, 'eval_steps_per_second': 32.823, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.5095358490943909, 'eval_precision': 0.3090079817559863, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3090079817559863, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8342, 'eval_samples_per_second': 262.42, 'eval_steps_per_second': 32.91, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.511047899723053, 'eval_precision': 0.3048368953880765, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3069082672706682, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 5.8355, 'eval_samples_per_second': 262.36, 'eval_steps_per_second': 32.902, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5122191309928894, 'eval_precision': 0.30777903043968435, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.30952380952380953, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 5.8347, 'eval_samples_per_second': 262.397, 'eval_steps_per_second': 32.907, 'epoch': 24.0}
{'train_runtime': 2448.5866, 'train_samples_per_second': 84.627, 'train_steps_per_second': 2.117, 'train_loss': 0.05231211401585398, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0523
  train_runtime            = 0:40:48.58
  train_samples            =       8634
  train_samples_per_second =     84.627
  train_steps_per_second   =      2.117
[{'loss': 0.4947, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2554204761981964, 'eval_precision': 0.15041782729805014, 'eval_recall': 0.06157354618015964, 'eval_f1': 0.08737864077669903, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 5.8568, 'eval_samples_per_second': 261.405, 'eval_steps_per_second': 32.782, 'epoch': 1.0, 'step': 216}, {'loss': 0.2444, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.23582999408245087, 'eval_precision': 0.2144082332761578, 'eval_recall': 0.14253135689851767, 'eval_f1': 0.17123287671232879, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 5.8826, 'eval_samples_per_second': 260.261, 'eval_steps_per_second': 32.639, 'epoch': 2.0, 'step': 432}, {'loss': 0.1518, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.23745103180408478, 'eval_precision': 0.23694779116465864, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2520021356113187, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 5.8357, 'eval_samples_per_second': 262.352, 'eval_steps_per_second': 32.901, 'epoch': 3.0, 'step': 648}, {'loss': 0.107, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.262037992477417, 'eval_precision': 0.296010296010296, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2781136638452237, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 5.8279, 'eval_samples_per_second': 262.702, 'eval_steps_per_second': 32.945, 'epoch': 4.0, 'step': 864}, {'loss': 0.0792, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.30493658781051636, 'eval_precision': 0.2698249227600412, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28354978354978355, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.8383, 'eval_samples_per_second': 262.234, 'eval_steps_per_second': 32.886, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0528, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.3386342227458954, 'eval_precision': 0.27655310621242485, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29439999999999994, 'eval_accuracy': 0.9326796881031422, 'eval_runtime': 5.8335, 'eval_samples_per_second': 262.452, 'eval_steps_per_second': 32.914, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0366, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3761076331138611, 'eval_precision': 0.257761053621825, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2824742268041237, 'eval_accuracy': 0.9313672508299236, 'eval_runtime': 5.9056, 'eval_samples_per_second': 259.243, 'eval_steps_per_second': 32.511, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0252, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3838714361190796, 'eval_precision': 0.26627218934911245, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2855631940772078, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 5.8193, 'eval_samples_per_second': 263.089, 'eval_steps_per_second': 32.994, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0175, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.4001183807849884, 'eval_precision': 0.28651685393258425, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.28862478777589134, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 5.9397, 'eval_samples_per_second': 257.756, 'eval_steps_per_second': 32.325, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0135, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.4311387538909912, 'eval_precision': 0.25384615384615383, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.27543035993740217, 'eval_accuracy': 0.9286651740909442, 'eval_runtime': 5.8348, 'eval_samples_per_second': 262.39, 'eval_steps_per_second': 32.906, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0094, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.41376572847366333, 'eval_precision': 0.29379157427937913, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.297920179876335, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8415, 'eval_samples_per_second': 262.088, 'eval_steps_per_second': 32.868, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0064, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.4214548170566559, 'eval_precision': 0.29356846473029047, 'eval_recall': 0.322690992018244, 'eval_f1': 0.307441607821836, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.8428, 'eval_samples_per_second': 262.033, 'eval_steps_per_second': 32.861, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0042, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.4426867663860321, 'eval_precision': 0.3181818181818182, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3105662580268535, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.9217, 'eval_samples_per_second': 258.542, 'eval_steps_per_second': 32.423, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0033, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4369108974933624, 'eval_precision': 0.31297709923664124, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3199554069119287, 'eval_accuracy': 0.9371574152705937, 'eval_runtime': 5.8334, 'eval_samples_per_second': 262.452, 'eval_steps_per_second': 32.914, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0021, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.4708135426044464, 'eval_precision': 0.2982062780269058, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3007348784624081, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8211, 'eval_samples_per_second': 263.01, 'eval_steps_per_second': 32.984, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4764167368412018, 'eval_precision': 0.3023516237402016, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.3050847457627119, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8948, 'eval_samples_per_second': 259.719, 'eval_steps_per_second': 32.571, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0014, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4824787378311157, 'eval_precision': 0.28058252427184466, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.303093864708967, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 5.8149, 'eval_samples_per_second': 263.288, 'eval_steps_per_second': 33.018, 'epoch': 17.0, 'step': 3672}, {'loss': 0.001, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4858900010585785, 'eval_precision': 0.3080568720379147, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.30214991284137127, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 5.8511, 'eval_samples_per_second': 261.661, 'eval_steps_per_second': 32.814, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0007, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.49959638714790344, 'eval_precision': 0.3073341094295693, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30414746543778803, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 5.9084, 'eval_samples_per_second': 259.121, 'eval_steps_per_second': 32.496, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4959101378917694, 'eval_precision': 0.3026166097838453, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3029612756264237, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 5.8353, 'eval_samples_per_second': 262.368, 'eval_steps_per_second': 32.903, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.5039353370666504, 'eval_precision': 0.3112128146453089, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.3106796116504854, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 5.8495, 'eval_samples_per_second': 261.73, 'eval_steps_per_second': 32.823, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.5095358490943909, 'eval_precision': 0.3090079817559863, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3090079817559863, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 5.8342, 'eval_samples_per_second': 262.42, 'eval_steps_per_second': 32.91, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.511047899723053, 'eval_precision': 0.3048368953880765, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3069082672706682, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 5.8355, 'eval_samples_per_second': 262.36, 'eval_steps_per_second': 32.902, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.5122191309928894, 'eval_precision': 0.30777903043968435, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.30952380952380953, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 5.8347, 'eval_samples_per_second': 262.397, 'eval_steps_per_second': 32.907, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2448.5866, 'train_samples_per_second': 84.627, 'train_steps_per_second': 2.117, 'total_flos': 2.4801286601466228e+16, 'train_loss': 0.05231211401585398, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9377
  predict_f1                 =     0.1294
  predict_loss               =     0.2531
  predict_precision          =     0.1626
  predict_recall             =     0.1075
  predict_runtime            = 0:00:04.91
  predict_samples_per_second =    258.943
  predict_steps_per_second   =     32.368
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_large_20.json completed. F1: 0.12940212940212942
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_35.json
01170944_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5590.45 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6327.19 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6460.18 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6647.27 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6747.97 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6922.01 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7107.46 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7219.77 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6542.94 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7307.44 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6943.30 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6978.93 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6791.47 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 555382344.0593, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0747, 'eval_samples_per_second': 497.931, 'eval_steps_per_second': 62.445, 'epoch': 1.0}
{'loss': 546785537.8963, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0452, 'eval_samples_per_second': 502.766, 'eval_steps_per_second': 63.051, 'epoch': 2.0}
{'loss': 557363715.7926, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0203, 'eval_samples_per_second': 506.907, 'eval_steps_per_second': 63.57, 'epoch': 3.0}
{'loss': 552367688.0593, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0081, 'eval_samples_per_second': 508.952, 'eval_steps_per_second': 63.827, 'epoch': 4.0}
{'loss': 546595483.4963, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0418, 'eval_samples_per_second': 503.316, 'eval_steps_per_second': 63.12, 'epoch': 5.0}
{'loss': 557214439.3481, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0235, 'eval_samples_per_second': 506.373, 'eval_steps_per_second': 63.503, 'epoch': 6.0}
{'loss': 553514810.7852, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0845, 'eval_samples_per_second': 496.355, 'eval_steps_per_second': 62.247, 'epoch': 7.0}
{'loss': 554073626.5481, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0328, 'eval_samples_per_second': 504.817, 'eval_steps_per_second': 63.308, 'epoch': 8.0}
{'loss': 543418747.2593, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0364, 'eval_samples_per_second': 504.216, 'eval_steps_per_second': 63.233, 'epoch': 9.0}
{'loss': 546499121.3037, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0387, 'eval_samples_per_second': 503.838, 'eval_steps_per_second': 63.185, 'epoch': 10.0}
{'loss': 551565114.7852, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.802, 'eval_steps_per_second': 63.181, 'epoch': 11.0}
{'loss': 550631044.7407, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.01, 'eval_samples_per_second': 508.636, 'eval_steps_per_second': 63.787, 'epoch': 12.0}
{'loss': 540261611.1407, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0327, 'eval_samples_per_second': 504.824, 'eval_steps_per_second': 63.309, 'epoch': 13.0}
{'loss': 547597334.7556, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0804, 'eval_samples_per_second': 497.009, 'eval_steps_per_second': 62.329, 'epoch': 14.0}
{'loss': 550237100.563, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0302, 'eval_samples_per_second': 505.249, 'eval_steps_per_second': 63.362, 'epoch': 15.0}
{'loss': 549220928.4741, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.05, 'eval_samples_per_second': 501.975, 'eval_steps_per_second': 62.952, 'epoch': 16.0}
{'loss': 548205970.0148, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0133, 'eval_samples_per_second': 508.078, 'eval_steps_per_second': 63.717, 'epoch': 17.0}
{'loss': 547568693.0963, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0344, 'eval_samples_per_second': 504.545, 'eval_steps_per_second': 63.274, 'epoch': 18.0}
{'loss': 561829023.2889, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0009, 'eval_samples_per_second': 510.179, 'eval_steps_per_second': 63.981, 'epoch': 19.0}
{'loss': 553866945.4222, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0252, 'eval_samples_per_second': 506.09, 'eval_steps_per_second': 63.468, 'epoch': 20.0}
{'loss': 555711116.3259, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.1065, 'eval_samples_per_second': 492.844, 'eval_steps_per_second': 61.807, 'epoch': 21.0}
{'loss': 548626007.2296, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.903, 'eval_steps_per_second': 63.695, 'epoch': 22.0}
{'loss': 552478735.1704, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0413, 'eval_samples_per_second': 503.395, 'eval_steps_per_second': 63.13, 'epoch': 23.0}
{'loss': 543112184.4148, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.083, 'eval_steps_per_second': 63.216, 'epoch': 24.0}
{'train_runtime': 413.0218, 'train_samples_per_second': 501.707, 'train_steps_per_second': 7.845, 'train_loss': 550588638.4987655, 'epoch': 24.0}
***** train metrics *****
  epoch                    =           24.0
  train_loss               = 550588638.4988
  train_runtime            =     0:06:53.02
  train_samples            =           8634
  train_samples_per_second =        501.707
  train_steps_per_second   =          7.845
[{'loss': 555382344.0593, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0747, 'eval_samples_per_second': 497.931, 'eval_steps_per_second': 62.445, 'epoch': 1.0, 'step': 135}, {'loss': 546785537.8963, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0452, 'eval_samples_per_second': 502.766, 'eval_steps_per_second': 63.051, 'epoch': 2.0, 'step': 270}, {'loss': 557363715.7926, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0203, 'eval_samples_per_second': 506.907, 'eval_steps_per_second': 63.57, 'epoch': 3.0, 'step': 405}, {'loss': 552367688.0593, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0081, 'eval_samples_per_second': 508.952, 'eval_steps_per_second': 63.827, 'epoch': 4.0, 'step': 540}, {'loss': 546595483.4963, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0418, 'eval_samples_per_second': 503.316, 'eval_steps_per_second': 63.12, 'epoch': 5.0, 'step': 675}, {'loss': 557214439.3481, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0235, 'eval_samples_per_second': 506.373, 'eval_steps_per_second': 63.503, 'epoch': 6.0, 'step': 810}, {'loss': 553514810.7852, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0845, 'eval_samples_per_second': 496.355, 'eval_steps_per_second': 62.247, 'epoch': 7.0, 'step': 945}, {'loss': 554073626.5481, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0328, 'eval_samples_per_second': 504.817, 'eval_steps_per_second': 63.308, 'epoch': 8.0, 'step': 1080}, {'loss': 543418747.2593, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0364, 'eval_samples_per_second': 504.216, 'eval_steps_per_second': 63.233, 'epoch': 9.0, 'step': 1215}, {'loss': 546499121.3037, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0387, 'eval_samples_per_second': 503.838, 'eval_steps_per_second': 63.185, 'epoch': 10.0, 'step': 1350}, {'loss': 551565114.7852, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.802, 'eval_steps_per_second': 63.181, 'epoch': 11.0, 'step': 1485}, {'loss': 550631044.7407, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.01, 'eval_samples_per_second': 508.636, 'eval_steps_per_second': 63.787, 'epoch': 12.0, 'step': 1620}, {'loss': 540261611.1407, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0327, 'eval_samples_per_second': 504.824, 'eval_steps_per_second': 63.309, 'epoch': 13.0, 'step': 1755}, {'loss': 547597334.7556, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0804, 'eval_samples_per_second': 497.009, 'eval_steps_per_second': 62.329, 'epoch': 14.0, 'step': 1890}, {'loss': 550237100.563, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0302, 'eval_samples_per_second': 505.249, 'eval_steps_per_second': 63.362, 'epoch': 15.0, 'step': 2025}, {'loss': 549220928.4741, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.05, 'eval_samples_per_second': 501.975, 'eval_steps_per_second': 62.952, 'epoch': 16.0, 'step': 2160}, {'loss': 548205970.0148, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0133, 'eval_samples_per_second': 508.078, 'eval_steps_per_second': 63.717, 'epoch': 17.0, 'step': 2295}, {'loss': 547568693.0963, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0344, 'eval_samples_per_second': 504.545, 'eval_steps_per_second': 63.274, 'epoch': 18.0, 'step': 2430}, {'loss': 561829023.2889, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0009, 'eval_samples_per_second': 510.179, 'eval_steps_per_second': 63.981, 'epoch': 19.0, 'step': 2565}, {'loss': 553866945.4222, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0252, 'eval_samples_per_second': 506.09, 'eval_steps_per_second': 63.468, 'epoch': 20.0, 'step': 2700}, {'loss': 555711116.3259, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.1065, 'eval_samples_per_second': 492.844, 'eval_steps_per_second': 61.807, 'epoch': 21.0, 'step': 2835}, {'loss': 548626007.2296, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.903, 'eval_steps_per_second': 63.695, 'epoch': 22.0, 'step': 2970}, {'loss': 552478735.1704, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0413, 'eval_samples_per_second': 503.395, 'eval_steps_per_second': 63.13, 'epoch': 23.0, 'step': 3105}, {'loss': 543112184.4148, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 376585952.0, 'eval_precision': 0.0002157497303128371, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00036284470246734403, 'eval_accuracy': 0.00799042692812476, 'eval_runtime': 3.0372, 'eval_samples_per_second': 504.083, 'eval_steps_per_second': 63.216, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 413.0218, 'train_samples_per_second': 501.707, 'train_steps_per_second': 7.845, 'total_flos': 1913291761259340.0, 'train_loss': 550588638.4987655, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =      0.0106
  predict_f1                 =      0.0009
  predict_loss               = 344291520.0
  predict_precision          =      0.0005
  predict_recall             =      0.0027
  predict_runtime            =  0:00:02.51
  predict_samples_per_second =     504.784
  predict_steps_per_second   =      63.098
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_small_35.json completed. F1: 0.0008697542944118286
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_29.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_29.json
01170944_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6185.58 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6761.78 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6686.05 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6773.92 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6865.10 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6988.22 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7161.85 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7223.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6640.74 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7274.12 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6930.84 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6932.96 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6769.68 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170944_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.7522, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.26975899934768677, 'eval_precision': 0.1543859649122807, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.07573149741824442, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 3.0485, 'eval_samples_per_second': 502.207, 'eval_steps_per_second': 62.981, 'epoch': 1.0}
{'loss': 0.2694, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.25807100534439087, 'eval_precision': 0.10323574730354391, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.08781127129750982, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.899, 'eval_steps_per_second': 63.695, 'epoch': 2.0}
{'loss': 0.1896, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.23932860791683197, 'eval_precision': 0.20067453625632378, 'eval_recall': 0.13568985176738882, 'eval_f1': 0.1619047619047619, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.0313, 'eval_samples_per_second': 505.069, 'eval_steps_per_second': 63.34, 'epoch': 3.0}
{'loss': 0.1415, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2729340195655823, 'eval_precision': 0.2050314465408805, 'eval_recall': 0.18586088939566706, 'eval_f1': 0.19497607655502391, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 3.0449, 'eval_samples_per_second': 502.805, 'eval_steps_per_second': 63.056, 'epoch': 4.0}
{'loss': 0.1098, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.28183794021606445, 'eval_precision': 0.23398576512455516, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2628685657171414, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 3.1964, 'eval_samples_per_second': 478.97, 'eval_steps_per_second': 60.067, 'epoch': 5.0}
{'loss': 0.0813, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.313510924577713, 'eval_precision': 0.24448897795591182, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.26026666666666665, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 3.0349, 'eval_samples_per_second': 504.46, 'eval_steps_per_second': 63.263, 'epoch': 6.0}
{'loss': 0.0597, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.32476159930229187, 'eval_precision': 0.2804621848739496, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.29196282121377803, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.004, 'eval_samples_per_second': 509.653, 'eval_steps_per_second': 63.915, 'epoch': 7.0}
{'loss': 0.0438, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.34842753410339355, 'eval_precision': 0.26992561105207225, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2794279427942794, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.059, 'eval_steps_per_second': 63.213, 'epoch': 8.0}
{'loss': 0.0352, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.38050296902656555, 'eval_precision': 0.2832800851970181, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2929515418502202, 'eval_accuracy': 0.931483054118737, 'eval_runtime': 3.0158, 'eval_samples_per_second': 507.658, 'eval_steps_per_second': 63.664, 'epoch': 9.0}
{'loss': 0.0265, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.39144596457481384, 'eval_precision': 0.27810077519379844, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3006809848088004, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 3.0897, 'eval_samples_per_second': 495.51, 'eval_steps_per_second': 62.141, 'epoch': 10.0}
{'loss': 0.0202, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.41483446955680847, 'eval_precision': 0.2591240875912409, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.287886467308667, 'eval_accuracy': 0.9276615455878947, 'eval_runtime': 3.039, 'eval_samples_per_second': 503.78, 'eval_steps_per_second': 63.178, 'epoch': 11.0}
{'loss': 0.0157, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.40845707058906555, 'eval_precision': 0.2706002034587996, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28602150537634413, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 3.007, 'eval_samples_per_second': 509.148, 'eval_steps_per_second': 63.851, 'epoch': 12.0}
{'loss': 0.0117, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.4250561594963074, 'eval_precision': 0.288135593220339, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29873695771554093, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 3.0299, 'eval_samples_per_second': 505.29, 'eval_steps_per_second': 63.368, 'epoch': 13.0}
{'loss': 0.0094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.4427129924297333, 'eval_precision': 0.2866593164277839, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2914798206278027, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 3.0166, 'eval_samples_per_second': 507.529, 'eval_steps_per_second': 63.648, 'epoch': 14.0}
{'loss': 0.009, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.4476861357688904, 'eval_precision': 0.28008998875140606, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2819932049830125, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 3.0371, 'eval_samples_per_second': 504.106, 'eval_steps_per_second': 63.219, 'epoch': 15.0}
{'loss': 0.0072, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4522189199924469, 'eval_precision': 0.26708727655099895, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.27789934354485774, 'eval_accuracy': 0.9324094804292442, 'eval_runtime': 3.0125, 'eval_samples_per_second': 508.219, 'eval_steps_per_second': 63.735, 'epoch': 16.0}
{'loss': 0.0052, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.4672589898109436, 'eval_precision': 0.270772238514174, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.29157894736842105, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 3.0383, 'eval_samples_per_second': 503.907, 'eval_steps_per_second': 63.194, 'epoch': 17.0}
{'loss': 0.0047, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.4668427109718323, 'eval_precision': 0.2722672064777328, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2884718498659517, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.9969, 'eval_samples_per_second': 510.868, 'eval_steps_per_second': 64.067, 'epoch': 18.0}
{'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.4659440219402313, 'eval_precision': 0.2770199370409234, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28852459016393445, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.8, 'eval_steps_per_second': 63.181, 'epoch': 19.0}
{'loss': 0.0033, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.4694807529449463, 'eval_precision': 0.2768595041322314, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.29051490514905154, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 3.0021, 'eval_samples_per_second': 509.971, 'eval_steps_per_second': 63.955, 'epoch': 20.0}
{'loss': 0.0028, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.4752647876739502, 'eval_precision': 0.2707292707292707, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28860489882854096, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 3.0404, 'eval_samples_per_second': 503.559, 'eval_steps_per_second': 63.15, 'epoch': 21.0}
{'loss': 0.0026, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.47505518794059753, 'eval_precision': 0.2843243243243243, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29189789123196447, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.34, 'eval_steps_per_second': 63.875, 'epoch': 22.0}
{'loss': 0.0026, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.4774344563484192, 'eval_precision': 0.2874058127018299, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2956810631229236, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.1086, 'eval_samples_per_second': 492.508, 'eval_steps_per_second': 61.765, 'epoch': 23.0}
{'loss': 0.0024, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4778423607349396, 'eval_precision': 0.2886710239651416, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2952646239554318, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.05, 'eval_samples_per_second': 501.973, 'eval_steps_per_second': 62.952, 'epoch': 24.0}
{'train_runtime': 849.7149, 'train_samples_per_second': 243.865, 'train_steps_per_second': 3.813, 'train_loss': 0.075380192467092, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0754
  train_runtime            = 0:14:09.71
  train_samples            =       8634
  train_samples_per_second =    243.865
  train_steps_per_second   =      3.813
[{'loss': 0.7522, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.26975899934768677, 'eval_precision': 0.1543859649122807, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.07573149741824442, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 3.0485, 'eval_samples_per_second': 502.207, 'eval_steps_per_second': 62.981, 'epoch': 1.0, 'step': 135}, {'loss': 0.2694, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.25807100534439087, 'eval_precision': 0.10323574730354391, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.08781127129750982, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.899, 'eval_steps_per_second': 63.695, 'epoch': 2.0, 'step': 270}, {'loss': 0.1896, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.23932860791683197, 'eval_precision': 0.20067453625632378, 'eval_recall': 0.13568985176738882, 'eval_f1': 0.1619047619047619, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.0313, 'eval_samples_per_second': 505.069, 'eval_steps_per_second': 63.34, 'epoch': 3.0, 'step': 405}, {'loss': 0.1415, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2729340195655823, 'eval_precision': 0.2050314465408805, 'eval_recall': 0.18586088939566706, 'eval_f1': 0.19497607655502391, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 3.0449, 'eval_samples_per_second': 502.805, 'eval_steps_per_second': 63.056, 'epoch': 4.0, 'step': 540}, {'loss': 0.1098, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.28183794021606445, 'eval_precision': 0.23398576512455516, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2628685657171414, 'eval_accuracy': 0.9307882343858566, 'eval_runtime': 3.1964, 'eval_samples_per_second': 478.97, 'eval_steps_per_second': 60.067, 'epoch': 5.0, 'step': 675}, {'loss': 0.0813, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.313510924577713, 'eval_precision': 0.24448897795591182, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.26026666666666665, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 3.0349, 'eval_samples_per_second': 504.46, 'eval_steps_per_second': 63.263, 'epoch': 6.0, 'step': 810}, {'loss': 0.0597, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.32476159930229187, 'eval_precision': 0.2804621848739496, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.29196282121377803, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 3.004, 'eval_samples_per_second': 509.653, 'eval_steps_per_second': 63.915, 'epoch': 7.0, 'step': 945}, {'loss': 0.0438, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.34842753410339355, 'eval_precision': 0.26992561105207225, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2794279427942794, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.059, 'eval_steps_per_second': 63.213, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0352, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.38050296902656555, 'eval_precision': 0.2832800851970181, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2929515418502202, 'eval_accuracy': 0.931483054118737, 'eval_runtime': 3.0158, 'eval_samples_per_second': 507.658, 'eval_steps_per_second': 63.664, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0265, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.39144596457481384, 'eval_precision': 0.27810077519379844, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3006809848088004, 'eval_accuracy': 0.9297460047865359, 'eval_runtime': 3.0897, 'eval_samples_per_second': 495.51, 'eval_steps_per_second': 62.141, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0202, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.41483446955680847, 'eval_precision': 0.2591240875912409, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.287886467308667, 'eval_accuracy': 0.9276615455878947, 'eval_runtime': 3.039, 'eval_samples_per_second': 503.78, 'eval_steps_per_second': 63.178, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0157, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.40845707058906555, 'eval_precision': 0.2706002034587996, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28602150537634413, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 3.007, 'eval_samples_per_second': 509.148, 'eval_steps_per_second': 63.851, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0117, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4250561594963074, 'eval_precision': 0.288135593220339, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29873695771554093, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 3.0299, 'eval_samples_per_second': 505.29, 'eval_steps_per_second': 63.368, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4427129924297333, 'eval_precision': 0.2866593164277839, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2914798206278027, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 3.0166, 'eval_samples_per_second': 507.529, 'eval_steps_per_second': 63.648, 'epoch': 14.0, 'step': 1890}, {'loss': 0.009, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4476861357688904, 'eval_precision': 0.28008998875140606, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2819932049830125, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 3.0371, 'eval_samples_per_second': 504.106, 'eval_steps_per_second': 63.219, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0072, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4522189199924469, 'eval_precision': 0.26708727655099895, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.27789934354485774, 'eval_accuracy': 0.9324094804292442, 'eval_runtime': 3.0125, 'eval_samples_per_second': 508.219, 'eval_steps_per_second': 63.735, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0052, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4672589898109436, 'eval_precision': 0.270772238514174, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.29157894736842105, 'eval_accuracy': 0.9301706168455184, 'eval_runtime': 3.0383, 'eval_samples_per_second': 503.907, 'eval_steps_per_second': 63.194, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0047, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4668427109718323, 'eval_precision': 0.2722672064777328, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2884718498659517, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.9969, 'eval_samples_per_second': 510.868, 'eval_steps_per_second': 64.067, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4659440219402313, 'eval_precision': 0.2770199370409234, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28852459016393445, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.8, 'eval_steps_per_second': 63.181, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0033, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4694807529449463, 'eval_precision': 0.2768595041322314, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.29051490514905154, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 3.0021, 'eval_samples_per_second': 509.971, 'eval_steps_per_second': 63.955, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0028, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4752647876739502, 'eval_precision': 0.2707292707292707, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.28860489882854096, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 3.0404, 'eval_samples_per_second': 503.559, 'eval_steps_per_second': 63.15, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0026, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.47505518794059753, 'eval_precision': 0.2843243243243243, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29189789123196447, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.34, 'eval_steps_per_second': 63.875, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0026, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4774344563484192, 'eval_precision': 0.2874058127018299, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2956810631229236, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.1086, 'eval_samples_per_second': 492.508, 'eval_steps_per_second': 61.765, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0024, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4778423607349396, 'eval_precision': 0.2886710239651416, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2952646239554318, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.05, 'eval_samples_per_second': 501.973, 'eval_steps_per_second': 62.952, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 849.7149, 'train_samples_per_second': 243.865, 'train_steps_per_second': 3.813, 'total_flos': 7642539766724940.0, 'train_loss': 0.075380192467092, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9366
  predict_f1                 =     0.1285
  predict_loss               =     0.2578
  predict_precision          =     0.1696
  predict_recall             =     0.1034
  predict_runtime            = 0:00:02.51
  predict_samples_per_second =    504.933
  predict_steps_per_second   =     63.117
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170944_tsa-intensity_NorBERT_3_base_29.json completed. F1: 0.12848689771766697

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
410060       tsa_norbe+          1                                             05:02:04      0:0 
410060.batch      batch          1        1   04:56:14          0   04:56:14   05:02:04      0:0 
410060.exte+     extern          1        1   00:00:00          0   00:00:00   05:02:04      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
410060                                                                           
410060.batch   3956924K          0   3956924K        0              0          0 
410060.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
410060                                                                                                
410060.batch    10151.95M               0      10151.95M   753576.50M                0     753576.50M 
410060.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 410060 completed at Thu Jan 18 16:04:41 CET 2024
