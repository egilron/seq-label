Starting job 409168 on gpu-7 at Mon Jan 15 12:43:37 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_07.json
config.json:   0%|          | 0.00/948 [00:00<?, ?B/s]config.json: 100%|██████████| 948/948 [00:00<00:00, 8.48MB/s]
configuration_norbert.py:   0%|          | 0.00/1.23k [00:00<?, ?B/s]configuration_norbert.py: 100%|██████████| 1.23k/1.23k [00:00<00:00, 11.3MB/s]
tokenizer_config.json:   0%|          | 0.00/51.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 51.0/51.0 [00:00<00:00, 432kB/s]
tokenizer.json:   0%|          | 0.00/1.26M [00:00<?, ?B/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 4.19MB/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 4.18MB/s]
special_tokens_map.json:   0%|          | 0.00/157 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 157/157 [00:00<00:00, 1.76MB/s]
pytorch_model.bin:   0%|          | 0.00/85.3M [00:00<?, ?B/s]pytorch_model.bin:  12%|█▏        | 10.5M/85.3M [00:00<00:01, 73.2MB/s]pytorch_model.bin:  25%|██▍       | 21.0M/85.3M [00:00<00:00, 86.0MB/s]pytorch_model.bin:  49%|████▉     | 41.9M/85.3M [00:00<00:00, 102MB/s] pytorch_model.bin:  74%|███████▍  | 62.9M/85.3M [00:00<00:00, 107MB/s]pytorch_model.bin:  98%|█████████▊| 83.9M/85.3M [00:00<00:00, 110MB/s]pytorch_model.bin: 100%|██████████| 85.3M/85.3M [00:00<00:00, 104MB/s]
01150927_tsa-intensity_NorBERT_3_x-small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6917.41 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7252.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6921.10 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6980.77 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7050.20 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7184.96 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7347.65 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7397.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6845.83 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7427.86 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7065.27 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7110.74 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6943.06 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_x-small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.6337, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 2.416597604751587, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9005, 'eval_samples_per_second': 527.846, 'eval_steps_per_second': 66.196, 'epoch': 1.0}
{'loss': 2.2227, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 2.031191110610962, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.901, 'eval_samples_per_second': 527.742, 'eval_steps_per_second': 66.183, 'epoch': 2.0}
{'loss': 1.8625, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 1.6931694746017456, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8877, 'eval_samples_per_second': 530.177, 'eval_steps_per_second': 66.489, 'epoch': 3.0}
{'loss': 1.5491, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 1.4036179780960083, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8862, 'eval_samples_per_second': 530.458, 'eval_steps_per_second': 66.524, 'epoch': 4.0}
{'loss': 1.2852, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 1.163110613822937, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8988, 'eval_samples_per_second': 528.141, 'eval_steps_per_second': 66.233, 'epoch': 5.0}
{'loss': 1.0694, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.96981281042099, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8943, 'eval_samples_per_second': 528.964, 'eval_steps_per_second': 66.336, 'epoch': 6.0}
{'loss': 0.8986, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.8193447589874268, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8903, 'eval_samples_per_second': 529.7, 'eval_steps_per_second': 66.429, 'epoch': 7.0}
{'loss': 0.7673, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.7055440545082092, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9017, 'eval_samples_per_second': 527.628, 'eval_steps_per_second': 66.169, 'epoch': 8.0}
{'loss': 0.6698, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.6215047240257263, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8864, 'eval_samples_per_second': 530.413, 'eval_steps_per_second': 66.518, 'epoch': 9.0}
{'loss': 0.5988, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.5605980753898621, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9694, 'eval_samples_per_second': 515.592, 'eval_steps_per_second': 64.659, 'epoch': 10.0}
{'loss': 0.5469, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.5170865058898926, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.12, 'eval_samples_per_second': 490.704, 'eval_steps_per_second': 61.538, 'epoch': 11.0}
{'loss': 0.5106, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.48631951212882996, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8989, 'eval_samples_per_second': 528.13, 'eval_steps_per_second': 66.232, 'epoch': 12.0}
{'loss': 0.4858, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.46470341086387634, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.927, 'eval_samples_per_second': 523.053, 'eval_steps_per_second': 65.595, 'epoch': 13.0}
{'loss': 0.4682, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.4496611952781677, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9169, 'eval_samples_per_second': 524.872, 'eval_steps_per_second': 65.823, 'epoch': 14.0}
{'loss': 0.4558, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.43941330909729004, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9032, 'eval_samples_per_second': 527.348, 'eval_steps_per_second': 66.134, 'epoch': 15.0}
{'loss': 0.4473, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.4327305555343628, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9199, 'eval_samples_per_second': 524.332, 'eval_steps_per_second': 65.756, 'epoch': 16.0}
{'loss': 0.4419, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.42841896414756775, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.897, 'eval_samples_per_second': 528.482, 'eval_steps_per_second': 66.276, 'epoch': 17.0}
{'loss': 0.4395, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.42573249340057373, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9143, 'eval_samples_per_second': 525.348, 'eval_steps_per_second': 65.883, 'epoch': 18.0}
{'loss': 0.4359, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.42423778772354126, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8972, 'eval_samples_per_second': 528.437, 'eval_steps_per_second': 66.27, 'epoch': 19.0}
{'loss': 0.4354, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.4237600862979889, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8988, 'eval_samples_per_second': 528.141, 'eval_steps_per_second': 66.233, 'epoch': 20.0}
{'train_runtime': 237.8528, 'train_samples_per_second': 725.995, 'train_steps_per_second': 11.352, 'train_loss': 0.9112215578997577, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.9112
  train_runtime            = 0:03:57.85
  train_samples            =       8634
  train_samples_per_second =    725.995
  train_steps_per_second   =     11.352
[{'loss': 2.6337, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 2.416597604751587, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9005, 'eval_samples_per_second': 527.846, 'eval_steps_per_second': 66.196, 'epoch': 1.0, 'step': 135}, {'loss': 2.2227, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 2.031191110610962, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.901, 'eval_samples_per_second': 527.742, 'eval_steps_per_second': 66.183, 'epoch': 2.0, 'step': 270}, {'loss': 1.8625, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 1.6931694746017456, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8877, 'eval_samples_per_second': 530.177, 'eval_steps_per_second': 66.489, 'epoch': 3.0, 'step': 405}, {'loss': 1.5491, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 1.4036179780960083, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8862, 'eval_samples_per_second': 530.458, 'eval_steps_per_second': 66.524, 'epoch': 4.0, 'step': 540}, {'loss': 1.2852, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 1.163110613822937, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8988, 'eval_samples_per_second': 528.141, 'eval_steps_per_second': 66.233, 'epoch': 5.0, 'step': 675}, {'loss': 1.0694, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.96981281042099, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8943, 'eval_samples_per_second': 528.964, 'eval_steps_per_second': 66.336, 'epoch': 6.0, 'step': 810}, {'loss': 0.8986, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.8193447589874268, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8903, 'eval_samples_per_second': 529.7, 'eval_steps_per_second': 66.429, 'epoch': 7.0, 'step': 945}, {'loss': 0.7673, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.7055440545082092, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9017, 'eval_samples_per_second': 527.628, 'eval_steps_per_second': 66.169, 'epoch': 8.0, 'step': 1080}, {'loss': 0.6698, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.6215047240257263, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8864, 'eval_samples_per_second': 530.413, 'eval_steps_per_second': 66.518, 'epoch': 9.0, 'step': 1215}, {'loss': 0.5988, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.5605980753898621, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9694, 'eval_samples_per_second': 515.592, 'eval_steps_per_second': 64.659, 'epoch': 10.0, 'step': 1350}, {'loss': 0.5469, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.5170865058898926, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.12, 'eval_samples_per_second': 490.704, 'eval_steps_per_second': 61.538, 'epoch': 11.0, 'step': 1485}, {'loss': 0.5106, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.48631951212882996, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8989, 'eval_samples_per_second': 528.13, 'eval_steps_per_second': 66.232, 'epoch': 12.0, 'step': 1620}, {'loss': 0.4858, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.46470341086387634, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.927, 'eval_samples_per_second': 523.053, 'eval_steps_per_second': 65.595, 'epoch': 13.0, 'step': 1755}, {'loss': 0.4682, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4496611952781677, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9169, 'eval_samples_per_second': 524.872, 'eval_steps_per_second': 65.823, 'epoch': 14.0, 'step': 1890}, {'loss': 0.4558, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.43941330909729004, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9032, 'eval_samples_per_second': 527.348, 'eval_steps_per_second': 66.134, 'epoch': 15.0, 'step': 2025}, {'loss': 0.4473, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4327305555343628, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9199, 'eval_samples_per_second': 524.332, 'eval_steps_per_second': 65.756, 'epoch': 16.0, 'step': 2160}, {'loss': 0.4419, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.42841896414756775, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.897, 'eval_samples_per_second': 528.482, 'eval_steps_per_second': 66.276, 'epoch': 17.0, 'step': 2295}, {'loss': 0.4395, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.42573249340057373, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9143, 'eval_samples_per_second': 525.348, 'eval_steps_per_second': 65.883, 'epoch': 18.0, 'step': 2430}, {'loss': 0.4359, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.42423778772354126, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8972, 'eval_samples_per_second': 528.437, 'eval_steps_per_second': 66.27, 'epoch': 19.0, 'step': 2565}, {'loss': 0.4354, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4237600862979889, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8988, 'eval_samples_per_second': 528.141, 'eval_steps_per_second': 66.233, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 237.8528, 'train_samples_per_second': 725.995, 'train_steps_per_second': 11.352, 'total_flos': 399406811524992.0, 'train_loss': 0.9112215578997577, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-xs
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =      0.429
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.40
  predict_samples_per_second =    528.019
  predict_steps_per_second   =     66.002
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_07.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_03.json
config.json:   0%|          | 0.00/615 [00:00<?, ?B/s]config.json: 100%|██████████| 615/615 [00:00<00:00, 4.66MB/s]
sentencepiece.bpe.model:   0%|          | 0.00/5.07M [00:00<?, ?B/s]sentencepiece.bpe.model: 100%|██████████| 5.07M/5.07M [00:00<00:00, 7.26MB/s]sentencepiece.bpe.model: 100%|██████████| 5.07M/5.07M [00:00<00:00, 7.24MB/s]
tokenizer.json:   0%|          | 0.00/9.10M [00:00<?, ?B/s]tokenizer.json: 100%|██████████| 9.10M/9.10M [00:00<00:00, 27.9MB/s]tokenizer.json: 100%|██████████| 9.10M/9.10M [00:00<00:00, 27.8MB/s]
model.safetensors:   0%|          | 0.00/1.12G [00:00<?, ?B/s]model.safetensors:   1%|          | 10.5M/1.12G [00:00<00:12, 86.7MB/s]model.safetensors:   2%|▏         | 21.0M/1.12G [00:00<00:12, 90.5MB/s]model.safetensors:   3%|▎         | 31.5M/1.12G [00:00<00:12, 89.1MB/s]model.safetensors:   4%|▍         | 41.9M/1.12G [00:00<00:12, 86.7MB/s]model.safetensors:   5%|▍         | 52.4M/1.12G [00:00<00:11, 88.7MB/s]model.safetensors:   6%|▌         | 62.9M/1.12G [00:00<00:11, 88.8MB/s]model.safetensors:   7%|▋         | 73.4M/1.12G [00:00<00:11, 89.4MB/s]model.safetensors:   8%|▊         | 83.9M/1.12G [00:00<00:11, 89.6MB/s]model.safetensors:   8%|▊         | 94.4M/1.12G [00:01<00:11, 90.7MB/s]model.safetensors:   9%|▉         | 105M/1.12G [00:01<00:11, 91.7MB/s] model.safetensors:  10%|█         | 115M/1.12G [00:01<00:10, 92.2MB/s]model.safetensors:  11%|█▏        | 126M/1.12G [00:01<00:10, 90.5MB/s]model.safetensors:  12%|█▏        | 136M/1.12G [00:01<00:11, 88.5MB/s]model.safetensors:  13%|█▎        | 147M/1.12G [00:01<00:10, 88.7MB/s]model.safetensors:  14%|█▍        | 157M/1.12G [00:01<00:10, 88.4MB/s]model.safetensors:  15%|█▌        | 168M/1.12G [00:01<00:10, 89.5MB/s]model.safetensors:  16%|█▌        | 178M/1.12G [00:01<00:10, 88.9MB/s]model.safetensors:  17%|█▋        | 189M/1.12G [00:02<00:10, 89.2MB/s]model.safetensors:  18%|█▊        | 199M/1.12G [00:02<00:10, 89.5MB/s]model.safetensors:  19%|█▉        | 210M/1.12G [00:02<00:10, 90.4MB/s]model.safetensors:  20%|█▉        | 220M/1.12G [00:02<00:09, 91.1MB/s]model.safetensors:  21%|██        | 231M/1.12G [00:02<00:09, 90.7MB/s]model.safetensors:  22%|██▏       | 241M/1.12G [00:02<00:09, 88.1MB/s]model.safetensors:  23%|██▎       | 252M/1.12G [00:02<00:09, 88.7MB/s]model.safetensors:  23%|██▎       | 262M/1.12G [00:02<00:09, 90.0MB/s]model.safetensors:  24%|██▍       | 273M/1.12G [00:03<00:09, 91.3MB/s]model.safetensors:  25%|██▌       | 283M/1.12G [00:03<00:09, 90.8MB/s]model.safetensors:  26%|██▋       | 294M/1.12G [00:03<00:09, 89.6MB/s]model.safetensors:  27%|██▋       | 304M/1.12G [00:03<00:09, 89.9MB/s]model.safetensors:  28%|██▊       | 315M/1.12G [00:03<00:08, 89.3MB/s]model.safetensors:  29%|██▉       | 325M/1.12G [00:03<00:08, 89.8MB/s]model.safetensors:  30%|███       | 336M/1.12G [00:03<00:08, 88.4MB/s]model.safetensors:  31%|███       | 346M/1.12G [00:03<00:08, 88.4MB/s]model.safetensors:  32%|███▏      | 357M/1.12G [00:03<00:08, 90.0MB/s]model.safetensors:  33%|███▎      | 367M/1.12G [00:04<00:08, 89.7MB/s]model.safetensors:  34%|███▍      | 377M/1.12G [00:04<00:08, 90.2MB/s]model.safetensors:  35%|███▍      | 388M/1.12G [00:04<00:08, 90.9MB/s]model.safetensors:  36%|███▌      | 398M/1.12G [00:04<00:07, 90.2MB/s]model.safetensors:  37%|███▋      | 409M/1.12G [00:04<00:07, 90.9MB/s]model.safetensors:  38%|███▊      | 419M/1.12G [00:04<00:07, 91.0MB/s]model.safetensors:  39%|███▊      | 430M/1.12G [00:04<00:07, 88.1MB/s]model.safetensors:  39%|███▉      | 440M/1.12G [00:04<00:07, 88.7MB/s]model.safetensors:  40%|████      | 451M/1.12G [00:05<00:07, 89.0MB/s]model.safetensors:  41%|████▏     | 461M/1.12G [00:05<00:07, 89.8MB/s]model.safetensors:  42%|████▏     | 472M/1.12G [00:05<00:07, 87.3MB/s]model.safetensors:  43%|████▎     | 482M/1.12G [00:05<00:07, 87.4MB/s]model.safetensors:  44%|████▍     | 493M/1.12G [00:05<00:07, 85.9MB/s]model.safetensors:  45%|████▌     | 503M/1.12G [00:05<00:06, 87.5MB/s]model.safetensors:  46%|████▌     | 514M/1.12G [00:05<00:06, 87.3MB/s]model.safetensors:  47%|████▋     | 524M/1.12G [00:05<00:06, 88.2MB/s]model.safetensors:  48%|████▊     | 535M/1.12G [00:06<00:06, 86.0MB/s]model.safetensors:  49%|████▉     | 545M/1.12G [00:06<00:06, 86.2MB/s]model.safetensors:  50%|████▉     | 556M/1.12G [00:06<00:06, 88.6MB/s]model.safetensors:  51%|█████     | 566M/1.12G [00:06<00:06, 86.8MB/s]model.safetensors:  52%|█████▏    | 577M/1.12G [00:06<00:06, 88.3MB/s]model.safetensors:  53%|█████▎    | 587M/1.12G [00:06<00:06, 86.0MB/s]model.safetensors:  54%|█████▎    | 598M/1.12G [00:06<00:05, 87.9MB/s]model.safetensors:  55%|█████▍    | 608M/1.12G [00:06<00:05, 87.5MB/s]model.safetensors:  55%|█████▌    | 619M/1.12G [00:06<00:05, 87.9MB/s]model.safetensors:  56%|█████▋    | 629M/1.12G [00:07<00:05, 87.4MB/s]model.safetensors:  57%|█████▋    | 640M/1.12G [00:07<00:05, 88.3MB/s]model.safetensors:  58%|█████▊    | 650M/1.12G [00:07<00:05, 88.0MB/s]model.safetensors:  59%|█████▉    | 661M/1.12G [00:07<00:05, 87.1MB/s]model.safetensors:  60%|██████    | 671M/1.12G [00:07<00:05, 88.0MB/s]model.safetensors:  61%|██████    | 682M/1.12G [00:07<00:05, 85.6MB/s]model.safetensors:  62%|██████▏   | 692M/1.12G [00:07<00:04, 88.0MB/s]model.safetensors:  63%|██████▎   | 703M/1.12G [00:07<00:05, 75.0MB/s]model.safetensors:  64%|██████▍   | 713M/1.12G [00:08<00:05, 79.1MB/s]model.safetensors:  65%|██████▍   | 724M/1.12G [00:08<00:04, 81.3MB/s]model.safetensors:  66%|██████▌   | 734M/1.12G [00:08<00:04, 82.9MB/s]model.safetensors:  67%|██████▋   | 744M/1.12G [00:08<00:04, 83.8MB/s]model.safetensors:  68%|██████▊   | 755M/1.12G [00:08<00:04, 83.6MB/s]model.safetensors:  69%|██████▊   | 765M/1.12G [00:08<00:04, 82.7MB/s]model.safetensors:  70%|██████▉   | 776M/1.12G [00:08<00:04, 83.1MB/s]model.safetensors:  70%|███████   | 786M/1.12G [00:08<00:03, 84.5MB/s]model.safetensors:  71%|███████▏  | 797M/1.12G [00:09<00:03, 85.9MB/s]model.safetensors:  72%|███████▏  | 807M/1.12G [00:09<00:03, 86.4MB/s]model.safetensors:  73%|███████▎  | 818M/1.12G [00:09<00:03, 87.6MB/s]model.safetensors:  74%|███████▍  | 828M/1.12G [00:09<00:03, 87.6MB/s]model.safetensors:  75%|███████▌  | 839M/1.12G [00:09<00:03, 83.8MB/s]model.safetensors:  76%|███████▌  | 849M/1.12G [00:09<00:03, 84.8MB/s]model.safetensors:  77%|███████▋  | 860M/1.12G [00:09<00:02, 85.4MB/s]model.safetensors:  78%|███████▊  | 870M/1.12G [00:09<00:02, 84.2MB/s]model.safetensors:  79%|███████▉  | 881M/1.12G [00:10<00:02, 84.8MB/s]model.safetensors:  80%|███████▉  | 891M/1.12G [00:10<00:02, 84.7MB/s]model.safetensors:  81%|████████  | 902M/1.12G [00:10<00:02, 84.7MB/s]model.safetensors:  82%|████████▏ | 912M/1.12G [00:10<00:02, 85.5MB/s]model.safetensors:  83%|████████▎ | 923M/1.12G [00:10<00:02, 86.6MB/s]model.safetensors:  84%|████████▎ | 933M/1.12G [00:10<00:02, 86.9MB/s]model.safetensors:  85%|████████▍ | 944M/1.12G [00:10<00:01, 87.3MB/s]model.safetensors:  86%|████████▌ | 954M/1.12G [00:10<00:01, 87.9MB/s]model.safetensors:  86%|████████▋ | 965M/1.12G [00:11<00:01, 86.5MB/s]model.safetensors:  87%|████████▋ | 975M/1.12G [00:11<00:01, 86.2MB/s]model.safetensors:  88%|████████▊ | 986M/1.12G [00:11<00:01, 87.0MB/s]model.safetensors:  89%|████████▉ | 996M/1.12G [00:11<00:01, 83.8MB/s]model.safetensors:  90%|█████████ | 1.01G/1.12G [00:11<00:01, 86.4MB/s]model.safetensors:  91%|█████████ | 1.02G/1.12G [00:11<00:01, 85.2MB/s]model.safetensors:  92%|█████████▏| 1.03G/1.12G [00:11<00:01, 86.8MB/s]model.safetensors:  93%|█████████▎| 1.04G/1.12G [00:11<00:00, 84.6MB/s]model.safetensors:  94%|█████████▍| 1.05G/1.12G [00:12<00:00, 86.8MB/s]model.safetensors:  95%|█████████▍| 1.06G/1.12G [00:12<00:00, 85.7MB/s]model.safetensors:  96%|█████████▌| 1.07G/1.12G [00:12<00:00, 87.9MB/s]model.safetensors:  97%|█████████▋| 1.08G/1.12G [00:12<00:00, 88.2MB/s]model.safetensors:  98%|█████████▊| 1.09G/1.12G [00:12<00:00, 88.6MB/s]model.safetensors:  99%|█████████▊| 1.10G/1.12G [00:12<00:00, 86.5MB/s]model.safetensors: 100%|█████████▉| 1.11G/1.12G [00:12<00:00, 84.0MB/s]model.safetensors: 100%|██████████| 1.12G/1.12G [00:12<00:00, 87.3MB/s]
Some weights of XLMRobertaForTokenClassification were not initialized from the model checkpoint at xlm-roberta-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01150927_tsa-intensity_XLM-R_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6035.61 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6567.86 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6487.69 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6529.22 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6601.57 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6704.22 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6863.88 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6925.77 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6365.67 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6906.48 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6573.16 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6676.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6462.57 examples/s]
You're using a XLMRobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_XLM-R_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'attention_mask', 'labels']
{'loss': 0.4025, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.25871023535728455, 'eval_precision': 0.1568, 'eval_recall': 0.11174458380843785, 'eval_f1': 0.1304926764314248, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.3433, 'eval_samples_per_second': 653.366, 'eval_steps_per_second': 81.937, 'epoch': 1.0}
{'loss': 0.2567, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.22328844666481018, 'eval_precision': 0.2327790973871734, 'eval_recall': 0.11174458380843785, 'eval_f1': 0.15100154083204928, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.3128, 'eval_samples_per_second': 661.966, 'eval_steps_per_second': 83.016, 'epoch': 2.0}
{'loss': 0.206, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.21684224903583527, 'eval_precision': 0.23872679045092837, 'eval_recall': 0.20524515393386544, 'eval_f1': 0.22072348252605764, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 2.2967, 'eval_samples_per_second': 666.612, 'eval_steps_per_second': 83.599, 'epoch': 3.0}
{'loss': 0.168, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.2337895631790161, 'eval_precision': 0.263030303030303, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25499412455934195, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.2929, 'eval_samples_per_second': 667.714, 'eval_steps_per_second': 83.737, 'epoch': 4.0}
{'loss': 0.1381, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.2515597939491272, 'eval_precision': 0.2531500572737686, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2525714285714285, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.2946, 'eval_samples_per_second': 667.215, 'eval_steps_per_second': 83.674, 'epoch': 5.0}
{'loss': 0.1152, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.2628583312034607, 'eval_precision': 0.23356231599607458, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.25105485232067504, 'eval_accuracy': 0.9304794256156875, 'eval_runtime': 2.3063, 'eval_samples_per_second': 663.827, 'eval_steps_per_second': 83.249, 'epoch': 6.0}
{'loss': 0.0966, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.2940766215324402, 'eval_precision': 0.2334525939177102, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.26165413533834586, 'eval_accuracy': 0.9253068787153556, 'eval_runtime': 2.3222, 'eval_samples_per_second': 659.296, 'eval_steps_per_second': 82.681, 'epoch': 7.0}
{'loss': 0.0782, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.3006611764431, 'eval_precision': 0.25196850393700787, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2704701531959852, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.3096, 'eval_samples_per_second': 662.889, 'eval_steps_per_second': 83.132, 'epoch': 8.0}
{'loss': 0.0635, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.33750778436660767, 'eval_precision': 0.22745411013567438, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.26760563380281693, 'eval_accuracy': 0.9201729329112946, 'eval_runtime': 2.3761, 'eval_samples_per_second': 644.333, 'eval_steps_per_second': 80.805, 'epoch': 9.0}
{'loss': 0.0522, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.3451661169528961, 'eval_precision': 0.24502712477396021, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2733232476046395, 'eval_accuracy': 0.9268123214699298, 'eval_runtime': 2.3034, 'eval_samples_per_second': 664.672, 'eval_steps_per_second': 83.355, 'epoch': 10.0}
{'loss': 0.0428, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.36329033970832825, 'eval_precision': 0.2526829268292683, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27234490010515244, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.327, 'eval_samples_per_second': 657.934, 'eval_steps_per_second': 82.51, 'epoch': 11.0}
{'loss': 0.0341, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.3775096833705902, 'eval_precision': 0.2732362821948488, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27570621468926554, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3088, 'eval_samples_per_second': 663.12, 'eval_steps_per_second': 83.161, 'epoch': 12.0}
{'loss': 0.0285, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.3987371623516083, 'eval_precision': 0.24533856722276742, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2637130801687764, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.3061, 'eval_samples_per_second': 663.896, 'eval_steps_per_second': 83.258, 'epoch': 13.0}
{'loss': 0.0235, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.39419227838516235, 'eval_precision': 0.2623612512613522, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.278372591006424, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3166, 'eval_samples_per_second': 660.88, 'eval_steps_per_second': 82.88, 'epoch': 14.0}
{'loss': 0.0204, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.4118504822254181, 'eval_precision': 0.24242424242424243, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2685656154628688, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.3046, 'eval_samples_per_second': 664.322, 'eval_steps_per_second': 83.311, 'epoch': 15.0}
{'loss': 0.0167, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.4238637685775757, 'eval_precision': 0.2526215443279314, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2751817237798546, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 2.3025, 'eval_samples_per_second': 664.923, 'eval_steps_per_second': 83.387, 'epoch': 16.0}
{'loss': 0.0131, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.4404212236404419, 'eval_precision': 0.2541743970315399, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.28030690537084396, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.3152, 'eval_samples_per_second': 661.295, 'eval_steps_per_second': 82.932, 'epoch': 17.0}
{'loss': 0.0116, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.4433285892009735, 'eval_precision': 0.25882352941176473, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2783342119135477, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.3182, 'eval_samples_per_second': 660.412, 'eval_steps_per_second': 82.821, 'epoch': 18.0}
{'loss': 0.0097, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.4430251717567444, 'eval_precision': 0.2550529355149182, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.27661795407098116, 'eval_accuracy': 0.9319848683702617, 'eval_runtime': 2.3035, 'eval_samples_per_second': 664.633, 'eval_steps_per_second': 83.351, 'epoch': 19.0}
{'loss': 0.0092, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.4449252486228943, 'eval_precision': 0.2619047619047619, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28010610079575593, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.307, 'eval_samples_per_second': 663.628, 'eval_steps_per_second': 83.224, 'epoch': 20.0}
{'train_runtime': 713.8988, 'train_samples_per_second': 241.883, 'train_steps_per_second': 3.782, 'train_loss': 0.08932528879907396, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.0893
  train_runtime            = 0:11:53.89
  train_samples            =       8634
  train_samples_per_second =    241.883
  train_steps_per_second   =      3.782
[{'loss': 0.4025, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.25871023535728455, 'eval_precision': 0.1568, 'eval_recall': 0.11174458380843785, 'eval_f1': 0.1304926764314248, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.3433, 'eval_samples_per_second': 653.366, 'eval_steps_per_second': 81.937, 'epoch': 1.0, 'step': 135}, {'loss': 0.2567, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.22328844666481018, 'eval_precision': 0.2327790973871734, 'eval_recall': 0.11174458380843785, 'eval_f1': 0.15100154083204928, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.3128, 'eval_samples_per_second': 661.966, 'eval_steps_per_second': 83.016, 'epoch': 2.0, 'step': 270}, {'loss': 0.206, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.21684224903583527, 'eval_precision': 0.23872679045092837, 'eval_recall': 0.20524515393386544, 'eval_f1': 0.22072348252605764, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 2.2967, 'eval_samples_per_second': 666.612, 'eval_steps_per_second': 83.599, 'epoch': 3.0, 'step': 405}, {'loss': 0.168, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2337895631790161, 'eval_precision': 0.263030303030303, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.25499412455934195, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.2929, 'eval_samples_per_second': 667.714, 'eval_steps_per_second': 83.737, 'epoch': 4.0, 'step': 540}, {'loss': 0.1381, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2515597939491272, 'eval_precision': 0.2531500572737686, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.2525714285714285, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.2946, 'eval_samples_per_second': 667.215, 'eval_steps_per_second': 83.674, 'epoch': 5.0, 'step': 675}, {'loss': 0.1152, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2628583312034607, 'eval_precision': 0.23356231599607458, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.25105485232067504, 'eval_accuracy': 0.9304794256156875, 'eval_runtime': 2.3063, 'eval_samples_per_second': 663.827, 'eval_steps_per_second': 83.249, 'epoch': 6.0, 'step': 810}, {'loss': 0.0966, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2940766215324402, 'eval_precision': 0.2334525939177102, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.26165413533834586, 'eval_accuracy': 0.9253068787153556, 'eval_runtime': 2.3222, 'eval_samples_per_second': 659.296, 'eval_steps_per_second': 82.681, 'epoch': 7.0, 'step': 945}, {'loss': 0.0782, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3006611764431, 'eval_precision': 0.25196850393700787, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2704701531959852, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.3096, 'eval_samples_per_second': 662.889, 'eval_steps_per_second': 83.132, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0635, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.33750778436660767, 'eval_precision': 0.22745411013567438, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.26760563380281693, 'eval_accuracy': 0.9201729329112946, 'eval_runtime': 2.3761, 'eval_samples_per_second': 644.333, 'eval_steps_per_second': 80.805, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0522, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3451661169528961, 'eval_precision': 0.24502712477396021, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2733232476046395, 'eval_accuracy': 0.9268123214699298, 'eval_runtime': 2.3034, 'eval_samples_per_second': 664.672, 'eval_steps_per_second': 83.355, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0428, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.36329033970832825, 'eval_precision': 0.2526829268292683, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27234490010515244, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.327, 'eval_samples_per_second': 657.934, 'eval_steps_per_second': 82.51, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0341, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3775096833705902, 'eval_precision': 0.2732362821948488, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27570621468926554, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3088, 'eval_samples_per_second': 663.12, 'eval_steps_per_second': 83.161, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0285, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3987371623516083, 'eval_precision': 0.24533856722276742, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2637130801687764, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.3061, 'eval_samples_per_second': 663.896, 'eval_steps_per_second': 83.258, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0235, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.39419227838516235, 'eval_precision': 0.2623612512613522, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.278372591006424, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3166, 'eval_samples_per_second': 660.88, 'eval_steps_per_second': 82.88, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0204, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4118504822254181, 'eval_precision': 0.24242424242424243, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2685656154628688, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.3046, 'eval_samples_per_second': 664.322, 'eval_steps_per_second': 83.311, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0167, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4238637685775757, 'eval_precision': 0.2526215443279314, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2751817237798546, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 2.3025, 'eval_samples_per_second': 664.923, 'eval_steps_per_second': 83.387, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0131, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4404212236404419, 'eval_precision': 0.2541743970315399, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.28030690537084396, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.3152, 'eval_samples_per_second': 661.295, 'eval_steps_per_second': 82.932, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0116, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4433285892009735, 'eval_precision': 0.25882352941176473, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2783342119135477, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.3182, 'eval_samples_per_second': 660.412, 'eval_steps_per_second': 82.821, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0097, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4430251717567444, 'eval_precision': 0.2550529355149182, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.27661795407098116, 'eval_accuracy': 0.9319848683702617, 'eval_runtime': 2.3035, 'eval_samples_per_second': 664.633, 'eval_steps_per_second': 83.351, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0092, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4449252486228943, 'eval_precision': 0.2619047619047619, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28010610079575593, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.307, 'eval_samples_per_second': 663.628, 'eval_steps_per_second': 83.224, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 713.8988, 'train_samples_per_second': 241.883, 'train_steps_per_second': 3.782, 'total_flos': 7231359841755312.0, 'train_loss': 0.08932528879907396, 'epoch': 20.0, 'step': 2700}]

Evaluation, xlm-roberta-base
***** predict metrics *****
  predict_accuracy           =     0.9381
  predict_f1                 =     0.1864
  predict_loss               =     0.2257
  predict_precision          =     0.2063
  predict_recall             =     0.1701
  predict_runtime            = 0:00:02.04
  predict_samples_per_second =    622.294
  predict_steps_per_second   =     77.787
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_03.json completed. F1: 0.18642803877703207
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_06.json
config.json:   0%|          | 0.00/951 [00:00<?, ?B/s]config.json: 100%|██████████| 951/951 [00:00<00:00, 8.94MB/s]
configuration_norbert.py:   0%|          | 0.00/1.23k [00:00<?, ?B/s]configuration_norbert.py: 100%|██████████| 1.23k/1.23k [00:00<00:00, 12.6MB/s]
tokenizer_config.json:   0%|          | 0.00/51.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 51.0/51.0 [00:00<00:00, 513kB/s]
tokenizer.json:   0%|          | 0.00/1.26M [00:00<?, ?B/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 4.16MB/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 4.15MB/s]
special_tokens_map.json:   0%|          | 0.00/157 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 157/157 [00:00<00:00, 1.42MB/s]
pytorch_model.bin:   0%|          | 0.00/1.47G [00:00<?, ?B/s]pytorch_model.bin:   1%|          | 10.5M/1.47G [00:00<00:52, 27.6MB/s]pytorch_model.bin:   1%|▏         | 21.0M/1.47G [00:00<00:37, 38.2MB/s]pytorch_model.bin:   2%|▏         | 31.5M/1.47G [00:00<00:28, 49.7MB/s]pytorch_model.bin:   3%|▎         | 41.9M/1.47G [00:00<00:22, 62.7MB/s]pytorch_model.bin:   4%|▍         | 62.9M/1.47G [00:00<00:17, 82.6MB/s]pytorch_model.bin:   6%|▌         | 83.9M/1.47G [00:01<00:14, 94.3MB/s]pytorch_model.bin:   7%|▋         | 105M/1.47G [00:01<00:13, 102MB/s]  pytorch_model.bin:   9%|▊         | 126M/1.47G [00:01<00:12, 106MB/s]pytorch_model.bin:  10%|▉         | 147M/1.47G [00:01<00:12, 109MB/s]pytorch_model.bin:  11%|█▏        | 168M/1.47G [00:01<00:11, 112MB/s]pytorch_model.bin:  13%|█▎        | 189M/1.47G [00:02<00:11, 113MB/s]pytorch_model.bin:  14%|█▍        | 210M/1.47G [00:02<00:10, 114MB/s]pytorch_model.bin:  16%|█▌        | 231M/1.47G [00:02<00:10, 115MB/s]pytorch_model.bin:  17%|█▋        | 252M/1.47G [00:02<00:10, 116MB/s]pytorch_model.bin:  19%|█▊        | 273M/1.47G [00:02<00:10, 116MB/s]pytorch_model.bin:  20%|█▉        | 294M/1.47G [00:02<00:10, 117MB/s]pytorch_model.bin:  21%|██▏       | 315M/1.47G [00:03<00:09, 117MB/s]pytorch_model.bin:  23%|██▎       | 336M/1.47G [00:03<00:09, 117MB/s]pytorch_model.bin:  24%|██▍       | 357M/1.47G [00:03<00:09, 117MB/s]pytorch_model.bin:  26%|██▌       | 377M/1.47G [00:03<00:09, 117MB/s]pytorch_model.bin:  27%|██▋       | 398M/1.47G [00:03<00:09, 117MB/s]pytorch_model.bin:  29%|██▊       | 419M/1.47G [00:04<00:08, 117MB/s]pytorch_model.bin:  30%|██▉       | 440M/1.47G [00:04<00:08, 117MB/s]pytorch_model.bin:  31%|███▏      | 461M/1.47G [00:04<00:08, 116MB/s]pytorch_model.bin:  33%|███▎      | 482M/1.47G [00:04<00:08, 115MB/s]pytorch_model.bin:  34%|███▍      | 503M/1.47G [00:04<00:08, 116MB/s]pytorch_model.bin:  36%|███▌      | 524M/1.47G [00:04<00:08, 116MB/s]pytorch_model.bin:  37%|███▋      | 545M/1.47G [00:05<00:07, 117MB/s]pytorch_model.bin:  39%|███▊      | 566M/1.47G [00:05<00:07, 115MB/s]pytorch_model.bin:  40%|███▉      | 587M/1.47G [00:05<00:07, 116MB/s]pytorch_model.bin:  41%|████▏     | 608M/1.47G [00:05<00:07, 116MB/s]pytorch_model.bin:  43%|████▎     | 629M/1.47G [00:05<00:07, 117MB/s]pytorch_model.bin:  44%|████▍     | 650M/1.47G [00:06<00:07, 117MB/s]pytorch_model.bin:  46%|████▌     | 671M/1.47G [00:06<00:06, 117MB/s]pytorch_model.bin:  47%|████▋     | 692M/1.47G [00:06<00:06, 117MB/s]pytorch_model.bin:  49%|████▊     | 713M/1.47G [00:06<00:06, 117MB/s]pytorch_model.bin:  50%|████▉     | 734M/1.47G [00:06<00:06, 117MB/s]pytorch_model.bin:  51%|█████▏    | 755M/1.47G [00:06<00:06, 117MB/s]pytorch_model.bin:  53%|█████▎    | 776M/1.47G [00:07<00:05, 117MB/s]pytorch_model.bin:  54%|█████▍    | 797M/1.47G [00:07<00:05, 117MB/s]pytorch_model.bin:  56%|█████▌    | 818M/1.47G [00:07<00:05, 117MB/s]pytorch_model.bin:  57%|█████▋    | 839M/1.47G [00:07<00:05, 117MB/s]pytorch_model.bin:  59%|█████▊    | 860M/1.47G [00:07<00:05, 117MB/s]pytorch_model.bin:  60%|█████▉    | 881M/1.47G [00:08<00:05, 117MB/s]pytorch_model.bin:  61%|██████▏   | 902M/1.47G [00:08<00:04, 117MB/s]pytorch_model.bin:  63%|██████▎   | 923M/1.47G [00:08<00:04, 117MB/s]pytorch_model.bin:  64%|██████▍   | 944M/1.47G [00:08<00:04, 117MB/s]pytorch_model.bin:  66%|██████▌   | 965M/1.47G [00:08<00:04, 117MB/s]pytorch_model.bin:  67%|██████▋   | 986M/1.47G [00:08<00:04, 117MB/s]pytorch_model.bin:  69%|██████▊   | 1.01G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  70%|██████▉   | 1.03G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  71%|███████▏  | 1.05G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  73%|███████▎  | 1.07G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  74%|███████▍  | 1.09G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  76%|███████▌  | 1.11G/1.47G [00:09<00:03, 117MB/s]pytorch_model.bin:  77%|███████▋  | 1.13G/1.47G [00:10<00:02, 117MB/s]pytorch_model.bin:  79%|███████▊  | 1.15G/1.47G [00:10<00:03, 88.6MB/s]pytorch_model.bin:  80%|███████▉  | 1.17G/1.47G [00:10<00:03, 95.0MB/s]pytorch_model.bin:  81%|████████▏ | 1.20G/1.47G [00:10<00:02, 101MB/s] pytorch_model.bin:  83%|████████▎ | 1.22G/1.47G [00:11<00:02, 105MB/s]pytorch_model.bin:  84%|████████▍ | 1.24G/1.47G [00:11<00:02, 108MB/s]pytorch_model.bin:  86%|████████▌ | 1.26G/1.47G [00:11<00:01, 111MB/s]pytorch_model.bin:  87%|████████▋ | 1.28G/1.47G [00:11<00:01, 113MB/s]pytorch_model.bin:  89%|████████▊ | 1.30G/1.47G [00:11<00:01, 114MB/s]pytorch_model.bin:  90%|████████▉ | 1.32G/1.47G [00:11<00:01, 115MB/s]pytorch_model.bin:  91%|█████████▏| 1.34G/1.47G [00:12<00:01, 116MB/s]pytorch_model.bin:  93%|█████████▎| 1.36G/1.47G [00:12<00:00, 116MB/s]pytorch_model.bin:  94%|█████████▍| 1.38G/1.47G [00:12<00:00, 117MB/s]pytorch_model.bin:  96%|█████████▌| 1.41G/1.47G [00:12<00:00, 117MB/s]pytorch_model.bin:  97%|█████████▋| 1.43G/1.47G [00:12<00:00, 117MB/s]pytorch_model.bin:  99%|█████████▊| 1.45G/1.47G [00:13<00:00, 117MB/s]pytorch_model.bin: 100%|█████████▉| 1.47G/1.47G [00:13<00:00, 117MB/s]pytorch_model.bin: 100%|██████████| 1.47G/1.47G [00:13<00:00, 111MB/s]
01150927_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6849.26 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7229.01 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6981.53 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6997.68 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7037.81 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7113.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7281.09 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6370.13 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6806.09 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7333.21 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7002.59 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6999.87 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6871.92 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.8019, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.259806752204895, 'eval_precision': 0.12338858195211787, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.0943661971830986, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 5.7985, 'eval_samples_per_second': 264.035, 'eval_steps_per_second': 33.112, 'epoch': 1.0}
{'loss': 0.2546, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.2476111352443695, 'eval_precision': 0.13630573248407643, 'eval_recall': 0.12200684150513112, 'eval_f1': 0.12876052948255115, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.508, 'eval_steps_per_second': 33.422, 'epoch': 2.0}
{'loss': 0.1725, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.24898101389408112, 'eval_precision': 0.21674311926605505, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.21612349914236703, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 5.7644, 'eval_samples_per_second': 265.595, 'eval_steps_per_second': 33.308, 'epoch': 3.0}
{'loss': 0.1234, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.24460770189762115, 'eval_precision': 0.29191090269636577, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2878612716763006, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 5.8113, 'eval_samples_per_second': 263.451, 'eval_steps_per_second': 33.039, 'epoch': 4.0}
{'loss': 0.0871, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.2732396125793457, 'eval_precision': 0.26481481481481484, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29228410832907514, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 5.8023, 'eval_samples_per_second': 263.863, 'eval_steps_per_second': 33.091, 'epoch': 5.0}
{'loss': 0.0627, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.30067047476768494, 'eval_precision': 0.2653846153846154, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2879499217527387, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 5.7949, 'eval_samples_per_second': 264.2, 'eval_steps_per_second': 33.133, 'epoch': 6.0}
{'loss': 0.0429, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.30862680077552795, 'eval_precision': 0.2757009345794392, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.303030303030303, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 5.795, 'eval_samples_per_second': 264.195, 'eval_steps_per_second': 33.132, 'epoch': 7.0}
{'loss': 0.0317, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.33272460103034973, 'eval_precision': 0.27552986512524086, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29869451697127936, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 5.8466, 'eval_samples_per_second': 261.861, 'eval_steps_per_second': 32.84, 'epoch': 8.0}
{'loss': 0.0248, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.3530091941356659, 'eval_precision': 0.2830188679245283, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.30975735673722254, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.899, 'eval_samples_per_second': 259.535, 'eval_steps_per_second': 32.548, 'epoch': 9.0}
{'loss': 0.0186, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.3716135323047638, 'eval_precision': 0.26865671641791045, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.2955361723961006, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 5.7609, 'eval_samples_per_second': 265.757, 'eval_steps_per_second': 33.328, 'epoch': 10.0}
{'loss': 0.0155, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.3841600716114044, 'eval_precision': 0.29815573770491804, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31408526713437673, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7511, 'eval_samples_per_second': 266.21, 'eval_steps_per_second': 33.385, 'epoch': 11.0}
{'loss': 0.0125, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.3874107599258423, 'eval_precision': 0.29508196721311475, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.31084727468969237, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.7406, 'eval_samples_per_second': 266.696, 'eval_steps_per_second': 33.446, 'epoch': 12.0}
{'loss': 0.0103, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.3968442976474762, 'eval_precision': 0.3013555787278415, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3148148148148148, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 5.7489, 'eval_samples_per_second': 266.313, 'eval_steps_per_second': 33.398, 'epoch': 13.0}
{'loss': 0.0086, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.4102890193462372, 'eval_precision': 0.2810760667903525, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.30997442455242963, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 5.7472, 'eval_samples_per_second': 266.391, 'eval_steps_per_second': 33.408, 'epoch': 14.0}
{'loss': 0.0071, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.4079996943473816, 'eval_precision': 0.3163716814159292, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.32116788321167883, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 5.7506, 'eval_samples_per_second': 266.231, 'eval_steps_per_second': 33.388, 'epoch': 15.0}
{'loss': 0.0061, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.4153652489185333, 'eval_precision': 0.3148558758314856, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3192804946599213, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 5.7391, 'eval_samples_per_second': 266.765, 'eval_steps_per_second': 33.454, 'epoch': 16.0}
{'loss': 0.0052, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.4229636788368225, 'eval_precision': 0.30885311871227367, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3281667557455906, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 5.7411, 'eval_samples_per_second': 266.672, 'eval_steps_per_second': 33.443, 'epoch': 17.0}
{'loss': 0.0049, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.42474740743637085, 'eval_precision': 0.3053830227743271, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3201302224633749, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 5.8159, 'eval_samples_per_second': 263.242, 'eval_steps_per_second': 33.013, 'epoch': 18.0}
{'loss': 0.0045, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.4251874089241028, 'eval_precision': 0.31053203040173727, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3181312569521691, 'eval_accuracy': 0.9383540492549989, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.706, 'eval_steps_per_second': 33.447, 'epoch': 19.0}
{'loss': 0.0043, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.42556333541870117, 'eval_precision': 0.31181619256017507, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31825795644891125, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 5.8168, 'eval_samples_per_second': 263.204, 'eval_steps_per_second': 33.008, 'epoch': 20.0}
{'train_runtime': 2053.4401, 'train_samples_per_second': 84.093, 'train_steps_per_second': 1.315, 'train_loss': 0.08495744945826354, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =      0.085
  train_runtime            = 0:34:13.44
  train_samples            =       8634
  train_samples_per_second =     84.093
  train_steps_per_second   =      1.315
[{'loss': 0.8019, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.259806752204895, 'eval_precision': 0.12338858195211787, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.0943661971830986, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 5.7985, 'eval_samples_per_second': 264.035, 'eval_steps_per_second': 33.112, 'epoch': 1.0, 'step': 135}, {'loss': 0.2546, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.2476111352443695, 'eval_precision': 0.13630573248407643, 'eval_recall': 0.12200684150513112, 'eval_f1': 0.12876052948255115, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.508, 'eval_steps_per_second': 33.422, 'epoch': 2.0, 'step': 270}, {'loss': 0.1725, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.24898101389408112, 'eval_precision': 0.21674311926605505, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.21612349914236703, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 5.7644, 'eval_samples_per_second': 265.595, 'eval_steps_per_second': 33.308, 'epoch': 3.0, 'step': 405}, {'loss': 0.1234, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.24460770189762115, 'eval_precision': 0.29191090269636577, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2878612716763006, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 5.8113, 'eval_samples_per_second': 263.451, 'eval_steps_per_second': 33.039, 'epoch': 4.0, 'step': 540}, {'loss': 0.0871, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2732396125793457, 'eval_precision': 0.26481481481481484, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29228410832907514, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 5.8023, 'eval_samples_per_second': 263.863, 'eval_steps_per_second': 33.091, 'epoch': 5.0, 'step': 675}, {'loss': 0.0627, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.30067047476768494, 'eval_precision': 0.2653846153846154, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2879499217527387, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 5.7949, 'eval_samples_per_second': 264.2, 'eval_steps_per_second': 33.133, 'epoch': 6.0, 'step': 810}, {'loss': 0.0429, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.30862680077552795, 'eval_precision': 0.2757009345794392, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.303030303030303, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 5.795, 'eval_samples_per_second': 264.195, 'eval_steps_per_second': 33.132, 'epoch': 7.0, 'step': 945}, {'loss': 0.0317, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.33272460103034973, 'eval_precision': 0.27552986512524086, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29869451697127936, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 5.8466, 'eval_samples_per_second': 261.861, 'eval_steps_per_second': 32.84, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0248, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3530091941356659, 'eval_precision': 0.2830188679245283, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.30975735673722254, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.899, 'eval_samples_per_second': 259.535, 'eval_steps_per_second': 32.548, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0186, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3716135323047638, 'eval_precision': 0.26865671641791045, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.2955361723961006, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 5.7609, 'eval_samples_per_second': 265.757, 'eval_steps_per_second': 33.328, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0155, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3841600716114044, 'eval_precision': 0.29815573770491804, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31408526713437673, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7511, 'eval_samples_per_second': 266.21, 'eval_steps_per_second': 33.385, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0125, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3874107599258423, 'eval_precision': 0.29508196721311475, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.31084727468969237, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 5.7406, 'eval_samples_per_second': 266.696, 'eval_steps_per_second': 33.446, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0103, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3968442976474762, 'eval_precision': 0.3013555787278415, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3148148148148148, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 5.7489, 'eval_samples_per_second': 266.313, 'eval_steps_per_second': 33.398, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0086, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4102890193462372, 'eval_precision': 0.2810760667903525, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.30997442455242963, 'eval_accuracy': 0.9331043001621246, 'eval_runtime': 5.7472, 'eval_samples_per_second': 266.391, 'eval_steps_per_second': 33.408, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0071, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4079996943473816, 'eval_precision': 0.3163716814159292, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.32116788321167883, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 5.7506, 'eval_samples_per_second': 266.231, 'eval_steps_per_second': 33.388, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0061, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4153652489185333, 'eval_precision': 0.3148558758314856, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3192804946599213, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 5.7391, 'eval_samples_per_second': 266.765, 'eval_steps_per_second': 33.454, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0052, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4229636788368225, 'eval_precision': 0.30885311871227367, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3281667557455906, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 5.7411, 'eval_samples_per_second': 266.672, 'eval_steps_per_second': 33.443, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0049, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.42474740743637085, 'eval_precision': 0.3053830227743271, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3201302224633749, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 5.8159, 'eval_samples_per_second': 263.242, 'eval_steps_per_second': 33.013, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0045, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4251874089241028, 'eval_precision': 0.31053203040173727, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3181312569521691, 'eval_accuracy': 0.9383540492549989, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.706, 'eval_steps_per_second': 33.447, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0043, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.42556333541870117, 'eval_precision': 0.31181619256017507, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31825795644891125, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 5.8168, 'eval_samples_per_second': 263.204, 'eval_steps_per_second': 33.008, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 2053.4401, 'train_samples_per_second': 84.093, 'train_steps_per_second': 1.315, 'total_flos': 2.253163885266931e+16, 'train_loss': 0.08495744945826354, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9414
  predict_f1                 =     0.2906
  predict_loss               =     0.2559
  predict_precision          =     0.3016
  predict_recall             =     0.2803
  predict_runtime            = 0:00:04.84
  predict_samples_per_second =    262.357
  predict_steps_per_second   =     32.795
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_06.json completed. F1: 0.29055007052186177
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_14.json
01150927_tsa-intensity_NorBERT_3_x-small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6636.78 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7007.36 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6776.12 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6795.39 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6735.31 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6826.01 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7004.95 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7073.72 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6568.65 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7182.15 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6772.35 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6716.98 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6504.66 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_x-small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.8149, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': 2.793264627456665, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9465, 'eval_samples_per_second': 519.601, 'eval_steps_per_second': 65.162, 'epoch': 1.0}
{'loss': 2.7739, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': 2.754270553588867, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9496, 'eval_samples_per_second': 519.058, 'eval_steps_per_second': 65.094, 'epoch': 2.0}
{'loss': 2.7364, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': 2.7179160118103027, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9433, 'eval_samples_per_second': 520.156, 'eval_steps_per_second': 65.232, 'epoch': 3.0}
{'loss': 2.7012, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': 2.683882474899292, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9377, 'eval_samples_per_second': 521.165, 'eval_steps_per_second': 65.358, 'epoch': 4.0}
{'loss': 2.6684, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': 2.652067184448242, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.072, 'eval_steps_per_second': 64.97, 'epoch': 5.0}
{'loss': 2.6377, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': 2.622422456741333, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9382, 'eval_samples_per_second': 521.07, 'eval_steps_per_second': 65.346, 'epoch': 6.0}
{'loss': 2.6092, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': 2.5949153900146484, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9322, 'eval_samples_per_second': 522.142, 'eval_steps_per_second': 65.481, 'epoch': 7.0}
{'loss': 2.5828, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': 2.5695254802703857, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9348, 'eval_samples_per_second': 521.667, 'eval_steps_per_second': 65.421, 'epoch': 8.0}
{'loss': 2.5585, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': 2.5462300777435303, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0583, 'eval_samples_per_second': 500.611, 'eval_steps_per_second': 62.781, 'epoch': 9.0}
{'loss': 2.5363, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': 2.5250136852264404, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0587, 'eval_samples_per_second': 500.532, 'eval_steps_per_second': 62.771, 'epoch': 10.0}
{'loss': 2.5161, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': 2.505859851837158, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9509, 'eval_samples_per_second': 518.827, 'eval_steps_per_second': 65.065, 'epoch': 11.0}
{'loss': 2.498, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': 2.4887571334838867, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9582, 'eval_samples_per_second': 517.541, 'eval_steps_per_second': 64.904, 'epoch': 12.0}
{'loss': 2.482, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': 2.473694324493408, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9453, 'eval_samples_per_second': 519.806, 'eval_steps_per_second': 65.188, 'epoch': 13.0}
{'loss': 2.4681, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': 2.460660457611084, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.565, 'eval_steps_per_second': 65.032, 'epoch': 14.0}
{'loss': 2.456, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': 2.449645519256592, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9726, 'eval_samples_per_second': 515.035, 'eval_steps_per_second': 64.59, 'epoch': 15.0}
{'loss': 2.446, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': 2.4406423568725586, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9458, 'eval_samples_per_second': 519.716, 'eval_steps_per_second': 65.177, 'epoch': 16.0}
{'loss': 2.438, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': 2.433645486831665, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.946, 'eval_steps_per_second': 65.206, 'epoch': 17.0}
{'loss': 2.4321, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': 2.4286487102508545, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9303, 'eval_samples_per_second': 522.464, 'eval_steps_per_second': 65.521, 'epoch': 18.0}
{'loss': 2.428, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': 2.425649404525757, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9459, 'eval_samples_per_second': 519.705, 'eval_steps_per_second': 65.175, 'epoch': 19.0}
{'loss': 2.426, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 2.424644947052002, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9376, 'eval_samples_per_second': 521.171, 'eval_steps_per_second': 65.359, 'epoch': 20.0}
{'train_runtime': 240.9972, 'train_samples_per_second': 716.523, 'train_steps_per_second': 11.203, 'train_loss': 2.5604855007595484, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     2.5605
  train_runtime            = 0:04:00.99
  train_samples            =       8634
  train_samples_per_second =    716.523
  train_steps_per_second   =     11.203
[{'loss': 2.8149, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': 2.793264627456665, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9465, 'eval_samples_per_second': 519.601, 'eval_steps_per_second': 65.162, 'epoch': 1.0, 'step': 135}, {'loss': 2.7739, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': 2.754270553588867, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9496, 'eval_samples_per_second': 519.058, 'eval_steps_per_second': 65.094, 'epoch': 2.0, 'step': 270}, {'loss': 2.7364, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': 2.7179160118103027, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9433, 'eval_samples_per_second': 520.156, 'eval_steps_per_second': 65.232, 'epoch': 3.0, 'step': 405}, {'loss': 2.7012, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': 2.683882474899292, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9377, 'eval_samples_per_second': 521.165, 'eval_steps_per_second': 65.358, 'epoch': 4.0, 'step': 540}, {'loss': 2.6684, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': 2.652067184448242, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.072, 'eval_steps_per_second': 64.97, 'epoch': 5.0, 'step': 675}, {'loss': 2.6377, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': 2.622422456741333, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9382, 'eval_samples_per_second': 521.07, 'eval_steps_per_second': 65.346, 'epoch': 6.0, 'step': 810}, {'loss': 2.6092, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': 2.5949153900146484, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9322, 'eval_samples_per_second': 522.142, 'eval_steps_per_second': 65.481, 'epoch': 7.0, 'step': 945}, {'loss': 2.5828, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 2.5695254802703857, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9348, 'eval_samples_per_second': 521.667, 'eval_steps_per_second': 65.421, 'epoch': 8.0, 'step': 1080}, {'loss': 2.5585, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 2.5462300777435303, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0583, 'eval_samples_per_second': 500.611, 'eval_steps_per_second': 62.781, 'epoch': 9.0, 'step': 1215}, {'loss': 2.5363, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 2.5250136852264404, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0587, 'eval_samples_per_second': 500.532, 'eval_steps_per_second': 62.771, 'epoch': 10.0, 'step': 1350}, {'loss': 2.5161, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 2.505859851837158, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9509, 'eval_samples_per_second': 518.827, 'eval_steps_per_second': 65.065, 'epoch': 11.0, 'step': 1485}, {'loss': 2.498, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 2.4887571334838867, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9582, 'eval_samples_per_second': 517.541, 'eval_steps_per_second': 64.904, 'epoch': 12.0, 'step': 1620}, {'loss': 2.482, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 2.473694324493408, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9453, 'eval_samples_per_second': 519.806, 'eval_steps_per_second': 65.188, 'epoch': 13.0, 'step': 1755}, {'loss': 2.4681, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 2.460660457611084, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.565, 'eval_steps_per_second': 65.032, 'epoch': 14.0, 'step': 1890}, {'loss': 2.456, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 2.449645519256592, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9726, 'eval_samples_per_second': 515.035, 'eval_steps_per_second': 64.59, 'epoch': 15.0, 'step': 2025}, {'loss': 2.446, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 2.4406423568725586, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9458, 'eval_samples_per_second': 519.716, 'eval_steps_per_second': 65.177, 'epoch': 16.0, 'step': 2160}, {'loss': 2.438, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 2.433645486831665, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.946, 'eval_steps_per_second': 65.206, 'epoch': 17.0, 'step': 2295}, {'loss': 2.4321, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 2.4286487102508545, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9303, 'eval_samples_per_second': 522.464, 'eval_steps_per_second': 65.521, 'epoch': 18.0, 'step': 2430}, {'loss': 2.428, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 2.425649404525757, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9459, 'eval_samples_per_second': 519.705, 'eval_steps_per_second': 65.175, 'epoch': 19.0, 'step': 2565}, {'loss': 2.426, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 2.424644947052002, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9376, 'eval_samples_per_second': 521.171, 'eval_steps_per_second': 65.359, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 240.9972, 'train_samples_per_second': 716.523, 'train_steps_per_second': 11.203, 'total_flos': 399406811524992.0, 'train_loss': 2.5604855007595484, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-xs
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     2.4251
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    513.228
  predict_steps_per_second   =     64.154
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_14.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_11.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_11.json
config.json:   0%|          | 0.00/746 [00:00<?, ?B/s]config.json: 100%|██████████| 746/746 [00:00<00:00, 6.05MB/s]
tokenizer_config.json:   0%|          | 0.00/363 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 363/363 [00:00<00:00, 2.79MB/s]
vocab.txt:   0%|          | 0.00/996k [00:00<?, ?B/s]vocab.txt: 100%|██████████| 996k/996k [00:00<00:00, 4.96MB/s]vocab.txt: 100%|██████████| 996k/996k [00:00<00:00, 4.94MB/s]
special_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 112/112 [00:00<00:00, 957kB/s]
model.safetensors:   0%|          | 0.00/714M [00:00<?, ?B/s]model.safetensors:   1%|▏         | 10.5M/714M [00:00<00:16, 43.2MB/s]model.safetensors:   3%|▎         | 21.0M/714M [00:00<00:12, 54.5MB/s]model.safetensors:   4%|▍         | 31.5M/714M [00:00<00:10, 67.4MB/s]model.safetensors:   7%|▋         | 52.4M/714M [00:00<00:07, 87.6MB/s]model.safetensors:  10%|█         | 73.4M/714M [00:00<00:06, 98.4MB/s]model.safetensors:  13%|█▎        | 94.4M/714M [00:01<00:05, 105MB/s] model.safetensors:  16%|█▌        | 115M/714M [00:01<00:05, 109MB/s] model.safetensors:  19%|█▉        | 136M/714M [00:01<00:05, 112MB/s]model.safetensors:  22%|██▏       | 157M/714M [00:01<00:04, 114MB/s]model.safetensors:  25%|██▍       | 178M/714M [00:01<00:04, 115MB/s]model.safetensors:  28%|██▊       | 199M/714M [00:01<00:04, 116MB/s]model.safetensors:  31%|███       | 220M/714M [00:02<00:04, 116MB/s]model.safetensors:  34%|███▍      | 241M/714M [00:02<00:04, 115MB/s]model.safetensors:  37%|███▋      | 262M/714M [00:02<00:03, 116MB/s]model.safetensors:  40%|███▉      | 283M/714M [00:02<00:03, 116MB/s]model.safetensors:  43%|████▎     | 304M/714M [00:02<00:03, 116MB/s]model.safetensors:  46%|████▌     | 325M/714M [00:03<00:03, 117MB/s]model.safetensors:  48%|████▊     | 346M/714M [00:03<00:03, 117MB/s]model.safetensors:  51%|█████▏    | 367M/714M [00:03<00:02, 117MB/s]model.safetensors:  54%|█████▍    | 388M/714M [00:03<00:02, 117MB/s]model.safetensors:  57%|█████▋    | 409M/714M [00:03<00:02, 117MB/s]model.safetensors:  60%|██████    | 430M/714M [00:03<00:02, 116MB/s]model.safetensors:  63%|██████▎   | 451M/714M [00:04<00:02, 116MB/s]model.safetensors:  66%|██████▌   | 472M/714M [00:04<00:02, 116MB/s]model.safetensors:  69%|██████▉   | 493M/714M [00:04<00:01, 116MB/s]model.safetensors:  72%|███████▏  | 514M/714M [00:04<00:01, 117MB/s]model.safetensors:  75%|███████▍  | 535M/714M [00:04<00:01, 117MB/s]model.safetensors:  78%|███████▊  | 556M/714M [00:05<00:01, 116MB/s]model.safetensors:  81%|████████  | 577M/714M [00:05<00:01, 116MB/s]model.safetensors:  84%|████████▎ | 598M/714M [00:05<00:01, 115MB/s]model.safetensors:  87%|████████▋ | 619M/714M [00:05<00:00, 116MB/s]model.safetensors:  90%|████████▉ | 640M/714M [00:05<00:00, 115MB/s]model.safetensors:  92%|█████████▏| 661M/714M [00:05<00:00, 114MB/s]model.safetensors:  95%|█████████▌| 682M/714M [00:06<00:00, 115MB/s]model.safetensors:  98%|█████████▊| 703M/714M [00:06<00:00, 116MB/s]model.safetensors: 100%|██████████| 714M/714M [00:06<00:00, 112MB/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01150927_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5850.80 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6635.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6587.44 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6711.48 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6761.66 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6901.66 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7069.34 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6093.01 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6500.62 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7165.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6805.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6839.18 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6674.37 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4533, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 0.26857277750968933, 'eval_precision': 0.2, 'eval_recall': 0.0330672748004561, 'eval_f1': 0.05675146771037182, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.4225, 'eval_samples_per_second': 631.996, 'eval_steps_per_second': 79.257, 'epoch': 1.0}
{'loss': 0.2584, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 0.23665232956409454, 'eval_precision': 0.17693836978131214, 'eval_recall': 0.10148232611174458, 'eval_f1': 0.1289855072463768, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.393, 'eval_samples_per_second': 639.791, 'eval_steps_per_second': 80.235, 'epoch': 2.0}
{'loss': 0.2232, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 0.2286583036184311, 'eval_precision': 0.2, 'eval_recall': 0.13683010262257697, 'eval_f1': 0.16249153689911985, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.3731, 'eval_samples_per_second': 645.136, 'eval_steps_per_second': 80.905, 'epoch': 3.0}
{'loss': 0.1951, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 0.22979210317134857, 'eval_precision': 0.22476446837146702, 'eval_recall': 0.1904218928164196, 'eval_f1': 0.20617283950617282, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3734, 'eval_samples_per_second': 645.059, 'eval_steps_per_second': 80.896, 'epoch': 4.0}
{'loss': 0.1693, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 0.23265184462070465, 'eval_precision': 0.20877944325481798, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.21535063500828272, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.3701, 'eval_samples_per_second': 645.965, 'eval_steps_per_second': 81.009, 'epoch': 5.0}
{'loss': 0.1494, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.2455524504184723, 'eval_precision': 0.22114216281895505, 'eval_recall': 0.20752565564424175, 'eval_f1': 0.21411764705882352, 'eval_accuracy': 0.9336833166061916, 'eval_runtime': 2.3707, 'eval_samples_per_second': 645.801, 'eval_steps_per_second': 80.989, 'epoch': 6.0}
{'loss': 0.1346, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.25082194805145264, 'eval_precision': 0.23210412147505424, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2379099499722068, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.367, 'eval_samples_per_second': 646.811, 'eval_steps_per_second': 81.115, 'epoch': 7.0}
{'loss': 0.1216, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.2585059404373169, 'eval_precision': 0.23085585585585586, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2322946175637394, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.677, 'eval_steps_per_second': 81.099, 'epoch': 8.0}
{'loss': 0.1112, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.2660282552242279, 'eval_precision': 0.2521631644004944, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24199288256227758, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.335, 'eval_steps_per_second': 80.93, 'epoch': 9.0}
{'loss': 0.1015, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.273912250995636, 'eval_precision': 0.25315126050420167, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.263531984691088, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.922, 'eval_steps_per_second': 81.004, 'epoch': 10.0}
{'loss': 0.0944, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.28510919213294983, 'eval_precision': 0.24729064039408866, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2653276955602537, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.08, 'eval_steps_per_second': 81.149, 'epoch': 11.0}
{'loss': 0.0877, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.2888498902320862, 'eval_precision': 0.2497387669801463, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2606324972737186, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3992, 'eval_samples_per_second': 638.129, 'eval_steps_per_second': 80.027, 'epoch': 12.0}
{'loss': 0.0824, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.29973042011260986, 'eval_precision': 0.24233716475095785, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.26340447683498175, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.3662, 'eval_samples_per_second': 647.032, 'eval_steps_per_second': 81.143, 'epoch': 13.0}
{'loss': 0.0776, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.3008934259414673, 'eval_precision': 0.25313807531380755, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.26404800872885986, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.3605, 'eval_samples_per_second': 648.583, 'eval_steps_per_second': 81.338, 'epoch': 14.0}
{'loss': 0.0735, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.30883148312568665, 'eval_precision': 0.26867219917012447, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.28136882129277563, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.3585, 'eval_samples_per_second': 649.14, 'eval_steps_per_second': 81.407, 'epoch': 15.0}
{'loss': 0.0696, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.31679868698120117, 'eval_precision': 0.26161616161616164, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2774504552758436, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.062, 'eval_steps_per_second': 81.147, 'epoch': 16.0}
{'loss': 0.0685, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.31625303626060486, 'eval_precision': 0.2535070140280561, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2698666666666666, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.911, 'eval_steps_per_second': 81.003, 'epoch': 17.0}
{'loss': 0.0652, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.3213076889514923, 'eval_precision': 0.25925925925925924, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27611940298507465, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.4148, 'eval_samples_per_second': 634.015, 'eval_steps_per_second': 79.511, 'epoch': 18.0}
{'loss': 0.0634, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.3226484954357147, 'eval_precision': 0.2557213930348259, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.27311370882040387, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3658, 'eval_samples_per_second': 647.143, 'eval_steps_per_second': 81.157, 'epoch': 19.0}
{'loss': 0.0624, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.3227682113647461, 'eval_precision': 0.2640736949846469, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27831715210355984, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.81, 'eval_steps_per_second': 81.366, 'epoch': 20.0}
{'train_runtime': 701.6399, 'train_samples_per_second': 246.109, 'train_steps_per_second': 3.848, 'train_loss': 0.13310743155302826, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.1331
  train_runtime            = 0:11:41.63
  train_samples            =       8634
  train_samples_per_second =    246.109
  train_steps_per_second   =      3.848
[{'loss': 0.4533, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.26857277750968933, 'eval_precision': 0.2, 'eval_recall': 0.0330672748004561, 'eval_f1': 0.05675146771037182, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.4225, 'eval_samples_per_second': 631.996, 'eval_steps_per_second': 79.257, 'epoch': 1.0, 'step': 135}, {'loss': 0.2584, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.23665232956409454, 'eval_precision': 0.17693836978131214, 'eval_recall': 0.10148232611174458, 'eval_f1': 0.1289855072463768, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.393, 'eval_samples_per_second': 639.791, 'eval_steps_per_second': 80.235, 'epoch': 2.0, 'step': 270}, {'loss': 0.2232, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2286583036184311, 'eval_precision': 0.2, 'eval_recall': 0.13683010262257697, 'eval_f1': 0.16249153689911985, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.3731, 'eval_samples_per_second': 645.136, 'eval_steps_per_second': 80.905, 'epoch': 3.0, 'step': 405}, {'loss': 0.1951, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.22979210317134857, 'eval_precision': 0.22476446837146702, 'eval_recall': 0.1904218928164196, 'eval_f1': 0.20617283950617282, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3734, 'eval_samples_per_second': 645.059, 'eval_steps_per_second': 80.896, 'epoch': 4.0, 'step': 540}, {'loss': 0.1693, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.23265184462070465, 'eval_precision': 0.20877944325481798, 'eval_recall': 0.22234891676168758, 'eval_f1': 0.21535063500828272, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.3701, 'eval_samples_per_second': 645.965, 'eval_steps_per_second': 81.009, 'epoch': 5.0, 'step': 675}, {'loss': 0.1494, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2455524504184723, 'eval_precision': 0.22114216281895505, 'eval_recall': 0.20752565564424175, 'eval_f1': 0.21411764705882352, 'eval_accuracy': 0.9336833166061916, 'eval_runtime': 2.3707, 'eval_samples_per_second': 645.801, 'eval_steps_per_second': 80.989, 'epoch': 6.0, 'step': 810}, {'loss': 0.1346, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.25082194805145264, 'eval_precision': 0.23210412147505424, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2379099499722068, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.367, 'eval_samples_per_second': 646.811, 'eval_steps_per_second': 81.115, 'epoch': 7.0, 'step': 945}, {'loss': 0.1216, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2585059404373169, 'eval_precision': 0.23085585585585586, 'eval_recall': 0.233751425313569, 'eval_f1': 0.2322946175637394, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.677, 'eval_steps_per_second': 81.099, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1112, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2660282552242279, 'eval_precision': 0.2521631644004944, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24199288256227758, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.335, 'eval_steps_per_second': 80.93, 'epoch': 9.0, 'step': 1215}, {'loss': 0.1015, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.273912250995636, 'eval_precision': 0.25315126050420167, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.263531984691088, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.922, 'eval_steps_per_second': 81.004, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0944, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.28510919213294983, 'eval_precision': 0.24729064039408866, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2653276955602537, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.08, 'eval_steps_per_second': 81.149, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0877, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2888498902320862, 'eval_precision': 0.2497387669801463, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2606324972737186, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3992, 'eval_samples_per_second': 638.129, 'eval_steps_per_second': 80.027, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0824, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.29973042011260986, 'eval_precision': 0.24233716475095785, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.26340447683498175, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.3662, 'eval_samples_per_second': 647.032, 'eval_steps_per_second': 81.143, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0776, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3008934259414673, 'eval_precision': 0.25313807531380755, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.26404800872885986, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.3605, 'eval_samples_per_second': 648.583, 'eval_steps_per_second': 81.338, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0735, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.30883148312568665, 'eval_precision': 0.26867219917012447, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.28136882129277563, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.3585, 'eval_samples_per_second': 649.14, 'eval_steps_per_second': 81.407, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0696, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.31679868698120117, 'eval_precision': 0.26161616161616164, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2774504552758436, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.062, 'eval_steps_per_second': 81.147, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0685, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.31625303626060486, 'eval_precision': 0.2535070140280561, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2698666666666666, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.911, 'eval_steps_per_second': 81.003, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0652, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3213076889514923, 'eval_precision': 0.25925925925925924, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.27611940298507465, 'eval_accuracy': 0.9334131089322937, 'eval_runtime': 2.4148, 'eval_samples_per_second': 634.015, 'eval_steps_per_second': 79.511, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0634, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3226484954357147, 'eval_precision': 0.2557213930348259, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.27311370882040387, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3658, 'eval_samples_per_second': 647.143, 'eval_steps_per_second': 81.157, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0624, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3227682113647461, 'eval_precision': 0.2640736949846469, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.27831715210355984, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.81, 'eval_steps_per_second': 81.366, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 701.6399, 'train_samples_per_second': 246.109, 'train_steps_per_second': 3.848, 'total_flos': 7445816592854268.0, 'train_loss': 0.13310743155302826, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9375
  predict_f1                 =     0.1884
  predict_loss               =     0.2314
  predict_precision          =     0.2226
  predict_recall             =     0.1633
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =    644.892
  predict_steps_per_second   =     80.612
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_11.json completed. F1: 0.18838304552590265
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_08.json
config.json:   0%|          | 0.00/949 [00:00<?, ?B/s]config.json: 100%|██████████| 949/949 [00:00<00:00, 9.09MB/s]
configuration_norbert.py:   0%|          | 0.00/1.23k [00:00<?, ?B/s]configuration_norbert.py: 100%|██████████| 1.23k/1.23k [00:00<00:00, 13.6MB/s]
tokenizer_config.json:   0%|          | 0.00/51.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 51.0/51.0 [00:00<00:00, 409kB/s]
tokenizer.json:   0%|          | 0.00/1.26M [00:00<?, ?B/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 6.22MB/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 6.20MB/s]
special_tokens_map.json:   0%|          | 0.00/157 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 157/157 [00:00<00:00, 1.66MB/s]
pytorch_model.bin:   0%|          | 0.00/188M [00:00<?, ?B/s]pytorch_model.bin:   6%|▌         | 10.5M/188M [00:00<00:06, 25.4MB/s]pytorch_model.bin:  11%|█         | 21.0M/188M [00:00<00:04, 36.4MB/s]pytorch_model.bin:  17%|█▋        | 31.5M/188M [00:00<00:03, 47.9MB/s]pytorch_model.bin:  22%|██▏       | 41.9M/188M [00:00<00:02, 60.7MB/s]pytorch_model.bin:  28%|██▊       | 52.4M/188M [00:00<00:01, 69.9MB/s]pytorch_model.bin:  39%|███▉      | 73.4M/188M [00:01<00:01, 79.4MB/s]pytorch_model.bin:  50%|█████     | 94.4M/188M [00:01<00:01, 91.0MB/s]pytorch_model.bin:  61%|██████▏   | 115M/188M [00:01<00:00, 99.1MB/s] pytorch_model.bin:  67%|██████▋   | 126M/188M [00:01<00:00, 99.8MB/s]pytorch_model.bin:  78%|███████▊  | 147M/188M [00:01<00:00, 105MB/s] pytorch_model.bin:  89%|████████▉ | 168M/188M [00:02<00:00, 108MB/s]pytorch_model.bin: 100%|██████████| 188M/188M [00:02<00:00, 110MB/s]pytorch_model.bin: 100%|██████████| 188M/188M [00:02<00:00, 85.3MB/s]
01150927_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5714.54 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6634.61 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6674.36 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6822.70 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6910.55 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7034.73 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7242.39 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7305.84 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6664.95 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7403.52 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7050.70 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6844.84 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6730.38 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.4703, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 2.095449209213257, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9859, 'eval_samples_per_second': 512.742, 'eval_steps_per_second': 64.302, 'epoch': 1.0}
{'loss': 1.7746, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 1.4686626195907593, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9786, 'eval_samples_per_second': 513.998, 'eval_steps_per_second': 64.46, 'epoch': 2.0}
{'loss': 1.2279, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 1.0003870725631714, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9851, 'eval_samples_per_second': 512.877, 'eval_steps_per_second': 64.319, 'epoch': 3.0}
{'loss': 0.8435, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 0.6965941190719604, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.141, 'eval_steps_per_second': 64.478, 'epoch': 4.0}
{'loss': 0.6125, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 0.5278147459030151, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9836, 'eval_samples_per_second': 513.146, 'eval_steps_per_second': 64.353, 'epoch': 5.0}
{'loss': 0.4935, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.4471007287502289, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.849, 'eval_steps_per_second': 64.441, 'epoch': 6.0}
{'loss': 0.4403, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.4146627187728882, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.982, 'eval_samples_per_second': 513.408, 'eval_steps_per_second': 64.386, 'epoch': 7.0}
{'loss': 0.3832, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.36058685183525085, 'eval_precision': 0.23529411764705882, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008948545861297539, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.9719, 'eval_samples_per_second': 515.157, 'eval_steps_per_second': 64.605, 'epoch': 8.0}
{'loss': 0.3365, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.3193937838077545, 'eval_precision': 0.09032258064516129, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.027131782945736434, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.9724, 'eval_samples_per_second': 515.068, 'eval_steps_per_second': 64.594, 'epoch': 9.0}
{'loss': 0.3115, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.3087679147720337, 'eval_precision': 0.09494949494949495, 'eval_recall': 0.053591790193842644, 'eval_f1': 0.0685131195335277, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 3.035, 'eval_samples_per_second': 504.443, 'eval_steps_per_second': 63.261, 'epoch': 10.0}
{'loss': 0.2944, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.298967182636261, 'eval_precision': 0.08431703204047218, 'eval_recall': 0.05701254275940707, 'eval_f1': 0.06802721088435373, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.9782, 'eval_samples_per_second': 514.077, 'eval_steps_per_second': 64.47, 'epoch': 11.0}
{'loss': 0.2838, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.29401129484176636, 'eval_precision': 0.09516616314199396, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.08187134502923976, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.9761, 'eval_samples_per_second': 514.438, 'eval_steps_per_second': 64.515, 'epoch': 12.0}
{'loss': 0.2759, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.28995299339294434, 'eval_precision': 0.07779349363507779, 'eval_recall': 0.06271379703534778, 'eval_f1': 0.06944444444444446, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.9727, 'eval_samples_per_second': 515.023, 'eval_steps_per_second': 64.588, 'epoch': 13.0}
{'loss': 0.2696, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.2906567454338074, 'eval_precision': 0.08568075117370892, 'eval_recall': 0.08323831242873432, 'eval_f1': 0.08444187391555813, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.9985, 'eval_samples_per_second': 510.596, 'eval_steps_per_second': 64.033, 'epoch': 14.0}
{'loss': 0.2648, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.29420483112335205, 'eval_precision': 0.09236947791164658, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.0982381206620395, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.068, 'eval_steps_per_second': 64.845, 'epoch': 15.0}
{'loss': 0.2585, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.2947555184364319, 'eval_precision': 0.10147783251231528, 'eval_recall': 0.11744583808437856, 'eval_f1': 0.10887949260042284, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.262, 'eval_steps_per_second': 64.743, 'epoch': 16.0}
{'loss': 0.2557, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.2963831424713135, 'eval_precision': 0.09564393939393939, 'eval_recall': 0.11516533637400228, 'eval_f1': 0.10450077599586136, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 2.9755, 'eval_samples_per_second': 514.533, 'eval_steps_per_second': 64.527, 'epoch': 17.0}
{'loss': 0.2539, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.29648974537849426, 'eval_precision': 0.09200743494423792, 'eval_recall': 0.11288483466362599, 'eval_f1': 0.10138248847926266, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 2.9731, 'eval_samples_per_second': 514.943, 'eval_steps_per_second': 64.578, 'epoch': 18.0}
{'loss': 0.2505, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.2945924699306488, 'eval_precision': 0.09727626459143969, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.10498687664041995, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.9788, 'eval_samples_per_second': 513.965, 'eval_steps_per_second': 64.455, 'epoch': 19.0}
{'loss': 0.2493, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.29516956210136414, 'eval_precision': 0.09624639076034648, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.10438413361169102, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.9706, 'eval_samples_per_second': 515.388, 'eval_steps_per_second': 64.634, 'epoch': 20.0}
{'train_runtime': 344.2096, 'train_samples_per_second': 501.671, 'train_steps_per_second': 7.844, 'train_loss': 0.5775055638066044, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.5775
  train_runtime            = 0:05:44.20
  train_samples            =       8634
  train_samples_per_second =    501.671
  train_steps_per_second   =      7.844
[{'loss': 2.4703, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 2.095449209213257, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9859, 'eval_samples_per_second': 512.742, 'eval_steps_per_second': 64.302, 'epoch': 1.0, 'step': 135}, {'loss': 1.7746, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 1.4686626195907593, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9786, 'eval_samples_per_second': 513.998, 'eval_steps_per_second': 64.46, 'epoch': 2.0, 'step': 270}, {'loss': 1.2279, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 1.0003870725631714, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9851, 'eval_samples_per_second': 512.877, 'eval_steps_per_second': 64.319, 'epoch': 3.0, 'step': 405}, {'loss': 0.8435, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.6965941190719604, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.141, 'eval_steps_per_second': 64.478, 'epoch': 4.0, 'step': 540}, {'loss': 0.6125, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.5278147459030151, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9836, 'eval_samples_per_second': 513.146, 'eval_steps_per_second': 64.353, 'epoch': 5.0, 'step': 675}, {'loss': 0.4935, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.4471007287502289, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.849, 'eval_steps_per_second': 64.441, 'epoch': 6.0, 'step': 810}, {'loss': 0.4403, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.4146627187728882, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.982, 'eval_samples_per_second': 513.408, 'eval_steps_per_second': 64.386, 'epoch': 7.0, 'step': 945}, {'loss': 0.3832, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.36058685183525085, 'eval_precision': 0.23529411764705882, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008948545861297539, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.9719, 'eval_samples_per_second': 515.157, 'eval_steps_per_second': 64.605, 'epoch': 8.0, 'step': 1080}, {'loss': 0.3365, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3193937838077545, 'eval_precision': 0.09032258064516129, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.027131782945736434, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.9724, 'eval_samples_per_second': 515.068, 'eval_steps_per_second': 64.594, 'epoch': 9.0, 'step': 1215}, {'loss': 0.3115, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3087679147720337, 'eval_precision': 0.09494949494949495, 'eval_recall': 0.053591790193842644, 'eval_f1': 0.0685131195335277, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 3.035, 'eval_samples_per_second': 504.443, 'eval_steps_per_second': 63.261, 'epoch': 10.0, 'step': 1350}, {'loss': 0.2944, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.298967182636261, 'eval_precision': 0.08431703204047218, 'eval_recall': 0.05701254275940707, 'eval_f1': 0.06802721088435373, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.9782, 'eval_samples_per_second': 514.077, 'eval_steps_per_second': 64.47, 'epoch': 11.0, 'step': 1485}, {'loss': 0.2838, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.29401129484176636, 'eval_precision': 0.09516616314199396, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.08187134502923976, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.9761, 'eval_samples_per_second': 514.438, 'eval_steps_per_second': 64.515, 'epoch': 12.0, 'step': 1620}, {'loss': 0.2759, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.28995299339294434, 'eval_precision': 0.07779349363507779, 'eval_recall': 0.06271379703534778, 'eval_f1': 0.06944444444444446, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.9727, 'eval_samples_per_second': 515.023, 'eval_steps_per_second': 64.588, 'epoch': 13.0, 'step': 1755}, {'loss': 0.2696, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2906567454338074, 'eval_precision': 0.08568075117370892, 'eval_recall': 0.08323831242873432, 'eval_f1': 0.08444187391555813, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.9985, 'eval_samples_per_second': 510.596, 'eval_steps_per_second': 64.033, 'epoch': 14.0, 'step': 1890}, {'loss': 0.2648, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.29420483112335205, 'eval_precision': 0.09236947791164658, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.0982381206620395, 'eval_accuracy': 0.9310198409634833, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.068, 'eval_steps_per_second': 64.845, 'epoch': 15.0, 'step': 2025}, {'loss': 0.2585, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2947555184364319, 'eval_precision': 0.10147783251231528, 'eval_recall': 0.11744583808437856, 'eval_f1': 0.10887949260042284, 'eval_accuracy': 0.9312900486373813, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.262, 'eval_steps_per_second': 64.743, 'epoch': 16.0, 'step': 2160}, {'loss': 0.2557, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.2963831424713135, 'eval_precision': 0.09564393939393939, 'eval_recall': 0.11516533637400228, 'eval_f1': 0.10450077599586136, 'eval_accuracy': 0.9304022234231453, 'eval_runtime': 2.9755, 'eval_samples_per_second': 514.533, 'eval_steps_per_second': 64.527, 'epoch': 17.0, 'step': 2295}, {'loss': 0.2539, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.29648974537849426, 'eval_precision': 0.09200743494423792, 'eval_recall': 0.11288483466362599, 'eval_f1': 0.10138248847926266, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 2.9731, 'eval_samples_per_second': 514.943, 'eval_steps_per_second': 64.578, 'epoch': 18.0, 'step': 2430}, {'loss': 0.2505, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2945924699306488, 'eval_precision': 0.09727626459143969, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.10498687664041995, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.9788, 'eval_samples_per_second': 513.965, 'eval_steps_per_second': 64.455, 'epoch': 19.0, 'step': 2565}, {'loss': 0.2493, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.29516956210136414, 'eval_precision': 0.09624639076034648, 'eval_recall': 0.11402508551881414, 'eval_f1': 0.10438413361169102, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.9706, 'eval_samples_per_second': 515.388, 'eval_steps_per_second': 64.634, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 344.2096, 'train_samples_per_second': 501.671, 'train_steps_per_second': 7.844, 'total_flos': 1593200676638592.0, 'train_loss': 0.5775055638066044, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9314
  predict_f1                 =     0.0356
  predict_loss               =     0.2986
  predict_precision          =      0.039
  predict_recall             =     0.0327
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    513.411
  predict_steps_per_second   =     64.176
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_08.json completed. F1: 0.035555555555555556
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of XLMRobertaForTokenClassification were not initialized from the model checkpoint at xlm-roberta-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_17.json
01150927_tsa-intensity_XLM-R_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5887.94 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6530.07 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6451.66 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6515.57 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6520.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6642.31 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5928.97 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6280.39 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6362.26 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6920.40 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6578.89 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6634.87 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6441.59 examples/s]
You're using a XLMRobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_XLM-R_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'attention_mask', 'labels']
{'loss': 2.1968, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': 0.5022931694984436, 'eval_precision': 0.2, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022675736961451248, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 2.331, 'eval_samples_per_second': 656.811, 'eval_steps_per_second': 82.37, 'epoch': 1.0}
{'loss': 0.4541, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': 0.3839654326438904, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3012, 'eval_samples_per_second': 665.317, 'eval_steps_per_second': 83.436, 'epoch': 2.0}
{'loss': 0.3887, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': 0.34228867292404175, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2947, 'eval_samples_per_second': 667.18, 'eval_steps_per_second': 83.67, 'epoch': 3.0}
{'loss': 0.3603, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': 0.3251904249191284, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3068, 'eval_samples_per_second': 663.688, 'eval_steps_per_second': 83.232, 'epoch': 4.0}
{'loss': 0.3453, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': 0.31291118264198303, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2929, 'eval_samples_per_second': 667.711, 'eval_steps_per_second': 83.736, 'epoch': 5.0}
{'loss': 0.3346, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': 0.30518853664398193, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3017, 'eval_samples_per_second': 665.153, 'eval_steps_per_second': 83.416, 'epoch': 6.0}
{'loss': 0.326, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': 0.2996794581413269, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2988, 'eval_samples_per_second': 665.99, 'eval_steps_per_second': 83.521, 'epoch': 7.0}
{'loss': 0.3181, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': 0.2966938018798828, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2935, 'eval_samples_per_second': 667.546, 'eval_steps_per_second': 83.716, 'epoch': 8.0}
{'loss': 0.3126, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': 0.29033949971199036, 'eval_precision': 0.038461538461538464, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00221483942414175, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.133, 'eval_steps_per_second': 80.905, 'epoch': 9.0}
{'loss': 0.3083, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': 0.2868480980396271, 'eval_precision': 0.10526315789473684, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008743169398907104, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2993, 'eval_samples_per_second': 665.863, 'eval_steps_per_second': 83.505, 'epoch': 10.0}
{'loss': 0.3047, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': 0.2843882739543915, 'eval_precision': 0.08333333333333333, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.010672358591248666, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.297, 'eval_samples_per_second': 666.527, 'eval_steps_per_second': 83.588, 'epoch': 11.0}
{'loss': 0.3021, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': 0.28198644518852234, 'eval_precision': 0.08974358974358974, 'eval_recall': 0.00798175598631699, 'eval_f1': 0.014659685863874346, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.296, 'eval_samples_per_second': 666.817, 'eval_steps_per_second': 83.624, 'epoch': 12.0}
{'loss': 0.2995, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': 0.2796444594860077, 'eval_precision': 0.0967741935483871, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.018556701030927835, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 2.2946, 'eval_samples_per_second': 667.212, 'eval_steps_per_second': 83.674, 'epoch': 13.0}
{'loss': 0.2978, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': 0.2781135141849518, 'eval_precision': 0.10434782608695652, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.024193548387096774, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2995, 'eval_samples_per_second': 665.784, 'eval_steps_per_second': 83.495, 'epoch': 14.0}
{'loss': 0.2962, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': 0.27716901898384094, 'eval_precision': 0.10606060606060606, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.02775024777006938, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.3123, 'eval_samples_per_second': 662.113, 'eval_steps_per_second': 83.034, 'epoch': 15.0}
{'loss': 0.2932, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': 0.2756193280220032, 'eval_precision': 0.1044776119402985, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.027695351137487636, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.2959, 'eval_samples_per_second': 666.839, 'eval_steps_per_second': 83.627, 'epoch': 16.0}
{'loss': 0.2914, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': 0.2755867838859558, 'eval_precision': 0.09876543209876543, 'eval_recall': 0.018244013683010263, 'eval_f1': 0.030798845043310877, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.304, 'eval_samples_per_second': 664.511, 'eval_steps_per_second': 83.335, 'epoch': 17.0}
{'loss': 0.2923, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': 0.27444571256637573, 'eval_precision': 0.10975609756097561, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.0345821325648415, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 2.2989, 'eval_samples_per_second': 665.983, 'eval_steps_per_second': 83.52, 'epoch': 18.0}
{'loss': 0.2903, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': 0.2741353511810303, 'eval_precision': 0.10975609756097561, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.0345821325648415, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2982, 'eval_samples_per_second': 666.179, 'eval_steps_per_second': 83.544, 'epoch': 19.0}
{'loss': 0.2905, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.27430593967437744, 'eval_precision': 0.10465116279069768, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.034318398474737846, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3041, 'eval_samples_per_second': 664.476, 'eval_steps_per_second': 83.331, 'epoch': 20.0}
{'train_runtime': 702.1806, 'train_samples_per_second': 245.92, 'train_steps_per_second': 3.845, 'train_loss': 0.4151358795166016, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.4151
  train_runtime            = 0:11:42.18
  train_samples            =       8634
  train_samples_per_second =     245.92
  train_steps_per_second   =      3.845
[{'loss': 2.1968, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.5022931694984436, 'eval_precision': 0.2, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022675736961451248, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 2.331, 'eval_samples_per_second': 656.811, 'eval_steps_per_second': 82.37, 'epoch': 1.0, 'step': 135}, {'loss': 0.4541, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.3839654326438904, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3012, 'eval_samples_per_second': 665.317, 'eval_steps_per_second': 83.436, 'epoch': 2.0, 'step': 270}, {'loss': 0.3887, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.34228867292404175, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2947, 'eval_samples_per_second': 667.18, 'eval_steps_per_second': 83.67, 'epoch': 3.0, 'step': 405}, {'loss': 0.3603, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.3251904249191284, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3068, 'eval_samples_per_second': 663.688, 'eval_steps_per_second': 83.232, 'epoch': 4.0, 'step': 540}, {'loss': 0.3453, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.31291118264198303, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2929, 'eval_samples_per_second': 667.711, 'eval_steps_per_second': 83.736, 'epoch': 5.0, 'step': 675}, {'loss': 0.3346, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.30518853664398193, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3017, 'eval_samples_per_second': 665.153, 'eval_steps_per_second': 83.416, 'epoch': 6.0, 'step': 810}, {'loss': 0.326, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2996794581413269, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2988, 'eval_samples_per_second': 665.99, 'eval_steps_per_second': 83.521, 'epoch': 7.0, 'step': 945}, {'loss': 0.3181, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2966938018798828, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2935, 'eval_samples_per_second': 667.546, 'eval_steps_per_second': 83.716, 'epoch': 8.0, 'step': 1080}, {'loss': 0.3126, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.29033949971199036, 'eval_precision': 0.038461538461538464, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.00221483942414175, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.133, 'eval_steps_per_second': 80.905, 'epoch': 9.0, 'step': 1215}, {'loss': 0.3083, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2868480980396271, 'eval_precision': 0.10526315789473684, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008743169398907104, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2993, 'eval_samples_per_second': 665.863, 'eval_steps_per_second': 83.505, 'epoch': 10.0, 'step': 1350}, {'loss': 0.3047, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2843882739543915, 'eval_precision': 0.08333333333333333, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.010672358591248666, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.297, 'eval_samples_per_second': 666.527, 'eval_steps_per_second': 83.588, 'epoch': 11.0, 'step': 1485}, {'loss': 0.3021, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.28198644518852234, 'eval_precision': 0.08974358974358974, 'eval_recall': 0.00798175598631699, 'eval_f1': 0.014659685863874346, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.296, 'eval_samples_per_second': 666.817, 'eval_steps_per_second': 83.624, 'epoch': 12.0, 'step': 1620}, {'loss': 0.2995, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2796444594860077, 'eval_precision': 0.0967741935483871, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.018556701030927835, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 2.2946, 'eval_samples_per_second': 667.212, 'eval_steps_per_second': 83.674, 'epoch': 13.0, 'step': 1755}, {'loss': 0.2978, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2781135141849518, 'eval_precision': 0.10434782608695652, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.024193548387096774, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.2995, 'eval_samples_per_second': 665.784, 'eval_steps_per_second': 83.495, 'epoch': 14.0, 'step': 1890}, {'loss': 0.2962, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.27716901898384094, 'eval_precision': 0.10606060606060606, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.02775024777006938, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.3123, 'eval_samples_per_second': 662.113, 'eval_steps_per_second': 83.034, 'epoch': 15.0, 'step': 2025}, {'loss': 0.2932, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2756193280220032, 'eval_precision': 0.1044776119402985, 'eval_recall': 0.01596351197263398, 'eval_f1': 0.027695351137487636, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.2959, 'eval_samples_per_second': 666.839, 'eval_steps_per_second': 83.627, 'epoch': 16.0, 'step': 2160}, {'loss': 0.2914, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.2755867838859558, 'eval_precision': 0.09876543209876543, 'eval_recall': 0.018244013683010263, 'eval_f1': 0.030798845043310877, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.304, 'eval_samples_per_second': 664.511, 'eval_steps_per_second': 83.335, 'epoch': 17.0, 'step': 2295}, {'loss': 0.2923, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.27444571256637573, 'eval_precision': 0.10975609756097561, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.0345821325648415, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 2.2989, 'eval_samples_per_second': 665.983, 'eval_steps_per_second': 83.52, 'epoch': 18.0, 'step': 2430}, {'loss': 0.2903, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2741353511810303, 'eval_precision': 0.10975609756097561, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.0345821325648415, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2982, 'eval_samples_per_second': 666.179, 'eval_steps_per_second': 83.544, 'epoch': 19.0, 'step': 2565}, {'loss': 0.2905, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.27430593967437744, 'eval_precision': 0.10465116279069768, 'eval_recall': 0.020524515393386546, 'eval_f1': 0.034318398474737846, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3041, 'eval_samples_per_second': 664.476, 'eval_steps_per_second': 83.331, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 702.1806, 'train_samples_per_second': 245.92, 'train_steps_per_second': 3.845, 'total_flos': 7231359841755312.0, 'train_loss': 0.4151358795166016, 'epoch': 20.0, 'step': 2700}]

Evaluation, xlm-roberta-base
***** predict metrics *****
  predict_accuracy           =      0.934
  predict_f1                 =     0.0254
  predict_loss               =     0.2783
  predict_precision          =      0.084
  predict_recall             =      0.015
  predict_runtime            = 0:00:01.93
  predict_samples_per_second =    656.547
  predict_steps_per_second   =     82.068
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_17.json completed. F1: 0.025404157043879907
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_16.json
config.json:   0%|          | 0.00/950 [00:00<?, ?B/s]config.json: 100%|██████████| 950/950 [00:00<00:00, 8.27MB/s]
configuration_norbert.py:   0%|          | 0.00/1.23k [00:00<?, ?B/s]configuration_norbert.py: 100%|██████████| 1.23k/1.23k [00:00<00:00, 11.3MB/s]
tokenizer_config.json:   0%|          | 0.00/51.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 51.0/51.0 [00:00<00:00, 404kB/s]
tokenizer.json:   0%|          | 0.00/1.26M [00:00<?, ?B/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 2.55MB/s]tokenizer.json: 100%|██████████| 1.26M/1.26M [00:00<00:00, 2.54MB/s]
special_tokens_map.json:   0%|          | 0.00/157 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 157/157 [00:00<00:00, 1.71MB/s]
pytorch_model.bin:   0%|          | 0.00/522M [00:00<?, ?B/s]pytorch_model.bin:   2%|▏         | 10.5M/522M [00:00<00:14, 35.9MB/s]pytorch_model.bin:   4%|▍         | 21.0M/522M [00:00<00:09, 50.2MB/s]pytorch_model.bin:   6%|▌         | 31.5M/522M [00:00<00:07, 63.3MB/s]pytorch_model.bin:  10%|█         | 52.4M/522M [00:00<00:05, 85.0MB/s]pytorch_model.bin:  14%|█▍        | 73.4M/522M [00:00<00:04, 96.9MB/s]pytorch_model.bin:  18%|█▊        | 94.4M/522M [00:01<00:04, 104MB/s] pytorch_model.bin:  22%|██▏       | 115M/522M [00:01<00:03, 108MB/s] pytorch_model.bin:  26%|██▌       | 136M/522M [00:01<00:03, 111MB/s]pytorch_model.bin:  30%|███       | 157M/522M [00:01<00:03, 112MB/s]pytorch_model.bin:  34%|███▍      | 178M/522M [00:01<00:03, 114MB/s]pytorch_model.bin:  38%|███▊      | 199M/522M [00:01<00:02, 114MB/s]pytorch_model.bin:  42%|████▏     | 220M/522M [00:02<00:02, 114MB/s]pytorch_model.bin:  46%|████▌     | 241M/522M [00:02<00:02, 115MB/s]pytorch_model.bin:  50%|█████     | 262M/522M [00:02<00:02, 115MB/s]pytorch_model.bin:  54%|█████▍    | 283M/522M [00:02<00:02, 116MB/s]pytorch_model.bin:  58%|█████▊    | 304M/522M [00:02<00:01, 116MB/s]pytorch_model.bin:  62%|██████▏   | 325M/522M [00:03<00:01, 117MB/s]pytorch_model.bin:  66%|██████▋   | 346M/522M [00:03<00:01, 116MB/s]pytorch_model.bin:  70%|███████   | 367M/522M [00:03<00:01, 117MB/s]pytorch_model.bin:  74%|███████▍  | 388M/522M [00:03<00:01, 117MB/s]pytorch_model.bin:  78%|███████▊  | 409M/522M [00:03<00:00, 117MB/s]pytorch_model.bin:  82%|████████▏ | 430M/522M [00:03<00:00, 117MB/s]pytorch_model.bin:  86%|████████▋ | 451M/522M [00:04<00:00, 117MB/s]pytorch_model.bin:  90%|█████████ | 472M/522M [00:04<00:00, 117MB/s]pytorch_model.bin:  94%|█████████▍| 493M/522M [00:04<00:00, 117MB/s]pytorch_model.bin:  99%|█████████▊| 514M/522M [00:04<00:00, 117MB/s]pytorch_model.bin: 100%|██████████| 522M/522M [00:04<00:00, 110MB/s]
01150927_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5657.31 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6556.13 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6601.80 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6743.13 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6801.31 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6953.80 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7145.36 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7223.72 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6578.74 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7279.31 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6933.69 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6966.09 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6801.46 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0174, 'eval_samples_per_second': 507.397, 'eval_steps_per_second': 63.632, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.347, 'eval_steps_per_second': 64.629, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9853, 'eval_samples_per_second': 512.842, 'eval_steps_per_second': 64.315, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9781, 'eval_samples_per_second': 514.093, 'eval_steps_per_second': 64.471, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.118, 'eval_steps_per_second': 65.102, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.969, 'eval_samples_per_second': 515.656, 'eval_steps_per_second': 64.668, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9713, 'eval_samples_per_second': 515.255, 'eval_steps_per_second': 64.617, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9725, 'eval_samples_per_second': 515.062, 'eval_steps_per_second': 64.593, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0023, 'eval_samples_per_second': 509.949, 'eval_steps_per_second': 63.952, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0542, 'eval_samples_per_second': 501.281, 'eval_steps_per_second': 62.865, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0737, 'eval_samples_per_second': 498.101, 'eval_steps_per_second': 62.466, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9567, 'eval_samples_per_second': 517.815, 'eval_steps_per_second': 64.938, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.104, 'eval_steps_per_second': 64.849, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9563, 'eval_samples_per_second': 517.885, 'eval_steps_per_second': 64.947, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9686, 'eval_samples_per_second': 515.739, 'eval_steps_per_second': 64.678, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2081, 'eval_samples_per_second': 477.223, 'eval_steps_per_second': 59.848, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9516, 'eval_samples_per_second': 518.708, 'eval_steps_per_second': 65.05, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.129, 'eval_steps_per_second': 64.978, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9526, 'eval_samples_per_second': 518.528, 'eval_steps_per_second': 65.028, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9508, 'eval_samples_per_second': 518.84, 'eval_steps_per_second': 65.067, 'epoch': 20.0}
{'train_runtime': 701.5557, 'train_samples_per_second': 246.139, 'train_steps_per_second': 3.849, 'train_loss': 0.0, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =        0.0
  train_runtime            = 0:11:41.55
  train_samples            =       8634
  train_samples_per_second =    246.139
  train_steps_per_second   =      3.849
[{'loss': 0.0, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0174, 'eval_samples_per_second': 507.397, 'eval_steps_per_second': 63.632, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.347, 'eval_steps_per_second': 64.629, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9853, 'eval_samples_per_second': 512.842, 'eval_steps_per_second': 64.315, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9781, 'eval_samples_per_second': 514.093, 'eval_steps_per_second': 64.471, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.118, 'eval_steps_per_second': 65.102, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.969, 'eval_samples_per_second': 515.656, 'eval_steps_per_second': 64.668, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9713, 'eval_samples_per_second': 515.255, 'eval_steps_per_second': 64.617, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9725, 'eval_samples_per_second': 515.062, 'eval_steps_per_second': 64.593, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0023, 'eval_samples_per_second': 509.949, 'eval_steps_per_second': 63.952, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0542, 'eval_samples_per_second': 501.281, 'eval_steps_per_second': 62.865, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0737, 'eval_samples_per_second': 498.101, 'eval_steps_per_second': 62.466, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9567, 'eval_samples_per_second': 517.815, 'eval_steps_per_second': 64.938, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.104, 'eval_steps_per_second': 64.849, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9563, 'eval_samples_per_second': 517.885, 'eval_steps_per_second': 64.947, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9686, 'eval_samples_per_second': 515.739, 'eval_steps_per_second': 64.678, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2081, 'eval_samples_per_second': 477.223, 'eval_steps_per_second': 59.848, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9516, 'eval_samples_per_second': 518.708, 'eval_steps_per_second': 65.05, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.129, 'eval_steps_per_second': 64.978, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9526, 'eval_samples_per_second': 518.528, 'eval_steps_per_second': 65.028, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9508, 'eval_samples_per_second': 518.84, 'eval_steps_per_second': 65.067, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 701.5557, 'train_samples_per_second': 246.139, 'train_steps_per_second': 3.849, 'total_flos': 6363953357311872.0, 'train_loss': 0.0, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    509.263
  predict_steps_per_second   =     63.658
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_16.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_02.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_02.json
01150927_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6862.70 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7065.88 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6891.79 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6916.73 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6926.76 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7031.78 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7210.43 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7263.15 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6730.51 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7316.67 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6973.24 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6961.67 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6816.00 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01150927_tsa-intensity_NorBERT_3_base/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.0331, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.30781984329223633, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3396, 'eval_samples_per_second': 458.432, 'eval_steps_per_second': 57.491, 'epoch': 1.0}
{'loss': 0.297, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.26984643936157227, 'eval_precision': 0.09683426443202979, 'eval_recall': 0.059293044469783354, 'eval_f1': 0.07355021216407355, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.9944, 'eval_samples_per_second': 511.283, 'eval_steps_per_second': 64.119, 'epoch': 2.0}
{'loss': 0.2335, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.2400740385055542, 'eval_precision': 0.16875, 'eval_recall': 0.09236031927023945, 'eval_f1': 0.1193809874723655, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.9984, 'eval_samples_per_second': 510.606, 'eval_steps_per_second': 64.034, 'epoch': 3.0}
{'loss': 0.1689, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.25033554434776306, 'eval_precision': 0.20675105485232068, 'eval_recall': 0.1676168757126568, 'eval_f1': 0.18513853904282118, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.995, 'eval_samples_per_second': 511.183, 'eval_steps_per_second': 64.107, 'epoch': 4.0}
{'loss': 0.1284, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.2664872109889984, 'eval_precision': 0.22807017543859648, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.23943661971830985, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.783, 'eval_steps_per_second': 64.433, 'epoch': 5.0}
{'loss': 0.099, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.28038573265075684, 'eval_precision': 0.246900826446281, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2590785907859079, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.9866, 'eval_samples_per_second': 512.619, 'eval_steps_per_second': 64.287, 'epoch': 6.0}
{'loss': 0.0783, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.29699498414993286, 'eval_precision': 0.28314606741573034, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2852292020373514, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.9846, 'eval_samples_per_second': 512.963, 'eval_steps_per_second': 64.33, 'epoch': 7.0}
{'loss': 0.0596, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.3125498294830322, 'eval_precision': 0.2714429868819374, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2880085653104925, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.9888, 'eval_samples_per_second': 512.24, 'eval_steps_per_second': 64.239, 'epoch': 8.0}
{'loss': 0.0473, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.33544760942459106, 'eval_precision': 0.27174975562072334, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2926315789473684, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 3.0038, 'eval_samples_per_second': 509.693, 'eval_steps_per_second': 63.92, 'epoch': 9.0}
{'loss': 0.0388, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.3524456024169922, 'eval_precision': 0.2669404517453799, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2809292274446245, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 3.0719, 'eval_samples_per_second': 498.395, 'eval_steps_per_second': 62.503, 'epoch': 10.0}
{'loss': 0.0304, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.37363749742507935, 'eval_precision': 0.25793650793650796, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27586206896551724, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.121, 'eval_steps_per_second': 64.224, 'epoch': 11.0}
{'loss': 0.024, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.38697317242622375, 'eval_precision': 0.2769396551724138, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.28476454293628806, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.9908, 'eval_samples_per_second': 511.896, 'eval_steps_per_second': 64.196, 'epoch': 12.0}
{'loss': 0.02, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.3898032009601593, 'eval_precision': 0.2650356778797146, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27987082884822395, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.331, 'eval_steps_per_second': 63.874, 'epoch': 13.0}
{'loss': 0.0179, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.39294862747192383, 'eval_precision': 0.2881944444444444, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.286042504307869, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9879, 'eval_samples_per_second': 512.402, 'eval_steps_per_second': 64.259, 'epoch': 14.0}
{'loss': 0.0146, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.40503281354904175, 'eval_precision': 0.27771797631862216, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.134, 'eval_steps_per_second': 64.226, 'epoch': 15.0}
{'loss': 0.0141, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.4138653874397278, 'eval_precision': 0.2686868686868687, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28494911622924485, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.9676, 'eval_samples_per_second': 515.911, 'eval_steps_per_second': 64.699, 'epoch': 16.0}
{'loss': 0.0124, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.41438764333724976, 'eval_precision': 0.27867095391211144, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.287292817679558, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.939, 'eval_steps_per_second': 64.578, 'epoch': 17.0}
{'loss': 0.0112, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.41733479499816895, 'eval_precision': 0.27824267782426776, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.29023458810692854, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.204, 'eval_steps_per_second': 64.235, 'epoch': 18.0}
{'loss': 0.0107, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.41874292492866516, 'eval_precision': 0.28205128205128205, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2912300055157198, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.9766, 'eval_samples_per_second': 514.337, 'eval_steps_per_second': 64.502, 'epoch': 19.0}
{'loss': 0.0104, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.41837650537490845, 'eval_precision': 0.2893013100436681, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2955939765755716, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.6, 'eval_steps_per_second': 64.159, 'epoch': 20.0}
{'train_runtime': 707.1197, 'train_samples_per_second': 244.202, 'train_steps_per_second': 3.818, 'train_loss': 0.11747972850446348, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.1175
  train_runtime            = 0:11:47.11
  train_samples            =       8634
  train_samples_per_second =    244.202
  train_steps_per_second   =      3.818
[{'loss': 1.0331, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.30781984329223633, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3396, 'eval_samples_per_second': 458.432, 'eval_steps_per_second': 57.491, 'epoch': 1.0, 'step': 135}, {'loss': 0.297, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.26984643936157227, 'eval_precision': 0.09683426443202979, 'eval_recall': 0.059293044469783354, 'eval_f1': 0.07355021216407355, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.9944, 'eval_samples_per_second': 511.283, 'eval_steps_per_second': 64.119, 'epoch': 2.0, 'step': 270}, {'loss': 0.2335, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2400740385055542, 'eval_precision': 0.16875, 'eval_recall': 0.09236031927023945, 'eval_f1': 0.1193809874723655, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.9984, 'eval_samples_per_second': 510.606, 'eval_steps_per_second': 64.034, 'epoch': 3.0, 'step': 405}, {'loss': 0.1689, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.25033554434776306, 'eval_precision': 0.20675105485232068, 'eval_recall': 0.1676168757126568, 'eval_f1': 0.18513853904282118, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.995, 'eval_samples_per_second': 511.183, 'eval_steps_per_second': 64.107, 'epoch': 4.0, 'step': 540}, {'loss': 0.1284, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2664872109889984, 'eval_precision': 0.22807017543859648, 'eval_recall': 0.2519954389965792, 'eval_f1': 0.23943661971830985, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.783, 'eval_steps_per_second': 64.433, 'epoch': 5.0, 'step': 675}, {'loss': 0.099, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.28038573265075684, 'eval_precision': 0.246900826446281, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2590785907859079, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.9866, 'eval_samples_per_second': 512.619, 'eval_steps_per_second': 64.287, 'epoch': 6.0, 'step': 810}, {'loss': 0.0783, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.29699498414993286, 'eval_precision': 0.28314606741573034, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2852292020373514, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.9846, 'eval_samples_per_second': 512.963, 'eval_steps_per_second': 64.33, 'epoch': 7.0, 'step': 945}, {'loss': 0.0596, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3125498294830322, 'eval_precision': 0.2714429868819374, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2880085653104925, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.9888, 'eval_samples_per_second': 512.24, 'eval_steps_per_second': 64.239, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0473, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.33544760942459106, 'eval_precision': 0.27174975562072334, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2926315789473684, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 3.0038, 'eval_samples_per_second': 509.693, 'eval_steps_per_second': 63.92, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0388, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3524456024169922, 'eval_precision': 0.2669404517453799, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2809292274446245, 'eval_accuracy': 0.9314444530224658, 'eval_runtime': 3.0719, 'eval_samples_per_second': 498.395, 'eval_steps_per_second': 62.503, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0304, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.37363749742507935, 'eval_precision': 0.25793650793650796, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27586206896551724, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.121, 'eval_steps_per_second': 64.224, 'epoch': 11.0, 'step': 1485}, {'loss': 0.024, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.38697317242622375, 'eval_precision': 0.2769396551724138, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.28476454293628806, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.9908, 'eval_samples_per_second': 511.896, 'eval_steps_per_second': 64.196, 'epoch': 12.0, 'step': 1620}, {'loss': 0.02, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3898032009601593, 'eval_precision': 0.2650356778797146, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.27987082884822395, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 3.0059, 'eval_samples_per_second': 509.331, 'eval_steps_per_second': 63.874, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0179, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.39294862747192383, 'eval_precision': 0.2881944444444444, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.286042504307869, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9879, 'eval_samples_per_second': 512.402, 'eval_steps_per_second': 64.259, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0146, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.40503281354904175, 'eval_precision': 0.27771797631862216, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2857142857142857, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.134, 'eval_steps_per_second': 64.226, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0141, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4138653874397278, 'eval_precision': 0.2686868686868687, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28494911622924485, 'eval_accuracy': 0.9324866826217865, 'eval_runtime': 2.9676, 'eval_samples_per_second': 515.911, 'eval_steps_per_second': 64.699, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0124, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.41438764333724976, 'eval_precision': 0.27867095391211144, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.287292817679558, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.939, 'eval_steps_per_second': 64.578, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0112, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.41733479499816895, 'eval_precision': 0.27824267782426776, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.29023458810692854, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.204, 'eval_steps_per_second': 64.235, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0107, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.41874292492866516, 'eval_precision': 0.28205128205128205, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2912300055157198, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.9766, 'eval_samples_per_second': 514.337, 'eval_steps_per_second': 64.502, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0104, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.41837650537490845, 'eval_precision': 0.2893013100436681, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2955939765755716, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.6, 'eval_steps_per_second': 64.159, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 707.1197, 'train_samples_per_second': 244.202, 'train_steps_per_second': 3.818, 'total_flos': 6363953357311872.0, 'train_loss': 0.11747972850446348, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9354
  predict_f1                 =      0.095
  predict_loss               =     0.2545
  predict_precision          =     0.1391
  predict_recall             =     0.0721
  predict_runtime            = 0:00:02.48
  predict_samples_per_second =    511.806
  predict_steps_per_second   =     63.976
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_02.json completed. F1: 0.0949820788530466
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_05.json
config.json:   0%|          | 0.00/518 [00:00<?, ?B/s]config.json: 100%|██████████| 518/518 [00:00<00:00, 4.93MB/s]
tokenizer_config.json:   0%|          | 0.00/389 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 389/389 [00:00<00:00, 4.53MB/s]
vocab.txt:   0%|          | 0.00/395k [00:00<?, ?B/s]vocab.txt: 100%|██████████| 395k/395k [00:00<00:00, 71.9MB/s]
model.safetensors:   0%|          | 0.00/1.42G [00:00<?, ?B/s]model.safetensors:   1%|          | 10.5M/1.42G [00:00<01:51, 12.7MB/s]model.safetensors:   1%|▏         | 21.0M/1.42G [00:01<01:02, 22.6MB/s]model.safetensors:   2%|▏         | 31.5M/1.42G [00:01<00:49, 27.9MB/s]model.safetensors:   3%|▎         | 41.9M/1.42G [00:01<00:43, 31.5MB/s]model.safetensors:   4%|▎         | 52.4M/1.42G [00:01<00:37, 36.5MB/s]model.safetensors:   4%|▍         | 62.9M/1.42G [00:02<00:36, 37.0MB/s]model.safetensors:   5%|▌         | 73.4M/1.42G [00:02<00:36, 37.4MB/s]model.safetensors:   6%|▌         | 83.9M/1.42G [00:02<00:32, 40.7MB/s]model.safetensors:   7%|▋         | 94.4M/1.42G [00:02<00:33, 40.1MB/s]model.safetensors:   7%|▋         | 105M/1.42G [00:03<00:34, 38.6MB/s] model.safetensors:   8%|▊         | 115M/1.42G [00:03<00:34, 38.5MB/s]model.safetensors:   9%|▉         | 126M/1.42G [00:03<00:33, 38.5MB/s]model.safetensors:  10%|▉         | 136M/1.42G [00:03<00:31, 41.5MB/s]model.safetensors:  10%|█         | 147M/1.42G [00:04<00:31, 40.7MB/s]model.safetensors:  11%|█         | 157M/1.42G [00:04<00:34, 36.4MB/s]model.safetensors:  12%|█▏        | 168M/1.42G [00:04<00:34, 36.3MB/s]model.safetensors:  13%|█▎        | 178M/1.42G [00:05<00:34, 36.7MB/s]model.safetensors:  13%|█▎        | 189M/1.42G [00:05<00:36, 34.3MB/s]model.safetensors:  14%|█▍        | 199M/1.42G [00:05<00:40, 30.1MB/s]model.safetensors:  15%|█▍        | 210M/1.42G [00:06<00:43, 27.8MB/s]model.safetensors:  15%|█▌        | 220M/1.42G [00:06<00:43, 27.6MB/s]model.safetensors:  16%|█▌        | 231M/1.42G [00:07<00:45, 26.0MB/s]model.safetensors:  17%|█▋        | 241M/1.42G [00:07<00:46, 25.7MB/s]model.safetensors:  18%|█▊        | 252M/1.42G [00:07<00:44, 26.1MB/s]model.safetensors:  18%|█▊        | 262M/1.42G [00:08<00:46, 25.0MB/s]model.safetensors:  19%|█▉        | 273M/1.42G [00:08<00:49, 23.1MB/s]model.safetensors:  20%|█▉        | 283M/1.42G [00:09<00:52, 21.8MB/s]model.safetensors:  21%|██        | 294M/1.42G [00:10<00:53, 21.1MB/s]model.safetensors:  21%|██▏       | 304M/1.42G [00:10<00:52, 21.5MB/s]model.safetensors:  22%|██▏       | 315M/1.42G [00:11<00:53, 20.9MB/s]model.safetensors:  23%|██▎       | 325M/1.42G [00:11<00:51, 21.4MB/s]model.safetensors:  24%|██▎       | 336M/1.42G [00:12<00:52, 20.9MB/s]model.safetensors:  24%|██▍       | 346M/1.42G [00:12<00:50, 21.5MB/s]model.safetensors:  25%|██▌       | 357M/1.42G [00:12<00:48, 21.9MB/s]model.safetensors:  26%|██▌       | 367M/1.42G [00:13<00:50, 21.1MB/s]model.safetensors:  26%|██▋       | 377M/1.42G [00:14<00:53, 19.5MB/s]model.safetensors:  27%|██▋       | 388M/1.42G [00:14<00:56, 18.5MB/s]model.safetensors:  28%|██▊       | 398M/1.42G [00:15<00:57, 17.9MB/s]model.safetensors:  29%|██▊       | 409M/1.42G [00:15<00:57, 17.5MB/s]model.safetensors:  29%|██▉       | 419M/1.42G [00:16<00:55, 18.0MB/s]model.safetensors:  30%|███       | 430M/1.42G [00:17<00:56, 17.6MB/s]model.safetensors:  31%|███       | 440M/1.42G [00:17<00:54, 18.0MB/s]model.safetensors:  32%|███▏      | 451M/1.42G [00:18<00:53, 18.4MB/s]model.safetensors:  32%|███▏      | 461M/1.42G [00:18<00:52, 18.3MB/s]model.safetensors:  33%|███▎      | 472M/1.42G [00:19<00:52, 18.2MB/s]model.safetensors:  34%|███▍      | 482M/1.42G [00:19<00:51, 18.5MB/s]model.safetensors:  35%|███▍      | 493M/1.42G [00:20<00:49, 18.7MB/s]model.safetensors:  35%|███▌      | 503M/1.42G [00:21<00:48, 18.8MB/s]model.safetensors:  36%|███▌      | 514M/1.42G [00:21<00:49, 18.4MB/s]model.safetensors:  37%|███▋      | 524M/1.42G [00:22<00:48, 18.5MB/s]model.safetensors:  38%|███▊      | 535M/1.42G [00:22<00:47, 18.7MB/s]model.safetensors:  38%|███▊      | 545M/1.42G [00:23<00:46, 18.9MB/s]model.safetensors:  39%|███▉      | 556M/1.42G [00:23<00:45, 19.0MB/s]model.safetensors:  40%|███▉      | 566M/1.42G [00:24<00:45, 18.7MB/s]model.safetensors:  40%|████      | 577M/1.42G [00:25<00:45, 18.5MB/s]model.safetensors:  41%|████      | 587M/1.42G [00:25<00:44, 18.7MB/s]model.safetensors:  42%|████▏     | 598M/1.42G [00:26<00:43, 18.9MB/s]model.safetensors:  43%|████▎     | 608M/1.42G [00:26<00:42, 19.0MB/s]model.safetensors:  43%|████▎     | 619M/1.42G [00:27<00:42, 19.1MB/s]model.safetensors:  44%|████▍     | 629M/1.42G [00:27<00:40, 19.9MB/s]model.safetensors:  45%|████▍     | 640M/1.42G [00:28<00:39, 19.9MB/s]model.safetensors:  46%|████▌     | 650M/1.42G [00:28<00:39, 19.9MB/s]model.safetensors:  46%|████▋     | 661M/1.42G [00:29<00:37, 20.6MB/s]model.safetensors:  47%|████▋     | 671M/1.42G [00:29<00:36, 20.9MB/s]model.safetensors:  48%|████▊     | 682M/1.42G [00:30<00:35, 21.1MB/s]model.safetensors:  49%|████▊     | 692M/1.42G [00:30<00:33, 21.7MB/s]model.safetensors:  49%|████▉     | 703M/1.42G [00:31<00:32, 22.5MB/s]model.safetensors:  50%|█████     | 713M/1.42G [00:31<00:30, 23.4MB/s]model.safetensors:  51%|█████     | 724M/1.42G [00:31<00:29, 23.5MB/s]model.safetensors:  52%|█████▏    | 734M/1.42G [00:32<00:27, 24.7MB/s]model.safetensors:  52%|█████▏    | 744M/1.42G [00:32<00:27, 25.1MB/s]model.safetensors:  53%|█████▎    | 755M/1.42G [00:33<00:26, 25.6MB/s]model.safetensors:  54%|█████▎    | 765M/1.42G [00:33<00:24, 26.4MB/s]model.safetensors:  54%|█████▍    | 776M/1.42G [00:33<00:24, 26.6MB/s]model.safetensors:  55%|█████▌    | 786M/1.42G [00:34<00:26, 24.5MB/s]model.safetensors:  56%|█████▌    | 797M/1.42G [00:34<00:26, 23.7MB/s]model.safetensors:  57%|█████▋    | 807M/1.42G [00:35<00:25, 24.1MB/s]model.safetensors:  57%|█████▋    | 818M/1.42G [00:35<00:24, 24.6MB/s]model.safetensors:  58%|█████▊    | 828M/1.42G [00:36<00:24, 24.3MB/s]model.safetensors:  59%|█████▉    | 839M/1.42G [00:36<00:23, 25.3MB/s]model.safetensors:  60%|█████▉    | 849M/1.42G [00:36<00:23, 24.9MB/s]model.safetensors:  60%|██████    | 860M/1.42G [00:37<00:21, 25.8MB/s]model.safetensors:  61%|██████    | 870M/1.42G [00:37<00:20, 26.6MB/s]model.safetensors:  62%|██████▏   | 881M/1.42G [00:38<00:20, 26.5MB/s]model.safetensors:  63%|██████▎   | 891M/1.42G [00:38<00:20, 26.4MB/s]model.safetensors:  63%|██████▎   | 902M/1.42G [00:38<00:19, 27.1MB/s]model.safetensors:  64%|██████▍   | 912M/1.42G [00:39<00:18, 27.4MB/s]model.safetensors:  65%|██████▍   | 923M/1.42G [00:39<00:17, 28.1MB/s]model.safetensors:  65%|██████▌   | 933M/1.42G [00:39<00:17, 28.3MB/s]model.safetensors:  66%|██████▌   | 944M/1.42G [00:40<00:18, 26.5MB/s]model.safetensors:  67%|██████▋   | 954M/1.42G [00:40<00:18, 25.4MB/s]model.safetensors:  68%|██████▊   | 965M/1.42G [00:41<00:18, 24.6MB/s]model.safetensors:  68%|██████▊   | 975M/1.42G [00:41<00:18, 24.1MB/s]model.safetensors:  69%|██████▉   | 986M/1.42G [00:42<00:18, 23.6MB/s]model.safetensors:  70%|██████▉   | 996M/1.42G [00:42<00:19, 22.5MB/s]model.safetensors:  71%|███████   | 1.01G/1.42G [00:43<00:17, 23.6MB/s]model.safetensors:  71%|███████▏  | 1.02G/1.42G [00:43<00:17, 22.8MB/s]model.safetensors:  72%|███████▏  | 1.03G/1.42G [00:43<00:17, 23.0MB/s]model.safetensors:  73%|███████▎  | 1.04G/1.42G [00:44<00:16, 23.1MB/s]model.safetensors:  74%|███████▎  | 1.05G/1.42G [00:44<00:16, 23.2MB/s]model.safetensors:  74%|███████▍  | 1.06G/1.42G [00:45<00:15, 23.3MB/s]model.safetensors:  75%|███████▌  | 1.07G/1.42G [00:45<00:14, 24.5MB/s]model.safetensors:  76%|███████▌  | 1.08G/1.42G [00:46<00:14, 24.2MB/s]model.safetensors:  77%|███████▋  | 1.09G/1.42G [00:46<00:13, 24.0MB/s]model.safetensors:  77%|███████▋  | 1.10G/1.42G [00:46<00:12, 25.1MB/s]model.safetensors:  78%|███████▊  | 1.11G/1.42G [00:47<00:12, 24.6MB/s]model.safetensors:  79%|███████▊  | 1.12G/1.42G [00:47<00:12, 24.3MB/s]model.safetensors:  79%|███████▉  | 1.13G/1.42G [00:48<00:11, 25.3MB/s]model.safetensors:  80%|████████  | 1.14G/1.42G [00:48<00:11, 24.8MB/s]model.safetensors:  81%|████████  | 1.15G/1.42G [00:49<00:11, 24.3MB/s]model.safetensors:  82%|████████▏ | 1.16G/1.42G [00:49<00:10, 25.4MB/s]model.safetensors:  82%|████████▏ | 1.17G/1.42G [00:49<00:10, 24.8MB/s]model.safetensors:  83%|████████▎ | 1.18G/1.42G [00:50<00:09, 25.5MB/s]model.safetensors:  84%|████████▍ | 1.20G/1.42G [00:50<00:09, 25.1MB/s]model.safetensors:  85%|████████▍ | 1.21G/1.42G [00:51<00:08, 24.6MB/s]model.safetensors:  85%|████████▌ | 1.22G/1.42G [00:51<00:08, 25.4MB/s]model.safetensors:  86%|████████▌ | 1.23G/1.42G [00:52<00:07, 25.0MB/s]model.safetensors:  87%|████████▋ | 1.24G/1.42G [00:52<00:07, 24.5MB/s]model.safetensors:  88%|████████▊ | 1.25G/1.42G [00:52<00:06, 25.3MB/s]model.safetensors:  88%|████████▊ | 1.26G/1.42G [00:53<00:07, 23.6MB/s]model.safetensors:  89%|████████▉ | 1.27G/1.42G [00:53<00:07, 22.0MB/s]model.safetensors:  90%|████████▉ | 1.28G/1.42G [00:54<00:06, 21.2MB/s]model.safetensors:  91%|█████████ | 1.29G/1.42G [00:54<00:06, 21.4MB/s]model.safetensors:  91%|█████████▏| 1.30G/1.42G [00:55<00:05, 21.0MB/s]model.safetensors:  92%|█████████▏| 1.31G/1.42G [00:55<00:05, 21.5MB/s]model.safetensors:  93%|█████████▎| 1.32G/1.42G [00:56<00:04, 21.8MB/s]model.safetensors:  93%|█████████▎| 1.33G/1.42G [00:56<00:04, 22.2MB/s]model.safetensors:  94%|█████████▍| 1.34G/1.42G [00:57<00:03, 22.5MB/s]model.safetensors:  95%|█████████▍| 1.35G/1.42G [00:57<00:03, 22.7MB/s]model.safetensors:  96%|█████████▌| 1.36G/1.42G [00:58<00:02, 23.1MB/s]model.safetensors:  96%|█████████▋| 1.37G/1.42G [00:58<00:02, 23.2MB/s]model.safetensors:  97%|█████████▋| 1.38G/1.42G [00:59<00:01, 23.3MB/s]model.safetensors:  98%|█████████▊| 1.39G/1.42G [00:59<00:01, 24.3MB/s]model.safetensors:  99%|█████████▊| 1.41G/1.42G [00:59<00:00, 24.3MB/s]model.safetensors:  99%|█████████▉| 1.42G/1.42G [01:00<00:00, 24.1MB/s]model.safetensors: 100%|██████████| 1.42G/1.42G [01:00<00:00, 24.4MB/s]model.safetensors: 100%|██████████| 1.42G/1.42G [01:00<00:00, 23.5MB/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01150927_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6158.64 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6982.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6896.17 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7016.39 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7124.61 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7244.76 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6261.55 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6646.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6801.05 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7469.12 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7111.05 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7218.96 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7048.51 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.304, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.20320098102092743, 'eval_precision': 0.275, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28158041179744014, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6899, 'eval_samples_per_second': 326.444, 'eval_steps_per_second': 40.939, 'epoch': 1.0}
{'loss': 0.186, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.19518257677555084, 'eval_precision': 0.29931972789115646, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30017055144968735, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.956, 'eval_steps_per_second': 41.128, 'epoch': 2.0}
{'loss': 0.1224, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.2102593332529068, 'eval_precision': 0.2973568281938326, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.3025210084033613, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.36, 'eval_steps_per_second': 41.179, 'epoch': 3.0}
{'loss': 0.0883, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.2626543939113617, 'eval_precision': 0.30327868852459017, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3194819212088505, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.666, 'eval_samples_per_second': 328.12, 'eval_steps_per_second': 41.149, 'epoch': 4.0}
{'loss': 0.0559, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.27281221747398376, 'eval_precision': 0.29246231155778896, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3108974358974359, 'eval_accuracy': 0.9413649347641473, 'eval_runtime': 4.6723, 'eval_samples_per_second': 327.677, 'eval_steps_per_second': 41.093, 'epoch': 5.0}
{'loss': 0.0366, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.3141452670097351, 'eval_precision': 0.2608695652173913, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3058046248230297, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 4.6705, 'eval_samples_per_second': 327.801, 'eval_steps_per_second': 41.109, 'epoch': 6.0}
{'loss': 0.0233, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.32965096831321716, 'eval_precision': 0.28294930875576035, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.31294597349643216, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6762, 'eval_samples_per_second': 327.401, 'eval_steps_per_second': 41.059, 'epoch': 7.0}
{'loss': 0.0165, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.34208977222442627, 'eval_precision': 0.32479627473806755, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32142857142857145, 'eval_accuracy': 0.9433335906739752, 'eval_runtime': 4.6671, 'eval_samples_per_second': 328.04, 'eval_steps_per_second': 41.139, 'epoch': 8.0}
{'loss': 0.0095, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.33797091245651245, 'eval_precision': 0.31229597388465724, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3195991091314031, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 4.6737, 'eval_samples_per_second': 327.581, 'eval_steps_per_second': 41.081, 'epoch': 9.0}
{'loss': 0.0061, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.37343043088912964, 'eval_precision': 0.3064182194616977, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.32121540965816603, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 4.6705, 'eval_samples_per_second': 327.8, 'eval_steps_per_second': 41.109, 'epoch': 10.0}
{'loss': 0.0044, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.38733842968940735, 'eval_precision': 0.31803628601921025, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.328555678059537, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.6686, 'eval_samples_per_second': 327.934, 'eval_steps_per_second': 41.126, 'epoch': 11.0}
{'loss': 0.0034, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.40283939242362976, 'eval_precision': 0.30009775171065495, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.32315789473684214, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6726, 'eval_samples_per_second': 327.654, 'eval_steps_per_second': 41.091, 'epoch': 12.0}
{'loss': 0.002, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.4160305857658386, 'eval_precision': 0.32127192982456143, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.32755729457797655, 'eval_accuracy': 0.9431405851926195, 'eval_runtime': 4.6678, 'eval_samples_per_second': 327.994, 'eval_steps_per_second': 41.133, 'epoch': 13.0}
{'loss': 0.0015, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.4213133156299591, 'eval_precision': 0.3340471092077088, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.34456101601325234, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 4.6634, 'eval_samples_per_second': 328.302, 'eval_steps_per_second': 41.172, 'epoch': 14.0}
{'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.43785572052001953, 'eval_precision': 0.3110435663627153, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3293991416309013, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6646, 'eval_samples_per_second': 328.216, 'eval_steps_per_second': 41.161, 'epoch': 15.0}
{'loss': 0.001, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.43509766459465027, 'eval_precision': 0.3191268191268191, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33387710712343666, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6702, 'eval_samples_per_second': 327.826, 'eval_steps_per_second': 41.112, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.4447857737541199, 'eval_precision': 0.32407407407407407, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.34072471606273663, 'eval_accuracy': 0.941828147919401, 'eval_runtime': 4.6748, 'eval_samples_per_second': 327.504, 'eval_steps_per_second': 41.072, 'epoch': 17.0}
{'loss': 0.0005, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.4562331736087799, 'eval_precision': 0.33405405405405403, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34295227524972255, 'eval_accuracy': 0.9426387709410947, 'eval_runtime': 4.6761, 'eval_samples_per_second': 327.407, 'eval_steps_per_second': 41.06, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.4605488181114197, 'eval_precision': 0.33890746934225197, 'eval_recall': 0.346636259977195, 'eval_f1': 0.34272829763246904, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 4.6801, 'eval_samples_per_second': 327.129, 'eval_steps_per_second': 41.025, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.46087634563446045, 'eval_precision': 0.33297062023939067, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.34075723830734966, 'eval_accuracy': 0.9424071643634679, 'eval_runtime': 4.7418, 'eval_samples_per_second': 322.876, 'eval_steps_per_second': 40.491, 'epoch': 20.0}
{'train_runtime': 1748.2924, 'train_samples_per_second': 98.771, 'train_steps_per_second': 1.544, 'train_loss': 0.04321946781128645, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.0432
  train_runtime            = 0:29:08.29
  train_samples            =       8634
  train_samples_per_second =     98.771
  train_steps_per_second   =      1.544
[{'loss': 0.304, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.20320098102092743, 'eval_precision': 0.275, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28158041179744014, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6899, 'eval_samples_per_second': 326.444, 'eval_steps_per_second': 40.939, 'epoch': 1.0, 'step': 135}, {'loss': 0.186, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.19518257677555084, 'eval_precision': 0.29931972789115646, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.30017055144968735, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.956, 'eval_steps_per_second': 41.128, 'epoch': 2.0, 'step': 270}, {'loss': 0.1224, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2102593332529068, 'eval_precision': 0.2973568281938326, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.3025210084033613, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.36, 'eval_steps_per_second': 41.179, 'epoch': 3.0, 'step': 405}, {'loss': 0.0883, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2626543939113617, 'eval_precision': 0.30327868852459017, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3194819212088505, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.666, 'eval_samples_per_second': 328.12, 'eval_steps_per_second': 41.149, 'epoch': 4.0, 'step': 540}, {'loss': 0.0559, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27281221747398376, 'eval_precision': 0.29246231155778896, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3108974358974359, 'eval_accuracy': 0.9413649347641473, 'eval_runtime': 4.6723, 'eval_samples_per_second': 327.677, 'eval_steps_per_second': 41.093, 'epoch': 5.0, 'step': 675}, {'loss': 0.0366, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3141452670097351, 'eval_precision': 0.2608695652173913, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3058046248230297, 'eval_accuracy': 0.9337605187987339, 'eval_runtime': 4.6705, 'eval_samples_per_second': 327.801, 'eval_steps_per_second': 41.109, 'epoch': 6.0, 'step': 810}, {'loss': 0.0233, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.32965096831321716, 'eval_precision': 0.28294930875576035, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.31294597349643216, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6762, 'eval_samples_per_second': 327.401, 'eval_steps_per_second': 41.059, 'epoch': 7.0, 'step': 945}, {'loss': 0.0165, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.34208977222442627, 'eval_precision': 0.32479627473806755, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32142857142857145, 'eval_accuracy': 0.9433335906739752, 'eval_runtime': 4.6671, 'eval_samples_per_second': 328.04, 'eval_steps_per_second': 41.139, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0095, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.33797091245651245, 'eval_precision': 0.31229597388465724, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3195991091314031, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 4.6737, 'eval_samples_per_second': 327.581, 'eval_steps_per_second': 41.081, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0061, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.37343043088912964, 'eval_precision': 0.3064182194616977, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.32121540965816603, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 4.6705, 'eval_samples_per_second': 327.8, 'eval_steps_per_second': 41.109, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0044, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.38733842968940735, 'eval_precision': 0.31803628601921025, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.328555678059537, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.6686, 'eval_samples_per_second': 327.934, 'eval_steps_per_second': 41.126, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0034, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.40283939242362976, 'eval_precision': 0.30009775171065495, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.32315789473684214, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6726, 'eval_samples_per_second': 327.654, 'eval_steps_per_second': 41.091, 'epoch': 12.0, 'step': 1620}, {'loss': 0.002, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4160305857658386, 'eval_precision': 0.32127192982456143, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.32755729457797655, 'eval_accuracy': 0.9431405851926195, 'eval_runtime': 4.6678, 'eval_samples_per_second': 327.994, 'eval_steps_per_second': 41.133, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0015, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4213133156299591, 'eval_precision': 0.3340471092077088, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.34456101601325234, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 4.6634, 'eval_samples_per_second': 328.302, 'eval_steps_per_second': 41.172, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.43785572052001953, 'eval_precision': 0.3110435663627153, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3293991416309013, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6646, 'eval_samples_per_second': 328.216, 'eval_steps_per_second': 41.161, 'epoch': 15.0, 'step': 2025}, {'loss': 0.001, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.43509766459465027, 'eval_precision': 0.3191268191268191, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33387710712343666, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6702, 'eval_samples_per_second': 327.826, 'eval_steps_per_second': 41.112, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0008, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4447857737541199, 'eval_precision': 0.32407407407407407, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.34072471606273663, 'eval_accuracy': 0.941828147919401, 'eval_runtime': 4.6748, 'eval_samples_per_second': 327.504, 'eval_steps_per_second': 41.072, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0005, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4562331736087799, 'eval_precision': 0.33405405405405403, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34295227524972255, 'eval_accuracy': 0.9426387709410947, 'eval_runtime': 4.6761, 'eval_samples_per_second': 327.407, 'eval_steps_per_second': 41.06, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0006, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4605488181114197, 'eval_precision': 0.33890746934225197, 'eval_recall': 0.346636259977195, 'eval_f1': 0.34272829763246904, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 4.6801, 'eval_samples_per_second': 327.129, 'eval_steps_per_second': 41.025, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.46087634563446045, 'eval_precision': 0.33297062023939067, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.34075723830734966, 'eval_accuracy': 0.9424071643634679, 'eval_runtime': 4.7418, 'eval_samples_per_second': 322.876, 'eval_steps_per_second': 40.491, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 1748.2924, 'train_samples_per_second': 98.771, 'train_steps_per_second': 1.544, 'total_flos': 2.164421811922236e+16, 'train_loss': 0.04321946781128645, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9387
  predict_f1                 =     0.2595
  predict_loss               =      0.206
  predict_precision          =     0.2592
  predict_recall             =     0.2599
  predict_runtime            = 0:00:03.92
  predict_samples_per_second =    324.161
  predict_steps_per_second   =      40.52
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_05.json completed. F1: 0.25951086956521735
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_20.json
01150927_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6136.22 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6876.23 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6775.28 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6842.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6930.40 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7047.90 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7237.23 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6330.19 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6685.39 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7295.20 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6926.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6940.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6765.08 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7977, 'eval_samples_per_second': 264.072, 'eval_steps_per_second': 33.117, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7354, 'eval_samples_per_second': 266.938, 'eval_steps_per_second': 33.476, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7513, 'eval_samples_per_second': 266.2, 'eval_steps_per_second': 33.384, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7595, 'eval_samples_per_second': 265.82, 'eval_steps_per_second': 33.336, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.144, 'eval_steps_per_second': 33.377, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7571, 'eval_samples_per_second': 265.931, 'eval_steps_per_second': 33.35, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7559, 'eval_samples_per_second': 265.99, 'eval_steps_per_second': 33.357, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.48, 'eval_steps_per_second': 33.419, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8949, 'eval_samples_per_second': 259.716, 'eval_steps_per_second': 32.57, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7467, 'eval_samples_per_second': 266.412, 'eval_steps_per_second': 33.41, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7458, 'eval_samples_per_second': 266.455, 'eval_steps_per_second': 33.416, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.727, 'eval_samples_per_second': 267.329, 'eval_steps_per_second': 33.525, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7347, 'eval_samples_per_second': 266.971, 'eval_steps_per_second': 33.48, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7694, 'eval_samples_per_second': 265.368, 'eval_steps_per_second': 33.279, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7593, 'eval_samples_per_second': 265.832, 'eval_steps_per_second': 33.337, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.147, 'eval_steps_per_second': 33.377, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8081, 'eval_samples_per_second': 263.596, 'eval_steps_per_second': 33.057, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7542, 'eval_samples_per_second': 266.065, 'eval_steps_per_second': 33.367, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7572, 'eval_samples_per_second': 265.929, 'eval_steps_per_second': 33.35, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7671, 'eval_samples_per_second': 265.471, 'eval_steps_per_second': 33.292, 'epoch': 20.0}
{'train_runtime': 2023.0621, 'train_samples_per_second': 85.356, 'train_steps_per_second': 1.335, 'train_loss': 0.0, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =        0.0
  train_runtime            = 0:33:43.06
  train_samples            =       8634
  train_samples_per_second =     85.356
  train_steps_per_second   =      1.335
[{'loss': 0.0, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7977, 'eval_samples_per_second': 264.072, 'eval_steps_per_second': 33.117, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7354, 'eval_samples_per_second': 266.938, 'eval_steps_per_second': 33.476, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7513, 'eval_samples_per_second': 266.2, 'eval_steps_per_second': 33.384, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7595, 'eval_samples_per_second': 265.82, 'eval_steps_per_second': 33.336, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.144, 'eval_steps_per_second': 33.377, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7571, 'eval_samples_per_second': 265.931, 'eval_steps_per_second': 33.35, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7559, 'eval_samples_per_second': 265.99, 'eval_steps_per_second': 33.357, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.48, 'eval_steps_per_second': 33.419, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8949, 'eval_samples_per_second': 259.716, 'eval_steps_per_second': 32.57, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7467, 'eval_samples_per_second': 266.412, 'eval_steps_per_second': 33.41, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7458, 'eval_samples_per_second': 266.455, 'eval_steps_per_second': 33.416, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.727, 'eval_samples_per_second': 267.329, 'eval_steps_per_second': 33.525, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7347, 'eval_samples_per_second': 266.971, 'eval_steps_per_second': 33.48, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7694, 'eval_samples_per_second': 265.368, 'eval_steps_per_second': 33.279, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7593, 'eval_samples_per_second': 265.832, 'eval_steps_per_second': 33.337, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.147, 'eval_steps_per_second': 33.377, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8081, 'eval_samples_per_second': 263.596, 'eval_steps_per_second': 33.057, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7542, 'eval_samples_per_second': 266.065, 'eval_steps_per_second': 33.367, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7572, 'eval_samples_per_second': 265.929, 'eval_steps_per_second': 33.35, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7671, 'eval_samples_per_second': 265.471, 'eval_steps_per_second': 33.292, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 2023.0621, 'train_samples_per_second': 85.356, 'train_steps_per_second': 1.335, 'total_flos': 2.253163885266931e+16, 'train_loss': 0.0, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.83
  predict_samples_per_second =    262.944
  predict_steps_per_second   =     32.868
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_20.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_18.json
01150927_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6737.24 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7116.41 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6900.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6913.85 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6964.49 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7069.00 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6226.77 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6572.62 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6729.66 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7221.88 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6857.12 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6893.10 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6726.34 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.49, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': 0.4311361610889435, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.398, 'eval_samples_per_second': 638.443, 'eval_steps_per_second': 80.066, 'epoch': 1.0}
{'loss': 0.4024, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': 0.3584248423576355, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.176, 'eval_steps_per_second': 81.412, 'epoch': 2.0}
{'loss': 0.3545, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': 0.3212507963180542, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3605, 'eval_samples_per_second': 648.591, 'eval_steps_per_second': 81.339, 'epoch': 3.0}
{'loss': 0.3216, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': 0.29967519640922546, 'eval_precision': 0.08108108108108109, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0065645514223194755, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3603, 'eval_samples_per_second': 648.648, 'eval_steps_per_second': 81.346, 'epoch': 4.0}
{'loss': 0.3055, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': 0.28859302401542664, 'eval_precision': 0.11594202898550725, 'eval_recall': 0.009122006841505131, 'eval_f1': 0.016913319238900635, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.874, 'eval_steps_per_second': 81.374, 'epoch': 5.0}
{'loss': 0.297, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': 0.28216952085494995, 'eval_precision': 0.14965986394557823, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.04296875, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3729, 'eval_samples_per_second': 645.212, 'eval_steps_per_second': 80.915, 'epoch': 6.0}
{'loss': 0.291, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': 0.27654507756233215, 'eval_precision': 0.16891891891891891, 'eval_recall': 0.028506271379703536, 'eval_f1': 0.048780487804878044, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.057, 'eval_steps_per_second': 81.146, 'epoch': 7.0}
{'loss': 0.2834, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': 0.2737814784049988, 'eval_precision': 0.17842323651452283, 'eval_recall': 0.04903078677309008, 'eval_f1': 0.07692307692307691, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.466, 'eval_steps_per_second': 81.448, 'epoch': 8.0}
{'loss': 0.2791, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': 0.26979491114616394, 'eval_precision': 0.16532258064516128, 'eval_recall': 0.046750285062713795, 'eval_f1': 0.07288888888888888, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.673, 'eval_steps_per_second': 81.224, 'epoch': 9.0}
{'loss': 0.2752, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': 0.2665148973464966, 'eval_precision': 0.17372881355932204, 'eval_recall': 0.046750285062713795, 'eval_f1': 0.07367475292003592, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.179, 'eval_steps_per_second': 81.162, 'epoch': 10.0}
{'loss': 0.2704, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': 0.2641507089138031, 'eval_precision': 0.19767441860465115, 'eval_recall': 0.05815279361459521, 'eval_f1': 0.08986784140969163, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.942, 'eval_steps_per_second': 81.383, 'epoch': 11.0}
{'loss': 0.2682, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': 0.2620823085308075, 'eval_precision': 0.17757009345794392, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.09515859766277127, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.529, 'eval_steps_per_second': 81.331, 'epoch': 12.0}
{'loss': 0.2658, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': 0.26103445887565613, 'eval_precision': 0.17333333333333334, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.10383386581469647, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.3556, 'eval_samples_per_second': 649.938, 'eval_steps_per_second': 81.508, 'epoch': 13.0}
{'loss': 0.2636, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': 0.2593231797218323, 'eval_precision': 0.18133333333333335, 'eval_recall': 0.07753705815279362, 'eval_f1': 0.1086261980830671, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3604, 'eval_samples_per_second': 648.623, 'eval_steps_per_second': 81.343, 'epoch': 14.0}
{'loss': 0.2623, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': 0.2581370174884796, 'eval_precision': 0.1820580474934037, 'eval_recall': 0.07867730900798175, 'eval_f1': 0.10987261146496816, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.3612, 'eval_samples_per_second': 648.409, 'eval_steps_per_second': 81.316, 'epoch': 15.0}
{'loss': 0.2599, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': 0.2572169303894043, 'eval_precision': 0.18087855297157623, 'eval_recall': 0.07981755986316989, 'eval_f1': 0.11075949367088607, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3557, 'eval_samples_per_second': 649.923, 'eval_steps_per_second': 81.506, 'epoch': 16.0}
{'loss': 0.259, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': 0.25671082735061646, 'eval_precision': 0.18316831683168316, 'eval_recall': 0.08437856328392246, 'eval_f1': 0.11553473848555815, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3648, 'eval_samples_per_second': 647.416, 'eval_steps_per_second': 81.191, 'epoch': 17.0}
{'loss': 0.2579, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': 0.2559507191181183, 'eval_precision': 0.1875, 'eval_recall': 0.08209806157354618, 'eval_f1': 0.11419508326724823, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3757, 'eval_samples_per_second': 644.436, 'eval_steps_per_second': 80.818, 'epoch': 18.0}
{'loss': 0.2559, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': 0.2557825744152069, 'eval_precision': 0.18796992481203006, 'eval_recall': 0.08551881413911061, 'eval_f1': 0.11755485893416928, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3902, 'eval_samples_per_second': 640.541, 'eval_steps_per_second': 80.329, 'epoch': 19.0}
{'loss': 0.2565, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.25585252046585083, 'eval_precision': 0.18313253012048192, 'eval_recall': 0.08665906499429875, 'eval_f1': 0.11764705882352941, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.758, 'eval_steps_per_second': 81.36, 'epoch': 20.0}
{'train_runtime': 700.6831, 'train_samples_per_second': 246.445, 'train_steps_per_second': 3.853, 'train_loss': 0.34597858287669997, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =      0.346
  train_runtime            = 0:11:40.68
  train_samples            =       8634
  train_samples_per_second =    246.445
  train_steps_per_second   =      3.853
[{'loss': 1.49, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.4311361610889435, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.398, 'eval_samples_per_second': 638.443, 'eval_steps_per_second': 80.066, 'epoch': 1.0, 'step': 135}, {'loss': 0.4024, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.3584248423576355, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.176, 'eval_steps_per_second': 81.412, 'epoch': 2.0, 'step': 270}, {'loss': 0.3545, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.3212507963180542, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3605, 'eval_samples_per_second': 648.591, 'eval_steps_per_second': 81.339, 'epoch': 3.0, 'step': 405}, {'loss': 0.3216, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.29967519640922546, 'eval_precision': 0.08108108108108109, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0065645514223194755, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3603, 'eval_samples_per_second': 648.648, 'eval_steps_per_second': 81.346, 'epoch': 4.0, 'step': 540}, {'loss': 0.3055, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.28859302401542664, 'eval_precision': 0.11594202898550725, 'eval_recall': 0.009122006841505131, 'eval_f1': 0.016913319238900635, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.874, 'eval_steps_per_second': 81.374, 'epoch': 5.0, 'step': 675}, {'loss': 0.297, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.28216952085494995, 'eval_precision': 0.14965986394557823, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.04296875, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3729, 'eval_samples_per_second': 645.212, 'eval_steps_per_second': 80.915, 'epoch': 6.0, 'step': 810}, {'loss': 0.291, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.27654507756233215, 'eval_precision': 0.16891891891891891, 'eval_recall': 0.028506271379703536, 'eval_f1': 0.048780487804878044, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.057, 'eval_steps_per_second': 81.146, 'epoch': 7.0, 'step': 945}, {'loss': 0.2834, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2737814784049988, 'eval_precision': 0.17842323651452283, 'eval_recall': 0.04903078677309008, 'eval_f1': 0.07692307692307691, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.466, 'eval_steps_per_second': 81.448, 'epoch': 8.0, 'step': 1080}, {'loss': 0.2791, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.26979491114616394, 'eval_precision': 0.16532258064516128, 'eval_recall': 0.046750285062713795, 'eval_f1': 0.07288888888888888, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.673, 'eval_steps_per_second': 81.224, 'epoch': 9.0, 'step': 1215}, {'loss': 0.2752, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2665148973464966, 'eval_precision': 0.17372881355932204, 'eval_recall': 0.046750285062713795, 'eval_f1': 0.07367475292003592, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.179, 'eval_steps_per_second': 81.162, 'epoch': 10.0, 'step': 1350}, {'loss': 0.2704, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2641507089138031, 'eval_precision': 0.19767441860465115, 'eval_recall': 0.05815279361459521, 'eval_f1': 0.08986784140969163, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.942, 'eval_steps_per_second': 81.383, 'epoch': 11.0, 'step': 1485}, {'loss': 0.2682, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2620823085308075, 'eval_precision': 0.17757009345794392, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.09515859766277127, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.529, 'eval_steps_per_second': 81.331, 'epoch': 12.0, 'step': 1620}, {'loss': 0.2658, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.26103445887565613, 'eval_precision': 0.17333333333333334, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.10383386581469647, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.3556, 'eval_samples_per_second': 649.938, 'eval_steps_per_second': 81.508, 'epoch': 13.0, 'step': 1755}, {'loss': 0.2636, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2593231797218323, 'eval_precision': 0.18133333333333335, 'eval_recall': 0.07753705815279362, 'eval_f1': 0.1086261980830671, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3604, 'eval_samples_per_second': 648.623, 'eval_steps_per_second': 81.343, 'epoch': 14.0, 'step': 1890}, {'loss': 0.2623, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.2581370174884796, 'eval_precision': 0.1820580474934037, 'eval_recall': 0.07867730900798175, 'eval_f1': 0.10987261146496816, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.3612, 'eval_samples_per_second': 648.409, 'eval_steps_per_second': 81.316, 'epoch': 15.0, 'step': 2025}, {'loss': 0.2599, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2572169303894043, 'eval_precision': 0.18087855297157623, 'eval_recall': 0.07981755986316989, 'eval_f1': 0.11075949367088607, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3557, 'eval_samples_per_second': 649.923, 'eval_steps_per_second': 81.506, 'epoch': 16.0, 'step': 2160}, {'loss': 0.259, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.25671082735061646, 'eval_precision': 0.18316831683168316, 'eval_recall': 0.08437856328392246, 'eval_f1': 0.11553473848555815, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3648, 'eval_samples_per_second': 647.416, 'eval_steps_per_second': 81.191, 'epoch': 17.0, 'step': 2295}, {'loss': 0.2579, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.2559507191181183, 'eval_precision': 0.1875, 'eval_recall': 0.08209806157354618, 'eval_f1': 0.11419508326724823, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3757, 'eval_samples_per_second': 644.436, 'eval_steps_per_second': 80.818, 'epoch': 18.0, 'step': 2430}, {'loss': 0.2559, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2557825744152069, 'eval_precision': 0.18796992481203006, 'eval_recall': 0.08551881413911061, 'eval_f1': 0.11755485893416928, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3902, 'eval_samples_per_second': 640.541, 'eval_steps_per_second': 80.329, 'epoch': 19.0, 'step': 2565}, {'loss': 0.2565, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.25585252046585083, 'eval_precision': 0.18313253012048192, 'eval_recall': 0.08665906499429875, 'eval_f1': 0.11764705882352941, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.758, 'eval_steps_per_second': 81.36, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 700.6831, 'train_samples_per_second': 246.445, 'train_steps_per_second': 3.853, 'total_flos': 7445816592854268.0, 'train_loss': 0.34597858287669997, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9351
  predict_f1                 =     0.1198
  predict_loss               =     0.2614
  predict_precision          =     0.1798
  predict_recall             =     0.0898
  predict_runtime            = 0:00:02.04
  predict_samples_per_second =    621.678
  predict_steps_per_second   =      77.71
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_18.json completed. F1: 0.11978221415607986
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_00.json
01150927_tsa-intensity_NorBERT_3_x-small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6178.76 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6802.09 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6696.53 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6695.79 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6784.50 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6934.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7126.64 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7236.58 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6622.98 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7100.83 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6639.00 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6629.89 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6523.97 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_x-small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9951, 'eval_samples_per_second': 511.161, 'eval_steps_per_second': 64.104, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9851, 'eval_samples_per_second': 512.884, 'eval_steps_per_second': 64.32, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1783, 'eval_samples_per_second': 481.704, 'eval_steps_per_second': 60.41, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9727, 'eval_samples_per_second': 515.015, 'eval_steps_per_second': 64.587, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9736, 'eval_samples_per_second': 514.857, 'eval_steps_per_second': 64.567, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0867, 'eval_samples_per_second': 496.007, 'eval_steps_per_second': 62.203, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9684, 'eval_samples_per_second': 515.765, 'eval_steps_per_second': 64.681, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.563, 'eval_steps_per_second': 64.907, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9603, 'eval_samples_per_second': 517.169, 'eval_steps_per_second': 64.857, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0523, 'eval_samples_per_second': 501.591, 'eval_steps_per_second': 62.904, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.072, 'eval_steps_per_second': 64.845, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9602, 'eval_samples_per_second': 517.193, 'eval_steps_per_second': 64.86, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.957, 'eval_samples_per_second': 517.751, 'eval_steps_per_second': 64.93, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9653, 'eval_samples_per_second': 516.303, 'eval_steps_per_second': 64.749, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9689, 'eval_samples_per_second': 515.675, 'eval_steps_per_second': 64.67, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9563, 'eval_samples_per_second': 517.876, 'eval_steps_per_second': 64.946, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.979, 'eval_samples_per_second': 513.926, 'eval_steps_per_second': 64.451, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9758, 'eval_samples_per_second': 514.488, 'eval_steps_per_second': 64.521, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.123, 'eval_steps_per_second': 64.601, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9591, 'eval_samples_per_second': 517.382, 'eval_steps_per_second': 64.884, 'epoch': 20.0}
{'train_runtime': 243.3075, 'train_samples_per_second': 709.719, 'train_steps_per_second': 11.097, 'train_loss': 0.0, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =        0.0
  train_runtime            = 0:04:03.30
  train_samples            =       8634
  train_samples_per_second =    709.719
  train_steps_per_second   =     11.097
[{'loss': 0.0, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9951, 'eval_samples_per_second': 511.161, 'eval_steps_per_second': 64.104, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9851, 'eval_samples_per_second': 512.884, 'eval_steps_per_second': 64.32, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1783, 'eval_samples_per_second': 481.704, 'eval_steps_per_second': 60.41, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9727, 'eval_samples_per_second': 515.015, 'eval_steps_per_second': 64.587, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9736, 'eval_samples_per_second': 514.857, 'eval_steps_per_second': 64.567, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0867, 'eval_samples_per_second': 496.007, 'eval_steps_per_second': 62.203, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9684, 'eval_samples_per_second': 515.765, 'eval_steps_per_second': 64.681, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.563, 'eval_steps_per_second': 64.907, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9603, 'eval_samples_per_second': 517.169, 'eval_steps_per_second': 64.857, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0523, 'eval_samples_per_second': 501.591, 'eval_steps_per_second': 62.904, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.072, 'eval_steps_per_second': 64.845, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9602, 'eval_samples_per_second': 517.193, 'eval_steps_per_second': 64.86, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.957, 'eval_samples_per_second': 517.751, 'eval_steps_per_second': 64.93, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9653, 'eval_samples_per_second': 516.303, 'eval_steps_per_second': 64.749, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9689, 'eval_samples_per_second': 515.675, 'eval_steps_per_second': 64.67, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9563, 'eval_samples_per_second': 517.876, 'eval_steps_per_second': 64.946, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.979, 'eval_samples_per_second': 513.926, 'eval_steps_per_second': 64.451, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9758, 'eval_samples_per_second': 514.488, 'eval_steps_per_second': 64.521, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.123, 'eval_steps_per_second': 64.601, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9591, 'eval_samples_per_second': 517.382, 'eval_steps_per_second': 64.884, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 243.3075, 'train_samples_per_second': 709.719, 'train_steps_per_second': 11.097, 'total_flos': 399406811524992.0, 'train_loss': 0.0, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-xs
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.58
  predict_samples_per_second =    491.251
  predict_steps_per_second   =     61.406
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_x-small_00.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_04.json
01150927_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6666.93 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6971.05 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6818.92 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6870.07 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6920.55 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7035.50 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6210.62 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6530.35 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6682.85 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7223.16 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6869.05 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6926.39 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6763.86 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3354, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.22506272792816162, 'eval_precision': 0.22464898595943839, 'eval_recall': 0.16419612314709237, 'eval_f1': 0.18972332015810278, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.4051, 'eval_samples_per_second': 636.571, 'eval_steps_per_second': 79.831, 'epoch': 1.0}
{'loss': 0.2065, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.20992428064346313, 'eval_precision': 0.2679012345679012, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.2572614107883817, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.672, 'eval_steps_per_second': 80.847, 'epoch': 2.0}
{'loss': 0.1441, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.22205016016960144, 'eval_precision': 0.2930622009569378, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2860478692352598, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 2.379, 'eval_samples_per_second': 643.545, 'eval_steps_per_second': 80.706, 'epoch': 3.0}
{'loss': 0.1054, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.2665978670120239, 'eval_precision': 0.27099236641221375, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2950649350649351, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.024, 'eval_steps_per_second': 80.891, 'epoch': 4.0}
{'loss': 0.0765, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.27251508831977844, 'eval_precision': 0.26583592938733125, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2782608695652174, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3725, 'eval_samples_per_second': 645.321, 'eval_steps_per_second': 80.929, 'epoch': 5.0}
{'loss': 0.0554, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.30870434641838074, 'eval_precision': 0.26325581395348835, 'eval_recall': 0.322690992018244, 'eval_f1': 0.2899590163934426, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.377, 'eval_samples_per_second': 644.077, 'eval_steps_per_second': 80.773, 'epoch': 6.0}
{'loss': 0.0395, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.32348358631134033, 'eval_precision': 0.29041095890410956, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.32251521298174435, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3792, 'eval_samples_per_second': 643.489, 'eval_steps_per_second': 80.699, 'epoch': 7.0}
{'loss': 0.0276, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.3594740927219391, 'eval_precision': 0.2894736842105263, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31213872832369943, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3737, 'eval_samples_per_second': 644.997, 'eval_steps_per_second': 80.888, 'epoch': 8.0}
{'loss': 0.019, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.3668951988220215, 'eval_precision': 0.27702702702702703, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3000522739153163, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3737, 'eval_samples_per_second': 644.976, 'eval_steps_per_second': 80.885, 'epoch': 9.0}
{'loss': 0.0143, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.3748248219490051, 'eval_precision': 0.32009080590238365, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.32081911262798635, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 2.3712, 'eval_samples_per_second': 645.655, 'eval_steps_per_second': 80.971, 'epoch': 10.0}
{'loss': 0.0113, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.4083532691001892, 'eval_precision': 0.26545454545454544, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.2953970662620131, 'eval_accuracy': 0.931212846444839, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.618, 'eval_steps_per_second': 81.091, 'epoch': 11.0}
{'loss': 0.0074, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.40971413254737854, 'eval_precision': 0.2966360856269113, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3132400430570506, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.3848, 'eval_samples_per_second': 641.991, 'eval_steps_per_second': 80.511, 'epoch': 12.0}
{'loss': 0.0059, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.42985478043556213, 'eval_precision': 0.2847866419294991, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3140664961636829, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3824, 'eval_samples_per_second': 642.63, 'eval_steps_per_second': 80.591, 'epoch': 13.0}
{'loss': 0.005, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.4215197265148163, 'eval_precision': 0.3130630630630631, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.31501416430594903, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.486, 'eval_steps_per_second': 80.824, 'epoch': 14.0}
{'loss': 0.0038, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.4302591383457184, 'eval_precision': 0.3203559510567297, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.32432432432432434, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.013, 'eval_steps_per_second': 80.89, 'epoch': 15.0}
{'loss': 0.0027, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.43799346685409546, 'eval_precision': 0.2973790322580645, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31567683253076506, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3861, 'eval_samples_per_second': 641.644, 'eval_steps_per_second': 80.467, 'epoch': 16.0}
{'loss': 0.0029, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.4374181032180786, 'eval_precision': 0.29175257731958765, 'eval_recall': 0.322690992018244, 'eval_f1': 0.30644288034650785, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 2.6861, 'eval_samples_per_second': 569.965, 'eval_steps_per_second': 71.478, 'epoch': 17.0}
{'loss': 0.0022, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.44765618443489075, 'eval_precision': 0.29057337220602525, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.31374606505771246, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.4153, 'eval_samples_per_second': 633.863, 'eval_steps_per_second': 79.492, 'epoch': 18.0}
{'loss': 0.0021, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.44701382517814636, 'eval_precision': 0.30063291139240506, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31232876712328766, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.4171, 'eval_samples_per_second': 633.397, 'eval_steps_per_second': 79.433, 'epoch': 19.0}
{'loss': 0.0017, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.4484975039958954, 'eval_precision': 0.30242360379346683, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31434830230010957, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3775, 'eval_samples_per_second': 643.955, 'eval_steps_per_second': 80.757, 'epoch': 20.0}
{'train_runtime': 705.2733, 'train_samples_per_second': 244.841, 'train_steps_per_second': 3.828, 'train_loss': 0.0534335239286776, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.0534
  train_runtime            = 0:11:45.27
  train_samples            =       8634
  train_samples_per_second =    244.841
  train_steps_per_second   =      3.828
[{'loss': 0.3354, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.22506272792816162, 'eval_precision': 0.22464898595943839, 'eval_recall': 0.16419612314709237, 'eval_f1': 0.18972332015810278, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.4051, 'eval_samples_per_second': 636.571, 'eval_steps_per_second': 79.831, 'epoch': 1.0, 'step': 135}, {'loss': 0.2065, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20992428064346313, 'eval_precision': 0.2679012345679012, 'eval_recall': 0.24743443557582667, 'eval_f1': 0.2572614107883817, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.672, 'eval_steps_per_second': 80.847, 'epoch': 2.0, 'step': 270}, {'loss': 0.1441, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.22205016016960144, 'eval_precision': 0.2930622009569378, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.2860478692352598, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 2.379, 'eval_samples_per_second': 643.545, 'eval_steps_per_second': 80.706, 'epoch': 3.0, 'step': 405}, {'loss': 0.1054, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2665978670120239, 'eval_precision': 0.27099236641221375, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2950649350649351, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.024, 'eval_steps_per_second': 80.891, 'epoch': 4.0, 'step': 540}, {'loss': 0.0765, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27251508831977844, 'eval_precision': 0.26583592938733125, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2782608695652174, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3725, 'eval_samples_per_second': 645.321, 'eval_steps_per_second': 80.929, 'epoch': 5.0, 'step': 675}, {'loss': 0.0554, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.30870434641838074, 'eval_precision': 0.26325581395348835, 'eval_recall': 0.322690992018244, 'eval_f1': 0.2899590163934426, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.377, 'eval_samples_per_second': 644.077, 'eval_steps_per_second': 80.773, 'epoch': 6.0, 'step': 810}, {'loss': 0.0395, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.32348358631134033, 'eval_precision': 0.29041095890410956, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.32251521298174435, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3792, 'eval_samples_per_second': 643.489, 'eval_steps_per_second': 80.699, 'epoch': 7.0, 'step': 945}, {'loss': 0.0276, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3594740927219391, 'eval_precision': 0.2894736842105263, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31213872832369943, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3737, 'eval_samples_per_second': 644.997, 'eval_steps_per_second': 80.888, 'epoch': 8.0, 'step': 1080}, {'loss': 0.019, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3668951988220215, 'eval_precision': 0.27702702702702703, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3000522739153163, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3737, 'eval_samples_per_second': 644.976, 'eval_steps_per_second': 80.885, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0143, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3748248219490051, 'eval_precision': 0.32009080590238365, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.32081911262798635, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 2.3712, 'eval_samples_per_second': 645.655, 'eval_steps_per_second': 80.971, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0113, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4083532691001892, 'eval_precision': 0.26545454545454544, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.2953970662620131, 'eval_accuracy': 0.931212846444839, 'eval_runtime': 2.3677, 'eval_samples_per_second': 646.618, 'eval_steps_per_second': 81.091, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0074, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.40971413254737854, 'eval_precision': 0.2966360856269113, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3132400430570506, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.3848, 'eval_samples_per_second': 641.991, 'eval_steps_per_second': 80.511, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0059, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.42985478043556213, 'eval_precision': 0.2847866419294991, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3140664961636829, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3824, 'eval_samples_per_second': 642.63, 'eval_steps_per_second': 80.591, 'epoch': 13.0, 'step': 1755}, {'loss': 0.005, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4215197265148163, 'eval_precision': 0.3130630630630631, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.31501416430594903, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.486, 'eval_steps_per_second': 80.824, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0038, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4302591383457184, 'eval_precision': 0.3203559510567297, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.32432432432432434, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.3736, 'eval_samples_per_second': 645.013, 'eval_steps_per_second': 80.89, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0027, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.43799346685409546, 'eval_precision': 0.2973790322580645, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31567683253076506, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3861, 'eval_samples_per_second': 641.644, 'eval_steps_per_second': 80.467, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0029, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4374181032180786, 'eval_precision': 0.29175257731958765, 'eval_recall': 0.322690992018244, 'eval_f1': 0.30644288034650785, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 2.6861, 'eval_samples_per_second': 569.965, 'eval_steps_per_second': 71.478, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0022, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.44765618443489075, 'eval_precision': 0.29057337220602525, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.31374606505771246, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.4153, 'eval_samples_per_second': 633.863, 'eval_steps_per_second': 79.492, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0021, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.44701382517814636, 'eval_precision': 0.30063291139240506, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31232876712328766, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.4171, 'eval_samples_per_second': 633.397, 'eval_steps_per_second': 79.433, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0017, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4484975039958954, 'eval_precision': 0.30242360379346683, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31434830230010957, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3775, 'eval_samples_per_second': 643.955, 'eval_steps_per_second': 80.757, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 705.2733, 'train_samples_per_second': 244.841, 'train_steps_per_second': 3.828, 'total_flos': 7445816592854268.0, 'train_loss': 0.0534335239286776, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9396
  predict_f1                 =     0.2593
  predict_loss               =     0.2186
  predict_precision          =     0.2738
  predict_recall             =     0.2463
  predict_runtime            = 0:00:02.03
  predict_samples_per_second =    623.767
  predict_steps_per_second   =     77.971
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_base_04.json completed. F1: 0.2593123209169054
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_15.json
01150927_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6484.90 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7026.69 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6794.24 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6860.18 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6920.63 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7048.92 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7212.17 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7283.28 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6704.20 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7230.34 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6883.41 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6941.47 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6777.86 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 395250855587202.9, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0661, 'eval_samples_per_second': 499.339, 'eval_steps_per_second': 62.621, 'epoch': 1.0}
{'loss': 397348263097988.75, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0016, 'eval_samples_per_second': 510.054, 'eval_steps_per_second': 63.965, 'epoch': 2.0}
{'loss': 396285720003530.9, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9969, 'eval_samples_per_second': 510.864, 'eval_steps_per_second': 64.067, 'epoch': 3.0}
{'loss': 394180295220459.1, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.983, 'eval_samples_per_second': 513.237, 'eval_steps_per_second': 64.364, 'epoch': 4.0}
{'loss': 397132273964858.8, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0104, 'eval_samples_per_second': 508.575, 'eval_steps_per_second': 63.78, 'epoch': 5.0}
{'loss': 398482484424430.94, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0225, 'eval_samples_per_second': 506.531, 'eval_steps_per_second': 63.523, 'epoch': 6.0}
{'loss': 397628994886284.3, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0684, 'eval_samples_per_second': 498.961, 'eval_steps_per_second': 62.574, 'epoch': 7.0}
{'loss': 395813814448704.5, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0074, 'eval_samples_per_second': 509.07, 'eval_steps_per_second': 63.842, 'epoch': 8.0}
{'loss': 394035284398717.1, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.719, 'eval_steps_per_second': 64.174, 'epoch': 9.0}
{'loss': 393668589635356.44, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0284, 'eval_samples_per_second': 505.543, 'eval_steps_per_second': 63.399, 'epoch': 10.0}
{'loss': 397949908479726.94, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9931, 'eval_samples_per_second': 511.512, 'eval_steps_per_second': 64.148, 'epoch': 11.0}
{'loss': 395703640583918.94, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0746, 'eval_samples_per_second': 497.955, 'eval_steps_per_second': 62.448, 'epoch': 12.0}
{'loss': 396211464791168.94, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0838, 'eval_samples_per_second': 496.46, 'eval_steps_per_second': 62.26, 'epoch': 13.0}
{'loss': 394788430775000.2, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.1382, 'eval_samples_per_second': 487.852, 'eval_steps_per_second': 61.181, 'epoch': 14.0}
{'loss': 397196698474298.8, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.886, 'eval_steps_per_second': 63.944, 'epoch': 15.0}
{'loss': 395558184358161.06, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0833, 'eval_samples_per_second': 496.546, 'eval_steps_per_second': 62.271, 'epoch': 16.0}
{'loss': 396139850188329.7, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9966, 'eval_samples_per_second': 510.911, 'eval_steps_per_second': 64.072, 'epoch': 17.0}
{'loss': 397420482177706.7, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.2357, 'eval_samples_per_second': 473.152, 'eval_steps_per_second': 59.337, 'epoch': 18.0}
{'loss': 396277416400092.0, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.017, 'eval_samples_per_second': 507.461, 'eval_steps_per_second': 63.64, 'epoch': 19.0}
{'loss': 396737836894223.2, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.1191, 'eval_samples_per_second': 490.843, 'eval_steps_per_second': 61.556, 'epoch': 20.0}
{'train_runtime': 345.0478, 'train_samples_per_second': 500.452, 'train_steps_per_second': 7.825, 'train_loss': 396190524439508.0, 'epoch': 20.0}
***** train metrics *****
  epoch                    =              20.0
  train_loss               = 396190524439508.0
  train_runtime            =        0:05:45.04
  train_samples            =              8634
  train_samples_per_second =           500.452
  train_steps_per_second   =             7.825
[{'loss': 395250855587202.9, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0661, 'eval_samples_per_second': 499.339, 'eval_steps_per_second': 62.621, 'epoch': 1.0, 'step': 135}, {'loss': 397348263097988.75, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0016, 'eval_samples_per_second': 510.054, 'eval_steps_per_second': 63.965, 'epoch': 2.0, 'step': 270}, {'loss': 396285720003530.9, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9969, 'eval_samples_per_second': 510.864, 'eval_steps_per_second': 64.067, 'epoch': 3.0, 'step': 405}, {'loss': 394180295220459.1, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.983, 'eval_samples_per_second': 513.237, 'eval_steps_per_second': 64.364, 'epoch': 4.0, 'step': 540}, {'loss': 397132273964858.8, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0104, 'eval_samples_per_second': 508.575, 'eval_steps_per_second': 63.78, 'epoch': 5.0, 'step': 675}, {'loss': 398482484424430.94, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0225, 'eval_samples_per_second': 506.531, 'eval_steps_per_second': 63.523, 'epoch': 6.0, 'step': 810}, {'loss': 397628994886284.3, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0684, 'eval_samples_per_second': 498.961, 'eval_steps_per_second': 62.574, 'epoch': 7.0, 'step': 945}, {'loss': 395813814448704.5, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0074, 'eval_samples_per_second': 509.07, 'eval_steps_per_second': 63.842, 'epoch': 8.0, 'step': 1080}, {'loss': 394035284398717.1, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.719, 'eval_steps_per_second': 64.174, 'epoch': 9.0, 'step': 1215}, {'loss': 393668589635356.44, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0284, 'eval_samples_per_second': 505.543, 'eval_steps_per_second': 63.399, 'epoch': 10.0, 'step': 1350}, {'loss': 397949908479726.94, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9931, 'eval_samples_per_second': 511.512, 'eval_steps_per_second': 64.148, 'epoch': 11.0, 'step': 1485}, {'loss': 395703640583918.94, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0746, 'eval_samples_per_second': 497.955, 'eval_steps_per_second': 62.448, 'epoch': 12.0, 'step': 1620}, {'loss': 396211464791168.94, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0838, 'eval_samples_per_second': 496.46, 'eval_steps_per_second': 62.26, 'epoch': 13.0, 'step': 1755}, {'loss': 394788430775000.2, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.1382, 'eval_samples_per_second': 487.852, 'eval_steps_per_second': 61.181, 'epoch': 14.0, 'step': 1890}, {'loss': 397196698474298.8, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.886, 'eval_steps_per_second': 63.944, 'epoch': 15.0, 'step': 2025}, {'loss': 395558184358161.06, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.0833, 'eval_samples_per_second': 496.546, 'eval_steps_per_second': 62.271, 'epoch': 16.0, 'step': 2160}, {'loss': 396139850188329.7, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 2.9966, 'eval_samples_per_second': 510.911, 'eval_steps_per_second': 64.072, 'epoch': 17.0, 'step': 2295}, {'loss': 397420482177706.7, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.2357, 'eval_samples_per_second': 473.152, 'eval_steps_per_second': 59.337, 'epoch': 18.0, 'step': 2430}, {'loss': 396277416400092.0, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.017, 'eval_samples_per_second': 507.461, 'eval_steps_per_second': 63.64, 'epoch': 19.0, 'step': 2565}, {'loss': 396737836894223.2, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 402518932717568.0, 'eval_precision': 0.00037257824143070045, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.0006994474365251451, 'eval_accuracy': 0.45923724233768237, 'eval_runtime': 3.1191, 'eval_samples_per_second': 490.843, 'eval_steps_per_second': 61.556, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 345.0478, 'train_samples_per_second': 500.452, 'train_steps_per_second': 7.825, 'total_flos': 1593200676638592.0, 'train_loss': 396190524439508.0, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =            0.4716
  predict_f1                 =            0.0009
  predict_loss               = 378475336695808.0
  predict_precision          =            0.0005
  predict_recall             =            0.0068
  predict_runtime            =        0:00:02.57
  predict_samples_per_second =           494.477
  predict_steps_per_second   =             61.81
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_15.json completed. F1: 0.0008530239699735563
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_19.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_19.json
01150927_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5852.53 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6754.93 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6758.87 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6914.85 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6993.20 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7075.43 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6196.87 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6554.63 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6670.26 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7400.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6899.62 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7114.32 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6917.73 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.0687, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0}
{'eval_loss': 0.38185903429985046, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 4.7233, 'eval_samples_per_second': 324.136, 'eval_steps_per_second': 40.649, 'epoch': 1.0}
{'loss': 0.363, 'learning_rate': 9e-07, 'epoch': 2.0}
{'eval_loss': 0.3184886872768402, 'eval_precision': 0.25, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004519774011299435, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 4.7045, 'eval_samples_per_second': 325.431, 'eval_steps_per_second': 40.812, 'epoch': 2.0}
{'loss': 0.3202, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0}
{'eval_loss': 0.28822433948516846, 'eval_precision': 0.23423423423423423, 'eval_recall': 0.029646522234891677, 'eval_f1': 0.052631578947368425, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 4.6766, 'eval_samples_per_second': 327.377, 'eval_steps_per_second': 41.056, 'epoch': 3.0}
{'loss': 0.2937, 'learning_rate': 8e-07, 'epoch': 4.0}
{'eval_loss': 0.27017641067504883, 'eval_precision': 0.18902439024390244, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.10290456431535269, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 4.6792, 'eval_samples_per_second': 327.19, 'eval_steps_per_second': 41.032, 'epoch': 4.0}
{'loss': 0.2764, 'learning_rate': 7.5e-07, 'epoch': 5.0}
{'eval_loss': 0.2560320794582367, 'eval_precision': 0.17866666666666667, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.10702875399361024, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 4.6717, 'eval_samples_per_second': 327.72, 'eval_steps_per_second': 41.099, 'epoch': 5.0}
{'loss': 0.2638, 'learning_rate': 7e-07, 'epoch': 6.0}
{'eval_loss': 0.24776552617549896, 'eval_precision': 0.1637323943661972, 'eval_recall': 0.10604332953249715, 'eval_f1': 0.12871972318339103, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.52, 'eval_steps_per_second': 41.074, 'epoch': 6.0}
{'loss': 0.2525, 'learning_rate': 6.5e-07, 'epoch': 7.0}
{'eval_loss': 0.2391233891248703, 'eval_precision': 0.2018348623853211, 'eval_recall': 0.12542759407069556, 'eval_f1': 0.15471167369901548, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.525, 'eval_steps_per_second': 41.074, 'epoch': 7.0}
{'loss': 0.2424, 'learning_rate': 6e-07, 'epoch': 8.0}
{'eval_loss': 0.23443225026130676, 'eval_precision': 0.1841726618705036, 'eval_recall': 0.1459521094640821, 'eval_f1': 0.16284987277353688, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 4.6733, 'eval_samples_per_second': 327.609, 'eval_steps_per_second': 41.085, 'epoch': 8.0}
{'loss': 0.2344, 'learning_rate': 5.5e-07, 'epoch': 9.0}
{'eval_loss': 0.229141503572464, 'eval_precision': 0.1917024320457797, 'eval_recall': 0.15279361459521096, 'eval_f1': 0.1700507614213198, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6818, 'eval_samples_per_second': 327.011, 'eval_steps_per_second': 41.01, 'epoch': 9.0}
{'loss': 0.229, 'learning_rate': 5e-07, 'epoch': 10.0}
{'eval_loss': 0.2256738692522049, 'eval_precision': 0.20715350223546944, 'eval_recall': 0.15849486887115166, 'eval_f1': 0.17958656330749354, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.524, 'eval_steps_per_second': 41.074, 'epoch': 10.0}
{'loss': 0.2237, 'learning_rate': 4.5e-07, 'epoch': 11.0}
{'eval_loss': 0.22318793833255768, 'eval_precision': 0.20903954802259886, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.18675078864353312, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6752, 'eval_samples_per_second': 327.471, 'eval_steps_per_second': 41.068, 'epoch': 11.0}
{'loss': 0.2192, 'learning_rate': 4e-07, 'epoch': 12.0}
{'eval_loss': 0.2212986797094345, 'eval_precision': 0.22317596566523606, 'eval_recall': 0.17787913340935005, 'eval_f1': 0.1979695431472081, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6921, 'eval_samples_per_second': 326.29, 'eval_steps_per_second': 40.919, 'epoch': 12.0}
{'loss': 0.2157, 'learning_rate': 3.5e-07, 'epoch': 13.0}
{'eval_loss': 0.2201913595199585, 'eval_precision': 0.20838627700127066, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.1971153846153846, 'eval_accuracy': 0.9393962788543194, 'eval_runtime': 4.7047, 'eval_samples_per_second': 325.422, 'eval_steps_per_second': 40.811, 'epoch': 13.0}
{'loss': 0.2139, 'learning_rate': 3e-07, 'epoch': 14.0}
{'eval_loss': 0.21976535022258759, 'eval_precision': 0.21532846715328466, 'eval_recall': 0.20182440136830102, 'eval_f1': 0.2083578575632725, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.7173, 'eval_samples_per_second': 324.548, 'eval_steps_per_second': 40.701, 'epoch': 14.0}
{'loss': 0.2104, 'learning_rate': 2.5e-07, 'epoch': 15.0}
{'eval_loss': 0.21859847009181976, 'eval_precision': 0.23104693140794225, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.22482435597189698, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.7129, 'eval_samples_per_second': 324.853, 'eval_steps_per_second': 40.739, 'epoch': 15.0}
{'loss': 0.2091, 'learning_rate': 2e-07, 'epoch': 16.0}
{'eval_loss': 0.21708382666110992, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.20524515393386544, 'eval_f1': 0.21726010863005432, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.7158, 'eval_samples_per_second': 324.654, 'eval_steps_per_second': 40.714, 'epoch': 16.0}
{'loss': 0.2064, 'learning_rate': 1.5e-07, 'epoch': 17.0}
{'eval_loss': 0.21789662539958954, 'eval_precision': 0.23286052009456265, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.228670922809054, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.7311, 'eval_samples_per_second': 323.601, 'eval_steps_per_second': 40.582, 'epoch': 17.0}
{'loss': 0.2055, 'learning_rate': 1e-07, 'epoch': 18.0}
{'eval_loss': 0.21643835306167603, 'eval_precision': 0.24324324324324326, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.22853688029020558, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.719, 'eval_samples_per_second': 324.436, 'eval_steps_per_second': 40.687, 'epoch': 18.0}
{'loss': 0.204, 'learning_rate': 5e-08, 'epoch': 19.0}
{'eval_loss': 0.21631315350532532, 'eval_precision': 0.23893805309734514, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.22661870503597123, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.7272, 'eval_samples_per_second': 323.871, 'eval_steps_per_second': 40.616, 'epoch': 19.0}
{'loss': 0.2026, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.2167464792728424, 'eval_precision': 0.23284313725490197, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22445363260484347, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.7957, 'eval_samples_per_second': 319.241, 'eval_steps_per_second': 40.036, 'epoch': 20.0}
{'train_runtime': 1748.5972, 'train_samples_per_second': 98.753, 'train_steps_per_second': 1.544, 'train_loss': 0.28273110071818036, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.2827
  train_runtime            = 0:29:08.59
  train_samples            =       8634
  train_samples_per_second =     98.753
  train_steps_per_second   =      1.544
[{'loss': 1.0687, 'learning_rate': 9.499999999999999e-07, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.38185903429985046, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 4.7233, 'eval_samples_per_second': 324.136, 'eval_steps_per_second': 40.649, 'epoch': 1.0, 'step': 135}, {'loss': 0.363, 'learning_rate': 9e-07, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.3184886872768402, 'eval_precision': 0.25, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004519774011299435, 'eval_accuracy': 0.9343395352428009, 'eval_runtime': 4.7045, 'eval_samples_per_second': 325.431, 'eval_steps_per_second': 40.812, 'epoch': 2.0, 'step': 270}, {'loss': 0.3202, 'learning_rate': 8.499999999999999e-07, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.28822433948516846, 'eval_precision': 0.23423423423423423, 'eval_recall': 0.029646522234891677, 'eval_f1': 0.052631578947368425, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 4.6766, 'eval_samples_per_second': 327.377, 'eval_steps_per_second': 41.056, 'epoch': 3.0, 'step': 405}, {'loss': 0.2937, 'learning_rate': 8e-07, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.27017641067504883, 'eval_precision': 0.18902439024390244, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.10290456431535269, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 4.6792, 'eval_samples_per_second': 327.19, 'eval_steps_per_second': 41.032, 'epoch': 4.0, 'step': 540}, {'loss': 0.2764, 'learning_rate': 7.5e-07, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2560320794582367, 'eval_precision': 0.17866666666666667, 'eval_recall': 0.07639680729760548, 'eval_f1': 0.10702875399361024, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 4.6717, 'eval_samples_per_second': 327.72, 'eval_steps_per_second': 41.099, 'epoch': 5.0, 'step': 675}, {'loss': 0.2638, 'learning_rate': 7e-07, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.24776552617549896, 'eval_precision': 0.1637323943661972, 'eval_recall': 0.10604332953249715, 'eval_f1': 0.12871972318339103, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.52, 'eval_steps_per_second': 41.074, 'epoch': 6.0, 'step': 810}, {'loss': 0.2525, 'learning_rate': 6.5e-07, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2391233891248703, 'eval_precision': 0.2018348623853211, 'eval_recall': 0.12542759407069556, 'eval_f1': 0.15471167369901548, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.525, 'eval_steps_per_second': 41.074, 'epoch': 7.0, 'step': 945}, {'loss': 0.2424, 'learning_rate': 6e-07, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.23443225026130676, 'eval_precision': 0.1841726618705036, 'eval_recall': 0.1459521094640821, 'eval_f1': 0.16284987277353688, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 4.6733, 'eval_samples_per_second': 327.609, 'eval_steps_per_second': 41.085, 'epoch': 8.0, 'step': 1080}, {'loss': 0.2344, 'learning_rate': 5.5e-07, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.229141503572464, 'eval_precision': 0.1917024320457797, 'eval_recall': 0.15279361459521096, 'eval_f1': 0.1700507614213198, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6818, 'eval_samples_per_second': 327.011, 'eval_steps_per_second': 41.01, 'epoch': 9.0, 'step': 1215}, {'loss': 0.229, 'learning_rate': 5e-07, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2256738692522049, 'eval_precision': 0.20715350223546944, 'eval_recall': 0.15849486887115166, 'eval_f1': 0.17958656330749354, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6745, 'eval_samples_per_second': 327.524, 'eval_steps_per_second': 41.074, 'epoch': 10.0, 'step': 1350}, {'loss': 0.2237, 'learning_rate': 4.5e-07, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.22318793833255768, 'eval_precision': 0.20903954802259886, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.18675078864353312, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6752, 'eval_samples_per_second': 327.471, 'eval_steps_per_second': 41.068, 'epoch': 11.0, 'step': 1485}, {'loss': 0.2192, 'learning_rate': 4e-07, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2212986797094345, 'eval_precision': 0.22317596566523606, 'eval_recall': 0.17787913340935005, 'eval_f1': 0.1979695431472081, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6921, 'eval_samples_per_second': 326.29, 'eval_steps_per_second': 40.919, 'epoch': 12.0, 'step': 1620}, {'loss': 0.2157, 'learning_rate': 3.5e-07, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2201913595199585, 'eval_precision': 0.20838627700127066, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.1971153846153846, 'eval_accuracy': 0.9393962788543194, 'eval_runtime': 4.7047, 'eval_samples_per_second': 325.422, 'eval_steps_per_second': 40.811, 'epoch': 13.0, 'step': 1755}, {'loss': 0.2139, 'learning_rate': 3e-07, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.21976535022258759, 'eval_precision': 0.21532846715328466, 'eval_recall': 0.20182440136830102, 'eval_f1': 0.2083578575632725, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.7173, 'eval_samples_per_second': 324.548, 'eval_steps_per_second': 40.701, 'epoch': 14.0, 'step': 1890}, {'loss': 0.2104, 'learning_rate': 2.5e-07, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.21859847009181976, 'eval_precision': 0.23104693140794225, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.22482435597189698, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.7129, 'eval_samples_per_second': 324.853, 'eval_steps_per_second': 40.739, 'epoch': 15.0, 'step': 2025}, {'loss': 0.2091, 'learning_rate': 2e-07, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.21708382666110992, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.20524515393386544, 'eval_f1': 0.21726010863005432, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.7158, 'eval_samples_per_second': 324.654, 'eval_steps_per_second': 40.714, 'epoch': 16.0, 'step': 2160}, {'loss': 0.2064, 'learning_rate': 1.5e-07, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.21789662539958954, 'eval_precision': 0.23286052009456265, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.228670922809054, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.7311, 'eval_samples_per_second': 323.601, 'eval_steps_per_second': 40.582, 'epoch': 17.0, 'step': 2295}, {'loss': 0.2055, 'learning_rate': 1e-07, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.21643835306167603, 'eval_precision': 0.24324324324324326, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.22853688029020558, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.719, 'eval_samples_per_second': 324.436, 'eval_steps_per_second': 40.687, 'epoch': 18.0, 'step': 2430}, {'loss': 0.204, 'learning_rate': 5e-08, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.21631315350532532, 'eval_precision': 0.23893805309734514, 'eval_recall': 0.21550741163055873, 'eval_f1': 0.22661870503597123, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.7272, 'eval_samples_per_second': 323.871, 'eval_steps_per_second': 40.616, 'epoch': 19.0, 'step': 2565}, {'loss': 0.2026, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.2167464792728424, 'eval_precision': 0.23284313725490197, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22445363260484347, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.7957, 'eval_samples_per_second': 319.241, 'eval_steps_per_second': 40.036, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 1748.5972, 'train_samples_per_second': 98.753, 'train_steps_per_second': 1.544, 'total_flos': 2.164421811922236e+16, 'train_loss': 0.28273110071818036, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9397
  predict_f1                 =     0.2217
  predict_loss               =     0.2262
  predict_precision          =     0.2321
  predict_recall             =     0.2122
  predict_runtime            = 0:00:03.98
  predict_samples_per_second =    318.829
  predict_steps_per_second   =     39.854
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_19.json completed. F1: 0.22174840085287847
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_01.json
01150927_tsa-intensity_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5781.65 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6655.55 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6598.41 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6725.38 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6802.15 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6953.16 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7120.03 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7207.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6569.84 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7245.75 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6870.24 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6992.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6804.30 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01150927_tsa-intensity_NorBERT_3_small/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3851, 'learning_rate': 4.75e-05, 'epoch': 1.0}
{'eval_loss': 0.21576029062271118, 'eval_precision': 0.22895125553914328, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.1994851994851995, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 3.1174, 'eval_samples_per_second': 491.113, 'eval_steps_per_second': 61.59, 'epoch': 1.0}
{'loss': 0.216, 'learning_rate': 4.5e-05, 'epoch': 2.0}
{'eval_loss': 0.20593620836734772, 'eval_precision': 0.2801358234295416, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.22510231923601637, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 3.0056, 'eval_samples_per_second': 509.383, 'eval_steps_per_second': 63.881, 'epoch': 2.0}
{'loss': 0.1629, 'learning_rate': 4.25e-05, 'epoch': 3.0}
{'eval_loss': 0.22110465168952942, 'eval_precision': 0.2972972972972973, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.27932285368802906, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.009, 'eval_samples_per_second': 508.801, 'eval_steps_per_second': 63.808, 'epoch': 3.0}
{'loss': 0.1231, 'learning_rate': 4e-05, 'epoch': 4.0}
{'eval_loss': 0.24228230118751526, 'eval_precision': 0.2763873775843308, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2828507795100223, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.999, 'eval_samples_per_second': 510.498, 'eval_steps_per_second': 64.021, 'epoch': 4.0}
{'loss': 0.0877, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0}
{'eval_loss': 0.27746573090553284, 'eval_precision': 0.23684210526315788, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2637695805962607, 'eval_accuracy': 0.9311742453485679, 'eval_runtime': 2.9951, 'eval_samples_per_second': 511.16, 'eval_steps_per_second': 64.104, 'epoch': 5.0}
{'loss': 0.064, 'learning_rate': 3.5e-05, 'epoch': 6.0}
{'eval_loss': 0.3162010610103607, 'eval_precision': 0.2523364485981308, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.26413043478260867, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 3.0033, 'eval_samples_per_second': 509.771, 'eval_steps_per_second': 63.929, 'epoch': 6.0}
{'loss': 0.0455, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0}
{'eval_loss': 0.35553431510925293, 'eval_precision': 0.24870017331022531, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.28261939931068436, 'eval_accuracy': 0.9295143982089091, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.89, 'eval_steps_per_second': 63.944, 'epoch': 7.0}
{'loss': 0.0354, 'learning_rate': 3e-05, 'epoch': 8.0}
{'eval_loss': 0.3823269307613373, 'eval_precision': 0.22134038800705466, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.24962705121829937, 'eval_accuracy': 0.9278159499729792, 'eval_runtime': 3.0037, 'eval_samples_per_second': 509.705, 'eval_steps_per_second': 63.921, 'epoch': 8.0}
{'loss': 0.0246, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0}
{'eval_loss': 0.40544024109840393, 'eval_precision': 0.2698768197088466, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.272316384180791, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.9998, 'eval_samples_per_second': 510.376, 'eval_steps_per_second': 64.005, 'epoch': 9.0}
{'loss': 0.0186, 'learning_rate': 2.5e-05, 'epoch': 10.0}
{'eval_loss': 0.4164242446422577, 'eval_precision': 0.25440313111545987, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2738283307003686, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0775, 'eval_samples_per_second': 497.479, 'eval_steps_per_second': 62.388, 'epoch': 10.0}
{'loss': 0.0137, 'learning_rate': 2.25e-05, 'epoch': 11.0}
{'eval_loss': 0.45002859830856323, 'eval_precision': 0.2630359212050985, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.260919540229885, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.9875, 'eval_samples_per_second': 512.466, 'eval_steps_per_second': 64.267, 'epoch': 11.0}
{'loss': 0.0111, 'learning_rate': 2e-05, 'epoch': 12.0}
{'eval_loss': 0.4633071720600128, 'eval_precision': 0.24721603563474387, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2501408450704225, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 3.0003, 'eval_samples_per_second': 510.274, 'eval_steps_per_second': 63.993, 'epoch': 12.0}
{'loss': 0.0085, 'learning_rate': 1.75e-05, 'epoch': 13.0}
{'eval_loss': 0.46217191219329834, 'eval_precision': 0.24281150159744408, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2511013215859031, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 3.0014, 'eval_samples_per_second': 510.09, 'eval_steps_per_second': 63.969, 'epoch': 13.0}
{'loss': 0.007, 'learning_rate': 1.5e-05, 'epoch': 14.0}
{'eval_loss': 0.4687652289867401, 'eval_precision': 0.2513255567338282, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.26043956043956046, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.9876, 'eval_samples_per_second': 512.445, 'eval_steps_per_second': 64.265, 'epoch': 14.0}
{'loss': 0.0055, 'learning_rate': 1.25e-05, 'epoch': 15.0}
{'eval_loss': 0.47260043025016785, 'eval_precision': 0.2554660529344074, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2542955326460481, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.9865, 'eval_samples_per_second': 512.639, 'eval_steps_per_second': 64.289, 'epoch': 15.0}
{'loss': 0.0051, 'learning_rate': 1e-05, 'epoch': 16.0}
{'eval_loss': 0.47639673948287964, 'eval_precision': 0.2623762376237624, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.25163204747774476, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9855, 'eval_samples_per_second': 512.815, 'eval_steps_per_second': 64.311, 'epoch': 16.0}
{'loss': 0.0036, 'learning_rate': 7.5e-06, 'epoch': 17.0}
{'eval_loss': 0.4805825650691986, 'eval_precision': 0.2547568710359408, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2643993417443774, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 3.0033, 'eval_samples_per_second': 509.772, 'eval_steps_per_second': 63.93, 'epoch': 17.0}
{'loss': 0.0032, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.48663848638534546, 'eval_precision': 0.2556008146639511, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.27003765465303925, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.106, 'eval_steps_per_second': 64.849, 'epoch': 18.0}
{'loss': 0.0026, 'learning_rate': 2.5e-06, 'epoch': 19.0}
{'eval_loss': 0.4852539002895355, 'eval_precision': 0.2613390928725702, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2684414864115363, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.9578, 'eval_samples_per_second': 517.608, 'eval_steps_per_second': 64.912, 'epoch': 19.0}
{'loss': 0.003, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.485655277967453, 'eval_precision': 0.25813449023861174, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26459143968871596, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9279, 'eval_samples_per_second': 522.898, 'eval_steps_per_second': 65.576, 'epoch': 20.0}
{'train_runtime': 344.9614, 'train_samples_per_second': 500.578, 'train_steps_per_second': 7.827, 'train_loss': 0.06131516682880896, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.0613
  train_runtime            = 0:05:44.96
  train_samples            =       8634
  train_samples_per_second =    500.578
  train_steps_per_second   =      7.827
[{'loss': 0.3851, 'learning_rate': 4.75e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21576029062271118, 'eval_precision': 0.22895125553914328, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.1994851994851995, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 3.1174, 'eval_samples_per_second': 491.113, 'eval_steps_per_second': 61.59, 'epoch': 1.0, 'step': 135}, {'loss': 0.216, 'learning_rate': 4.5e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20593620836734772, 'eval_precision': 0.2801358234295416, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.22510231923601637, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 3.0056, 'eval_samples_per_second': 509.383, 'eval_steps_per_second': 63.881, 'epoch': 2.0, 'step': 270}, {'loss': 0.1629, 'learning_rate': 4.25e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.22110465168952942, 'eval_precision': 0.2972972972972973, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.27932285368802906, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.009, 'eval_samples_per_second': 508.801, 'eval_steps_per_second': 63.808, 'epoch': 3.0, 'step': 405}, {'loss': 0.1231, 'learning_rate': 4e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.24228230118751526, 'eval_precision': 0.2763873775843308, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.2828507795100223, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.999, 'eval_samples_per_second': 510.498, 'eval_steps_per_second': 64.021, 'epoch': 4.0, 'step': 540}, {'loss': 0.0877, 'learning_rate': 3.7500000000000003e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27746573090553284, 'eval_precision': 0.23684210526315788, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2637695805962607, 'eval_accuracy': 0.9311742453485679, 'eval_runtime': 2.9951, 'eval_samples_per_second': 511.16, 'eval_steps_per_second': 64.104, 'epoch': 5.0, 'step': 675}, {'loss': 0.064, 'learning_rate': 3.5e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3162010610103607, 'eval_precision': 0.2523364485981308, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.26413043478260867, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 3.0033, 'eval_samples_per_second': 509.771, 'eval_steps_per_second': 63.929, 'epoch': 6.0, 'step': 810}, {'loss': 0.0455, 'learning_rate': 3.2500000000000004e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.35553431510925293, 'eval_precision': 0.24870017331022531, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.28261939931068436, 'eval_accuracy': 0.9295143982089091, 'eval_runtime': 3.0026, 'eval_samples_per_second': 509.89, 'eval_steps_per_second': 63.944, 'epoch': 7.0, 'step': 945}, {'loss': 0.0354, 'learning_rate': 3e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3823269307613373, 'eval_precision': 0.22134038800705466, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.24962705121829937, 'eval_accuracy': 0.9278159499729792, 'eval_runtime': 3.0037, 'eval_samples_per_second': 509.705, 'eval_steps_per_second': 63.921, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0246, 'learning_rate': 2.7500000000000004e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.40544024109840393, 'eval_precision': 0.2698768197088466, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.272316384180791, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.9998, 'eval_samples_per_second': 510.376, 'eval_steps_per_second': 64.005, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0186, 'learning_rate': 2.5e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.4164242446422577, 'eval_precision': 0.25440313111545987, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.2738283307003686, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 3.0775, 'eval_samples_per_second': 497.479, 'eval_steps_per_second': 62.388, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0137, 'learning_rate': 2.25e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.45002859830856323, 'eval_precision': 0.2630359212050985, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.260919540229885, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.9875, 'eval_samples_per_second': 512.466, 'eval_steps_per_second': 64.267, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0111, 'learning_rate': 2e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4633071720600128, 'eval_precision': 0.24721603563474387, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2501408450704225, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 3.0003, 'eval_samples_per_second': 510.274, 'eval_steps_per_second': 63.993, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0085, 'learning_rate': 1.75e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.46217191219329834, 'eval_precision': 0.24281150159744408, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.2511013215859031, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 3.0014, 'eval_samples_per_second': 510.09, 'eval_steps_per_second': 63.969, 'epoch': 13.0, 'step': 1755}, {'loss': 0.007, 'learning_rate': 1.5e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4687652289867401, 'eval_precision': 0.2513255567338282, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.26043956043956046, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.9876, 'eval_samples_per_second': 512.445, 'eval_steps_per_second': 64.265, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0055, 'learning_rate': 1.25e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.47260043025016785, 'eval_precision': 0.2554660529344074, 'eval_recall': 0.2531356898517674, 'eval_f1': 0.2542955326460481, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.9865, 'eval_samples_per_second': 512.639, 'eval_steps_per_second': 64.289, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0051, 'learning_rate': 1e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.47639673948287964, 'eval_precision': 0.2623762376237624, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.25163204747774476, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9855, 'eval_samples_per_second': 512.815, 'eval_steps_per_second': 64.311, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0036, 'learning_rate': 7.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4805825650691986, 'eval_precision': 0.2547568710359408, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2643993417443774, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 3.0033, 'eval_samples_per_second': 509.772, 'eval_steps_per_second': 63.93, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0032, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.48663848638534546, 'eval_precision': 0.2556008146639511, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.27003765465303925, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.9607, 'eval_samples_per_second': 517.106, 'eval_steps_per_second': 64.849, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0026, 'learning_rate': 2.5e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4852539002895355, 'eval_precision': 0.2613390928725702, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2684414864115363, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.9578, 'eval_samples_per_second': 517.608, 'eval_steps_per_second': 64.912, 'epoch': 19.0, 'step': 2565}, {'loss': 0.003, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.485655277967453, 'eval_precision': 0.25813449023861174, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.26459143968871596, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9279, 'eval_samples_per_second': 522.898, 'eval_steps_per_second': 65.576, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 344.9614, 'train_samples_per_second': 500.578, 'train_steps_per_second': 7.827, 'total_flos': 1593200676638592.0, 'train_loss': 0.06131516682880896, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =       0.94
  predict_f1                 =     0.2282
  predict_loss               =       0.22
  predict_precision          =     0.2846
  predict_recall             =     0.1905
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.746
  predict_steps_per_second   =     64.468
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_small_01.json completed. F1: 0.22819885900570497
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_10.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of XLMRobertaForTokenClassification were not initialized from the model checkpoint at xlm-roberta-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_10.json
01150927_tsa-intensity_XLM-R_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5369.55 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6298.27 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6396.26 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6481.91 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6544.86 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6710.58 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5965.81 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6319.85 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6337.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6987.65 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6674.23 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6572.56 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6450.87 examples/s]
You're using a XLMRobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_XLM-R_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'attention_mask', 'labels']
{'loss': 0.7573, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 0.32196712493896484, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.4162, 'eval_samples_per_second': 633.627, 'eval_steps_per_second': 79.462, 'epoch': 1.0}
{'loss': 0.3161, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 0.2731820046901703, 'eval_precision': 0.04878048780487805, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008342022940563087, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.2931, 'eval_samples_per_second': 667.665, 'eval_steps_per_second': 83.731, 'epoch': 2.0}
{'loss': 0.2828, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 0.2500757575035095, 'eval_precision': 0.17263843648208468, 'eval_recall': 0.06043329532497149, 'eval_f1': 0.08952702702702703, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3117, 'eval_samples_per_second': 662.282, 'eval_steps_per_second': 83.056, 'epoch': 3.0}
{'loss': 0.2552, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 0.24227020144462585, 'eval_precision': 0.17325800376647835, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.1306818181818182, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.2979, 'eval_samples_per_second': 666.262, 'eval_steps_per_second': 83.555, 'epoch': 4.0}
{'loss': 0.2343, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 0.23650768399238586, 'eval_precision': 0.17638266068759342, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.15265200517464425, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.318, 'eval_samples_per_second': 660.496, 'eval_steps_per_second': 82.832, 'epoch': 5.0}
{'loss': 0.2167, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.23337894678115845, 'eval_precision': 0.1838006230529595, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.1553653719552337, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.315, 'eval_samples_per_second': 661.338, 'eval_steps_per_second': 82.937, 'epoch': 6.0}
{'loss': 0.2006, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.24123208224773407, 'eval_precision': 0.1901840490797546, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.18321513002364065, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.3233, 'eval_samples_per_second': 658.963, 'eval_steps_per_second': 82.639, 'epoch': 7.0}
{'loss': 0.1877, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.24208025634288788, 'eval_precision': 0.1952941176470588, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.19224088013896934, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.3112, 'eval_samples_per_second': 662.417, 'eval_steps_per_second': 83.073, 'epoch': 8.0}
{'loss': 0.1756, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.247715562582016, 'eval_precision': 0.21629213483146068, 'eval_recall': 0.17559863169897377, 'eval_f1': 0.19383259911894274, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.301, 'eval_samples_per_second': 665.364, 'eval_steps_per_second': 83.442, 'epoch': 9.0}
{'loss': 0.1656, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.24882414937019348, 'eval_precision': 0.2209026128266033, 'eval_recall': 0.2120866590649943, 'eval_f1': 0.2164048865619546, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.328, 'eval_samples_per_second': 657.643, 'eval_steps_per_second': 82.474, 'epoch': 10.0}
{'loss': 0.159, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.257292777299881, 'eval_precision': 0.2075654704170708, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.22431865828092243, 'eval_accuracy': 0.9288195784760287, 'eval_runtime': 2.3083, 'eval_samples_per_second': 663.25, 'eval_steps_per_second': 83.177, 'epoch': 11.0}
{'loss': 0.151, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.2624111771583557, 'eval_precision': 0.21052631578947367, 'eval_recall': 0.2006841505131129, 'eval_f1': 0.20548744892002335, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3022, 'eval_samples_per_second': 665.014, 'eval_steps_per_second': 83.398, 'epoch': 12.0}
{'loss': 0.1453, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.25976914167404175, 'eval_precision': 0.2250300842358604, 'eval_recall': 0.21322690992018245, 'eval_f1': 0.21896955503512883, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.3222, 'eval_samples_per_second': 659.301, 'eval_steps_per_second': 82.682, 'epoch': 13.0}
{'loss': 0.1407, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.2623184621334076, 'eval_precision': 0.24533001245330013, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.23452380952380955, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3121, 'eval_samples_per_second': 662.165, 'eval_steps_per_second': 83.041, 'epoch': 14.0}
{'loss': 0.1373, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.26308077573776245, 'eval_precision': 0.23060109289617486, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.23549107142857145, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3037, 'eval_samples_per_second': 664.591, 'eval_steps_per_second': 83.345, 'epoch': 15.0}
{'loss': 0.1328, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.2651950716972351, 'eval_precision': 0.2361111111111111, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23434807581849512, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 2.3049, 'eval_samples_per_second': 664.249, 'eval_steps_per_second': 83.302, 'epoch': 16.0}
{'loss': 0.1303, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.268983393907547, 'eval_precision': 0.23814773980154355, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.242152466367713, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3172, 'eval_samples_per_second': 660.703, 'eval_steps_per_second': 82.858, 'epoch': 17.0}
{'loss': 0.1268, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.2704527676105499, 'eval_precision': 0.2296137339055794, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.23659480375898284, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.324, 'eval_samples_per_second': 658.773, 'eval_steps_per_second': 82.616, 'epoch': 18.0}
{'loss': 0.1244, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.2732175290584564, 'eval_precision': 0.22823779193205945, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.23639362286970864, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.3077, 'eval_samples_per_second': 663.441, 'eval_steps_per_second': 83.201, 'epoch': 19.0}
{'loss': 0.1234, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.27277302742004395, 'eval_precision': 0.23255813953488372, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23595505617977527, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3008, 'eval_samples_per_second': 665.422, 'eval_steps_per_second': 83.449, 'epoch': 20.0}
{'train_runtime': 705.5967, 'train_samples_per_second': 244.729, 'train_steps_per_second': 3.827, 'train_loss': 0.20814486044424552, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.2081
  train_runtime            = 0:11:45.59
  train_samples            =       8634
  train_samples_per_second =    244.729
  train_steps_per_second   =      3.827
[{'loss': 0.7573, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.32196712493896484, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.4162, 'eval_samples_per_second': 633.627, 'eval_steps_per_second': 79.462, 'epoch': 1.0, 'step': 135}, {'loss': 0.3161, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.2731820046901703, 'eval_precision': 0.04878048780487805, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008342022940563087, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.2931, 'eval_samples_per_second': 667.665, 'eval_steps_per_second': 83.731, 'epoch': 2.0, 'step': 270}, {'loss': 0.2828, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2500757575035095, 'eval_precision': 0.17263843648208468, 'eval_recall': 0.06043329532497149, 'eval_f1': 0.08952702702702703, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3117, 'eval_samples_per_second': 662.282, 'eval_steps_per_second': 83.056, 'epoch': 3.0, 'step': 405}, {'loss': 0.2552, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.24227020144462585, 'eval_precision': 0.17325800376647835, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.1306818181818182, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.2979, 'eval_samples_per_second': 666.262, 'eval_steps_per_second': 83.555, 'epoch': 4.0, 'step': 540}, {'loss': 0.2343, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.23650768399238586, 'eval_precision': 0.17638266068759342, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.15265200517464425, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.318, 'eval_samples_per_second': 660.496, 'eval_steps_per_second': 82.832, 'epoch': 5.0, 'step': 675}, {'loss': 0.2167, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.23337894678115845, 'eval_precision': 0.1838006230529595, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.1553653719552337, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.315, 'eval_samples_per_second': 661.338, 'eval_steps_per_second': 82.937, 'epoch': 6.0, 'step': 810}, {'loss': 0.2006, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.24123208224773407, 'eval_precision': 0.1901840490797546, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.18321513002364065, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.3233, 'eval_samples_per_second': 658.963, 'eval_steps_per_second': 82.639, 'epoch': 7.0, 'step': 945}, {'loss': 0.1877, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.24208025634288788, 'eval_precision': 0.1952941176470588, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.19224088013896934, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.3112, 'eval_samples_per_second': 662.417, 'eval_steps_per_second': 83.073, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1756, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.247715562582016, 'eval_precision': 0.21629213483146068, 'eval_recall': 0.17559863169897377, 'eval_f1': 0.19383259911894274, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.301, 'eval_samples_per_second': 665.364, 'eval_steps_per_second': 83.442, 'epoch': 9.0, 'step': 1215}, {'loss': 0.1656, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.24882414937019348, 'eval_precision': 0.2209026128266033, 'eval_recall': 0.2120866590649943, 'eval_f1': 0.2164048865619546, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.328, 'eval_samples_per_second': 657.643, 'eval_steps_per_second': 82.474, 'epoch': 10.0, 'step': 1350}, {'loss': 0.159, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.257292777299881, 'eval_precision': 0.2075654704170708, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.22431865828092243, 'eval_accuracy': 0.9288195784760287, 'eval_runtime': 2.3083, 'eval_samples_per_second': 663.25, 'eval_steps_per_second': 83.177, 'epoch': 11.0, 'step': 1485}, {'loss': 0.151, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2624111771583557, 'eval_precision': 0.21052631578947367, 'eval_recall': 0.2006841505131129, 'eval_f1': 0.20548744892002335, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3022, 'eval_samples_per_second': 665.014, 'eval_steps_per_second': 83.398, 'epoch': 12.0, 'step': 1620}, {'loss': 0.1453, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.25976914167404175, 'eval_precision': 0.2250300842358604, 'eval_recall': 0.21322690992018245, 'eval_f1': 0.21896955503512883, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.3222, 'eval_samples_per_second': 659.301, 'eval_steps_per_second': 82.682, 'epoch': 13.0, 'step': 1755}, {'loss': 0.1407, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2623184621334076, 'eval_precision': 0.24533001245330013, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.23452380952380955, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.3121, 'eval_samples_per_second': 662.165, 'eval_steps_per_second': 83.041, 'epoch': 14.0, 'step': 1890}, {'loss': 0.1373, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.26308077573776245, 'eval_precision': 0.23060109289617486, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.23549107142857145, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3037, 'eval_samples_per_second': 664.591, 'eval_steps_per_second': 83.345, 'epoch': 15.0, 'step': 2025}, {'loss': 0.1328, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2651950716972351, 'eval_precision': 0.2361111111111111, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.23434807581849512, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 2.3049, 'eval_samples_per_second': 664.249, 'eval_steps_per_second': 83.302, 'epoch': 16.0, 'step': 2160}, {'loss': 0.1303, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.268983393907547, 'eval_precision': 0.23814773980154355, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.242152466367713, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3172, 'eval_samples_per_second': 660.703, 'eval_steps_per_second': 82.858, 'epoch': 17.0, 'step': 2295}, {'loss': 0.1268, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.2704527676105499, 'eval_precision': 0.2296137339055794, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.23659480375898284, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.324, 'eval_samples_per_second': 658.773, 'eval_steps_per_second': 82.616, 'epoch': 18.0, 'step': 2430}, {'loss': 0.1244, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2732175290584564, 'eval_precision': 0.22823779193205945, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.23639362286970864, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.3077, 'eval_samples_per_second': 663.441, 'eval_steps_per_second': 83.201, 'epoch': 19.0, 'step': 2565}, {'loss': 0.1234, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.27277302742004395, 'eval_precision': 0.23255813953488372, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23595505617977527, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3008, 'eval_samples_per_second': 665.422, 'eval_steps_per_second': 83.449, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 705.5967, 'train_samples_per_second': 244.729, 'train_steps_per_second': 3.827, 'total_flos': 7231359841755312.0, 'train_loss': 0.20814486044424552, 'epoch': 20.0, 'step': 2700}]

Evaluation, xlm-roberta-base
***** predict metrics *****
  predict_accuracy           =     0.9361
  predict_f1                 =     0.1736
  predict_loss               =     0.2356
  predict_precision          =     0.2068
  predict_recall             =     0.1497
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    652.196
  predict_steps_per_second   =     81.524
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_XLM-R_base_10.json completed. F1: 0.17363851617995263
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_13.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_13.json
01150927_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5823.33 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6724.14 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6747.17 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6859.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6960.35 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7106.12 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7293.53 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6375.32 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6711.11 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7336.51 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7003.05 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7024.16 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6864.13 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01150927_tsa-intensity_NorBERT_3_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.8713, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 0.9774181842803955, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.915, 'eval_samples_per_second': 258.835, 'eval_steps_per_second': 32.46, 'epoch': 1.0}
{'loss': 0.6108, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 0.40235579013824463, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7709, 'eval_samples_per_second': 265.298, 'eval_steps_per_second': 33.271, 'epoch': 2.0}
{'loss': 0.3344, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 0.2764873802661896, 'eval_precision': 0.09666666666666666, 'eval_recall': 0.0330672748004561, 'eval_f1': 0.04927782497875956, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.7722, 'eval_samples_per_second': 265.239, 'eval_steps_per_second': 33.263, 'epoch': 3.0}
{'loss': 0.2616, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 0.2594943046569824, 'eval_precision': 0.09387755102040816, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.09908454496499731, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 5.7744, 'eval_samples_per_second': 265.137, 'eval_steps_per_second': 33.25, 'epoch': 4.0}
{'loss': 0.2235, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 0.26923373341560364, 'eval_precision': 0.1592442645074224, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.14585908529048208, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7792, 'eval_samples_per_second': 264.916, 'eval_steps_per_second': 33.223, 'epoch': 5.0}
{'loss': 0.1877, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.2566293179988861, 'eval_precision': 0.17391304347826086, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.1712962962962963, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 5.7739, 'eval_samples_per_second': 265.16, 'eval_steps_per_second': 33.253, 'epoch': 6.0}
{'loss': 0.1572, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.26178640127182007, 'eval_precision': 0.18358038768529075, 'eval_recall': 0.18358038768529075, 'eval_f1': 0.18358038768529075, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.7696, 'eval_samples_per_second': 265.355, 'eval_steps_per_second': 33.278, 'epoch': 7.0}
{'loss': 0.1379, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.27337172627449036, 'eval_precision': 0.211750305997552, 'eval_recall': 0.19726339794754846, 'eval_f1': 0.20425029515938603, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 5.7615, 'eval_samples_per_second': 265.728, 'eval_steps_per_second': 33.324, 'epoch': 8.0}
{'loss': 0.1237, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.26744234561920166, 'eval_precision': 0.2275132275132275, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.2360043907793633, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.8431, 'eval_samples_per_second': 262.018, 'eval_steps_per_second': 32.859, 'epoch': 9.0}
{'loss': 0.1117, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.2729719877243042, 'eval_precision': 0.23217922606924643, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.24529316837009144, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 5.7599, 'eval_samples_per_second': 265.804, 'eval_steps_per_second': 33.334, 'epoch': 10.0}
{'loss': 0.1009, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.2771696448326111, 'eval_precision': 0.25349301397205587, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.27035657264502394, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 5.7742, 'eval_samples_per_second': 265.147, 'eval_steps_per_second': 33.252, 'epoch': 11.0}
{'loss': 0.0932, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.283407986164093, 'eval_precision': 0.25957446808510637, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2685745734727573, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 5.7909, 'eval_samples_per_second': 264.379, 'eval_steps_per_second': 33.155, 'epoch': 12.0}
{'loss': 0.0859, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.2815851867198944, 'eval_precision': 0.26519916142557654, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2763517203713817, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.7638, 'eval_samples_per_second': 265.622, 'eval_steps_per_second': 33.311, 'epoch': 13.0}
{'loss': 0.0803, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.2858956754207611, 'eval_precision': 0.2744090441932169, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.28864864864864864, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 5.7916, 'eval_samples_per_second': 264.347, 'eval_steps_per_second': 33.151, 'epoch': 14.0}
{'loss': 0.0748, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.29147636890411377, 'eval_precision': 0.28807947019867547, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29276500280426243, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 5.7728, 'eval_samples_per_second': 265.21, 'eval_steps_per_second': 33.259, 'epoch': 15.0}
{'loss': 0.0701, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.2910868525505066, 'eval_precision': 0.28774617067833697, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2936906756002233, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 5.7731, 'eval_samples_per_second': 265.197, 'eval_steps_per_second': 33.258, 'epoch': 16.0}
{'loss': 0.0664, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.2936268746852875, 'eval_precision': 0.2795156407669021, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2965738758029979, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 5.7625, 'eval_samples_per_second': 265.685, 'eval_steps_per_second': 33.319, 'epoch': 17.0}
{'loss': 0.0635, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.29405513405799866, 'eval_precision': 0.28105906313645623, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2969338353953739, 'eval_accuracy': 0.9380452404848297, 'eval_runtime': 5.8415, 'eval_samples_per_second': 262.089, 'eval_steps_per_second': 32.868, 'epoch': 18.0}
{'loss': 0.0616, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.2966759502887726, 'eval_precision': 0.2849740932642487, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2985884907709012, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.7777, 'eval_samples_per_second': 264.982, 'eval_steps_per_second': 33.231, 'epoch': 19.0}
{'loss': 0.0606, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.29607847332954407, 'eval_precision': 0.2772585669781931, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2902173913043478, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 5.7562, 'eval_samples_per_second': 265.975, 'eval_steps_per_second': 33.355, 'epoch': 20.0}
{'train_runtime': 2052.5102, 'train_samples_per_second': 84.131, 'train_steps_per_second': 1.315, 'train_loss': 0.23885223671242042, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.2389
  train_runtime            = 0:34:12.51
  train_samples            =       8634
  train_samples_per_second =     84.131
  train_steps_per_second   =      1.315
[{'loss': 1.8713, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.9774181842803955, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.915, 'eval_samples_per_second': 258.835, 'eval_steps_per_second': 32.46, 'epoch': 1.0, 'step': 135}, {'loss': 0.6108, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.40235579013824463, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7709, 'eval_samples_per_second': 265.298, 'eval_steps_per_second': 33.271, 'epoch': 2.0, 'step': 270}, {'loss': 0.3344, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2764873802661896, 'eval_precision': 0.09666666666666666, 'eval_recall': 0.0330672748004561, 'eval_f1': 0.04927782497875956, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.7722, 'eval_samples_per_second': 265.239, 'eval_steps_per_second': 33.263, 'epoch': 3.0, 'step': 405}, {'loss': 0.2616, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2594943046569824, 'eval_precision': 0.09387755102040816, 'eval_recall': 0.10490307867730901, 'eval_f1': 0.09908454496499731, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 5.7744, 'eval_samples_per_second': 265.137, 'eval_steps_per_second': 33.25, 'epoch': 4.0, 'step': 540}, {'loss': 0.2235, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.26923373341560364, 'eval_precision': 0.1592442645074224, 'eval_recall': 0.1345496009122007, 'eval_f1': 0.14585908529048208, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7792, 'eval_samples_per_second': 264.916, 'eval_steps_per_second': 33.223, 'epoch': 5.0, 'step': 675}, {'loss': 0.1877, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2566293179988861, 'eval_precision': 0.17391304347826086, 'eval_recall': 0.16875712656784492, 'eval_f1': 0.1712962962962963, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 5.7739, 'eval_samples_per_second': 265.16, 'eval_steps_per_second': 33.253, 'epoch': 6.0, 'step': 810}, {'loss': 0.1572, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.26178640127182007, 'eval_precision': 0.18358038768529075, 'eval_recall': 0.18358038768529075, 'eval_f1': 0.18358038768529075, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.7696, 'eval_samples_per_second': 265.355, 'eval_steps_per_second': 33.278, 'epoch': 7.0, 'step': 945}, {'loss': 0.1379, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.27337172627449036, 'eval_precision': 0.211750305997552, 'eval_recall': 0.19726339794754846, 'eval_f1': 0.20425029515938603, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 5.7615, 'eval_samples_per_second': 265.728, 'eval_steps_per_second': 33.324, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1237, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.26744234561920166, 'eval_precision': 0.2275132275132275, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.2360043907793633, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.8431, 'eval_samples_per_second': 262.018, 'eval_steps_per_second': 32.859, 'epoch': 9.0, 'step': 1215}, {'loss': 0.1117, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2729719877243042, 'eval_precision': 0.23217922606924643, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.24529316837009144, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 5.7599, 'eval_samples_per_second': 265.804, 'eval_steps_per_second': 33.334, 'epoch': 10.0, 'step': 1350}, {'loss': 0.1009, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2771696448326111, 'eval_precision': 0.25349301397205587, 'eval_recall': 0.2896237172177879, 'eval_f1': 0.27035657264502394, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 5.7742, 'eval_samples_per_second': 265.147, 'eval_steps_per_second': 33.252, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0932, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.283407986164093, 'eval_precision': 0.25957446808510637, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2685745734727573, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 5.7909, 'eval_samples_per_second': 264.379, 'eval_steps_per_second': 33.155, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0859, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2815851867198944, 'eval_precision': 0.26519916142557654, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.2763517203713817, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.7638, 'eval_samples_per_second': 265.622, 'eval_steps_per_second': 33.311, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0803, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2858956754207611, 'eval_precision': 0.2744090441932169, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.28864864864864864, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 5.7916, 'eval_samples_per_second': 264.347, 'eval_steps_per_second': 33.151, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0748, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.29147636890411377, 'eval_precision': 0.28807947019867547, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29276500280426243, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 5.7728, 'eval_samples_per_second': 265.21, 'eval_steps_per_second': 33.259, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0701, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2910868525505066, 'eval_precision': 0.28774617067833697, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.2936906756002233, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 5.7731, 'eval_samples_per_second': 265.197, 'eval_steps_per_second': 33.258, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0664, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.2936268746852875, 'eval_precision': 0.2795156407669021, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2965738758029979, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 5.7625, 'eval_samples_per_second': 265.685, 'eval_steps_per_second': 33.319, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0635, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.29405513405799866, 'eval_precision': 0.28105906313645623, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2969338353953739, 'eval_accuracy': 0.9380452404848297, 'eval_runtime': 5.8415, 'eval_samples_per_second': 262.089, 'eval_steps_per_second': 32.868, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0616, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2966759502887726, 'eval_precision': 0.2849740932642487, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2985884907709012, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.7777, 'eval_samples_per_second': 264.982, 'eval_steps_per_second': 33.231, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0606, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.29607847332954407, 'eval_precision': 0.2772585669781931, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2902173913043478, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 5.7562, 'eval_samples_per_second': 265.975, 'eval_steps_per_second': 33.355, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 2052.5102, 'train_samples_per_second': 84.131, 'train_steps_per_second': 1.315, 'total_flos': 2.253163885266931e+16, 'train_loss': 0.23885223671242042, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9334
  predict_f1                 =     0.1297
  predict_loss               =     0.2713
  predict_precision          =     0.1362
  predict_recall             =     0.1238
  predict_runtime            = 0:00:04.85
  predict_samples_per_second =    261.922
  predict_steps_per_second   =      32.74
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_large_13.json completed. F1: 0.12972202423378473
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_12.json
01150927_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5175.12 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6357.71 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6539.79 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6773.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6931.11 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7131.97 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6293.05 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6664.58 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6630.30 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7430.12 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7083.60 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7139.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6983.15 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4061, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': 0.24401378631591797, 'eval_precision': 0.19273743016759776, 'eval_recall': 0.07867730900798175, 'eval_f1': 0.1117408906882591, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 4.8178, 'eval_samples_per_second': 317.779, 'eval_steps_per_second': 39.852, 'epoch': 1.0}
{'loss': 0.232, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': 0.20864439010620117, 'eval_precision': 0.2099737532808399, 'eval_recall': 0.18244013683010263, 'eval_f1': 0.1952410006101281, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.6692, 'eval_samples_per_second': 327.893, 'eval_steps_per_second': 41.121, 'epoch': 2.0}
{'loss': 0.1858, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': 0.19898062944412231, 'eval_precision': 0.26785714285714285, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.25285972305839854, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6773, 'eval_samples_per_second': 327.324, 'eval_steps_per_second': 41.049, 'epoch': 3.0}
{'loss': 0.1531, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': 0.21115417778491974, 'eval_precision': 0.28058361391694725, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2828054298642534, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6651, 'eval_samples_per_second': 328.185, 'eval_steps_per_second': 41.157, 'epoch': 4.0}
{'loss': 0.1265, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': 0.21833468973636627, 'eval_precision': 0.2976629766297663, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.28639053254437874, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.67, 'eval_samples_per_second': 327.836, 'eval_steps_per_second': 41.113, 'epoch': 5.0}
{'loss': 0.1055, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': 0.2376164048910141, 'eval_precision': 0.2721311475409836, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2779017857142857, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.096, 'eval_steps_per_second': 41.146, 'epoch': 6.0}
{'loss': 0.09, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': 0.2509889304637909, 'eval_precision': 0.26418152350081037, 'eval_recall': 0.3717217787913341, 'eval_f1': 0.3088583609663666, 'eval_accuracy': 0.9327182891994132, 'eval_runtime': 4.6732, 'eval_samples_per_second': 327.61, 'eval_steps_per_second': 41.085, 'epoch': 7.0}
{'loss': 0.0773, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': 0.2563685178756714, 'eval_precision': 0.2791741472172352, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3124058262179809, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 4.6718, 'eval_samples_per_second': 327.708, 'eval_steps_per_second': 41.097, 'epoch': 8.0}
{'loss': 0.0654, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': 0.2662762403488159, 'eval_precision': 0.2795311091073039, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.31218529707955694, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.349, 'eval_steps_per_second': 41.178, 'epoch': 9.0}
{'loss': 0.0566, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': 0.28281745314598083, 'eval_precision': 0.29703915950334286, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3232848232848233, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.356, 'eval_steps_per_second': 41.179, 'epoch': 10.0}
{'loss': 0.0508, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': 0.28494513034820557, 'eval_precision': 0.2886297376093295, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3116474291710388, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.322, 'eval_steps_per_second': 41.174, 'epoch': 11.0}
{'loss': 0.0444, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': 0.29786941409111023, 'eval_precision': 0.3091451292246521, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.330323951141795, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.292, 'eval_steps_per_second': 41.17, 'epoch': 12.0}
{'loss': 0.0401, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': 0.30266374349594116, 'eval_precision': 0.28893058161350843, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3170355120946989, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.7382, 'eval_samples_per_second': 323.118, 'eval_steps_per_second': 40.522, 'epoch': 13.0}
{'loss': 0.0362, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': 0.31393277645111084, 'eval_precision': 0.28952569169960474, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31021704605611433, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.57, 'eval_steps_per_second': 41.205, 'epoch': 14.0}
{'loss': 0.0325, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': 0.3246813714504242, 'eval_precision': 0.29008341056533826, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.320040899795501, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 4.667, 'eval_samples_per_second': 328.051, 'eval_steps_per_second': 41.14, 'epoch': 15.0}
{'loss': 0.0294, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': 0.3314874470233917, 'eval_precision': 0.2937956204379562, 'eval_recall': 0.3671607753705815, 'eval_f1': 0.3264064875823619, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.256, 'eval_steps_per_second': 41.166, 'epoch': 16.0}
{'loss': 0.0285, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': 0.334063857793808, 'eval_precision': 0.3, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.325508607198748, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.147, 'eval_steps_per_second': 41.152, 'epoch': 17.0}
{'loss': 0.0267, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': 0.33850982785224915, 'eval_precision': 0.31126482213438733, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3335097935415564, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.096, 'eval_steps_per_second': 41.146, 'epoch': 18.0}
{'loss': 0.025, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': 0.3420373201370239, 'eval_precision': 0.30297029702970296, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3243243243243243, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.7284, 'eval_samples_per_second': 323.789, 'eval_steps_per_second': 40.606, 'epoch': 19.0}
{'loss': 0.024, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': 0.3421856164932251, 'eval_precision': 0.30596285434995113, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3294736842105263, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6534, 'eval_samples_per_second': 329.01, 'eval_steps_per_second': 41.261, 'epoch': 20.0}
{'train_runtime': 1743.9169, 'train_samples_per_second': 99.018, 'train_steps_per_second': 1.548, 'train_loss': 0.09179622835583157, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =     0.0918
  train_runtime            = 0:29:03.91
  train_samples            =       8634
  train_samples_per_second =     99.018
  train_steps_per_second   =      1.548
[{'loss': 0.4061, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.24401378631591797, 'eval_precision': 0.19273743016759776, 'eval_recall': 0.07867730900798175, 'eval_f1': 0.1117408906882591, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 4.8178, 'eval_samples_per_second': 317.779, 'eval_steps_per_second': 39.852, 'epoch': 1.0, 'step': 135}, {'loss': 0.232, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20864439010620117, 'eval_precision': 0.2099737532808399, 'eval_recall': 0.18244013683010263, 'eval_f1': 0.1952410006101281, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.6692, 'eval_samples_per_second': 327.893, 'eval_steps_per_second': 41.121, 'epoch': 2.0, 'step': 270}, {'loss': 0.1858, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.19898062944412231, 'eval_precision': 0.26785714285714285, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.25285972305839854, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6773, 'eval_samples_per_second': 327.324, 'eval_steps_per_second': 41.049, 'epoch': 3.0, 'step': 405}, {'loss': 0.1531, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.21115417778491974, 'eval_precision': 0.28058361391694725, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2828054298642534, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6651, 'eval_samples_per_second': 328.185, 'eval_steps_per_second': 41.157, 'epoch': 4.0, 'step': 540}, {'loss': 0.1265, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.21833468973636627, 'eval_precision': 0.2976629766297663, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.28639053254437874, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.67, 'eval_samples_per_second': 327.836, 'eval_steps_per_second': 41.113, 'epoch': 5.0, 'step': 675}, {'loss': 0.1055, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2376164048910141, 'eval_precision': 0.2721311475409836, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2779017857142857, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.096, 'eval_steps_per_second': 41.146, 'epoch': 6.0, 'step': 810}, {'loss': 0.09, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2509889304637909, 'eval_precision': 0.26418152350081037, 'eval_recall': 0.3717217787913341, 'eval_f1': 0.3088583609663666, 'eval_accuracy': 0.9327182891994132, 'eval_runtime': 4.6732, 'eval_samples_per_second': 327.61, 'eval_steps_per_second': 41.085, 'epoch': 7.0, 'step': 945}, {'loss': 0.0773, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2563685178756714, 'eval_precision': 0.2791741472172352, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3124058262179809, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 4.6718, 'eval_samples_per_second': 327.708, 'eval_steps_per_second': 41.097, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0654, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2662762403488159, 'eval_precision': 0.2795311091073039, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.31218529707955694, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.349, 'eval_steps_per_second': 41.178, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0566, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.28281745314598083, 'eval_precision': 0.29703915950334286, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3232848232848233, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.356, 'eval_steps_per_second': 41.179, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0508, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.28494513034820557, 'eval_precision': 0.2886297376093295, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3116474291710388, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6631, 'eval_samples_per_second': 328.322, 'eval_steps_per_second': 41.174, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0444, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.29786941409111023, 'eval_precision': 0.3091451292246521, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.330323951141795, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.292, 'eval_steps_per_second': 41.17, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0401, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.30266374349594116, 'eval_precision': 0.28893058161350843, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3170355120946989, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.7382, 'eval_samples_per_second': 323.118, 'eval_steps_per_second': 40.522, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0362, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.31393277645111084, 'eval_precision': 0.28952569169960474, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31021704605611433, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.57, 'eval_steps_per_second': 41.205, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0325, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3246813714504242, 'eval_precision': 0.29008341056533826, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.320040899795501, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 4.667, 'eval_samples_per_second': 328.051, 'eval_steps_per_second': 41.14, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0294, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3314874470233917, 'eval_precision': 0.2937956204379562, 'eval_recall': 0.3671607753705815, 'eval_f1': 0.3264064875823619, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.256, 'eval_steps_per_second': 41.166, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0285, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.334063857793808, 'eval_precision': 0.3, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.325508607198748, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.147, 'eval_steps_per_second': 41.152, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0267, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.33850982785224915, 'eval_precision': 0.31126482213438733, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3335097935415564, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 4.6663, 'eval_samples_per_second': 328.096, 'eval_steps_per_second': 41.146, 'epoch': 18.0, 'step': 2430}, {'loss': 0.025, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3420373201370239, 'eval_precision': 0.30297029702970296, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3243243243243243, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.7284, 'eval_samples_per_second': 323.789, 'eval_steps_per_second': 40.606, 'epoch': 19.0, 'step': 2565}, {'loss': 0.024, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3421856164932251, 'eval_precision': 0.30596285434995113, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3294736842105263, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6534, 'eval_samples_per_second': 329.01, 'eval_steps_per_second': 41.261, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 1743.9169, 'train_samples_per_second': 99.018, 'train_steps_per_second': 1.548, 'total_flos': 2.164421811922236e+16, 'train_loss': 0.09179622835583157, 'epoch': 20.0, 'step': 2700}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9388
  predict_f1                 =     0.2331
  predict_loss               =     0.2058
  predict_precision          =     0.2423
  predict_recall             =     0.2245
  predict_runtime            = 0:00:03.95
  predict_samples_per_second =    321.589
  predict_steps_per_second   =     40.199
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NB-BERT_large_12.json completed. F1: 0.2330508474576271
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_09.json
01150927_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-0': 1, 'I-targ-Negative-0': 2, 'B-targ-Negative-1': 3, 'I-targ-Negative-1': 4, 'B-targ-Negative-2': 5, 'I-targ-Negative-2': 6, 'B-targ-Negative-3': 7, 'I-targ-Negative-3': 8, 'B-targ-Positive-0': 9, 'I-targ-Positive-0': 10, 'B-targ-Positive-1': 11, 'I-targ-Positive-1': 12, 'B-targ-Positive-2': 13, 'I-targ-Positive-2': 14, 'B-targ-Positive-3': 15, 'I-targ-Positive-3': 16}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6145.04 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6385.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6535.10 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6737.18 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6881.06 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7042.27 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7229.77 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7297.57 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6627.52 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7284.19 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6979.69 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7006.90 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6842.26 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01150927_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.5e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1535, 'eval_samples_per_second': 485.5, 'eval_steps_per_second': 60.886, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.835, 'eval_steps_per_second': 64.815, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.5e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9571, 'eval_samples_per_second': 517.735, 'eval_steps_per_second': 64.928, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9717, 'eval_samples_per_second': 515.187, 'eval_steps_per_second': 64.609, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.867, 'eval_steps_per_second': 64.694, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9571, 'eval_samples_per_second': 517.739, 'eval_steps_per_second': 64.929, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9468, 'eval_samples_per_second': 519.547, 'eval_steps_per_second': 65.155, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.072, 'eval_steps_per_second': 64.97, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.613, 'eval_steps_per_second': 65.415, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0164, 'eval_samples_per_second': 507.56, 'eval_steps_per_second': 63.652, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.5e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9496, 'eval_samples_per_second': 519.06, 'eval_steps_per_second': 65.094, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9486, 'eval_samples_per_second': 519.222, 'eval_steps_per_second': 65.115, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.5e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9436, 'eval_samples_per_second': 520.105, 'eval_steps_per_second': 65.225, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.946, 'eval_samples_per_second': 519.68, 'eval_steps_per_second': 65.172, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.937, 'eval_samples_per_second': 521.28, 'eval_steps_per_second': 65.373, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.65, 'eval_steps_per_second': 65.294, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.5e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.517, 'eval_steps_per_second': 65.277, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9355, 'eval_samples_per_second': 521.539, 'eval_steps_per_second': 65.405, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9626, 'eval_samples_per_second': 516.782, 'eval_steps_per_second': 64.809, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9504, 'eval_samples_per_second': 518.904, 'eval_steps_per_second': 65.075, 'epoch': 20.0}
{'train_runtime': 699.6633, 'train_samples_per_second': 246.804, 'train_steps_per_second': 3.859, 'train_loss': 0.0, 'epoch': 20.0}
***** train metrics *****
  epoch                    =       20.0
  train_loss               =        0.0
  train_runtime            = 0:11:39.66
  train_samples            =       8634
  train_samples_per_second =    246.804
  train_steps_per_second   =      3.859
[{'loss': 0.0, 'learning_rate': 9.5e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1535, 'eval_samples_per_second': 485.5, 'eval_steps_per_second': 60.886, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 9e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.835, 'eval_steps_per_second': 64.815, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 8.5e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9571, 'eval_samples_per_second': 517.735, 'eval_steps_per_second': 64.928, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 8.000000000000001e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9717, 'eval_samples_per_second': 515.187, 'eval_steps_per_second': 64.609, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.867, 'eval_steps_per_second': 64.694, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 7e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9571, 'eval_samples_per_second': 517.739, 'eval_steps_per_second': 64.929, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 6.5000000000000004e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9468, 'eval_samples_per_second': 519.547, 'eval_steps_per_second': 65.155, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 6e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.072, 'eval_steps_per_second': 64.97, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 5.500000000000001e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.613, 'eval_steps_per_second': 65.415, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0164, 'eval_samples_per_second': 507.56, 'eval_steps_per_second': 63.652, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 4.5e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9496, 'eval_samples_per_second': 519.06, 'eval_steps_per_second': 65.094, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 4.000000000000001e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9486, 'eval_samples_per_second': 519.222, 'eval_steps_per_second': 65.115, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.5e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9436, 'eval_samples_per_second': 520.105, 'eval_steps_per_second': 65.225, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 3e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.946, 'eval_samples_per_second': 519.68, 'eval_steps_per_second': 65.172, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.937, 'eval_samples_per_second': 521.28, 'eval_steps_per_second': 65.373, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 2.0000000000000003e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.65, 'eval_steps_per_second': 65.294, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.517, 'eval_steps_per_second': 65.277, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.0000000000000002e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9355, 'eval_samples_per_second': 521.539, 'eval_steps_per_second': 65.405, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5.000000000000001e-07, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9626, 'eval_samples_per_second': 516.782, 'eval_steps_per_second': 64.809, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9504, 'eval_samples_per_second': 518.904, 'eval_steps_per_second': 65.075, 'epoch': 20.0, 'step': 2700}, {'train_runtime': 699.6633, 'train_samples_per_second': 246.804, 'train_steps_per_second': 3.859, 'total_flos': 6363953357311872.0, 'train_loss': 0.0, 'epoch': 20.0, 'step': 2700}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    514.553
  predict_steps_per_second   =     64.319
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01150927_tsa-intensity_NorBERT_3_base_09.json completed. F1: 0.0

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
409168       tsa_norbe+          1                                             05:34:41      0:0 
409168.batch      batch          1        1   05:24:23          0   05:24:23   05:34:41      0:0 
409168.exte+     extern          1        1   00:00:00          0   00:00:00   05:34:41      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
409168                                                                           
409168.batch   4099160K          0   4099160K        0              0          0 
409168.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
409168                                                                                                
409168.batch    15295.04M               0      15295.04M   950382.55M                0     950382.55M 
409168.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 409168 completed at Mon Jan 15 18:18:18 CET 2024
