Starting job 410882 on gpu-7 at Fri Jan 19 16:04:34 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_14.json
Downloading readme:   0%|          | 0.00/7.04k [00:00<?, ?B/s]Downloading readme: 100%|██████████| 7.04k/7.04k [00:00<00:00, 50.8MB/s]
Downloading data:   0%|          | 0.00/674k [00:00<?, ?B/s]Downloading data: 100%|██████████| 674k/674k [00:00<00:00, 3.37MB/s]Downloading data: 100%|██████████| 674k/674k [00:00<00:00, 3.35MB/s]
Downloading data:   0%|          | 0.00/121k [00:00<?, ?B/s]Downloading data: 100%|██████████| 121k/121k [00:00<00:00, 541kB/s]Downloading data: 100%|██████████| 121k/121k [00:00<00:00, 540kB/s]
Downloading data:   0%|          | 0.00/104k [00:00<?, ?B/s]Downloading data: 100%|██████████| 104k/104k [00:00<00:00, 766kB/s]Downloading data: 100%|██████████| 104k/104k [00:00<00:00, 764kB/s]
Generating train split:   0%|          | 0/8634 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 8634/8634 [00:00<00:00, 477664.03 examples/s]
Generating validation split:   0%|          | 0/1531 [00:00<?, ? examples/s]Generating validation split: 100%|██████████| 1531/1531 [00:00<00:00, 423022.36 examples/s]
Generating test split:   0%|          | 0/1272 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1272/1272 [00:00<00:00, 425552.74 examples/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6788.38 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7208.83 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6984.04 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7007.34 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7042.42 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7164.43 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6319.65 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6654.10 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6819.37 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7406.68 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7024.66 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7087.36 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6906.00 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2264, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.16212907433509827, 'eval_precision': 0.4797843665768194, 'eval_recall': 0.40592930444697833, 'eval_f1': 0.4397776405188388, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.171, 'eval_steps_per_second': 81.161, 'epoch': 1.0}
{'loss': 0.1459, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.14626914262771606, 'eval_precision': 0.49938195302843014, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.47924080664294183, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.787, 'eval_steps_per_second': 81.489, 'epoch': 2.0}
{'loss': 0.109, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.15826402604579926, 'eval_precision': 0.43738819320214667, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49022556390977445, 'eval_accuracy': 0.9456496564502432, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.094, 'eval_steps_per_second': 81.402, 'epoch': 3.0}
{'loss': 0.0794, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.17774362862110138, 'eval_precision': 0.4479166666666667, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.48939472322814276, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.488, 'eval_steps_per_second': 80.95, 'epoch': 4.0}
{'loss': 0.0569, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.19159016013145447, 'eval_precision': 0.49075081610446136, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5022271714922049, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.245, 'eval_steps_per_second': 81.421, 'epoch': 5.0}
{'loss': 0.0413, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.21112510561943054, 'eval_precision': 0.47713097713097713, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.499184339314845, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.86, 'eval_steps_per_second': 81.623, 'epoch': 6.0}
{'loss': 0.0316, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.2361588180065155, 'eval_precision': 0.4795383001049318, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.49945355191256835, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.3519, 'eval_samples_per_second': 650.975, 'eval_steps_per_second': 81.638, 'epoch': 7.0}
{'loss': 0.0254, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.24597805738449097, 'eval_precision': 0.4750499001996008, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.506652474720596, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.398, 'eval_steps_per_second': 81.691, 'epoch': 8.0}
{'loss': 0.0181, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.2717819809913635, 'eval_precision': 0.4415954415954416, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.48186528497409326, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.983, 'eval_steps_per_second': 81.639, 'epoch': 9.0}
{'loss': 0.0143, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.29447928071022034, 'eval_precision': 0.44990723562152135, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4961636828644502, 'eval_accuracy': 0.9443372191770246, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.737, 'eval_steps_per_second': 81.482, 'epoch': 10.0}
{'loss': 0.0112, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.29883813858032227, 'eval_precision': 0.4639076034648701, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5031315240083507, 'eval_accuracy': 0.9469620937234617, 'eval_runtime': 2.3557, 'eval_samples_per_second': 649.902, 'eval_steps_per_second': 81.503, 'epoch': 11.0}
{'loss': 0.0105, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.3133409023284912, 'eval_precision': 0.4820295983086681, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5002742731760834, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.148, 'eval_steps_per_second': 81.659, 'epoch': 12.0}
{'loss': 0.0074, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.33039650321006775, 'eval_precision': 0.4738400789733465, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5079365079365079, 'eval_accuracy': 0.947039295916004, 'eval_runtime': 2.3486, 'eval_samples_per_second': 651.888, 'eval_steps_per_second': 81.752, 'epoch': 13.0}
{'loss': 0.0066, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.33372974395751953, 'eval_precision': 0.47918781725888326, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5069817400644469, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.781, 'eval_steps_per_second': 81.488, 'epoch': 14.0}
{'loss': 0.005, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.34812578558921814, 'eval_precision': 0.4678194044188281, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5078206465067779, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3515, 'eval_samples_per_second': 651.087, 'eval_steps_per_second': 81.652, 'epoch': 15.0}
{'loss': 0.0039, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.3471148610115051, 'eval_precision': 0.5097365406643757, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5085714285714286, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3423, 'eval_samples_per_second': 653.643, 'eval_steps_per_second': 81.972, 'epoch': 16.0}
{'loss': 0.0041, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.3546239733695984, 'eval_precision': 0.49691991786447637, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5229605618584549, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.928, 'eval_steps_per_second': 81.632, 'epoch': 17.0}
{'loss': 0.004, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.36921873688697815, 'eval_precision': 0.4723809523809524, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5147898287493513, 'eval_accuracy': 0.9463058750868525, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.573, 'eval_steps_per_second': 81.713, 'epoch': 18.0}
{'loss': 0.0031, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3705843389034271, 'eval_precision': 0.4849699398797595, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5162666666666667, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.347, 'eval_samples_per_second': 652.332, 'eval_steps_per_second': 81.808, 'epoch': 19.0}
{'loss': 0.0026, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.3735464811325073, 'eval_precision': 0.49245689655172414, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.506371191135734, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.888, 'eval_steps_per_second': 81.627, 'epoch': 20.0}
{'loss': 0.0028, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.37539029121398926, 'eval_precision': 0.48268839103869654, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5099515868746638, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.4204, 'eval_samples_per_second': 632.535, 'eval_steps_per_second': 79.325, 'epoch': 21.0}
{'loss': 0.0021, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.37455540895462036, 'eval_precision': 0.4946808510638298, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5118326912493122, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.353, 'eval_samples_per_second': 650.654, 'eval_steps_per_second': 81.597, 'epoch': 22.0}
{'loss': 0.0017, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.38072702288627625, 'eval_precision': 0.4812992125984252, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5166402535657686, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.992, 'eval_steps_per_second': 81.64, 'epoch': 23.0}
{'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.37813571095466614, 'eval_precision': 0.49122807017543857, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5157096424702058, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.745, 'eval_steps_per_second': 81.483, 'epoch': 24.0}
{'train_runtime': 1038.7159, 'train_samples_per_second': 199.492, 'train_steps_per_second': 12.477, 'train_loss': 0.03396724226574103, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.034
  train_runtime            = 0:17:18.71
  train_samples            =       8634
  train_samples_per_second =    199.492
  train_steps_per_second   =     12.477
[{'loss': 0.2264, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.16212907433509827, 'eval_precision': 0.4797843665768194, 'eval_recall': 0.40592930444697833, 'eval_f1': 0.4397776405188388, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.171, 'eval_steps_per_second': 81.161, 'epoch': 1.0, 'step': 540}, {'loss': 0.1459, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.14626914262771606, 'eval_precision': 0.49938195302843014, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.47924080664294183, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.787, 'eval_steps_per_second': 81.489, 'epoch': 2.0, 'step': 1080}, {'loss': 0.109, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.15826402604579926, 'eval_precision': 0.43738819320214667, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49022556390977445, 'eval_accuracy': 0.9456496564502432, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.094, 'eval_steps_per_second': 81.402, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0794, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.17774362862110138, 'eval_precision': 0.4479166666666667, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.48939472322814276, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.488, 'eval_steps_per_second': 80.95, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0569, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.19159016013145447, 'eval_precision': 0.49075081610446136, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5022271714922049, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.245, 'eval_steps_per_second': 81.421, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0413, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.21112510561943054, 'eval_precision': 0.47713097713097713, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.499184339314845, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.86, 'eval_steps_per_second': 81.623, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0316, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.2361588180065155, 'eval_precision': 0.4795383001049318, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.49945355191256835, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.3519, 'eval_samples_per_second': 650.975, 'eval_steps_per_second': 81.638, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0254, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.24597805738449097, 'eval_precision': 0.4750499001996008, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.506652474720596, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.398, 'eval_steps_per_second': 81.691, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0181, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.2717819809913635, 'eval_precision': 0.4415954415954416, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.48186528497409326, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.983, 'eval_steps_per_second': 81.639, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0143, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.29447928071022034, 'eval_precision': 0.44990723562152135, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4961636828644502, 'eval_accuracy': 0.9443372191770246, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.737, 'eval_steps_per_second': 81.482, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0112, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.29883813858032227, 'eval_precision': 0.4639076034648701, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5031315240083507, 'eval_accuracy': 0.9469620937234617, 'eval_runtime': 2.3557, 'eval_samples_per_second': 649.902, 'eval_steps_per_second': 81.503, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0105, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.3133409023284912, 'eval_precision': 0.4820295983086681, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5002742731760834, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.148, 'eval_steps_per_second': 81.659, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0074, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.33039650321006775, 'eval_precision': 0.4738400789733465, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5079365079365079, 'eval_accuracy': 0.947039295916004, 'eval_runtime': 2.3486, 'eval_samples_per_second': 651.888, 'eval_steps_per_second': 81.752, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0066, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.33372974395751953, 'eval_precision': 0.47918781725888326, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5069817400644469, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.781, 'eval_steps_per_second': 81.488, 'epoch': 14.0, 'step': 7560}, {'loss': 0.005, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.34812578558921814, 'eval_precision': 0.4678194044188281, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5078206465067779, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3515, 'eval_samples_per_second': 651.087, 'eval_steps_per_second': 81.652, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0039, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.3471148610115051, 'eval_precision': 0.5097365406643757, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5085714285714286, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3423, 'eval_samples_per_second': 653.643, 'eval_steps_per_second': 81.972, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0041, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.3546239733695984, 'eval_precision': 0.49691991786447637, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5229605618584549, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.928, 'eval_steps_per_second': 81.632, 'epoch': 17.0, 'step': 9180}, {'loss': 0.004, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.36921873688697815, 'eval_precision': 0.4723809523809524, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5147898287493513, 'eval_accuracy': 0.9463058750868525, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.573, 'eval_steps_per_second': 81.713, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0031, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.3705843389034271, 'eval_precision': 0.4849699398797595, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5162666666666667, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.347, 'eval_samples_per_second': 652.332, 'eval_steps_per_second': 81.808, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0026, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.3735464811325073, 'eval_precision': 0.49245689655172414, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.506371191135734, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.888, 'eval_steps_per_second': 81.627, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0028, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.37539029121398926, 'eval_precision': 0.48268839103869654, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5099515868746638, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.4204, 'eval_samples_per_second': 632.535, 'eval_steps_per_second': 79.325, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0021, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.37455540895462036, 'eval_precision': 0.4946808510638298, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5118326912493122, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.353, 'eval_samples_per_second': 650.654, 'eval_steps_per_second': 81.597, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0017, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.38072702288627625, 'eval_precision': 0.4812992125984252, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5166402535657686, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.992, 'eval_steps_per_second': 81.64, 'epoch': 23.0, 'step': 12420}, {'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.37813571095466614, 'eval_precision': 0.49122807017543857, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5157096424702058, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.745, 'eval_steps_per_second': 81.483, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1038.7159, 'train_samples_per_second': 199.492, 'train_steps_per_second': 12.477, 'total_flos': 6897441587961600.0, 'train_loss': 0.03396724226574103, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9531
  predict_f1                 =     0.4755
  predict_loss               =     0.1475
  predict_precision          =     0.5054
  predict_recall             =      0.449
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =     649.21
  predict_steps_per_second   =     81.151
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_14.json completed. F1: 0.4755043227665706
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_45.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_45.json
Downloading data:   0%|          | 0.00/676k [00:00<?, ?B/s]Downloading data: 100%|██████████| 676k/676k [00:00<00:00, 3.77MB/s]Downloading data: 100%|██████████| 676k/676k [00:00<00:00, 3.75MB/s]
Downloading data:   0%|          | 0.00/122k [00:00<?, ?B/s]Downloading data: 100%|██████████| 122k/122k [00:00<00:00, 754kB/s]Downloading data: 100%|██████████| 122k/122k [00:00<00:00, 752kB/s]
Downloading data:   0%|          | 0.00/104k [00:00<?, ?B/s]Downloading data: 100%|██████████| 104k/104k [00:00<00:00, 790kB/s]Downloading data: 100%|██████████| 104k/104k [00:00<00:00, 788kB/s]
Generating train split:   0%|          | 0/8634 [00:00<?, ? examples/s]Generating train split: 100%|██████████| 8634/8634 [00:00<00:00, 509620.33 examples/s]
Generating validation split:   0%|          | 0/1531 [00:00<?, ? examples/s]Generating validation split: 100%|██████████| 1531/1531 [00:00<00:00, 431435.06 examples/s]
Generating test split:   0%|          | 0/1272 [00:00<?, ? examples/s]Generating test split: 100%|██████████| 1272/1272 [00:00<00:00, 420223.27 examples/s]
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6680.39 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7146.59 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6947.72 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6987.52 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7037.43 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7142.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7325.99 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6365.19 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6800.73 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7360.78 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7004.35 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7054.99 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6882.34 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7807, 'eval_samples_per_second': 264.845, 'eval_steps_per_second': 33.214, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7383, 'eval_samples_per_second': 266.803, 'eval_steps_per_second': 33.459, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7301, 'eval_samples_per_second': 267.184, 'eval_steps_per_second': 33.507, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.704, 'eval_steps_per_second': 33.447, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7407, 'eval_samples_per_second': 266.693, 'eval_steps_per_second': 33.445, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7469, 'eval_samples_per_second': 266.403, 'eval_steps_per_second': 33.409, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7412, 'eval_samples_per_second': 266.667, 'eval_steps_per_second': 33.442, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7422, 'eval_samples_per_second': 266.623, 'eval_steps_per_second': 33.437, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8181, 'eval_samples_per_second': 263.143, 'eval_steps_per_second': 33.0, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7363, 'eval_samples_per_second': 266.898, 'eval_steps_per_second': 33.471, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7307, 'eval_samples_per_second': 267.157, 'eval_steps_per_second': 33.504, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7371, 'eval_samples_per_second': 266.861, 'eval_steps_per_second': 33.467, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7398, 'eval_samples_per_second': 266.733, 'eval_steps_per_second': 33.45, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.747, 'eval_samples_per_second': 266.401, 'eval_steps_per_second': 33.409, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7287, 'eval_samples_per_second': 267.25, 'eval_steps_per_second': 33.515, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.69, 'eval_steps_per_second': 33.571, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7196, 'eval_samples_per_second': 267.674, 'eval_steps_per_second': 33.569, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7214, 'eval_samples_per_second': 267.594, 'eval_steps_per_second': 33.559, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.725, 'eval_samples_per_second': 267.422, 'eval_steps_per_second': 33.537, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7128, 'eval_samples_per_second': 267.994, 'eval_steps_per_second': 33.609, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7123, 'eval_samples_per_second': 268.016, 'eval_steps_per_second': 33.611, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7096, 'eval_samples_per_second': 268.145, 'eval_steps_per_second': 33.628, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7253, 'eval_samples_per_second': 267.41, 'eval_steps_per_second': 33.535, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.7, 'eval_steps_per_second': 33.572, 'epoch': 24.0}
{'train_runtime': 2424.6352, 'train_samples_per_second': 85.463, 'train_steps_per_second': 1.336, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:24.63
  train_samples            =       8634
  train_samples_per_second =     85.463
  train_steps_per_second   =      1.336
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7807, 'eval_samples_per_second': 264.845, 'eval_steps_per_second': 33.214, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7383, 'eval_samples_per_second': 266.803, 'eval_steps_per_second': 33.459, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7301, 'eval_samples_per_second': 267.184, 'eval_steps_per_second': 33.507, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.704, 'eval_steps_per_second': 33.447, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7407, 'eval_samples_per_second': 266.693, 'eval_steps_per_second': 33.445, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7469, 'eval_samples_per_second': 266.403, 'eval_steps_per_second': 33.409, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7412, 'eval_samples_per_second': 266.667, 'eval_steps_per_second': 33.442, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7422, 'eval_samples_per_second': 266.623, 'eval_steps_per_second': 33.437, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8181, 'eval_samples_per_second': 263.143, 'eval_steps_per_second': 33.0, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7363, 'eval_samples_per_second': 266.898, 'eval_steps_per_second': 33.471, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7307, 'eval_samples_per_second': 267.157, 'eval_steps_per_second': 33.504, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7371, 'eval_samples_per_second': 266.861, 'eval_steps_per_second': 33.467, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7398, 'eval_samples_per_second': 266.733, 'eval_steps_per_second': 33.45, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.747, 'eval_samples_per_second': 266.401, 'eval_steps_per_second': 33.409, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7287, 'eval_samples_per_second': 267.25, 'eval_steps_per_second': 33.515, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.69, 'eval_steps_per_second': 33.571, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7196, 'eval_samples_per_second': 267.674, 'eval_steps_per_second': 33.569, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7214, 'eval_samples_per_second': 267.594, 'eval_steps_per_second': 33.559, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.725, 'eval_samples_per_second': 267.422, 'eval_steps_per_second': 33.537, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7128, 'eval_samples_per_second': 267.994, 'eval_steps_per_second': 33.609, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7123, 'eval_samples_per_second': 268.016, 'eval_steps_per_second': 33.611, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7096, 'eval_samples_per_second': 268.145, 'eval_steps_per_second': 33.628, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7253, 'eval_samples_per_second': 267.41, 'eval_steps_per_second': 33.535, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.7, 'eval_steps_per_second': 33.572, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2424.6352, 'train_samples_per_second': 85.463, 'train_steps_per_second': 1.336, 'total_flos': 2.705812061973174e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.79
  predict_samples_per_second =    265.469
  predict_steps_per_second   =     33.184
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_45.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_06.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6642.55 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7163.28 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6951.77 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6985.69 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7062.73 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7171.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6320.60 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6649.45 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6818.79 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7365.57 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6986.51 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7073.55 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6889.35 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NB-BERT_base/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1963, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.15588580071926117, 'eval_precision': 0.42684063373718545, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.4697435897435897, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3839, 'eval_samples_per_second': 642.216, 'eval_steps_per_second': 80.539, 'epoch': 1.0}
{'loss': 0.1237, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.16073493659496307, 'eval_precision': 0.5899513776337115, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.48728246318607765, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.488, 'eval_steps_per_second': 80.824, 'epoch': 2.0}
{'loss': 0.074, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1860690414905548, 'eval_precision': 0.4967811158798283, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5118850193477059, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.3734, 'eval_samples_per_second': 645.064, 'eval_steps_per_second': 80.896, 'epoch': 3.0}
{'loss': 0.0437, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.23695163428783417, 'eval_precision': 0.4565425023877746, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.49688149688149696, 'eval_accuracy': 0.9461128696054968, 'eval_runtime': 2.38, 'eval_samples_per_second': 643.288, 'eval_steps_per_second': 80.674, 'epoch': 4.0}
{'loss': 0.028, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.25650086998939514, 'eval_precision': 0.4674922600619195, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.49079089924160346, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.3731, 'eval_samples_per_second': 645.152, 'eval_steps_per_second': 80.907, 'epoch': 5.0}
{'loss': 0.0176, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.3071364760398865, 'eval_precision': 0.4978165938864629, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5086447295036253, 'eval_accuracy': 0.9490079518258319, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.692, 'eval_steps_per_second': 81.101, 'epoch': 6.0}
{'loss': 0.0121, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3292006552219391, 'eval_precision': 0.5067873303167421, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.508801817149347, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.3725, 'eval_samples_per_second': 645.308, 'eval_steps_per_second': 80.927, 'epoch': 7.0}
{'loss': 0.0092, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.34719976782798767, 'eval_precision': 0.48258196721311475, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5083648138154344, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.4543, 'eval_samples_per_second': 623.791, 'eval_steps_per_second': 78.228, 'epoch': 8.0}
{'loss': 0.0061, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.37747621536254883, 'eval_precision': 0.4744186046511628, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5225409836065574, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.3715, 'eval_samples_per_second': 645.584, 'eval_steps_per_second': 80.961, 'epoch': 9.0}
{'loss': 0.0066, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.369609534740448, 'eval_precision': 0.5278396436525612, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5340845070422535, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3753, 'eval_samples_per_second': 644.559, 'eval_steps_per_second': 80.833, 'epoch': 10.0}
{'loss': 0.0048, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.385624498128891, 'eval_precision': 0.5366146458583433, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5228070175438596, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3723, 'eval_samples_per_second': 645.361, 'eval_steps_per_second': 80.934, 'epoch': 11.0}
{'loss': 0.0043, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.4160196781158447, 'eval_precision': 0.5048335123523093, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5199115044247788, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3709, 'eval_samples_per_second': 645.739, 'eval_steps_per_second': 80.981, 'epoch': 12.0}
{'loss': 0.0028, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.4268900156021118, 'eval_precision': 0.530751708428246, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.531054131054131, 'eval_accuracy': 0.9507064000617618, 'eval_runtime': 2.3665, 'eval_samples_per_second': 646.936, 'eval_steps_per_second': 81.131, 'epoch': 13.0}
{'loss': 0.0025, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.4355916380882263, 'eval_precision': 0.5109321058688148, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5085910652920962, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.907, 'eval_steps_per_second': 81.002, 'epoch': 14.0}
{'loss': 0.0026, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.4364858567714691, 'eval_precision': 0.4888663967611336, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5179624664879356, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3712, 'eval_samples_per_second': 645.674, 'eval_steps_per_second': 80.973, 'epoch': 15.0}
{'loss': 0.0028, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.45246800780296326, 'eval_precision': 0.5292134831460674, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.533106960950764, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3695, 'eval_samples_per_second': 646.122, 'eval_steps_per_second': 81.029, 'epoch': 16.0}
{'loss': 0.0021, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.44183632731437683, 'eval_precision': 0.5364396654719236, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5239206534422404, 'eval_accuracy': 0.9517100285648112, 'eval_runtime': 2.3742, 'eval_samples_per_second': 644.851, 'eval_steps_per_second': 80.87, 'epoch': 17.0}
{'loss': 0.0012, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.45188918709754944, 'eval_precision': 0.5284090909090909, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5293113261240752, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.681, 'eval_steps_per_second': 80.848, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.46318891644477844, 'eval_precision': 0.5239808153477218, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5108123904149621, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3876, 'eval_samples_per_second': 641.239, 'eval_steps_per_second': 80.417, 'epoch': 19.0}
{'loss': 0.0014, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.4562638998031616, 'eval_precision': 0.5171673819742489, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5328911000552793, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3676, 'eval_samples_per_second': 646.66, 'eval_steps_per_second': 81.096, 'epoch': 20.0}
{'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.45950865745544434, 'eval_precision': 0.5320139697322468, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5264976958525346, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3728, 'eval_samples_per_second': 645.24, 'eval_steps_per_second': 80.918, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4707683324813843, 'eval_precision': 0.5182724252491694, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5258426966292133, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.49, 'eval_steps_per_second': 80.95, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.4791106581687927, 'eval_precision': 0.5140291806958474, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5180995475113123, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.325, 'eval_steps_per_second': 80.929, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.47748100757598877, 'eval_precision': 0.5283236994219653, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5246842709529277, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.3714, 'eval_samples_per_second': 645.605, 'eval_steps_per_second': 80.964, 'epoch': 24.0}
{'train_runtime': 1507.543, 'train_samples_per_second': 137.453, 'train_steps_per_second': 17.194, 'train_loss': 0.02268194095634016, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0227
  train_runtime            = 0:25:07.54
  train_samples            =       8634
  train_samples_per_second =    137.453
  train_steps_per_second   =     17.194
[{'loss': 0.1963, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.15588580071926117, 'eval_precision': 0.42684063373718545, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.4697435897435897, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3839, 'eval_samples_per_second': 642.216, 'eval_steps_per_second': 80.539, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1237, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.16073493659496307, 'eval_precision': 0.5899513776337115, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.48728246318607765, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.488, 'eval_steps_per_second': 80.824, 'epoch': 2.0, 'step': 2160}, {'loss': 0.074, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.1860690414905548, 'eval_precision': 0.4967811158798283, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5118850193477059, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.3734, 'eval_samples_per_second': 645.064, 'eval_steps_per_second': 80.896, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0437, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.23695163428783417, 'eval_precision': 0.4565425023877746, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.49688149688149696, 'eval_accuracy': 0.9461128696054968, 'eval_runtime': 2.38, 'eval_samples_per_second': 643.288, 'eval_steps_per_second': 80.674, 'epoch': 4.0, 'step': 4320}, {'loss': 0.028, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.25650086998939514, 'eval_precision': 0.4674922600619195, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.49079089924160346, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.3731, 'eval_samples_per_second': 645.152, 'eval_steps_per_second': 80.907, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0176, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.3071364760398865, 'eval_precision': 0.4978165938864629, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5086447295036253, 'eval_accuracy': 0.9490079518258319, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.692, 'eval_steps_per_second': 81.101, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0121, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.3292006552219391, 'eval_precision': 0.5067873303167421, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.508801817149347, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.3725, 'eval_samples_per_second': 645.308, 'eval_steps_per_second': 80.927, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0092, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.34719976782798767, 'eval_precision': 0.48258196721311475, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5083648138154344, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.4543, 'eval_samples_per_second': 623.791, 'eval_steps_per_second': 78.228, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0061, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.37747621536254883, 'eval_precision': 0.4744186046511628, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5225409836065574, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.3715, 'eval_samples_per_second': 645.584, 'eval_steps_per_second': 80.961, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0066, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.369609534740448, 'eval_precision': 0.5278396436525612, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5340845070422535, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3753, 'eval_samples_per_second': 644.559, 'eval_steps_per_second': 80.833, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0048, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.385624498128891, 'eval_precision': 0.5366146458583433, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5228070175438596, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3723, 'eval_samples_per_second': 645.361, 'eval_steps_per_second': 80.934, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0043, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.4160196781158447, 'eval_precision': 0.5048335123523093, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5199115044247788, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3709, 'eval_samples_per_second': 645.739, 'eval_steps_per_second': 80.981, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0028, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.4268900156021118, 'eval_precision': 0.530751708428246, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.531054131054131, 'eval_accuracy': 0.9507064000617618, 'eval_runtime': 2.3665, 'eval_samples_per_second': 646.936, 'eval_steps_per_second': 81.131, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0025, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.4355916380882263, 'eval_precision': 0.5109321058688148, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5085910652920962, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.3703, 'eval_samples_per_second': 645.907, 'eval_steps_per_second': 81.002, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0026, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.4364858567714691, 'eval_precision': 0.4888663967611336, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5179624664879356, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3712, 'eval_samples_per_second': 645.674, 'eval_steps_per_second': 80.973, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0028, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.45246800780296326, 'eval_precision': 0.5292134831460674, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.533106960950764, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3695, 'eval_samples_per_second': 646.122, 'eval_steps_per_second': 81.029, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0021, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.44183632731437683, 'eval_precision': 0.5364396654719236, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5239206534422404, 'eval_accuracy': 0.9517100285648112, 'eval_runtime': 2.3742, 'eval_samples_per_second': 644.851, 'eval_steps_per_second': 80.87, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0012, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.45188918709754944, 'eval_precision': 0.5284090909090909, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5293113261240752, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 2.3748, 'eval_samples_per_second': 644.681, 'eval_steps_per_second': 80.848, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.46318891644477844, 'eval_precision': 0.5239808153477218, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5108123904149621, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3876, 'eval_samples_per_second': 641.239, 'eval_steps_per_second': 80.417, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0014, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.4562638998031616, 'eval_precision': 0.5171673819742489, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5328911000552793, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3676, 'eval_samples_per_second': 646.66, 'eval_steps_per_second': 81.096, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.45950865745544434, 'eval_precision': 0.5320139697322468, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5264976958525346, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3728, 'eval_samples_per_second': 645.24, 'eval_steps_per_second': 80.918, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.4707683324813843, 'eval_precision': 0.5182724252491694, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5258426966292133, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.49, 'eval_steps_per_second': 80.95, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.4791106581687927, 'eval_precision': 0.5140291806958474, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5180995475113123, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3724, 'eval_samples_per_second': 645.325, 'eval_steps_per_second': 80.929, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.47748100757598877, 'eval_precision': 0.5283236994219653, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5246842709529277, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.3714, 'eval_samples_per_second': 645.605, 'eval_steps_per_second': 80.964, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1507.543, 'train_samples_per_second': 137.453, 'train_steps_per_second': 17.194, 'total_flos': 5908755624631080.0, 'train_loss': 0.02268194095634016, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9501
  predict_f1                 =     0.4619
  predict_loss               =     0.1604
  predict_precision          =     0.4426
  predict_recall             =      0.483
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =    643.531
  predict_steps_per_second   =     80.441
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_06.json completed. F1: 0.46193884189980483
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_39.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6550.30 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7159.99 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6994.46 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7085.35 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7136.62 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7233.00 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7390.14 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6436.99 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6869.51 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7435.27 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7057.77 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7099.05 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6933.17 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3785, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.2380286008119583, 'eval_precision': 0.19090909090909092, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.10439105219552611, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 4.6764, 'eval_samples_per_second': 327.392, 'eval_steps_per_second': 41.058, 'epoch': 1.0}
{'loss': 0.2238, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.2036137580871582, 'eval_precision': 0.19058553386911595, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.18993135011441648, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 4.6535, 'eval_samples_per_second': 329.003, 'eval_steps_per_second': 41.26, 'epoch': 2.0}
{'loss': 0.1791, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.19853441417217255, 'eval_precision': 0.30712166172106825, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.26692456479690524, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.648, 'eval_samples_per_second': 329.386, 'eval_steps_per_second': 41.308, 'epoch': 3.0}
{'loss': 0.1481, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.20375336706638336, 'eval_precision': 0.27292340884573896, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28048780487804875, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.312, 'epoch': 4.0}
{'loss': 0.121, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.21720881760120392, 'eval_precision': 0.2747747747747748, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2764872521246459, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6483, 'eval_samples_per_second': 329.37, 'eval_steps_per_second': 41.306, 'epoch': 5.0}
{'loss': 0.1011, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.2338508814573288, 'eval_precision': 0.29843561973525873, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2903981264637002, 'eval_accuracy': 0.9419053501119432, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 6.0}
{'loss': 0.085, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.24046450853347778, 'eval_precision': 0.26611418047882135, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.2944472745797249, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 4.7317, 'eval_samples_per_second': 323.559, 'eval_steps_per_second': 40.577, 'epoch': 7.0}
{'loss': 0.0724, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.25387948751449585, 'eval_precision': 0.2745861733203505, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.296218487394958, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.484, 'eval_steps_per_second': 41.32, 'epoch': 8.0}
{'loss': 0.0614, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.26553311944007874, 'eval_precision': 0.2962226640159046, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.31651619755708976, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.837, 'eval_steps_per_second': 41.364, 'epoch': 9.0}
{'loss': 0.0532, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.2772023379802704, 'eval_precision': 0.29887410440122825, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3149946062567422, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6428, 'eval_samples_per_second': 329.761, 'eval_steps_per_second': 41.355, 'epoch': 10.0}
{'loss': 0.0464, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.2834944725036621, 'eval_precision': 0.3023012552301255, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31533006001091113, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.74, 'eval_steps_per_second': 41.352, 'epoch': 11.0}
{'loss': 0.0398, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.29720738530158997, 'eval_precision': 0.3046153846153846, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3207343412526998, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.478, 'eval_steps_per_second': 41.319, 'epoch': 12.0}
{'loss': 0.0348, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.31271231174468994, 'eval_precision': 0.3018065887353879, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3124312431243125, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.644, 'eval_samples_per_second': 329.674, 'eval_steps_per_second': 41.344, 'epoch': 13.0}
{'loss': 0.0309, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.3197901248931885, 'eval_precision': 0.3325892857142857, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.33615341229554424, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6393, 'eval_samples_per_second': 330.007, 'eval_steps_per_second': 41.386, 'epoch': 14.0}
{'loss': 0.0276, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.3313992917537689, 'eval_precision': 0.3099593495934959, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3277807630306287, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.313, 'epoch': 15.0}
{'loss': 0.0239, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.3377922475337982, 'eval_precision': 0.30297029702970296, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3243243243243243, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.43, 'eval_steps_per_second': 41.313, 'epoch': 16.0}
{'loss': 0.0231, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.3469599783420563, 'eval_precision': 0.3169164882226981, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3268912203202651, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6392, 'eval_samples_per_second': 330.016, 'eval_steps_per_second': 41.387, 'epoch': 17.0}
{'loss': 0.0202, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.35401538014411926, 'eval_precision': 0.28988149498632637, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.32218844984802436, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.716, 'eval_steps_per_second': 41.349, 'epoch': 18.0}
{'loss': 0.0182, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.36420032382011414, 'eval_precision': 0.32606199770378874, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3249427917620138, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6388, 'eval_samples_per_second': 330.04, 'eval_steps_per_second': 41.39, 'epoch': 19.0}
{'loss': 0.0171, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.363801509141922, 'eval_precision': 0.31634819532908703, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.32765255634964263, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6418, 'eval_samples_per_second': 329.832, 'eval_steps_per_second': 41.364, 'epoch': 20.0}
{'loss': 0.0157, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.36710426211357117, 'eval_precision': 0.31023784901758017, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3253796095444686, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.653, 'eval_steps_per_second': 41.341, 'epoch': 21.0}
{'loss': 0.0148, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3714851438999176, 'eval_precision': 0.3125, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3239978034047227, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.6425, 'eval_samples_per_second': 329.777, 'eval_steps_per_second': 41.357, 'epoch': 22.0}
{'loss': 0.0144, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.3766024112701416, 'eval_precision': 0.3069908814589666, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3251072961373391, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.637, 'eval_samples_per_second': 330.172, 'eval_steps_per_second': 41.406, 'epoch': 23.0}
{'loss': 0.0137, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.37664130330085754, 'eval_precision': 0.31178310740354537, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32570806100217864, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.898, 'eval_steps_per_second': 41.372, 'epoch': 24.0}
{'train_runtime': 2088.7397, 'train_samples_per_second': 99.206, 'train_steps_per_second': 1.551, 'train_loss': 0.07351360762560809, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0735
  train_runtime            = 0:34:48.73
  train_samples            =       8634
  train_samples_per_second =     99.206
  train_steps_per_second   =      1.551
[{'loss': 0.3785, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.2380286008119583, 'eval_precision': 0.19090909090909092, 'eval_recall': 0.07183580387685291, 'eval_f1': 0.10439105219552611, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 4.6764, 'eval_samples_per_second': 327.392, 'eval_steps_per_second': 41.058, 'epoch': 1.0, 'step': 135}, {'loss': 0.2238, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.2036137580871582, 'eval_precision': 0.19058553386911595, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.18993135011441648, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 4.6535, 'eval_samples_per_second': 329.003, 'eval_steps_per_second': 41.26, 'epoch': 2.0, 'step': 270}, {'loss': 0.1791, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.19853441417217255, 'eval_precision': 0.30712166172106825, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.26692456479690524, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.648, 'eval_samples_per_second': 329.386, 'eval_steps_per_second': 41.308, 'epoch': 3.0, 'step': 405}, {'loss': 0.1481, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.20375336706638336, 'eval_precision': 0.27292340884573896, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28048780487804875, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.312, 'epoch': 4.0, 'step': 540}, {'loss': 0.121, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.21720881760120392, 'eval_precision': 0.2747747747747748, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2764872521246459, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.6483, 'eval_samples_per_second': 329.37, 'eval_steps_per_second': 41.306, 'epoch': 5.0, 'step': 675}, {'loss': 0.1011, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2338508814573288, 'eval_precision': 0.29843561973525873, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2903981264637002, 'eval_accuracy': 0.9419053501119432, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 6.0, 'step': 810}, {'loss': 0.085, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.24046450853347778, 'eval_precision': 0.26611418047882135, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.2944472745797249, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 4.7317, 'eval_samples_per_second': 323.559, 'eval_steps_per_second': 40.577, 'epoch': 7.0, 'step': 945}, {'loss': 0.0724, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.25387948751449585, 'eval_precision': 0.2745861733203505, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.296218487394958, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.484, 'eval_steps_per_second': 41.32, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0614, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.26553311944007874, 'eval_precision': 0.2962226640159046, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.31651619755708976, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.837, 'eval_steps_per_second': 41.364, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0532, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2772023379802704, 'eval_precision': 0.29887410440122825, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3149946062567422, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6428, 'eval_samples_per_second': 329.761, 'eval_steps_per_second': 41.355, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0464, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2834944725036621, 'eval_precision': 0.3023012552301255, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31533006001091113, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.74, 'eval_steps_per_second': 41.352, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0398, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.29720738530158997, 'eval_precision': 0.3046153846153846, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3207343412526998, 'eval_accuracy': 0.9408631205126226, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.478, 'eval_steps_per_second': 41.319, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0348, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.31271231174468994, 'eval_precision': 0.3018065887353879, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3124312431243125, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.644, 'eval_samples_per_second': 329.674, 'eval_steps_per_second': 41.344, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0309, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3197901248931885, 'eval_precision': 0.3325892857142857, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.33615341229554424, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6393, 'eval_samples_per_second': 330.007, 'eval_steps_per_second': 41.386, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0276, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3313992917537689, 'eval_precision': 0.3099593495934959, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3277807630306287, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.313, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0239, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3377922475337982, 'eval_precision': 0.30297029702970296, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3243243243243243, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.43, 'eval_steps_per_second': 41.313, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0231, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3469599783420563, 'eval_precision': 0.3169164882226981, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3268912203202651, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6392, 'eval_samples_per_second': 330.016, 'eval_steps_per_second': 41.387, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0202, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.35401538014411926, 'eval_precision': 0.28988149498632637, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.32218844984802436, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.716, 'eval_steps_per_second': 41.349, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0182, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.36420032382011414, 'eval_precision': 0.32606199770378874, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3249427917620138, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6388, 'eval_samples_per_second': 330.04, 'eval_steps_per_second': 41.39, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0171, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.363801509141922, 'eval_precision': 0.31634819532908703, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.32765255634964263, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 4.6418, 'eval_samples_per_second': 329.832, 'eval_steps_per_second': 41.364, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0157, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.36710426211357117, 'eval_precision': 0.31023784901758017, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3253796095444686, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.653, 'eval_steps_per_second': 41.341, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0148, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3714851438999176, 'eval_precision': 0.3125, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3239978034047227, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.6425, 'eval_samples_per_second': 329.777, 'eval_steps_per_second': 41.357, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0144, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3766024112701416, 'eval_precision': 0.3069908814589666, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3251072961373391, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.637, 'eval_samples_per_second': 330.172, 'eval_steps_per_second': 41.406, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0137, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.37664130330085754, 'eval_precision': 0.31178310740354537, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32570806100217864, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.898, 'eval_steps_per_second': 41.372, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2088.7397, 'train_samples_per_second': 99.206, 'train_steps_per_second': 1.551, 'total_flos': 2.5992057086835036e+16, 'train_loss': 0.07351360762560809, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9415
  predict_f1                 =     0.2098
  predict_loss               =     0.2073
  predict_precision          =     0.2356
  predict_recall             =     0.1891
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.816
  predict_steps_per_second   =     40.727
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_39.json completed. F1: 0.20981132075471698
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_34.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6860.78 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7259.97 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7044.89 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7064.89 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7114.02 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7224.99 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6338.99 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6690.53 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6876.84 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7251.84 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6945.98 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7145.31 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6967.49 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2901, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21092964708805084, 'eval_precision': 0.24464285714285713, 'eval_recall': 0.15621436716077536, 'eval_f1': 0.1906750173973556, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 2.413, 'eval_samples_per_second': 634.474, 'eval_steps_per_second': 79.568, 'epoch': 1.0}
{'loss': 0.1892, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.20884859561920166, 'eval_precision': 0.2926470588235294, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.25561978163134236, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.213, 'eval_steps_per_second': 81.417, 'epoch': 2.0}
{'loss': 0.1321, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.22512078285217285, 'eval_precision': 0.24394463667820068, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2774225282833251, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.3766, 'eval_samples_per_second': 644.193, 'eval_steps_per_second': 80.787, 'epoch': 3.0}
{'loss': 0.088, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.26774224638938904, 'eval_precision': 0.24261414503133394, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.27181544633901705, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.858, 'eval_steps_per_second': 81.372, 'epoch': 4.0}
{'loss': 0.0604, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.29075226187705994, 'eval_precision': 0.2785956964892412, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.27954545454545454, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.29, 'eval_steps_per_second': 81.426, 'epoch': 5.0}
{'loss': 0.0399, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3340322971343994, 'eval_precision': 0.2875751503006012, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30613333333333337, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3655, 'eval_samples_per_second': 647.208, 'eval_steps_per_second': 81.165, 'epoch': 6.0}
{'loss': 0.027, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3665790259838104, 'eval_precision': 0.26704545454545453, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2917744438696327, 'eval_accuracy': 0.9308268354821277, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.138, 'eval_steps_per_second': 81.282, 'epoch': 7.0}
{'loss': 0.0191, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.36602118611335754, 'eval_precision': 0.27589743589743587, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2904967602591792, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3747, 'eval_samples_per_second': 644.715, 'eval_steps_per_second': 80.853, 'epoch': 8.0}
{'loss': 0.0126, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3950447738170624, 'eval_precision': 0.27109004739336495, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29606625258799174, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.4404, 'eval_samples_per_second': 627.363, 'eval_steps_per_second': 78.676, 'epoch': 9.0}
{'loss': 0.0093, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4196329712867737, 'eval_precision': 0.3, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3104017611447441, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.77, 'eval_steps_per_second': 81.361, 'epoch': 10.0}
{'loss': 0.0063, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4341881573200226, 'eval_precision': 0.2968197879858657, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.29200463499420626, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.3602, 'eval_samples_per_second': 648.668, 'eval_steps_per_second': 81.348, 'epoch': 11.0}
{'loss': 0.0052, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.454863965511322, 'eval_precision': 0.3036773428232503, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29767441860465116, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.14, 'eval_steps_per_second': 81.282, 'epoch': 12.0}
{'loss': 0.0037, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4653416872024536, 'eval_precision': 0.27904451682953313, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.28587319243604004, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3606, 'eval_samples_per_second': 648.565, 'eval_steps_per_second': 81.335, 'epoch': 13.0}
{'loss': 0.0028, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.46714818477630615, 'eval_precision': 0.28848346636259975, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28848346636259975, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.917, 'eval_steps_per_second': 81.254, 'epoch': 14.0}
{'loss': 0.0026, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4834965765476227, 'eval_precision': 0.3018867924528302, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.28708133971291866, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.3603, 'eval_samples_per_second': 648.638, 'eval_steps_per_second': 81.345, 'epoch': 15.0}
{'loss': 0.0023, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4743488132953644, 'eval_precision': 0.29698375870069604, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2944220816561242, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.667, 'eval_steps_per_second': 81.474, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4968928396701813, 'eval_precision': 0.30209481808158767, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3071748878923767, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.4372, 'eval_samples_per_second': 628.18, 'eval_steps_per_second': 78.779, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5100709199905396, 'eval_precision': 0.30184331797235026, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3002865329512894, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3706, 'eval_samples_per_second': 645.838, 'eval_steps_per_second': 80.993, 'epoch': 18.0}
{'loss': 0.001, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5085489749908447, 'eval_precision': 0.29292929292929293, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29524886877828055, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.871, 'eval_steps_per_second': 81.625, 'epoch': 19.0}
{'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5140852332115173, 'eval_precision': 0.2937563971340839, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30960086299892126, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.877, 'eval_steps_per_second': 81.5, 'epoch': 20.0}
{'loss': 0.0009, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5119242668151855, 'eval_precision': 0.30066815144766146, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30422535211267604, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.475, 'eval_steps_per_second': 81.45, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5179926753044128, 'eval_precision': 0.3032329988851728, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.30665163472378804, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.686, 'eval_steps_per_second': 81.601, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5196858644485474, 'eval_precision': 0.3047830923248053, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30855855855855857, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.259, 'eval_steps_per_second': 81.297, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5216373801231384, 'eval_precision': 0.3086283185840708, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.313307130825379, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.557, 'eval_steps_per_second': 81.585, 'epoch': 24.0}
{'train_runtime': 869.0352, 'train_samples_per_second': 238.444, 'train_steps_per_second': 7.457, 'train_loss': 0.03737608864213581, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0374
  train_runtime            = 0:14:29.03
  train_samples            =       8634
  train_samples_per_second =    238.444
  train_steps_per_second   =      7.457
[{'loss': 0.2901, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.21092964708805084, 'eval_precision': 0.24464285714285713, 'eval_recall': 0.15621436716077536, 'eval_f1': 0.1906750173973556, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 2.413, 'eval_samples_per_second': 634.474, 'eval_steps_per_second': 79.568, 'epoch': 1.0, 'step': 270}, {'loss': 0.1892, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.20884859561920166, 'eval_precision': 0.2926470588235294, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.25561978163134236, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.213, 'eval_steps_per_second': 81.417, 'epoch': 2.0, 'step': 540}, {'loss': 0.1321, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.22512078285217285, 'eval_precision': 0.24394463667820068, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2774225282833251, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.3766, 'eval_samples_per_second': 644.193, 'eval_steps_per_second': 80.787, 'epoch': 3.0, 'step': 810}, {'loss': 0.088, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.26774224638938904, 'eval_precision': 0.24261414503133394, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.27181544633901705, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.858, 'eval_steps_per_second': 81.372, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0604, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.29075226187705994, 'eval_precision': 0.2785956964892412, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.27954545454545454, 'eval_accuracy': 0.9373890218482205, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.29, 'eval_steps_per_second': 81.426, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0399, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.3340322971343994, 'eval_precision': 0.2875751503006012, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30613333333333337, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3655, 'eval_samples_per_second': 647.208, 'eval_steps_per_second': 81.165, 'epoch': 6.0, 'step': 1620}, {'loss': 0.027, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.3665790259838104, 'eval_precision': 0.26704545454545453, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2917744438696327, 'eval_accuracy': 0.9308268354821277, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.138, 'eval_steps_per_second': 81.282, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0191, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.36602118611335754, 'eval_precision': 0.27589743589743587, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2904967602591792, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3747, 'eval_samples_per_second': 644.715, 'eval_steps_per_second': 80.853, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0126, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3950447738170624, 'eval_precision': 0.27109004739336495, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29606625258799174, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.4404, 'eval_samples_per_second': 627.363, 'eval_steps_per_second': 78.676, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0093, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.4196329712867737, 'eval_precision': 0.3, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3104017611447441, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.3599, 'eval_samples_per_second': 648.77, 'eval_steps_per_second': 81.361, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0063, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.4341881573200226, 'eval_precision': 0.2968197879858657, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.29200463499420626, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.3602, 'eval_samples_per_second': 648.668, 'eval_steps_per_second': 81.348, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0052, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.454863965511322, 'eval_precision': 0.3036773428232503, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29767441860465116, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.14, 'eval_steps_per_second': 81.282, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0037, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.4653416872024536, 'eval_precision': 0.27904451682953313, 'eval_recall': 0.29304446978335236, 'eval_f1': 0.28587319243604004, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.3606, 'eval_samples_per_second': 648.565, 'eval_steps_per_second': 81.335, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0028, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.46714818477630615, 'eval_precision': 0.28848346636259975, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.28848346636259975, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.917, 'eval_steps_per_second': 81.254, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0026, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.4834965765476227, 'eval_precision': 0.3018867924528302, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.28708133971291866, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.3603, 'eval_samples_per_second': 648.638, 'eval_steps_per_second': 81.345, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0023, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.4743488132953644, 'eval_precision': 0.29698375870069604, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2944220816561242, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.667, 'eval_steps_per_second': 81.474, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0014, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.4968928396701813, 'eval_precision': 0.30209481808158767, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3071748878923767, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.4372, 'eval_samples_per_second': 628.18, 'eval_steps_per_second': 78.779, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.5100709199905396, 'eval_precision': 0.30184331797235026, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3002865329512894, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3706, 'eval_samples_per_second': 645.838, 'eval_steps_per_second': 80.993, 'epoch': 18.0, 'step': 4860}, {'loss': 0.001, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.5085489749908447, 'eval_precision': 0.29292929292929293, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.29524886877828055, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.871, 'eval_steps_per_second': 81.625, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.5140852332115173, 'eval_precision': 0.2937563971340839, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30960086299892126, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.877, 'eval_steps_per_second': 81.5, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0009, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.5119242668151855, 'eval_precision': 0.30066815144766146, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30422535211267604, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.475, 'eval_steps_per_second': 81.45, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.5179926753044128, 'eval_precision': 0.3032329988851728, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.30665163472378804, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.686, 'eval_steps_per_second': 81.601, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.5196858644485474, 'eval_precision': 0.3047830923248053, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.30855855855855857, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.259, 'eval_steps_per_second': 81.297, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.5216373801231384, 'eval_precision': 0.3086283185840708, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.313307130825379, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.557, 'eval_steps_per_second': 81.585, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 869.0352, 'train_samples_per_second': 238.444, 'train_steps_per_second': 7.457, 'total_flos': 7896285197923800.0, 'train_loss': 0.03737608864213581, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9407
  predict_f1                 =     0.2525
  predict_loss               =      0.217
  predict_precision          =     0.2981
  predict_recall             =      0.219
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    647.601
  predict_steps_per_second   =      80.95
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_34.json completed. F1: 0.25254901960784315
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_00.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6190.57 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6926.67 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6862.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6944.99 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7018.35 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7150.86 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7324.13 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6399.13 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6777.94 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7355.91 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7043.83 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7081.46 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6918.78 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.938, 'eval_steps_per_second': 64.577, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9676, 'eval_samples_per_second': 515.906, 'eval_steps_per_second': 64.699, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9728, 'eval_samples_per_second': 515.003, 'eval_steps_per_second': 64.586, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.137, 'eval_steps_per_second': 64.979, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.12, 'eval_steps_per_second': 65.102, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.633, 'eval_steps_per_second': 64.915, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9527, 'eval_samples_per_second': 518.517, 'eval_steps_per_second': 65.026, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9641, 'eval_samples_per_second': 516.51, 'eval_steps_per_second': 64.775, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0449, 'eval_samples_per_second': 502.807, 'eval_steps_per_second': 63.056, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9671, 'eval_samples_per_second': 515.997, 'eval_steps_per_second': 64.71, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.966, 'eval_samples_per_second': 516.191, 'eval_steps_per_second': 64.735, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9578, 'eval_samples_per_second': 517.612, 'eval_steps_per_second': 64.913, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.956, 'eval_steps_per_second': 64.831, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.637, 'eval_steps_per_second': 64.916, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9841, 'eval_samples_per_second': 513.052, 'eval_steps_per_second': 64.341, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9814, 'eval_samples_per_second': 513.512, 'eval_steps_per_second': 64.399, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.827, 'eval_steps_per_second': 64.814, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.887, 'eval_steps_per_second': 64.822, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9698, 'eval_samples_per_second': 515.519, 'eval_steps_per_second': 64.65, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9556, 'eval_samples_per_second': 517.995, 'eval_steps_per_second': 64.961, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.828, 'eval_steps_per_second': 64.689, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9597, 'eval_samples_per_second': 517.29, 'eval_steps_per_second': 64.872, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9542, 'eval_samples_per_second': 518.246, 'eval_steps_per_second': 64.992, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.879, 'eval_steps_per_second': 64.821, 'epoch': 24.0}
{'train_runtime': 1480.1432, 'train_samples_per_second': 139.997, 'train_steps_per_second': 17.512, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:24:40.14
  train_samples            =       8634
  train_samples_per_second =    139.997
  train_steps_per_second   =     17.512
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.938, 'eval_steps_per_second': 64.577, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9676, 'eval_samples_per_second': 515.906, 'eval_steps_per_second': 64.699, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9728, 'eval_samples_per_second': 515.003, 'eval_steps_per_second': 64.586, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.137, 'eval_steps_per_second': 64.979, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.12, 'eval_steps_per_second': 65.102, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.633, 'eval_steps_per_second': 64.915, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9527, 'eval_samples_per_second': 518.517, 'eval_steps_per_second': 65.026, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9641, 'eval_samples_per_second': 516.51, 'eval_steps_per_second': 64.775, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0449, 'eval_samples_per_second': 502.807, 'eval_steps_per_second': 63.056, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9671, 'eval_samples_per_second': 515.997, 'eval_steps_per_second': 64.71, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.966, 'eval_samples_per_second': 516.191, 'eval_steps_per_second': 64.735, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9578, 'eval_samples_per_second': 517.612, 'eval_steps_per_second': 64.913, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.956, 'eval_steps_per_second': 64.831, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.637, 'eval_steps_per_second': 64.916, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9841, 'eval_samples_per_second': 513.052, 'eval_steps_per_second': 64.341, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9814, 'eval_samples_per_second': 513.512, 'eval_steps_per_second': 64.399, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.827, 'eval_steps_per_second': 64.814, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.887, 'eval_steps_per_second': 64.822, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9698, 'eval_samples_per_second': 515.519, 'eval_steps_per_second': 64.65, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9556, 'eval_samples_per_second': 517.995, 'eval_steps_per_second': 64.961, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.828, 'eval_steps_per_second': 64.689, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9597, 'eval_samples_per_second': 517.29, 'eval_steps_per_second': 64.872, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9542, 'eval_samples_per_second': 518.246, 'eval_steps_per_second': 64.992, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.879, 'eval_steps_per_second': 64.821, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1480.1432, 'train_samples_per_second': 139.997, 'train_steps_per_second': 17.512, 'total_flos': 4945283721637740.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.169
  predict_steps_per_second   =     64.396
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_00.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_20.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6778.43 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7191.34 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7003.50 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7053.57 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7082.02 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7190.64 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7350.95 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6404.66 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6844.99 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7430.73 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7036.28 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7111.50 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6930.91 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4162, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2509080171585083, 'eval_precision': 0.1391941391941392, 'eval_recall': 0.043329532497149374, 'eval_f1': 0.06608695652173913, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.9749, 'eval_samples_per_second': 514.634, 'eval_steps_per_second': 64.539, 'epoch': 1.0}
{'loss': 0.2172, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.22802715003490448, 'eval_precision': 0.2072072072072072, 'eval_recall': 0.13112884834663627, 'eval_f1': 0.1606145251396648, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.345, 'eval_steps_per_second': 65.005, 'epoch': 2.0}
{'loss': 0.1464, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.24882416427135468, 'eval_precision': 0.2568710359408034, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2665935271530444, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.9531, 'eval_samples_per_second': 518.44, 'eval_steps_per_second': 65.017, 'epoch': 3.0}
{'loss': 0.1035, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.27814751863479614, 'eval_precision': 0.28421052631578947, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2806004618937645, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 2.9254, 'eval_samples_per_second': 523.347, 'eval_steps_per_second': 65.632, 'epoch': 4.0}
{'loss': 0.0751, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.30776816606521606, 'eval_precision': 0.2731006160164271, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28741220961642355, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.9514, 'eval_samples_per_second': 518.736, 'eval_steps_per_second': 65.054, 'epoch': 5.0}
{'loss': 0.0503, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3377250134944916, 'eval_precision': 0.2673076923076923, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.29003651538862807, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.9489, 'eval_samples_per_second': 519.169, 'eval_steps_per_second': 65.108, 'epoch': 6.0}
{'loss': 0.0352, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.35889488458633423, 'eval_precision': 0.28, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2948164146868251, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.343, 'eval_steps_per_second': 65.004, 'epoch': 7.0}
{'loss': 0.0228, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3919697701931, 'eval_precision': 0.3078626799557032, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3123595505617977, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.9469, 'eval_samples_per_second': 519.535, 'eval_steps_per_second': 65.154, 'epoch': 8.0}
{'loss': 0.0166, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.4070228338241577, 'eval_precision': 0.27719665271966526, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28914348063284234, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9438, 'eval_samples_per_second': 520.079, 'eval_steps_per_second': 65.222, 'epoch': 9.0}
{'loss': 0.0123, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4259726107120514, 'eval_precision': 0.3076923076923077, 'eval_recall': 0.314709236031927, 'eval_f1': 0.31116121758737314, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 3.0287, 'eval_samples_per_second': 505.495, 'eval_steps_per_second': 63.393, 'epoch': 10.0}
{'loss': 0.009, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4646994471549988, 'eval_precision': 0.32147093712930014, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31511627906976747, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.9507, 'eval_samples_per_second': 518.866, 'eval_steps_per_second': 65.07, 'epoch': 11.0}
{'loss': 0.0069, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.47103485465049744, 'eval_precision': 0.2964876033057851, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3111111111111111, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.9411, 'eval_samples_per_second': 520.554, 'eval_steps_per_second': 65.282, 'epoch': 12.0}
{'loss': 0.0061, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4834388494491577, 'eval_precision': 0.2948294829482948, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.30011198208286677, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.9409, 'eval_samples_per_second': 520.581, 'eval_steps_per_second': 65.285, 'epoch': 13.0}
{'loss': 0.0041, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.5025968551635742, 'eval_precision': 0.31185270425776757, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3104238258877434, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9257, 'eval_samples_per_second': 523.285, 'eval_steps_per_second': 65.624, 'epoch': 14.0}
{'loss': 0.0031, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5181292295455933, 'eval_precision': 0.3151010701545779, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3084982537834692, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.9618, 'eval_samples_per_second': 516.919, 'eval_steps_per_second': 64.826, 'epoch': 15.0}
{'loss': 0.0025, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.512701690196991, 'eval_precision': 0.31644144144144143, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3184135977337111, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.32, 'eval_steps_per_second': 65.002, 'epoch': 16.0}
{'loss': 0.0017, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.5342321395874023, 'eval_precision': 0.3005128205128205, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31641468682505397, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.9447, 'eval_samples_per_second': 519.917, 'eval_steps_per_second': 65.202, 'epoch': 17.0}
{'loss': 0.0013, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5546762347221375, 'eval_precision': 0.294238683127572, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3093564088696592, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.9401, 'eval_samples_per_second': 520.726, 'eval_steps_per_second': 65.303, 'epoch': 18.0}
{'loss': 0.0012, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5546556115150452, 'eval_precision': 0.30512514898688914, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29836829836829837, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.957, 'eval_steps_per_second': 65.332, 'epoch': 19.0}
{'loss': 0.0008, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5684327483177185, 'eval_precision': 0.3023758099352052, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31059345535219074, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.9629, 'eval_samples_per_second': 516.72, 'eval_steps_per_second': 64.801, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5710704922676086, 'eval_precision': 0.3194774346793349, 'eval_recall': 0.30672748004561, 'eval_f1': 0.31297265852239675, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.937, 'eval_samples_per_second': 521.276, 'eval_steps_per_second': 65.372, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5726597309112549, 'eval_precision': 0.33081761006289306, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.31459330143540665, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 3.0135, 'eval_samples_per_second': 508.046, 'eval_steps_per_second': 63.713, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5740376710891724, 'eval_precision': 0.32, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.3102232667450059, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.9386, 'eval_samples_per_second': 521.0, 'eval_steps_per_second': 65.338, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5761842131614685, 'eval_precision': 0.31942789034564956, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.3123543123543124, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.9356, 'eval_samples_per_second': 521.523, 'eval_steps_per_second': 65.403, 'epoch': 24.0}
{'train_runtime': 996.9637, 'train_samples_per_second': 207.847, 'train_steps_per_second': 12.999, 'train_loss': 0.047246953586323394, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0472
  train_runtime            = 0:16:36.96
  train_samples            =       8634
  train_samples_per_second =    207.847
  train_steps_per_second   =     12.999
[{'loss': 0.4162, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.2509080171585083, 'eval_precision': 0.1391941391941392, 'eval_recall': 0.043329532497149374, 'eval_f1': 0.06608695652173913, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.9749, 'eval_samples_per_second': 514.634, 'eval_steps_per_second': 64.539, 'epoch': 1.0, 'step': 540}, {'loss': 0.2172, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.22802715003490448, 'eval_precision': 0.2072072072072072, 'eval_recall': 0.13112884834663627, 'eval_f1': 0.1606145251396648, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.345, 'eval_steps_per_second': 65.005, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1464, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.24882416427135468, 'eval_precision': 0.2568710359408034, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2665935271530444, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.9531, 'eval_samples_per_second': 518.44, 'eval_steps_per_second': 65.017, 'epoch': 3.0, 'step': 1620}, {'loss': 0.1035, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.27814751863479614, 'eval_precision': 0.28421052631578947, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2806004618937645, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 2.9254, 'eval_samples_per_second': 523.347, 'eval_steps_per_second': 65.632, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0751, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.30776816606521606, 'eval_precision': 0.2731006160164271, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28741220961642355, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.9514, 'eval_samples_per_second': 518.736, 'eval_steps_per_second': 65.054, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0503, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.3377250134944916, 'eval_precision': 0.2673076923076923, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.29003651538862807, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.9489, 'eval_samples_per_second': 519.169, 'eval_steps_per_second': 65.108, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0352, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.35889488458633423, 'eval_precision': 0.28, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2948164146868251, 'eval_accuracy': 0.931791862888906, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.343, 'eval_steps_per_second': 65.004, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0228, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.3919697701931, 'eval_precision': 0.3078626799557032, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3123595505617977, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.9469, 'eval_samples_per_second': 519.535, 'eval_steps_per_second': 65.154, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0166, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.4070228338241577, 'eval_precision': 0.27719665271966526, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28914348063284234, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9438, 'eval_samples_per_second': 520.079, 'eval_steps_per_second': 65.222, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0123, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.4259726107120514, 'eval_precision': 0.3076923076923077, 'eval_recall': 0.314709236031927, 'eval_f1': 0.31116121758737314, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 3.0287, 'eval_samples_per_second': 505.495, 'eval_steps_per_second': 63.393, 'epoch': 10.0, 'step': 5400}, {'loss': 0.009, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.4646994471549988, 'eval_precision': 0.32147093712930014, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31511627906976747, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.9507, 'eval_samples_per_second': 518.866, 'eval_steps_per_second': 65.07, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0069, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.47103485465049744, 'eval_precision': 0.2964876033057851, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3111111111111111, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.9411, 'eval_samples_per_second': 520.554, 'eval_steps_per_second': 65.282, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0061, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.4834388494491577, 'eval_precision': 0.2948294829482948, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.30011198208286677, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.9409, 'eval_samples_per_second': 520.581, 'eval_steps_per_second': 65.285, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0041, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.5025968551635742, 'eval_precision': 0.31185270425776757, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3104238258877434, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9257, 'eval_samples_per_second': 523.285, 'eval_steps_per_second': 65.624, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0031, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.5181292295455933, 'eval_precision': 0.3151010701545779, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3084982537834692, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.9618, 'eval_samples_per_second': 516.919, 'eval_steps_per_second': 64.826, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0025, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.512701690196991, 'eval_precision': 0.31644144144144143, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3184135977337111, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.32, 'eval_steps_per_second': 65.002, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0017, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.5342321395874023, 'eval_precision': 0.3005128205128205, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.31641468682505397, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.9447, 'eval_samples_per_second': 519.917, 'eval_steps_per_second': 65.202, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0013, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.5546762347221375, 'eval_precision': 0.294238683127572, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3093564088696592, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.9401, 'eval_samples_per_second': 520.726, 'eval_steps_per_second': 65.303, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0012, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5546556115150452, 'eval_precision': 0.30512514898688914, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.29836829836829837, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.957, 'eval_steps_per_second': 65.332, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0008, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5684327483177185, 'eval_precision': 0.3023758099352052, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31059345535219074, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.9629, 'eval_samples_per_second': 516.72, 'eval_steps_per_second': 64.801, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.5710704922676086, 'eval_precision': 0.3194774346793349, 'eval_recall': 0.30672748004561, 'eval_f1': 0.31297265852239675, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.937, 'eval_samples_per_second': 521.276, 'eval_steps_per_second': 65.372, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.5726597309112549, 'eval_precision': 0.33081761006289306, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.31459330143540665, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 3.0135, 'eval_samples_per_second': 508.046, 'eval_steps_per_second': 63.713, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5740376710891724, 'eval_precision': 0.32, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.3102232667450059, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.9386, 'eval_samples_per_second': 521.0, 'eval_steps_per_second': 65.338, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5761842131614685, 'eval_precision': 0.31942789034564956, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.3123543123543124, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 2.9356, 'eval_samples_per_second': 521.523, 'eval_steps_per_second': 65.403, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 996.9637, 'train_samples_per_second': 207.847, 'train_steps_per_second': 12.999, 'total_flos': 5804249700899820.0, 'train_loss': 0.047246953586323394, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9394
  predict_f1                 =     0.1364
  predict_loss               =     0.2438
  predict_precision          =     0.1756
  predict_recall             =     0.1116
  predict_runtime            = 0:00:02.45
  predict_samples_per_second =    518.838
  predict_steps_per_second   =     64.855
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_20.json completed. F1: 0.13643926788685523
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_24.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6112.00 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6824.98 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6781.48 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6860.77 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6935.05 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7069.15 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7237.80 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6334.15 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6697.82 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7330.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6941.91 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7020.75 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6812.05 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0093, 'eval_samples_per_second': 508.764, 'eval_steps_per_second': 63.803, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.562, 'eval_steps_per_second': 65.408, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9983, 'eval_samples_per_second': 510.618, 'eval_steps_per_second': 64.036, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9391, 'eval_samples_per_second': 520.911, 'eval_steps_per_second': 65.326, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9372, 'eval_samples_per_second': 521.24, 'eval_steps_per_second': 65.368, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9273, 'eval_samples_per_second': 523.005, 'eval_steps_per_second': 65.589, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.979, 'eval_samples_per_second': 513.925, 'eval_steps_per_second': 64.45, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9725, 'eval_samples_per_second': 515.062, 'eval_steps_per_second': 64.593, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9707, 'eval_samples_per_second': 515.368, 'eval_steps_per_second': 64.631, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0473, 'eval_samples_per_second': 502.408, 'eval_steps_per_second': 63.006, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9244, 'eval_samples_per_second': 523.525, 'eval_steps_per_second': 65.654, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9363, 'eval_samples_per_second': 521.412, 'eval_steps_per_second': 65.389, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9699, 'eval_samples_per_second': 515.508, 'eval_steps_per_second': 64.649, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9248, 'eval_samples_per_second': 523.454, 'eval_steps_per_second': 65.645, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9267, 'eval_samples_per_second': 523.122, 'eval_steps_per_second': 65.604, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9688, 'eval_samples_per_second': 515.692, 'eval_steps_per_second': 64.672, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9315, 'eval_samples_per_second': 522.264, 'eval_steps_per_second': 65.496, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.802, 'eval_steps_per_second': 64.686, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.866, 'eval_steps_per_second': 65.572, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9683, 'eval_samples_per_second': 515.791, 'eval_steps_per_second': 64.684, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9269, 'eval_samples_per_second': 523.079, 'eval_steps_per_second': 65.598, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.593, 'eval_steps_per_second': 64.158, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9636, 'eval_samples_per_second': 516.593, 'eval_steps_per_second': 64.785, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9659, 'eval_samples_per_second': 516.193, 'eval_steps_per_second': 64.735, 'epoch': 24.0}
{'train_runtime': 874.6834, 'train_samples_per_second': 236.904, 'train_steps_per_second': 7.408, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:34.68
  train_samples            =       8634
  train_samples_per_second =    236.904
  train_steps_per_second   =      7.408
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0093, 'eval_samples_per_second': 508.764, 'eval_steps_per_second': 63.803, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.562, 'eval_steps_per_second': 65.408, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9983, 'eval_samples_per_second': 510.618, 'eval_steps_per_second': 64.036, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9391, 'eval_samples_per_second': 520.911, 'eval_steps_per_second': 65.326, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9372, 'eval_samples_per_second': 521.24, 'eval_steps_per_second': 65.368, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9273, 'eval_samples_per_second': 523.005, 'eval_steps_per_second': 65.589, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.979, 'eval_samples_per_second': 513.925, 'eval_steps_per_second': 64.45, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9725, 'eval_samples_per_second': 515.062, 'eval_steps_per_second': 64.593, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9707, 'eval_samples_per_second': 515.368, 'eval_steps_per_second': 64.631, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0473, 'eval_samples_per_second': 502.408, 'eval_steps_per_second': 63.006, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9244, 'eval_samples_per_second': 523.525, 'eval_steps_per_second': 65.654, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9363, 'eval_samples_per_second': 521.412, 'eval_steps_per_second': 65.389, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9699, 'eval_samples_per_second': 515.508, 'eval_steps_per_second': 64.649, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9248, 'eval_samples_per_second': 523.454, 'eval_steps_per_second': 65.645, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9267, 'eval_samples_per_second': 523.122, 'eval_steps_per_second': 65.604, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9688, 'eval_samples_per_second': 515.692, 'eval_steps_per_second': 64.672, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9315, 'eval_samples_per_second': 522.264, 'eval_steps_per_second': 65.496, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.802, 'eval_steps_per_second': 64.686, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.866, 'eval_steps_per_second': 65.572, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9683, 'eval_samples_per_second': 515.791, 'eval_steps_per_second': 64.684, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9269, 'eval_samples_per_second': 523.079, 'eval_steps_per_second': 65.598, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.593, 'eval_steps_per_second': 64.158, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9636, 'eval_samples_per_second': 516.593, 'eval_steps_per_second': 64.785, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9659, 'eval_samples_per_second': 516.193, 'eval_steps_per_second': 64.735, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 874.6834, 'train_samples_per_second': 236.904, 'train_steps_per_second': 7.408, 'total_flos': 6696816021960792.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    513.634
  predict_steps_per_second   =     64.204
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_24.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_29.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_29.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6760.02 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7197.58 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6956.18 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7000.67 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7050.04 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7154.08 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7324.53 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6396.39 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6818.90 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7348.46 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6986.35 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7037.86 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6822.03 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7564, 'eval_samples_per_second': 265.963, 'eval_steps_per_second': 33.354, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7147, 'eval_samples_per_second': 267.904, 'eval_steps_per_second': 33.597, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7304, 'eval_samples_per_second': 267.173, 'eval_steps_per_second': 33.506, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7267, 'eval_samples_per_second': 267.342, 'eval_steps_per_second': 33.527, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7244, 'eval_samples_per_second': 267.45, 'eval_steps_per_second': 33.54, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7377, 'eval_samples_per_second': 266.833, 'eval_steps_per_second': 33.463, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7216, 'eval_samples_per_second': 267.584, 'eval_steps_per_second': 33.557, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7206, 'eval_samples_per_second': 267.627, 'eval_steps_per_second': 33.563, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.727, 'eval_steps_per_second': 33.575, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6993, 'eval_samples_per_second': 268.63, 'eval_steps_per_second': 33.688, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7857, 'eval_samples_per_second': 264.62, 'eval_steps_per_second': 33.185, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7169, 'eval_samples_per_second': 267.803, 'eval_steps_per_second': 33.585, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7018, 'eval_samples_per_second': 268.513, 'eval_steps_per_second': 33.674, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7293, 'eval_samples_per_second': 267.223, 'eval_steps_per_second': 33.512, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7141, 'eval_samples_per_second': 267.933, 'eval_steps_per_second': 33.601, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7786, 'eval_samples_per_second': 264.944, 'eval_steps_per_second': 33.226, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6964, 'eval_samples_per_second': 268.768, 'eval_steps_per_second': 33.706, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.697, 'eval_samples_per_second': 268.737, 'eval_steps_per_second': 33.702, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6965, 'eval_samples_per_second': 268.761, 'eval_steps_per_second': 33.705, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.212, 'eval_steps_per_second': 33.761, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7042, 'eval_samples_per_second': 268.399, 'eval_steps_per_second': 33.659, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7019, 'eval_samples_per_second': 268.507, 'eval_steps_per_second': 33.673, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6861, 'eval_samples_per_second': 269.253, 'eval_steps_per_second': 33.767, 'epoch': 24.0}
{'train_runtime': 2428.6236, 'train_samples_per_second': 85.322, 'train_steps_per_second': 2.668, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:28.62
  train_samples            =       8634
  train_samples_per_second =     85.322
  train_steps_per_second   =      2.668
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7564, 'eval_samples_per_second': 265.963, 'eval_steps_per_second': 33.354, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7147, 'eval_samples_per_second': 267.904, 'eval_steps_per_second': 33.597, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7304, 'eval_samples_per_second': 267.173, 'eval_steps_per_second': 33.506, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7267, 'eval_samples_per_second': 267.342, 'eval_steps_per_second': 33.527, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7244, 'eval_samples_per_second': 267.45, 'eval_steps_per_second': 33.54, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7377, 'eval_samples_per_second': 266.833, 'eval_steps_per_second': 33.463, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7216, 'eval_samples_per_second': 267.584, 'eval_steps_per_second': 33.557, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7206, 'eval_samples_per_second': 267.627, 'eval_steps_per_second': 33.563, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.727, 'eval_steps_per_second': 33.575, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6993, 'eval_samples_per_second': 268.63, 'eval_steps_per_second': 33.688, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7857, 'eval_samples_per_second': 264.62, 'eval_steps_per_second': 33.185, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7169, 'eval_samples_per_second': 267.803, 'eval_steps_per_second': 33.585, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7018, 'eval_samples_per_second': 268.513, 'eval_steps_per_second': 33.674, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7293, 'eval_samples_per_second': 267.223, 'eval_steps_per_second': 33.512, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7141, 'eval_samples_per_second': 267.933, 'eval_steps_per_second': 33.601, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7786, 'eval_samples_per_second': 264.944, 'eval_steps_per_second': 33.226, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6964, 'eval_samples_per_second': 268.768, 'eval_steps_per_second': 33.706, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.697, 'eval_samples_per_second': 268.737, 'eval_steps_per_second': 33.702, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6965, 'eval_samples_per_second': 268.761, 'eval_steps_per_second': 33.705, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.212, 'eval_steps_per_second': 33.761, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7042, 'eval_samples_per_second': 268.399, 'eval_steps_per_second': 33.659, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7019, 'eval_samples_per_second': 268.507, 'eval_steps_per_second': 33.673, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6861, 'eval_samples_per_second': 269.253, 'eval_steps_per_second': 33.767, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2428.6236, 'train_samples_per_second': 85.322, 'train_steps_per_second': 2.668, 'total_flos': 2.3712376746980376e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.76
  predict_samples_per_second =    266.677
  predict_steps_per_second   =     33.335
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_29.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_25.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6750.73 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7140.69 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6966.12 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7008.65 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7043.36 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7163.30 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7316.25 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6383.85 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6819.00 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7332.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6991.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7026.16 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6858.77 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NorBERT_3_large/checkpoint-270 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7575, 'eval_samples_per_second': 265.915, 'eval_steps_per_second': 33.348, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7174, 'eval_samples_per_second': 267.777, 'eval_steps_per_second': 33.581, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7098, 'eval_samples_per_second': 268.136, 'eval_steps_per_second': 33.626, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7001, 'eval_samples_per_second': 268.594, 'eval_steps_per_second': 33.684, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7089, 'eval_samples_per_second': 268.18, 'eval_steps_per_second': 33.632, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6947, 'eval_samples_per_second': 268.844, 'eval_steps_per_second': 33.715, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7222, 'eval_samples_per_second': 267.554, 'eval_steps_per_second': 33.554, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6936, 'eval_samples_per_second': 268.9, 'eval_steps_per_second': 33.722, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6933, 'eval_samples_per_second': 268.911, 'eval_steps_per_second': 33.724, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7165, 'eval_samples_per_second': 267.822, 'eval_steps_per_second': 33.587, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6896, 'eval_samples_per_second': 269.088, 'eval_steps_per_second': 33.746, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7696, 'eval_samples_per_second': 265.358, 'eval_steps_per_second': 33.278, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6951, 'eval_samples_per_second': 268.826, 'eval_steps_per_second': 33.713, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6962, 'eval_samples_per_second': 268.776, 'eval_steps_per_second': 33.707, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6959, 'eval_samples_per_second': 268.791, 'eval_steps_per_second': 33.709, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6857, 'eval_samples_per_second': 269.272, 'eval_steps_per_second': 33.769, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7702, 'eval_samples_per_second': 265.329, 'eval_steps_per_second': 33.274, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6962, 'eval_samples_per_second': 268.777, 'eval_steps_per_second': 33.707, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6973, 'eval_samples_per_second': 268.725, 'eval_steps_per_second': 33.7, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6867, 'eval_samples_per_second': 269.223, 'eval_steps_per_second': 33.763, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6938, 'eval_samples_per_second': 268.887, 'eval_steps_per_second': 33.721, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6708, 'eval_samples_per_second': 269.978, 'eval_steps_per_second': 33.857, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6754, 'eval_samples_per_second': 269.762, 'eval_steps_per_second': 33.83, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6852, 'eval_samples_per_second': 269.298, 'eval_steps_per_second': 33.772, 'epoch': 24.0}
{'train_runtime': 2426.2459, 'train_samples_per_second': 85.406, 'train_steps_per_second': 2.671, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:26.24
  train_samples            =       8634
  train_samples_per_second =     85.406
  train_steps_per_second   =      2.671
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7575, 'eval_samples_per_second': 265.915, 'eval_steps_per_second': 33.348, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7174, 'eval_samples_per_second': 267.777, 'eval_steps_per_second': 33.581, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7098, 'eval_samples_per_second': 268.136, 'eval_steps_per_second': 33.626, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7001, 'eval_samples_per_second': 268.594, 'eval_steps_per_second': 33.684, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7089, 'eval_samples_per_second': 268.18, 'eval_steps_per_second': 33.632, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6947, 'eval_samples_per_second': 268.844, 'eval_steps_per_second': 33.715, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7222, 'eval_samples_per_second': 267.554, 'eval_steps_per_second': 33.554, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6936, 'eval_samples_per_second': 268.9, 'eval_steps_per_second': 33.722, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6933, 'eval_samples_per_second': 268.911, 'eval_steps_per_second': 33.724, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7165, 'eval_samples_per_second': 267.822, 'eval_steps_per_second': 33.587, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6896, 'eval_samples_per_second': 269.088, 'eval_steps_per_second': 33.746, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7696, 'eval_samples_per_second': 265.358, 'eval_steps_per_second': 33.278, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6951, 'eval_samples_per_second': 268.826, 'eval_steps_per_second': 33.713, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6962, 'eval_samples_per_second': 268.776, 'eval_steps_per_second': 33.707, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6959, 'eval_samples_per_second': 268.791, 'eval_steps_per_second': 33.709, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6857, 'eval_samples_per_second': 269.272, 'eval_steps_per_second': 33.769, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7702, 'eval_samples_per_second': 265.329, 'eval_steps_per_second': 33.274, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6962, 'eval_samples_per_second': 268.777, 'eval_steps_per_second': 33.707, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6973, 'eval_samples_per_second': 268.725, 'eval_steps_per_second': 33.7, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6867, 'eval_samples_per_second': 269.223, 'eval_steps_per_second': 33.763, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6938, 'eval_samples_per_second': 268.887, 'eval_steps_per_second': 33.721, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6708, 'eval_samples_per_second': 269.978, 'eval_steps_per_second': 33.857, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6754, 'eval_samples_per_second': 269.762, 'eval_steps_per_second': 33.83, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6852, 'eval_samples_per_second': 269.298, 'eval_steps_per_second': 33.772, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2426.2459, 'train_samples_per_second': 85.406, 'train_steps_per_second': 2.671, 'total_flos': 2.3712376746980376e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.77
  predict_samples_per_second =    266.542
  predict_steps_per_second   =     33.318
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_25.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_41.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6093.67 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6829.30 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6783.62 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6861.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6927.46 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7071.20 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7233.80 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6319.47 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6696.02 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7302.70 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6967.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6988.85 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6486.12 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.8107, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8169, 'eval_samples_per_second': 263.199, 'eval_steps_per_second': 33.007, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7633, 'eval_samples_per_second': 265.645, 'eval_steps_per_second': 33.314, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7579, 'eval_samples_per_second': 265.898, 'eval_steps_per_second': 33.346, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7473, 'eval_samples_per_second': 266.385, 'eval_steps_per_second': 33.407, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.748, 'eval_samples_per_second': 266.352, 'eval_steps_per_second': 33.403, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.747, 'eval_samples_per_second': 266.4, 'eval_steps_per_second': 33.409, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.608, 'eval_steps_per_second': 33.435, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7483, 'eval_samples_per_second': 266.341, 'eval_steps_per_second': 33.401, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8217, 'eval_samples_per_second': 262.98, 'eval_steps_per_second': 32.98, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7593, 'eval_samples_per_second': 265.832, 'eval_steps_per_second': 33.338, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7429, 'eval_samples_per_second': 266.588, 'eval_steps_per_second': 33.432, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7523, 'eval_samples_per_second': 266.157, 'eval_steps_per_second': 33.378, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7509, 'eval_samples_per_second': 266.22, 'eval_steps_per_second': 33.386, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7445, 'eval_samples_per_second': 266.517, 'eval_steps_per_second': 33.423, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.181, 'eval_steps_per_second': 33.381, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.611, 'eval_steps_per_second': 33.435, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.914, 'eval_steps_per_second': 33.473, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7167, 'eval_samples_per_second': 267.81, 'eval_steps_per_second': 33.586, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.69, 'eval_steps_per_second': 33.571, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.726, 'eval_samples_per_second': 267.377, 'eval_steps_per_second': 33.531, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7218, 'eval_samples_per_second': 267.573, 'eval_steps_per_second': 33.556, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7081, 'eval_samples_per_second': 268.214, 'eval_steps_per_second': 33.636, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7076, 'eval_samples_per_second': 268.239, 'eval_steps_per_second': 33.639, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7128, 'eval_samples_per_second': 267.994, 'eval_steps_per_second': 33.609, 'epoch': 24.0}
{'train_runtime': 2428.3931, 'train_samples_per_second': 85.331, 'train_steps_per_second': 1.334, 'train_loss': 0.03377829186710311, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0338
  train_runtime            = 0:40:28.39
  train_samples            =       8634
  train_samples_per_second =     85.331
  train_steps_per_second   =      1.334
[{'loss': 0.8107, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8169, 'eval_samples_per_second': 263.199, 'eval_steps_per_second': 33.007, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7633, 'eval_samples_per_second': 265.645, 'eval_steps_per_second': 33.314, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7579, 'eval_samples_per_second': 265.898, 'eval_steps_per_second': 33.346, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7473, 'eval_samples_per_second': 266.385, 'eval_steps_per_second': 33.407, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.748, 'eval_samples_per_second': 266.352, 'eval_steps_per_second': 33.403, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.747, 'eval_samples_per_second': 266.4, 'eval_steps_per_second': 33.409, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.608, 'eval_steps_per_second': 33.435, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7483, 'eval_samples_per_second': 266.341, 'eval_steps_per_second': 33.401, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8217, 'eval_samples_per_second': 262.98, 'eval_steps_per_second': 32.98, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7593, 'eval_samples_per_second': 265.832, 'eval_steps_per_second': 33.338, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7429, 'eval_samples_per_second': 266.588, 'eval_steps_per_second': 33.432, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7523, 'eval_samples_per_second': 266.157, 'eval_steps_per_second': 33.378, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7509, 'eval_samples_per_second': 266.22, 'eval_steps_per_second': 33.386, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7445, 'eval_samples_per_second': 266.517, 'eval_steps_per_second': 33.423, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7517, 'eval_samples_per_second': 266.181, 'eval_steps_per_second': 33.381, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.611, 'eval_steps_per_second': 33.435, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.914, 'eval_steps_per_second': 33.473, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7167, 'eval_samples_per_second': 267.81, 'eval_steps_per_second': 33.586, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.69, 'eval_steps_per_second': 33.571, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.726, 'eval_samples_per_second': 267.377, 'eval_steps_per_second': 33.531, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7218, 'eval_samples_per_second': 267.573, 'eval_steps_per_second': 33.556, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7081, 'eval_samples_per_second': 268.214, 'eval_steps_per_second': 33.636, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7076, 'eval_samples_per_second': 268.239, 'eval_steps_per_second': 33.639, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7128, 'eval_samples_per_second': 267.994, 'eval_steps_per_second': 33.609, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2428.3931, 'train_samples_per_second': 85.331, 'train_steps_per_second': 1.334, 'total_flos': 2.705738887944774e+16, 'train_loss': 0.03377829186710311, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =    265.699
  predict_steps_per_second   =     33.212
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_41.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_26.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6074.36 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6819.24 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6734.51 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6838.27 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6920.35 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7054.26 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6231.86 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6563.40 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6674.95 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7322.92 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6912.31 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6958.02 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6787.88 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2532, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.17502273619174957, 'eval_precision': 0.3838748495788207, 'eval_recall': 0.3637400228050171, 'eval_f1': 0.3735362997658079, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.232, 'eval_steps_per_second': 81.294, 'epoch': 1.0}
{'loss': 0.162, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.15033039450645447, 'eval_precision': 0.4709371293001186, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.46162790697674416, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.029, 'eval_steps_per_second': 81.644, 'epoch': 2.0}
{'loss': 0.1274, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.15245483815670013, 'eval_precision': 0.46273637374860954, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.46846846846846846, 'eval_accuracy': 0.9490851540183741, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.212, 'eval_steps_per_second': 81.667, 'epoch': 3.0}
{'loss': 0.0977, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.16755713522434235, 'eval_precision': 0.46338912133891214, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4833606110201855, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.503, 'eval_steps_per_second': 81.704, 'epoch': 4.0}
{'loss': 0.0768, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.17709368467330933, 'eval_precision': 0.4839080459770115, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.48196908986834575, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.793, 'eval_steps_per_second': 81.489, 'epoch': 5.0}
{'loss': 0.0603, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.1881820559501648, 'eval_precision': 0.4958183990442055, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.48424737456242706, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 2.3463, 'eval_samples_per_second': 652.504, 'eval_steps_per_second': 81.829, 'epoch': 6.0}
{'loss': 0.0487, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.20748360455036163, 'eval_precision': 0.44920782851817337, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4943589743589744, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.755, 'eval_steps_per_second': 81.735, 'epoch': 7.0}
{'loss': 0.0394, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.21970413625240326, 'eval_precision': 0.4452690166975881, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.49104859335038364, 'eval_accuracy': 0.9454952520651586, 'eval_runtime': 2.3508, 'eval_samples_per_second': 651.262, 'eval_steps_per_second': 81.674, 'epoch': 8.0}
{'loss': 0.0331, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.22611401975154877, 'eval_precision': 0.4336513443191674, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.4926108374384237, 'eval_accuracy': 0.9448776345248205, 'eval_runtime': 2.4275, 'eval_samples_per_second': 630.701, 'eval_steps_per_second': 79.095, 'epoch': 9.0}
{'loss': 0.0282, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.24130377173423767, 'eval_precision': 0.46951871657754013, 'eval_recall': 0.500570125427594, 'eval_f1': 0.48454746136865345, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.477, 'eval_steps_per_second': 81.701, 'epoch': 10.0}
{'loss': 0.0217, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.25637760758399963, 'eval_precision': 0.4887459807073955, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5038674033149172, 'eval_accuracy': 0.9488535474407473, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.314, 'eval_steps_per_second': 81.68, 'epoch': 11.0}
{'loss': 0.019, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.26729467511177063, 'eval_precision': 0.48253968253968255, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5005488474204172, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.475, 'eval_steps_per_second': 81.7, 'epoch': 12.0}
{'loss': 0.0168, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.2752586305141449, 'eval_precision': 0.48577680525164113, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4958123953098827, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3452, 'eval_samples_per_second': 652.82, 'eval_steps_per_second': 81.869, 'epoch': 13.0}
{'loss': 0.0143, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.2792588770389557, 'eval_precision': 0.44434222631094755, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.49185336048879835, 'eval_accuracy': 0.9461128696054968, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.639, 'eval_steps_per_second': 81.721, 'epoch': 14.0}
{'loss': 0.0128, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.29768744111061096, 'eval_precision': 0.43904593639575973, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.4947735191637631, 'eval_accuracy': 0.9448390334285494, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.998, 'eval_steps_per_second': 81.766, 'epoch': 15.0}
{'loss': 0.011, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.2926676869392395, 'eval_precision': 0.4820675105485232, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5008219178082192, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.3496, 'eval_samples_per_second': 651.6, 'eval_steps_per_second': 81.716, 'epoch': 16.0}
{'loss': 0.0094, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.29503899812698364, 'eval_precision': 0.4797570850202429, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5083109919571045, 'eval_accuracy': 0.9480043233227824, 'eval_runtime': 2.4299, 'eval_samples_per_second': 630.078, 'eval_steps_per_second': 79.017, 'epoch': 17.0}
{'loss': 0.0084, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.3039051592350006, 'eval_precision': 0.47202441505595116, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4989247311827957, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.171, 'eval_steps_per_second': 81.788, 'epoch': 18.0}
{'loss': 0.0075, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3122032880783081, 'eval_precision': 0.4682080924855491, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5075718015665797, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.882, 'eval_steps_per_second': 81.501, 'epoch': 19.0}
{'loss': 0.0067, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.3127208650112152, 'eval_precision': 0.48747390396659707, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5089918256130791, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.3427, 'eval_samples_per_second': 653.506, 'eval_steps_per_second': 81.955, 'epoch': 20.0}
{'loss': 0.0058, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.31932222843170166, 'eval_precision': 0.47497546614327774, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.510548523206751, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.149, 'eval_steps_per_second': 81.91, 'epoch': 21.0}
{'loss': 0.0059, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.32198968529701233, 'eval_precision': 0.47357926221335994, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5053191489361701, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3437, 'eval_samples_per_second': 653.23, 'eval_steps_per_second': 81.92, 'epoch': 22.0}
{'loss': 0.0053, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.32503578066825867, 'eval_precision': 0.4808080808080808, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5099089448312802, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.902, 'eval_steps_per_second': 81.879, 'epoch': 23.0}
{'loss': 0.0059, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3239247500896454, 'eval_precision': 0.48367346938775513, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5105008077544426, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.62, 'eval_steps_per_second': 81.719, 'epoch': 24.0}
{'train_runtime': 866.8023, 'train_samples_per_second': 239.058, 'train_steps_per_second': 7.476, 'train_loss': 0.044901221107553554, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0449
  train_runtime            = 0:14:26.80
  train_samples            =       8634
  train_samples_per_second =    239.058
  train_steps_per_second   =      7.476
[{'loss': 0.2532, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.17502273619174957, 'eval_precision': 0.3838748495788207, 'eval_recall': 0.3637400228050171, 'eval_f1': 0.3735362997658079, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.232, 'eval_steps_per_second': 81.294, 'epoch': 1.0, 'step': 270}, {'loss': 0.162, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.15033039450645447, 'eval_precision': 0.4709371293001186, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.46162790697674416, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.029, 'eval_steps_per_second': 81.644, 'epoch': 2.0, 'step': 540}, {'loss': 0.1274, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.15245483815670013, 'eval_precision': 0.46273637374860954, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.46846846846846846, 'eval_accuracy': 0.9490851540183741, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.212, 'eval_steps_per_second': 81.667, 'epoch': 3.0, 'step': 810}, {'loss': 0.0977, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.16755713522434235, 'eval_precision': 0.46338912133891214, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4833606110201855, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.503, 'eval_steps_per_second': 81.704, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0768, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.17709368467330933, 'eval_precision': 0.4839080459770115, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.48196908986834575, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.793, 'eval_steps_per_second': 81.489, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0603, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.1881820559501648, 'eval_precision': 0.4958183990442055, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.48424737456242706, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 2.3463, 'eval_samples_per_second': 652.504, 'eval_steps_per_second': 81.829, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0487, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.20748360455036163, 'eval_precision': 0.44920782851817337, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4943589743589744, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.755, 'eval_steps_per_second': 81.735, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0394, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.21970413625240326, 'eval_precision': 0.4452690166975881, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.49104859335038364, 'eval_accuracy': 0.9454952520651586, 'eval_runtime': 2.3508, 'eval_samples_per_second': 651.262, 'eval_steps_per_second': 81.674, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0331, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.22611401975154877, 'eval_precision': 0.4336513443191674, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.4926108374384237, 'eval_accuracy': 0.9448776345248205, 'eval_runtime': 2.4275, 'eval_samples_per_second': 630.701, 'eval_steps_per_second': 79.095, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0282, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.24130377173423767, 'eval_precision': 0.46951871657754013, 'eval_recall': 0.500570125427594, 'eval_f1': 0.48454746136865345, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.35, 'eval_samples_per_second': 651.477, 'eval_steps_per_second': 81.701, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0217, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.25637760758399963, 'eval_precision': 0.4887459807073955, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5038674033149172, 'eval_accuracy': 0.9488535474407473, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.314, 'eval_steps_per_second': 81.68, 'epoch': 11.0, 'step': 2970}, {'loss': 0.019, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.26729467511177063, 'eval_precision': 0.48253968253968255, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5005488474204172, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.475, 'eval_steps_per_second': 81.7, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0168, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.2752586305141449, 'eval_precision': 0.48577680525164113, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4958123953098827, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3452, 'eval_samples_per_second': 652.82, 'eval_steps_per_second': 81.869, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0143, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.2792588770389557, 'eval_precision': 0.44434222631094755, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.49185336048879835, 'eval_accuracy': 0.9461128696054968, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.639, 'eval_steps_per_second': 81.721, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0128, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.29768744111061096, 'eval_precision': 0.43904593639575973, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.4947735191637631, 'eval_accuracy': 0.9448390334285494, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.998, 'eval_steps_per_second': 81.766, 'epoch': 15.0, 'step': 4050}, {'loss': 0.011, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.2926676869392395, 'eval_precision': 0.4820675105485232, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5008219178082192, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.3496, 'eval_samples_per_second': 651.6, 'eval_steps_per_second': 81.716, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0094, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.29503899812698364, 'eval_precision': 0.4797570850202429, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5083109919571045, 'eval_accuracy': 0.9480043233227824, 'eval_runtime': 2.4299, 'eval_samples_per_second': 630.078, 'eval_steps_per_second': 79.017, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0084, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.3039051592350006, 'eval_precision': 0.47202441505595116, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4989247311827957, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.171, 'eval_steps_per_second': 81.788, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0075, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.3122032880783081, 'eval_precision': 0.4682080924855491, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5075718015665797, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3558, 'eval_samples_per_second': 649.882, 'eval_steps_per_second': 81.501, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0067, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.3127208650112152, 'eval_precision': 0.48747390396659707, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5089918256130791, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.3427, 'eval_samples_per_second': 653.506, 'eval_steps_per_second': 81.955, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0058, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.31932222843170166, 'eval_precision': 0.47497546614327774, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.510548523206751, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.149, 'eval_steps_per_second': 81.91, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0059, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.32198968529701233, 'eval_precision': 0.47357926221335994, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5053191489361701, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3437, 'eval_samples_per_second': 653.23, 'eval_steps_per_second': 81.92, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0053, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.32503578066825867, 'eval_precision': 0.4808080808080808, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5099089448312802, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.902, 'eval_steps_per_second': 81.879, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0059, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.3239247500896454, 'eval_precision': 0.48367346938775513, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5105008077544426, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.62, 'eval_steps_per_second': 81.719, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 866.8023, 'train_samples_per_second': 239.058, 'train_steps_per_second': 7.476, 'total_flos': 7895714136063000.0, 'train_loss': 0.044901221107553554, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9516
  predict_f1                 =     0.4391
  predict_loss               =     0.1524
  predict_precision          =     0.4698
  predict_recall             =     0.4122
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    650.622
  predict_steps_per_second   =     81.328
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_26.json completed. F1: 0.4391304347826087
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_45.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_45.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5969.79 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6795.25 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6815.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6948.04 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7030.00 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7157.18 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7345.35 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6331.44 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6737.08 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7459.26 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7118.46 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7193.77 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6993.89 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NorBERT_3_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4516, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19564878940582275, 'eval_precision': 0.23917995444191345, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23931623931623933, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 5.7913, 'eval_samples_per_second': 264.363, 'eval_steps_per_second': 33.153, 'epoch': 1.0}
{'loss': 0.1871, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.18396838009357452, 'eval_precision': 0.4267605633802817, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3818525519848771, 'eval_accuracy': 0.9442214158882112, 'eval_runtime': 5.7549, 'eval_samples_per_second': 266.035, 'eval_steps_per_second': 33.363, 'epoch': 2.0}
{'loss': 0.1137, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.17214126884937286, 'eval_precision': 0.4518147684605757, 'eval_recall': 0.41163055872291904, 'eval_f1': 0.43078758949880663, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 5.7408, 'eval_samples_per_second': 266.686, 'eval_steps_per_second': 33.445, 'epoch': 3.0}
{'loss': 0.056, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.18487130105495453, 'eval_precision': 0.5239179954441914, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5242165242165243, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.478, 'eval_steps_per_second': 33.418, 'epoch': 4.0}
{'loss': 0.0315, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.22094585001468658, 'eval_precision': 0.5067415730337078, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5104697226938313, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 5.7638, 'eval_samples_per_second': 265.622, 'eval_steps_per_second': 33.311, 'epoch': 5.0}
{'loss': 0.0189, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.23078787326812744, 'eval_precision': 0.5268065268065268, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5210374639769452, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 5.7598, 'eval_samples_per_second': 265.808, 'eval_steps_per_second': 33.335, 'epoch': 6.0}
{'loss': 0.0105, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.23426592350006104, 'eval_precision': 0.46469465648854963, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.505974025974026, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 5.7666, 'eval_samples_per_second': 265.494, 'eval_steps_per_second': 33.295, 'epoch': 7.0}
{'loss': 0.0067, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.26155614852905273, 'eval_precision': 0.5214797136038186, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5096209912536444, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 5.7416, 'eval_samples_per_second': 266.652, 'eval_steps_per_second': 33.44, 'epoch': 8.0}
{'loss': 0.005, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.2719654440879822, 'eval_precision': 0.525, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5375626043405677, 'eval_accuracy': 0.9526364548753185, 'eval_runtime': 5.8167, 'eval_samples_per_second': 263.208, 'eval_steps_per_second': 33.008, 'epoch': 9.0}
{'loss': 0.003, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2905258238315582, 'eval_precision': 0.5267857142857143, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5324309080654258, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 5.7566, 'eval_samples_per_second': 265.956, 'eval_steps_per_second': 33.353, 'epoch': 10.0}
{'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.30623066425323486, 'eval_precision': 0.523696682464455, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5136548518303312, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 5.7258, 'eval_samples_per_second': 267.387, 'eval_steps_per_second': 33.533, 'epoch': 11.0}
{'loss': 0.0019, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.30767762660980225, 'eval_precision': 0.5395604395604395, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5495243424734191, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.748, 'eval_steps_per_second': 33.327, 'epoch': 12.0}
{'loss': 0.0016, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3157041668891907, 'eval_precision': 0.530982905982906, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.5482625482625483, 'eval_accuracy': 0.9528294603566742, 'eval_runtime': 5.7492, 'eval_samples_per_second': 266.298, 'eval_steps_per_second': 33.396, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3215799033641815, 'eval_precision': 0.5192519251925193, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5285554311310191, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 5.7496, 'eval_samples_per_second': 266.28, 'eval_steps_per_second': 33.394, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.31915995478630066, 'eval_precision': 0.5608028335301063, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5510440835266821, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 5.7436, 'eval_samples_per_second': 266.555, 'eval_steps_per_second': 33.428, 'epoch': 15.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3300206661224365, 'eval_precision': 0.5389988358556461, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5334101382488479, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 5.7209, 'eval_samples_per_second': 267.614, 'eval_steps_per_second': 33.561, 'epoch': 16.0}
{'loss': 0.0007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.34432917833328247, 'eval_precision': 0.5225027442371021, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5324384787472035, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 5.7445, 'eval_samples_per_second': 266.515, 'eval_steps_per_second': 33.423, 'epoch': 17.0}
{'loss': 0.0004, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.35269099473953247, 'eval_precision': 0.5380894800483675, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5223004694835681, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 5.7755, 'eval_samples_per_second': 265.087, 'eval_steps_per_second': 33.244, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3546988070011139, 'eval_precision': 0.5475330926594465, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5327868852459017, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 5.7101, 'eval_samples_per_second': 268.12, 'eval_steps_per_second': 33.624, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3504011631011963, 'eval_precision': 0.5104384133611691, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5329700272479564, 'eval_accuracy': 0.9510924110244731, 'eval_runtime': 5.7341, 'eval_samples_per_second': 267.001, 'eval_steps_per_second': 33.484, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.352682501077652, 'eval_precision': 0.5381903642773208, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5300925925925927, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.094, 'eval_steps_per_second': 33.621, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.34809187054634094, 'eval_precision': 0.5189732142857143, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5245346869712352, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 5.709, 'eval_samples_per_second': 268.172, 'eval_steps_per_second': 33.631, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.35189303755760193, 'eval_precision': 0.5187713310580204, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5193621867881548, 'eval_accuracy': 0.952211842816336, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.073, 'eval_steps_per_second': 33.619, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3516349792480469, 'eval_precision': 0.5157657657657657, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5189801699716714, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 5.7416, 'eval_samples_per_second': 266.652, 'eval_steps_per_second': 33.44, 'epoch': 24.0}
{'train_runtime': 2467.6465, 'train_samples_per_second': 83.973, 'train_steps_per_second': 1.313, 'train_loss': 0.03734825771232998, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0373
  train_runtime            = 0:41:07.64
  train_samples            =       8634
  train_samples_per_second =     83.973
  train_steps_per_second   =      1.313
[{'loss': 0.4516, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.19564878940582275, 'eval_precision': 0.23917995444191345, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23931623931623933, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 5.7913, 'eval_samples_per_second': 264.363, 'eval_steps_per_second': 33.153, 'epoch': 1.0, 'step': 135}, {'loss': 0.1871, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.18396838009357452, 'eval_precision': 0.4267605633802817, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3818525519848771, 'eval_accuracy': 0.9442214158882112, 'eval_runtime': 5.7549, 'eval_samples_per_second': 266.035, 'eval_steps_per_second': 33.363, 'epoch': 2.0, 'step': 270}, {'loss': 0.1137, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.17214126884937286, 'eval_precision': 0.4518147684605757, 'eval_recall': 0.41163055872291904, 'eval_f1': 0.43078758949880663, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 5.7408, 'eval_samples_per_second': 266.686, 'eval_steps_per_second': 33.445, 'epoch': 3.0, 'step': 405}, {'loss': 0.056, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.18487130105495453, 'eval_precision': 0.5239179954441914, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5242165242165243, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.478, 'eval_steps_per_second': 33.418, 'epoch': 4.0, 'step': 540}, {'loss': 0.0315, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.22094585001468658, 'eval_precision': 0.5067415730337078, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5104697226938313, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 5.7638, 'eval_samples_per_second': 265.622, 'eval_steps_per_second': 33.311, 'epoch': 5.0, 'step': 675}, {'loss': 0.0189, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.23078787326812744, 'eval_precision': 0.5268065268065268, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5210374639769452, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 5.7598, 'eval_samples_per_second': 265.808, 'eval_steps_per_second': 33.335, 'epoch': 6.0, 'step': 810}, {'loss': 0.0105, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.23426592350006104, 'eval_precision': 0.46469465648854963, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.505974025974026, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 5.7666, 'eval_samples_per_second': 265.494, 'eval_steps_per_second': 33.295, 'epoch': 7.0, 'step': 945}, {'loss': 0.0067, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.26155614852905273, 'eval_precision': 0.5214797136038186, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5096209912536444, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 5.7416, 'eval_samples_per_second': 266.652, 'eval_steps_per_second': 33.44, 'epoch': 8.0, 'step': 1080}, {'loss': 0.005, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2719654440879822, 'eval_precision': 0.525, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5375626043405677, 'eval_accuracy': 0.9526364548753185, 'eval_runtime': 5.8167, 'eval_samples_per_second': 263.208, 'eval_steps_per_second': 33.008, 'epoch': 9.0, 'step': 1215}, {'loss': 0.003, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2905258238315582, 'eval_precision': 0.5267857142857143, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5324309080654258, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 5.7566, 'eval_samples_per_second': 265.956, 'eval_steps_per_second': 33.353, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.30623066425323486, 'eval_precision': 0.523696682464455, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5136548518303312, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 5.7258, 'eval_samples_per_second': 267.387, 'eval_steps_per_second': 33.533, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0019, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.30767762660980225, 'eval_precision': 0.5395604395604395, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5495243424734191, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.748, 'eval_steps_per_second': 33.327, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0016, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3157041668891907, 'eval_precision': 0.530982905982906, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.5482625482625483, 'eval_accuracy': 0.9528294603566742, 'eval_runtime': 5.7492, 'eval_samples_per_second': 266.298, 'eval_steps_per_second': 33.396, 'epoch': 13.0, 'step': 1755}, {'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3215799033641815, 'eval_precision': 0.5192519251925193, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5285554311310191, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 5.7496, 'eval_samples_per_second': 266.28, 'eval_steps_per_second': 33.394, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.31915995478630066, 'eval_precision': 0.5608028335301063, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5510440835266821, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 5.7436, 'eval_samples_per_second': 266.555, 'eval_steps_per_second': 33.428, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3300206661224365, 'eval_precision': 0.5389988358556461, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5334101382488479, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 5.7209, 'eval_samples_per_second': 267.614, 'eval_steps_per_second': 33.561, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.34432917833328247, 'eval_precision': 0.5225027442371021, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5324384787472035, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 5.7445, 'eval_samples_per_second': 266.515, 'eval_steps_per_second': 33.423, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0004, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.35269099473953247, 'eval_precision': 0.5380894800483675, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5223004694835681, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 5.7755, 'eval_samples_per_second': 265.087, 'eval_steps_per_second': 33.244, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3546988070011139, 'eval_precision': 0.5475330926594465, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5327868852459017, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 5.7101, 'eval_samples_per_second': 268.12, 'eval_steps_per_second': 33.624, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3504011631011963, 'eval_precision': 0.5104384133611691, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5329700272479564, 'eval_accuracy': 0.9510924110244731, 'eval_runtime': 5.7341, 'eval_samples_per_second': 267.001, 'eval_steps_per_second': 33.484, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.352682501077652, 'eval_precision': 0.5381903642773208, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5300925925925927, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.094, 'eval_steps_per_second': 33.621, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.34809187054634094, 'eval_precision': 0.5189732142857143, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5245346869712352, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 5.709, 'eval_samples_per_second': 268.172, 'eval_steps_per_second': 33.631, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.35189303755760193, 'eval_precision': 0.5187713310580204, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5193621867881548, 'eval_accuracy': 0.952211842816336, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.073, 'eval_steps_per_second': 33.619, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3516349792480469, 'eval_precision': 0.5157657657657657, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5189801699716714, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 5.7416, 'eval_samples_per_second': 266.652, 'eval_steps_per_second': 33.44, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2467.6465, 'train_samples_per_second': 83.973, 'train_steps_per_second': 1.313, 'total_flos': 2.705738887944774e+16, 'train_loss': 0.03734825771232998, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9519
  predict_f1                 =     0.4197
  predict_loss               =     0.1849
  predict_precision          =     0.4554
  predict_recall             =     0.3891
  predict_runtime            = 0:00:04.80
  predict_samples_per_second =    264.654
  predict_steps_per_second   =     33.082
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_45.json completed. F1: 0.41966250917094644
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_26.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6778.30 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7182.51 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6977.97 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7011.99 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7027.00 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7129.21 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6263.81 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6580.13 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6781.84 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7272.50 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6899.13 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6953.98 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6791.52 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3517, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.2404637187719345, 'eval_precision': 0.1884328358208955, 'eval_recall': 0.11516533637400228, 'eval_f1': 0.14295824486907288, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3796, 'eval_samples_per_second': 643.385, 'eval_steps_per_second': 80.686, 'epoch': 1.0}
{'loss': 0.2321, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.21521073579788208, 'eval_precision': 0.23731884057971014, 'eval_recall': 0.14937286202964653, 'eval_f1': 0.18334499650104968, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.07, 'eval_steps_per_second': 81.273, 'epoch': 2.0}
{'loss': 0.1915, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.21161311864852905, 'eval_precision': 0.2772543741588156, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.25432098765432093, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 2.3613, 'eval_samples_per_second': 648.372, 'eval_steps_per_second': 81.311, 'epoch': 3.0}
{'loss': 0.1568, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.22498579323291779, 'eval_precision': 0.2687224669603524, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2733893557422969, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.669, 'eval_steps_per_second': 81.474, 'epoch': 4.0}
{'loss': 0.1315, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.24380852282047272, 'eval_precision': 0.30993377483443707, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2867647058823529, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.509, 'eval_steps_per_second': 81.454, 'epoch': 5.0}
{'loss': 0.1121, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.251841276884079, 'eval_precision': 0.26064516129032256, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24455205811138012, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.013, 'eval_steps_per_second': 81.642, 'epoch': 6.0}
{'loss': 0.097, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.26480165123939514, 'eval_precision': 0.2636103151862464, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2869022869022869, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.269, 'eval_steps_per_second': 81.424, 'epoch': 7.0}
{'loss': 0.0838, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.2755730450153351, 'eval_precision': 0.2818991097922849, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.301906779661017, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3543, 'eval_samples_per_second': 650.303, 'eval_steps_per_second': 81.553, 'epoch': 8.0}
{'loss': 0.0725, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.2910515367984772, 'eval_precision': 0.25404944586530265, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.2907317073170732, 'eval_accuracy': 0.9297074036902648, 'eval_runtime': 2.4253, 'eval_samples_per_second': 631.25, 'eval_steps_per_second': 79.164, 'epoch': 9.0}
{'loss': 0.0628, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.3009372353553772, 'eval_precision': 0.29935622317596566, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30845771144278605, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.012, 'eval_steps_per_second': 81.642, 'epoch': 10.0}
{'loss': 0.0544, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.32478275895118713, 'eval_precision': 0.2729007633587786, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29714285714285715, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.536, 'eval_steps_per_second': 81.583, 'epoch': 11.0}
{'loss': 0.0479, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.33612343668937683, 'eval_precision': 0.2834170854271357, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.30128205128205127, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.159, 'eval_steps_per_second': 81.786, 'epoch': 12.0}
{'loss': 0.0442, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.3360190689563751, 'eval_precision': 0.2858707557502738, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2916201117318436, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.411, 'eval_steps_per_second': 81.567, 'epoch': 13.0}
{'loss': 0.0396, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.3546350598335266, 'eval_precision': 0.255338904363974, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2814738996929375, 'eval_accuracy': 0.9298618080753493, 'eval_runtime': 2.3485, 'eval_samples_per_second': 651.893, 'eval_steps_per_second': 81.753, 'epoch': 14.0}
{'loss': 0.0352, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.36153534054756165, 'eval_precision': 0.28433268858800775, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3076923076923077, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.044, 'eval_steps_per_second': 81.646, 'epoch': 15.0}
{'loss': 0.0319, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.3708205819129944, 'eval_precision': 0.2788844621513944, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.29771398192450815, 'eval_accuracy': 0.932062070562804, 'eval_runtime': 2.3441, 'eval_samples_per_second': 653.121, 'eval_steps_per_second': 81.907, 'epoch': 16.0}
{'loss': 0.0292, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.3692235052585602, 'eval_precision': 0.29713721618953604, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3185185185185185, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.4246, 'eval_samples_per_second': 631.453, 'eval_steps_per_second': 79.189, 'epoch': 17.0}
{'loss': 0.0264, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.37905535101890564, 'eval_precision': 0.27708533077660596, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3010416666666667, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.257, 'eval_steps_per_second': 81.297, 'epoch': 18.0}
{'loss': 0.0241, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.386643648147583, 'eval_precision': 0.27798507462686567, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30579784504874297, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.148, 'eval_steps_per_second': 81.91, 'epoch': 19.0}
{'loss': 0.0228, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.3887787461280823, 'eval_precision': 0.2997032640949555, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3209745762711865, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.168, 'eval_steps_per_second': 81.662, 'epoch': 20.0}
{'loss': 0.0213, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.39299213886260986, 'eval_precision': 0.2904808635917566, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31223628691983124, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 2.3439, 'eval_samples_per_second': 653.191, 'eval_steps_per_second': 81.916, 'epoch': 21.0}
{'loss': 0.0206, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3989350199699402, 'eval_precision': 0.29600778967867575, 'eval_recall': 0.346636259977195, 'eval_f1': 0.31932773109243695, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3533, 'eval_samples_per_second': 650.567, 'eval_steps_per_second': 81.586, 'epoch': 22.0}
{'loss': 0.0195, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.40122565627098083, 'eval_precision': 0.2950980392156863, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3173431734317343, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.757, 'eval_steps_per_second': 81.234, 'epoch': 23.0}
{'loss': 0.0185, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.40251603722572327, 'eval_precision': 0.2938894277400582, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3176100628930818, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3473, 'eval_samples_per_second': 652.242, 'eval_steps_per_second': 81.797, 'epoch': 24.0}
{'train_runtime': 870.3903, 'train_samples_per_second': 238.073, 'train_steps_per_second': 7.445, 'train_loss': 0.08028734370514198, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0803
  train_runtime            = 0:14:30.39
  train_samples            =       8634
  train_samples_per_second =    238.073
  train_steps_per_second   =      7.445
[{'loss': 0.3517, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.2404637187719345, 'eval_precision': 0.1884328358208955, 'eval_recall': 0.11516533637400228, 'eval_f1': 0.14295824486907288, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3796, 'eval_samples_per_second': 643.385, 'eval_steps_per_second': 80.686, 'epoch': 1.0, 'step': 270}, {'loss': 0.2321, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.21521073579788208, 'eval_precision': 0.23731884057971014, 'eval_recall': 0.14937286202964653, 'eval_f1': 0.18334499650104968, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.07, 'eval_steps_per_second': 81.273, 'epoch': 2.0, 'step': 540}, {'loss': 0.1915, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.21161311864852905, 'eval_precision': 0.2772543741588156, 'eval_recall': 0.2348916761687571, 'eval_f1': 0.25432098765432093, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 2.3613, 'eval_samples_per_second': 648.372, 'eval_steps_per_second': 81.311, 'epoch': 3.0, 'step': 810}, {'loss': 0.1568, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.22498579323291779, 'eval_precision': 0.2687224669603524, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.2733893557422969, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.669, 'eval_steps_per_second': 81.474, 'epoch': 4.0, 'step': 1080}, {'loss': 0.1315, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.24380852282047272, 'eval_precision': 0.30993377483443707, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.2867647058823529, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.509, 'eval_steps_per_second': 81.454, 'epoch': 5.0, 'step': 1350}, {'loss': 0.1121, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.251841276884079, 'eval_precision': 0.26064516129032256, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24455205811138012, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.013, 'eval_steps_per_second': 81.642, 'epoch': 6.0, 'step': 1620}, {'loss': 0.097, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.26480165123939514, 'eval_precision': 0.2636103151862464, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2869022869022869, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.269, 'eval_steps_per_second': 81.424, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0838, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.2755730450153351, 'eval_precision': 0.2818991097922849, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.301906779661017, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.3543, 'eval_samples_per_second': 650.303, 'eval_steps_per_second': 81.553, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0725, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.2910515367984772, 'eval_precision': 0.25404944586530265, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.2907317073170732, 'eval_accuracy': 0.9297074036902648, 'eval_runtime': 2.4253, 'eval_samples_per_second': 631.25, 'eval_steps_per_second': 79.164, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0628, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3009372353553772, 'eval_precision': 0.29935622317596566, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30845771144278605, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.012, 'eval_steps_per_second': 81.642, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0544, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.32478275895118713, 'eval_precision': 0.2729007633587786, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.29714285714285715, 'eval_accuracy': 0.9322936771404308, 'eval_runtime': 2.3534, 'eval_samples_per_second': 650.536, 'eval_steps_per_second': 81.583, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0479, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.33612343668937683, 'eval_precision': 0.2834170854271357, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.30128205128205127, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.159, 'eval_steps_per_second': 81.786, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0442, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.3360190689563751, 'eval_precision': 0.2858707557502738, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2916201117318436, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.411, 'eval_steps_per_second': 81.567, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0396, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.3546350598335266, 'eval_precision': 0.255338904363974, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2814738996929375, 'eval_accuracy': 0.9298618080753493, 'eval_runtime': 2.3485, 'eval_samples_per_second': 651.893, 'eval_steps_per_second': 81.753, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0352, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.36153534054756165, 'eval_precision': 0.28433268858800775, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3076923076923077, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.044, 'eval_steps_per_second': 81.646, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0319, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.3708205819129944, 'eval_precision': 0.2788844621513944, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.29771398192450815, 'eval_accuracy': 0.932062070562804, 'eval_runtime': 2.3441, 'eval_samples_per_second': 653.121, 'eval_steps_per_second': 81.907, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0292, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3692235052585602, 'eval_precision': 0.29713721618953604, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3185185185185185, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.4246, 'eval_samples_per_second': 631.453, 'eval_steps_per_second': 79.189, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0264, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.37905535101890564, 'eval_precision': 0.27708533077660596, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3010416666666667, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.257, 'eval_steps_per_second': 81.297, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0241, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.386643648147583, 'eval_precision': 0.27798507462686567, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30579784504874297, 'eval_accuracy': 0.9317146606963638, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.148, 'eval_steps_per_second': 81.91, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0228, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.3887787461280823, 'eval_precision': 0.2997032640949555, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3209745762711865, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.168, 'eval_steps_per_second': 81.662, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0213, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.39299213886260986, 'eval_precision': 0.2904808635917566, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31223628691983124, 'eval_accuracy': 0.9334903111248359, 'eval_runtime': 2.3439, 'eval_samples_per_second': 653.191, 'eval_steps_per_second': 81.916, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0206, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.3989350199699402, 'eval_precision': 0.29600778967867575, 'eval_recall': 0.346636259977195, 'eval_f1': 0.31932773109243695, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.3533, 'eval_samples_per_second': 650.567, 'eval_steps_per_second': 81.586, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0195, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.40122565627098083, 'eval_precision': 0.2950980392156863, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3173431734317343, 'eval_accuracy': 0.933220103450938, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.757, 'eval_steps_per_second': 81.234, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0185, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.40251603722572327, 'eval_precision': 0.2938894277400582, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3176100628930818, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.3473, 'eval_samples_per_second': 652.242, 'eval_steps_per_second': 81.797, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 870.3903, 'train_samples_per_second': 238.073, 'train_steps_per_second': 7.445, 'total_flos': 7896285197923800.0, 'train_loss': 0.08028734370514198, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9405
  predict_f1                 =     0.2455
  predict_loss               =     0.2138
  predict_precision          =     0.2729
  predict_recall             =     0.2231
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    651.153
  predict_steps_per_second   =     81.394
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_26.json completed. F1: 0.24550898203592814
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_24.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6184.16 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6866.91 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6779.87 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6853.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6935.27 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7052.66 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7230.87 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6318.82 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6696.32 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7314.99 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6904.75 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6992.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6776.16 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.386, 'eval_steps_per_second': 64.508, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9455, 'eval_samples_per_second': 519.78, 'eval_steps_per_second': 65.185, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.416, 'eval_steps_per_second': 65.139, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9749, 'eval_samples_per_second': 514.632, 'eval_steps_per_second': 64.539, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9366, 'eval_samples_per_second': 521.358, 'eval_steps_per_second': 65.383, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9374, 'eval_samples_per_second': 521.209, 'eval_steps_per_second': 65.364, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9419, 'eval_samples_per_second': 520.416, 'eval_steps_per_second': 65.264, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9342, 'eval_samples_per_second': 521.776, 'eval_steps_per_second': 65.435, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.945, 'eval_samples_per_second': 519.865, 'eval_steps_per_second': 65.195, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0229, 'eval_samples_per_second': 506.466, 'eval_steps_per_second': 63.515, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9412, 'eval_samples_per_second': 520.535, 'eval_steps_per_second': 65.279, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9462, 'eval_samples_per_second': 519.654, 'eval_steps_per_second': 65.169, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9378, 'eval_samples_per_second': 521.147, 'eval_steps_per_second': 65.356, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.649, 'eval_steps_per_second': 65.294, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9386, 'eval_samples_per_second': 520.994, 'eval_steps_per_second': 65.337, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.308, 'eval_steps_per_second': 65.251, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.941, 'eval_samples_per_second': 520.577, 'eval_steps_per_second': 65.285, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9435, 'eval_samples_per_second': 520.124, 'eval_steps_per_second': 65.228, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9364, 'eval_samples_per_second': 521.392, 'eval_steps_per_second': 65.387, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9439, 'eval_samples_per_second': 520.061, 'eval_steps_per_second': 65.22, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9415, 'eval_samples_per_second': 520.491, 'eval_steps_per_second': 65.274, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0145, 'eval_samples_per_second': 507.886, 'eval_steps_per_second': 63.693, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.964, 'eval_samples_per_second': 516.54, 'eval_steps_per_second': 64.778, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9472, 'eval_samples_per_second': 519.478, 'eval_steps_per_second': 65.147, 'epoch': 24.0}
{'train_runtime': 873.0282, 'train_samples_per_second': 237.353, 'train_steps_per_second': 7.422, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:33.02
  train_samples            =       8634
  train_samples_per_second =    237.353
  train_steps_per_second   =      7.422
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.386, 'eval_steps_per_second': 64.508, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9455, 'eval_samples_per_second': 519.78, 'eval_steps_per_second': 65.185, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.416, 'eval_steps_per_second': 65.139, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9749, 'eval_samples_per_second': 514.632, 'eval_steps_per_second': 64.539, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9366, 'eval_samples_per_second': 521.358, 'eval_steps_per_second': 65.383, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9374, 'eval_samples_per_second': 521.209, 'eval_steps_per_second': 65.364, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9419, 'eval_samples_per_second': 520.416, 'eval_steps_per_second': 65.264, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9342, 'eval_samples_per_second': 521.776, 'eval_steps_per_second': 65.435, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.945, 'eval_samples_per_second': 519.865, 'eval_steps_per_second': 65.195, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0229, 'eval_samples_per_second': 506.466, 'eval_steps_per_second': 63.515, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9412, 'eval_samples_per_second': 520.535, 'eval_steps_per_second': 65.279, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9462, 'eval_samples_per_second': 519.654, 'eval_steps_per_second': 65.169, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9378, 'eval_samples_per_second': 521.147, 'eval_steps_per_second': 65.356, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.649, 'eval_steps_per_second': 65.294, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9386, 'eval_samples_per_second': 520.994, 'eval_steps_per_second': 65.337, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.308, 'eval_steps_per_second': 65.251, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.941, 'eval_samples_per_second': 520.577, 'eval_steps_per_second': 65.285, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9435, 'eval_samples_per_second': 520.124, 'eval_steps_per_second': 65.228, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9364, 'eval_samples_per_second': 521.392, 'eval_steps_per_second': 65.387, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9439, 'eval_samples_per_second': 520.061, 'eval_steps_per_second': 65.22, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9415, 'eval_samples_per_second': 520.491, 'eval_steps_per_second': 65.274, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0145, 'eval_samples_per_second': 507.886, 'eval_steps_per_second': 63.693, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.964, 'eval_samples_per_second': 516.54, 'eval_steps_per_second': 64.778, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9472, 'eval_samples_per_second': 519.478, 'eval_steps_per_second': 65.147, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 873.0282, 'train_samples_per_second': 237.353, 'train_steps_per_second': 7.422, 'total_flos': 6697297123666968.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.45
  predict_samples_per_second =    517.733
  predict_steps_per_second   =     64.717
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_24.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_31.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6351.93 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6925.21 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6894.74 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7012.97 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7118.21 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7242.18 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7436.87 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6475.19 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6856.64 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7521.28 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7145.21 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7243.97 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7074.09 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2124, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1482004076242447, 'eval_precision': 0.43228699551569505, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4839357429718876, 'eval_accuracy': 0.9487763452482051, 'eval_runtime': 4.6778, 'eval_samples_per_second': 327.289, 'eval_steps_per_second': 41.045, 'epoch': 1.0}
{'loss': 0.1227, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1338757425546646, 'eval_precision': 0.5575221238938053, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5287769784172662, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.736, 'eval_steps_per_second': 41.226, 'epoch': 2.0}
{'loss': 0.0761, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1532224863767624, 'eval_precision': 0.46173688736027513, 'eval_recall': 0.6123147092360319, 'eval_f1': 0.526470588235294, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.038, 'eval_steps_per_second': 41.264, 'epoch': 3.0}
{'loss': 0.0457, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.17625930905342102, 'eval_precision': 0.5128755364806867, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5284687672747373, 'eval_accuracy': 0.9542577009187061, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.786, 'eval_steps_per_second': 41.232, 'epoch': 4.0}
{'loss': 0.0272, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.19889457523822784, 'eval_precision': 0.4985014985014985, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.5314164004259851, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 4.6521, 'eval_samples_per_second': 329.1, 'eval_steps_per_second': 41.272, 'epoch': 5.0}
{'loss': 0.0168, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.24314002692699432, 'eval_precision': 0.5528255528255528, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5322294500295682, 'eval_accuracy': 0.9555315370956535, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.139, 'eval_steps_per_second': 41.277, 'epoch': 6.0}
{'loss': 0.0124, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.22563765943050385, 'eval_precision': 0.48481880509304603, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5216016859852476, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.7338, 'eval_samples_per_second': 323.422, 'eval_steps_per_second': 40.56, 'epoch': 7.0}
{'loss': 0.0072, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2610495984554291, 'eval_precision': 0.5325714285714286, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5319634703196346, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 8.0}
{'loss': 0.0051, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.26501572132110596, 'eval_precision': 0.4849368318756074, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.5236096537250787, 'eval_accuracy': 0.9524434493939627, 'eval_runtime': 4.6552, 'eval_samples_per_second': 328.878, 'eval_steps_per_second': 41.244, 'epoch': 9.0}
{'loss': 0.0039, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.2982028126716614, 'eval_precision': 0.46752058554437326, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5187817258883248, 'eval_accuracy': 0.9502431869065081, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.601, 'eval_steps_per_second': 41.209, 'epoch': 10.0}
{'loss': 0.0032, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3145633935928345, 'eval_precision': 0.5175345377258236, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5357535753575358, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.759, 'eval_steps_per_second': 41.229, 'epoch': 11.0}
{'loss': 0.0028, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.29918771982192993, 'eval_precision': 0.5397727272727273, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5406943653955606, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.6604, 'eval_samples_per_second': 328.512, 'eval_steps_per_second': 41.198, 'epoch': 12.0}
{'loss': 0.0018, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.34143373370170593, 'eval_precision': 0.5327313769751693, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5354509359047078, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.793, 'eval_steps_per_second': 41.233, 'epoch': 13.0}
{'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.33640915155410767, 'eval_precision': 0.499496475327291, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5304812834224599, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 4.7305, 'eval_samples_per_second': 323.642, 'eval_steps_per_second': 40.587, 'epoch': 14.0}
{'loss': 0.0012, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.34438878297805786, 'eval_precision': 0.509865005192108, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.533695652173913, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.057, 'eval_steps_per_second': 41.266, 'epoch': 15.0}
{'loss': 0.0012, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.3551550507545471, 'eval_precision': 0.5347776510832383, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5347776510832383, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.67, 'eval_samples_per_second': 327.835, 'eval_steps_per_second': 41.113, 'epoch': 16.0}
{'loss': 0.0009, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.3574373126029968, 'eval_precision': 0.5494636471990465, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5372960372960374, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.35941705107688904, 'eval_precision': 0.492725509214355, 'eval_recall': 0.5792474344355758, 'eval_f1': 0.5324947589098532, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 4.6487, 'eval_samples_per_second': 329.339, 'eval_steps_per_second': 41.302, 'epoch': 18.0}
{'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.36687690019607544, 'eval_precision': 0.5272108843537415, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5287094940306993, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.178, 'eval_steps_per_second': 41.282, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.3752230107784271, 'eval_precision': 0.49848637739656915, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5289079229122056, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.054, 'eval_steps_per_second': 41.266, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.38545116782188416, 'eval_precision': 0.5260821309655938, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5331833520809899, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.7322, 'eval_samples_per_second': 323.525, 'eval_steps_per_second': 40.573, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.387129008769989, 'eval_precision': 0.5198285101822079, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5359116022099448, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.908, 'eval_steps_per_second': 41.248, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.39109253883361816, 'eval_precision': 0.5229759299781181, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5337800111669458, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.39306172728538513, 'eval_precision': 0.5198237885462555, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5288515406162465, 'eval_accuracy': 0.9539874932448081, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.833, 'eval_steps_per_second': 41.238, 'epoch': 24.0}
{'train_runtime': 2118.1301, 'train_samples_per_second': 97.83, 'train_steps_per_second': 3.059, 'train_loss': 0.02274254366962446, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0227
  train_runtime            = 0:35:18.13
  train_samples            =       8634
  train_samples_per_second =      97.83
  train_steps_per_second   =      3.059
[{'loss': 0.2124, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.1482004076242447, 'eval_precision': 0.43228699551569505, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4839357429718876, 'eval_accuracy': 0.9487763452482051, 'eval_runtime': 4.6778, 'eval_samples_per_second': 327.289, 'eval_steps_per_second': 41.045, 'epoch': 1.0, 'step': 270}, {'loss': 0.1227, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.1338757425546646, 'eval_precision': 0.5575221238938053, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5287769784172662, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.736, 'eval_steps_per_second': 41.226, 'epoch': 2.0, 'step': 540}, {'loss': 0.0761, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.1532224863767624, 'eval_precision': 0.46173688736027513, 'eval_recall': 0.6123147092360319, 'eval_f1': 0.526470588235294, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.038, 'eval_steps_per_second': 41.264, 'epoch': 3.0, 'step': 810}, {'loss': 0.0457, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.17625930905342102, 'eval_precision': 0.5128755364806867, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5284687672747373, 'eval_accuracy': 0.9542577009187061, 'eval_runtime': 4.6565, 'eval_samples_per_second': 328.786, 'eval_steps_per_second': 41.232, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0272, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.19889457523822784, 'eval_precision': 0.4985014985014985, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.5314164004259851, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 4.6521, 'eval_samples_per_second': 329.1, 'eval_steps_per_second': 41.272, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0168, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.24314002692699432, 'eval_precision': 0.5528255528255528, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5322294500295682, 'eval_accuracy': 0.9555315370956535, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.139, 'eval_steps_per_second': 41.277, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0124, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.22563765943050385, 'eval_precision': 0.48481880509304603, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5216016859852476, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.7338, 'eval_samples_per_second': 323.422, 'eval_steps_per_second': 40.56, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0072, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.2610495984554291, 'eval_precision': 0.5325714285714286, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5319634703196346, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0051, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.26501572132110596, 'eval_precision': 0.4849368318756074, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.5236096537250787, 'eval_accuracy': 0.9524434493939627, 'eval_runtime': 4.6552, 'eval_samples_per_second': 328.878, 'eval_steps_per_second': 41.244, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0039, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.2982028126716614, 'eval_precision': 0.46752058554437326, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5187817258883248, 'eval_accuracy': 0.9502431869065081, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.601, 'eval_steps_per_second': 41.209, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0032, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.3145633935928345, 'eval_precision': 0.5175345377258236, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5357535753575358, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.759, 'eval_steps_per_second': 41.229, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0028, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.29918771982192993, 'eval_precision': 0.5397727272727273, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5406943653955606, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.6604, 'eval_samples_per_second': 328.512, 'eval_steps_per_second': 41.198, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0018, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.34143373370170593, 'eval_precision': 0.5327313769751693, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5354509359047078, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.793, 'eval_steps_per_second': 41.233, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.33640915155410767, 'eval_precision': 0.499496475327291, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5304812834224599, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 4.7305, 'eval_samples_per_second': 323.642, 'eval_steps_per_second': 40.587, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0012, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.34438878297805786, 'eval_precision': 0.509865005192108, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.533695652173913, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.057, 'eval_steps_per_second': 41.266, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0012, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.3551550507545471, 'eval_precision': 0.5347776510832383, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5347776510832383, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.67, 'eval_samples_per_second': 327.835, 'eval_steps_per_second': 41.113, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0009, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3574373126029968, 'eval_precision': 0.5494636471990465, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5372960372960374, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.35941705107688904, 'eval_precision': 0.492725509214355, 'eval_recall': 0.5792474344355758, 'eval_f1': 0.5324947589098532, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 4.6487, 'eval_samples_per_second': 329.339, 'eval_steps_per_second': 41.302, 'epoch': 18.0, 'step': 4860}, {'loss': 0.001, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.36687690019607544, 'eval_precision': 0.5272108843537415, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5287094940306993, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.178, 'eval_steps_per_second': 41.282, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.3752230107784271, 'eval_precision': 0.49848637739656915, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5289079229122056, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.054, 'eval_steps_per_second': 41.266, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.38545116782188416, 'eval_precision': 0.5260821309655938, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5331833520809899, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.7322, 'eval_samples_per_second': 323.525, 'eval_steps_per_second': 40.573, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.387129008769989, 'eval_precision': 0.5198285101822079, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5359116022099448, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.908, 'eval_steps_per_second': 41.248, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.39109253883361816, 'eval_precision': 0.5229759299781181, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5337800111669458, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.39306172728538513, 'eval_precision': 0.5198237885462555, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5288515406162465, 'eval_accuracy': 0.9539874932448081, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.833, 'eval_steps_per_second': 41.238, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2118.1301, 'train_samples_per_second': 97.83, 'train_steps_per_second': 3.059, 'total_flos': 2.2848307215255972e+16, 'train_loss': 0.02274254366962446, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =      0.955
  predict_f1                 =     0.5054
  predict_loss               =     0.1413
  predict_precision          =     0.5421
  predict_recall             =     0.4735
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.528
  predict_steps_per_second   =     40.566
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_31.json completed. F1: 0.5054466230936818
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_35.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6951.46 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7350.52 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7137.74 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7177.43 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7219.14 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7315.87 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7489.64 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6516.03 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6980.53 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7565.44 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7168.96 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7260.75 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7086.20 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2682, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19346551597118378, 'eval_precision': 0.19908987485779295, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.19931662870159456, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6798, 'eval_samples_per_second': 327.154, 'eval_steps_per_second': 41.028, 'epoch': 1.0}
{'loss': 0.1689, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.2003145068883896, 'eval_precision': 0.3284552845528455, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.2707774798927614, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.95, 'eval_steps_per_second': 41.253, 'epoch': 2.0}
{'loss': 0.1087, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.22280289232730865, 'eval_precision': 0.2649640861931365, 'eval_recall': 0.37856328392246297, 'eval_f1': 0.3117370892018779, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 4.6583, 'eval_samples_per_second': 328.662, 'eval_steps_per_second': 41.217, 'epoch': 3.0}
{'loss': 0.0747, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2597399950027466, 'eval_precision': 0.29399796541200407, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31075268817204305, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.487, 'eval_steps_per_second': 41.195, 'epoch': 4.0}
{'loss': 0.0426, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.3017878234386444, 'eval_precision': 0.31835686777920413, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.29951690821256044, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.46, 'eval_steps_per_second': 41.192, 'epoch': 5.0}
{'loss': 0.0276, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3167342245578766, 'eval_precision': 0.2842003853564547, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3080939947780678, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 4.6571, 'eval_samples_per_second': 328.746, 'eval_steps_per_second': 41.227, 'epoch': 6.0}
{'loss': 0.0162, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.35271742939949036, 'eval_precision': 0.27718960538979787, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.30062630480167013, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 4.7326, 'eval_samples_per_second': 323.498, 'eval_steps_per_second': 40.569, 'epoch': 7.0}
{'loss': 0.0121, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3752845525741577, 'eval_precision': 0.29547738693467335, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3141025641025641, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.646, 'eval_steps_per_second': 41.215, 'epoch': 8.0}
{'loss': 0.0067, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3920094072818756, 'eval_precision': 0.2858575727181545, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30416221985058695, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.349, 'eval_steps_per_second': 41.178, 'epoch': 9.0}
{'loss': 0.0056, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3946378827095032, 'eval_precision': 0.296218487394958, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.30836522689994533, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6562, 'eval_samples_per_second': 328.807, 'eval_steps_per_second': 41.235, 'epoch': 10.0}
{'loss': 0.0053, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4047086238861084, 'eval_precision': 0.29457364341085274, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.298876404494382, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.226, 'eval_steps_per_second': 41.162, 'epoch': 11.0}
{'loss': 0.0026, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.41752108931541443, 'eval_precision': 0.32342007434944237, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.30997624703087884, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.131, 'eval_steps_per_second': 41.15, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.45794665813446045, 'eval_precision': 0.3057471264367816, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3045220377790498, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.467, 'eval_steps_per_second': 41.192, 'epoch': 13.0}
{'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4548307955265045, 'eval_precision': 0.32996632996632996, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.332579185520362, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.7357, 'eval_samples_per_second': 323.292, 'eval_steps_per_second': 40.543, 'epoch': 14.0}
{'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4628564715385437, 'eval_precision': 0.33138173302107726, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32697862507221265, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.312, 'epoch': 15.0}
{'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.47163480520248413, 'eval_precision': 0.3325608342989571, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.32988505747126434, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.077, 'eval_steps_per_second': 41.269, 'epoch': 16.0}
{'loss': 0.0009, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.48556044697761536, 'eval_precision': 0.33073929961089493, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3094660194174757, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 4.6544, 'eval_samples_per_second': 328.936, 'eval_steps_per_second': 41.251, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4893881678581238, 'eval_precision': 0.3325242718446602, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.32216343327454433, 'eval_accuracy': 0.9402841040685556, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 18.0}
{'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4785213768482208, 'eval_precision': 0.331353919239905, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32460732984293195, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.17, 'eval_steps_per_second': 41.281, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.49048149585723877, 'eval_precision': 0.3478760045924225, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3466819221967964, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6496, 'eval_samples_per_second': 329.276, 'eval_steps_per_second': 41.294, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5012654066085815, 'eval_precision': 0.32950191570881227, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.31084337349397584, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.32, 'eval_steps_per_second': 41.299, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5012062191963196, 'eval_precision': 0.332541567695962, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.32577079697498545, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.126, 'eval_steps_per_second': 41.275, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5014340877532959, 'eval_precision': 0.33212996389891697, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32318501170960184, 'eval_accuracy': 0.9411719292827916, 'eval_runtime': 4.6455, 'eval_samples_per_second': 329.565, 'eval_steps_per_second': 41.33, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5024963617324829, 'eval_precision': 0.3294663573085847, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32662449683726286, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.376, 'eval_steps_per_second': 41.306, 'epoch': 24.0}
{'train_runtime': 2124.9317, 'train_samples_per_second': 97.517, 'train_steps_per_second': 3.05, 'train_loss': 0.0312057160847119, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0312
  train_runtime            = 0:35:24.93
  train_samples            =       8634
  train_samples_per_second =     97.517
  train_steps_per_second   =       3.05
[{'loss': 0.2682, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.19346551597118378, 'eval_precision': 0.19908987485779295, 'eval_recall': 0.19954389965792474, 'eval_f1': 0.19931662870159456, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6798, 'eval_samples_per_second': 327.154, 'eval_steps_per_second': 41.028, 'epoch': 1.0, 'step': 270}, {'loss': 0.1689, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.2003145068883896, 'eval_precision': 0.3284552845528455, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.2707774798927614, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.95, 'eval_steps_per_second': 41.253, 'epoch': 2.0, 'step': 540}, {'loss': 0.1087, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.22280289232730865, 'eval_precision': 0.2649640861931365, 'eval_recall': 0.37856328392246297, 'eval_f1': 0.3117370892018779, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 4.6583, 'eval_samples_per_second': 328.662, 'eval_steps_per_second': 41.217, 'epoch': 3.0, 'step': 810}, {'loss': 0.0747, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.2597399950027466, 'eval_precision': 0.29399796541200407, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31075268817204305, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.487, 'eval_steps_per_second': 41.195, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0426, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.3017878234386444, 'eval_precision': 0.31835686777920413, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.29951690821256044, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.46, 'eval_steps_per_second': 41.192, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0276, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.3167342245578766, 'eval_precision': 0.2842003853564547, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3080939947780678, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 4.6571, 'eval_samples_per_second': 328.746, 'eval_steps_per_second': 41.227, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0162, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.35271742939949036, 'eval_precision': 0.27718960538979787, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.30062630480167013, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 4.7326, 'eval_samples_per_second': 323.498, 'eval_steps_per_second': 40.569, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0121, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.3752845525741577, 'eval_precision': 0.29547738693467335, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3141025641025641, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.646, 'eval_steps_per_second': 41.215, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0067, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3920094072818756, 'eval_precision': 0.2858575727181545, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.30416221985058695, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.349, 'eval_steps_per_second': 41.178, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0056, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3946378827095032, 'eval_precision': 0.296218487394958, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.30836522689994533, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6562, 'eval_samples_per_second': 328.807, 'eval_steps_per_second': 41.235, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0053, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.4047086238861084, 'eval_precision': 0.29457364341085274, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.298876404494382, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.226, 'eval_steps_per_second': 41.162, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0026, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.41752108931541443, 'eval_precision': 0.32342007434944237, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.30997624703087884, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.131, 'eval_steps_per_second': 41.15, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.45794665813446045, 'eval_precision': 0.3057471264367816, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3045220377790498, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.467, 'eval_steps_per_second': 41.192, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.4548307955265045, 'eval_precision': 0.32996632996632996, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.332579185520362, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.7357, 'eval_samples_per_second': 323.292, 'eval_steps_per_second': 40.543, 'epoch': 14.0, 'step': 3780}, {'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.4628564715385437, 'eval_precision': 0.33138173302107726, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32697862507221265, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.424, 'eval_steps_per_second': 41.312, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.47163480520248413, 'eval_precision': 0.3325608342989571, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.32988505747126434, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.077, 'eval_steps_per_second': 41.269, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0009, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.48556044697761536, 'eval_precision': 0.33073929961089493, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3094660194174757, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 4.6544, 'eval_samples_per_second': 328.936, 'eval_steps_per_second': 41.251, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.4893881678581238, 'eval_precision': 0.3325242718446602, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.32216343327454433, 'eval_accuracy': 0.9402841040685556, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.821, 'eval_steps_per_second': 41.237, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.4785213768482208, 'eval_precision': 0.331353919239905, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.32460732984293195, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.17, 'eval_steps_per_second': 41.281, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.49048149585723877, 'eval_precision': 0.3478760045924225, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3466819221967964, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6496, 'eval_samples_per_second': 329.276, 'eval_steps_per_second': 41.294, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.5012654066085815, 'eval_precision': 0.32950191570881227, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.31084337349397584, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.32, 'eval_steps_per_second': 41.299, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.5012062191963196, 'eval_precision': 0.332541567695962, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.32577079697498545, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.126, 'eval_steps_per_second': 41.275, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.5014340877532959, 'eval_precision': 0.33212996389891697, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32318501170960184, 'eval_accuracy': 0.9411719292827916, 'eval_runtime': 4.6455, 'eval_samples_per_second': 329.565, 'eval_steps_per_second': 41.33, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.5024963617324829, 'eval_precision': 0.3294663573085847, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32662449683726286, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.376, 'eval_steps_per_second': 41.306, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2124.9317, 'train_samples_per_second': 97.517, 'train_steps_per_second': 3.05, 'total_flos': 2.2848926950165572e+16, 'train_loss': 0.0312057160847119, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9394
  predict_f1                 =     0.2037
  predict_loss               =     0.2091
  predict_precision          =     0.2076
  predict_recall             =        0.2
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.695
  predict_steps_per_second   =     40.587
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_35.json completed. F1: 0.20374220374220375
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_20.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6712.97 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7191.56 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7000.59 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7054.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7089.12 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7201.17 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7369.04 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6420.34 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6852.45 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7367.61 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7044.58 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7056.51 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6890.05 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2295, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.16278381645679474, 'eval_precision': 0.5454545454545454, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.38222222222222224, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 3.0194, 'eval_samples_per_second': 507.058, 'eval_steps_per_second': 63.589, 'epoch': 1.0}
{'loss': 0.117, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.1594138741493225, 'eval_precision': 0.5062429057888763, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5073947667804324, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.039, 'eval_steps_per_second': 64.214, 'epoch': 2.0}
{'loss': 0.057, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.19699597358703613, 'eval_precision': 0.43615107913669066, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4876822523881348, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.9903, 'eval_samples_per_second': 511.985, 'eval_steps_per_second': 64.207, 'epoch': 3.0}
{'loss': 0.027, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.25175485014915466, 'eval_precision': 0.5023364485981309, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.49624927870744373, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.9875, 'eval_samples_per_second': 512.472, 'eval_steps_per_second': 64.268, 'epoch': 4.0}
{'loss': 0.0147, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2661433815956116, 'eval_precision': 0.5048192771084338, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4909197422378442, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.125, 'eval_steps_per_second': 64.225, 'epoch': 5.0}
{'loss': 0.007, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3106766939163208, 'eval_precision': 0.5098280098280098, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.4908338261383796, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9883, 'eval_samples_per_second': 512.336, 'eval_steps_per_second': 64.251, 'epoch': 6.0}
{'loss': 0.006, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2970321476459503, 'eval_precision': 0.49942594718714123, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4977116704805492, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.0011, 'eval_samples_per_second': 510.141, 'eval_steps_per_second': 63.976, 'epoch': 7.0}
{'loss': 0.0031, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3525254726409912, 'eval_precision': 0.4916013437849944, 'eval_recall': 0.500570125427594, 'eval_f1': 0.49604519774011296, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.9956, 'eval_samples_per_second': 511.075, 'eval_steps_per_second': 64.093, 'epoch': 8.0}
{'loss': 0.0031, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3550240695476532, 'eval_precision': 0.4930875576036866, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4905444126074498, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 3.0172, 'eval_samples_per_second': 507.423, 'eval_steps_per_second': 63.635, 'epoch': 9.0}
{'loss': 0.002, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3723902702331543, 'eval_precision': 0.5509708737864077, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5338036449147561, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 3.0697, 'eval_samples_per_second': 498.746, 'eval_steps_per_second': 62.547, 'epoch': 10.0}
{'loss': 0.003, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3634151220321655, 'eval_precision': 0.5040745052386496, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.4988479262672811, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.9865, 'eval_samples_per_second': 512.643, 'eval_steps_per_second': 64.29, 'epoch': 11.0}
{'loss': 0.002, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.40613192319869995, 'eval_precision': 0.4820295983086681, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5002742731760834, 'eval_accuracy': 0.9484675364780359, 'eval_runtime': 2.977, 'eval_samples_per_second': 514.284, 'eval_steps_per_second': 64.495, 'epoch': 12.0}
{'loss': 0.0024, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3796161115169525, 'eval_precision': 0.496054114994363, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4988662131519275, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9857, 'eval_samples_per_second': 512.773, 'eval_steps_per_second': 64.306, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.395321249961853, 'eval_precision': 0.5332512315270936, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.5127294256956779, 'eval_accuracy': 0.952211842816336, 'eval_runtime': 3.0036, 'eval_samples_per_second': 509.729, 'eval_steps_per_second': 63.924, 'epoch': 14.0}
{'loss': 0.0012, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3929101228713989, 'eval_precision': 0.530952380952381, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5195107746068724, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.627, 'eval_steps_per_second': 64.789, 'epoch': 15.0}
{'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.41622012853622437, 'eval_precision': 0.5052264808362369, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5005753739930955, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.988, 'eval_samples_per_second': 512.387, 'eval_steps_per_second': 64.258, 'epoch': 16.0}
{'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.42032116651535034, 'eval_precision': 0.5132641291810842, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5103211009174311, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 2.996, 'eval_samples_per_second': 511.01, 'eval_steps_per_second': 64.085, 'epoch': 17.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.42706099152565, 'eval_precision': 0.5461441213653603, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.5179856115107915, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 2.994, 'eval_samples_per_second': 511.353, 'eval_steps_per_second': 64.128, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.43938928842544556, 'eval_precision': 0.5143513203214696, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5125858123569794, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.006, 'eval_samples_per_second': 509.307, 'eval_steps_per_second': 63.871, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4336467683315277, 'eval_precision': 0.5255972696245734, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5261958997722096, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 2.9909, 'eval_samples_per_second': 511.878, 'eval_steps_per_second': 64.194, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4384605288505554, 'eval_precision': 0.5340501792114696, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5215869311551925, 'eval_accuracy': 0.9529452636454875, 'eval_runtime': 2.9828, 'eval_samples_per_second': 513.282, 'eval_steps_per_second': 64.37, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4335829019546509, 'eval_precision': 0.5417170495767836, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5258215962441314, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 3.0679, 'eval_samples_per_second': 499.037, 'eval_steps_per_second': 62.583, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4402812719345093, 'eval_precision': 0.5374396135265701, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5219941348973607, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.9802, 'eval_samples_per_second': 513.721, 'eval_steps_per_second': 64.425, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.44220516085624695, 'eval_precision': 0.5360576923076923, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5219426565242831, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.9886, 'eval_samples_per_second': 512.278, 'eval_steps_per_second': 64.244, 'epoch': 24.0}
{'train_runtime': 1008.0298, 'train_samples_per_second': 205.565, 'train_steps_per_second': 12.857, 'train_loss': 0.019974430037064502, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =       0.02
  train_runtime            = 0:16:48.02
  train_samples            =       8634
  train_samples_per_second =    205.565
  train_steps_per_second   =     12.857
[{'loss': 0.2295, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.16278381645679474, 'eval_precision': 0.5454545454545454, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.38222222222222224, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 3.0194, 'eval_samples_per_second': 507.058, 'eval_steps_per_second': 63.589, 'epoch': 1.0, 'step': 540}, {'loss': 0.117, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.1594138741493225, 'eval_precision': 0.5062429057888763, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5073947667804324, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.039, 'eval_steps_per_second': 64.214, 'epoch': 2.0, 'step': 1080}, {'loss': 0.057, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.19699597358703613, 'eval_precision': 0.43615107913669066, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4876822523881348, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.9903, 'eval_samples_per_second': 511.985, 'eval_steps_per_second': 64.207, 'epoch': 3.0, 'step': 1620}, {'loss': 0.027, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.25175485014915466, 'eval_precision': 0.5023364485981309, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.49624927870744373, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.9875, 'eval_samples_per_second': 512.472, 'eval_steps_per_second': 64.268, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0147, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.2661433815956116, 'eval_precision': 0.5048192771084338, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4909197422378442, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9895, 'eval_samples_per_second': 512.125, 'eval_steps_per_second': 64.225, 'epoch': 5.0, 'step': 2700}, {'loss': 0.007, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.3106766939163208, 'eval_precision': 0.5098280098280098, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.4908338261383796, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9883, 'eval_samples_per_second': 512.336, 'eval_steps_per_second': 64.251, 'epoch': 6.0, 'step': 3240}, {'loss': 0.006, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.2970321476459503, 'eval_precision': 0.49942594718714123, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4977116704805492, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.0011, 'eval_samples_per_second': 510.141, 'eval_steps_per_second': 63.976, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0031, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.3525254726409912, 'eval_precision': 0.4916013437849944, 'eval_recall': 0.500570125427594, 'eval_f1': 0.49604519774011296, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.9956, 'eval_samples_per_second': 511.075, 'eval_steps_per_second': 64.093, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0031, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.3550240695476532, 'eval_precision': 0.4930875576036866, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4905444126074498, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 3.0172, 'eval_samples_per_second': 507.423, 'eval_steps_per_second': 63.635, 'epoch': 9.0, 'step': 4860}, {'loss': 0.002, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3723902702331543, 'eval_precision': 0.5509708737864077, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5338036449147561, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 3.0697, 'eval_samples_per_second': 498.746, 'eval_steps_per_second': 62.547, 'epoch': 10.0, 'step': 5400}, {'loss': 0.003, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.3634151220321655, 'eval_precision': 0.5040745052386496, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.4988479262672811, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.9865, 'eval_samples_per_second': 512.643, 'eval_steps_per_second': 64.29, 'epoch': 11.0, 'step': 5940}, {'loss': 0.002, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.40613192319869995, 'eval_precision': 0.4820295983086681, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5002742731760834, 'eval_accuracy': 0.9484675364780359, 'eval_runtime': 2.977, 'eval_samples_per_second': 514.284, 'eval_steps_per_second': 64.495, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0024, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.3796161115169525, 'eval_precision': 0.496054114994363, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4988662131519275, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.9857, 'eval_samples_per_second': 512.773, 'eval_steps_per_second': 64.306, 'epoch': 13.0, 'step': 7020}, {'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.395321249961853, 'eval_precision': 0.5332512315270936, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.5127294256956779, 'eval_accuracy': 0.952211842816336, 'eval_runtime': 3.0036, 'eval_samples_per_second': 509.729, 'eval_steps_per_second': 63.924, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0012, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3929101228713989, 'eval_precision': 0.530952380952381, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5195107746068724, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.627, 'eval_steps_per_second': 64.789, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0009, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.41622012853622437, 'eval_precision': 0.5052264808362369, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5005753739930955, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.988, 'eval_samples_per_second': 512.387, 'eval_steps_per_second': 64.258, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.42032116651535034, 'eval_precision': 0.5132641291810842, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5103211009174311, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 2.996, 'eval_samples_per_second': 511.01, 'eval_steps_per_second': 64.085, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.42706099152565, 'eval_precision': 0.5461441213653603, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.5179856115107915, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 2.994, 'eval_samples_per_second': 511.353, 'eval_steps_per_second': 64.128, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0006, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.43938928842544556, 'eval_precision': 0.5143513203214696, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5125858123569794, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.006, 'eval_samples_per_second': 509.307, 'eval_steps_per_second': 63.871, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.4336467683315277, 'eval_precision': 0.5255972696245734, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5261958997722096, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 2.9909, 'eval_samples_per_second': 511.878, 'eval_steps_per_second': 64.194, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.4384605288505554, 'eval_precision': 0.5340501792114696, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5215869311551925, 'eval_accuracy': 0.9529452636454875, 'eval_runtime': 2.9828, 'eval_samples_per_second': 513.282, 'eval_steps_per_second': 64.37, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.4335829019546509, 'eval_precision': 0.5417170495767836, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5258215962441314, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 3.0679, 'eval_samples_per_second': 499.037, 'eval_steps_per_second': 62.583, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.4402812719345093, 'eval_precision': 0.5374396135265701, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5219941348973607, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.9802, 'eval_samples_per_second': 513.721, 'eval_steps_per_second': 64.425, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.44220516085624695, 'eval_precision': 0.5360576923076923, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5219426565242831, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.9886, 'eval_samples_per_second': 512.278, 'eval_steps_per_second': 64.244, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1008.0298, 'train_samples_per_second': 205.565, 'train_steps_per_second': 12.857, 'total_flos': 5803832751437580.0, 'train_loss': 0.019974430037064502, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9522
  predict_f1                 =     0.4989
  predict_loss               =     0.1671
  predict_precision          =      0.516
  predict_recall             =      0.483
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    510.172
  predict_steps_per_second   =     63.772
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_20.json completed. F1: 0.49894588896697123
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_09.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6326.26 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7015.13 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6930.05 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7018.83 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7078.58 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7221.79 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7385.26 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6441.55 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6838.09 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7446.80 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7069.23 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7142.85 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6911.44 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7641, 'eval_samples_per_second': 265.61, 'eval_steps_per_second': 33.31, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7408, 'eval_samples_per_second': 266.687, 'eval_steps_per_second': 33.445, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7395, 'eval_samples_per_second': 266.75, 'eval_steps_per_second': 33.453, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7426, 'eval_samples_per_second': 266.606, 'eval_steps_per_second': 33.435, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.754, 'eval_samples_per_second': 266.075, 'eval_steps_per_second': 33.368, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7436, 'eval_samples_per_second': 266.557, 'eval_steps_per_second': 33.428, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7514, 'eval_samples_per_second': 266.195, 'eval_steps_per_second': 33.383, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7574, 'eval_samples_per_second': 265.921, 'eval_steps_per_second': 33.349, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7395, 'eval_samples_per_second': 266.749, 'eval_steps_per_second': 33.453, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7499, 'eval_samples_per_second': 266.268, 'eval_steps_per_second': 33.392, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7485, 'eval_samples_per_second': 266.328, 'eval_steps_per_second': 33.4, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.578, 'eval_steps_per_second': 33.431, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.756, 'eval_samples_per_second': 265.984, 'eval_steps_per_second': 33.357, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.479, 'eval_steps_per_second': 33.419, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7472, 'eval_samples_per_second': 266.392, 'eval_steps_per_second': 33.408, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7651, 'eval_samples_per_second': 265.563, 'eval_steps_per_second': 33.304, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7381, 'eval_samples_per_second': 266.813, 'eval_steps_per_second': 33.461, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7455, 'eval_samples_per_second': 266.469, 'eval_steps_per_second': 33.417, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.833, 'eval_samples_per_second': 262.474, 'eval_steps_per_second': 32.916, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.506, 'eval_steps_per_second': 33.422, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7476, 'eval_samples_per_second': 266.371, 'eval_steps_per_second': 33.405, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7562, 'eval_samples_per_second': 265.974, 'eval_steps_per_second': 33.355, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.991, 'eval_steps_per_second': 33.358, 'epoch': 24.0}
{'train_runtime': 3362.2918, 'train_samples_per_second': 61.629, 'train_steps_per_second': 7.709, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:56:02.29
  train_samples            =       8634
  train_samples_per_second =     61.629
  train_steps_per_second   =      7.709
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7641, 'eval_samples_per_second': 265.61, 'eval_steps_per_second': 33.31, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7408, 'eval_samples_per_second': 266.687, 'eval_steps_per_second': 33.445, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7395, 'eval_samples_per_second': 266.75, 'eval_steps_per_second': 33.453, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7426, 'eval_samples_per_second': 266.606, 'eval_steps_per_second': 33.435, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.754, 'eval_samples_per_second': 266.075, 'eval_steps_per_second': 33.368, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7436, 'eval_samples_per_second': 266.557, 'eval_steps_per_second': 33.428, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7514, 'eval_samples_per_second': 266.195, 'eval_steps_per_second': 33.383, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7574, 'eval_samples_per_second': 265.921, 'eval_steps_per_second': 33.349, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7395, 'eval_samples_per_second': 266.749, 'eval_steps_per_second': 33.453, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7499, 'eval_samples_per_second': 266.268, 'eval_steps_per_second': 33.392, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7485, 'eval_samples_per_second': 266.328, 'eval_steps_per_second': 33.4, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7432, 'eval_samples_per_second': 266.578, 'eval_steps_per_second': 33.431, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.756, 'eval_samples_per_second': 265.984, 'eval_steps_per_second': 33.357, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.479, 'eval_steps_per_second': 33.419, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7472, 'eval_samples_per_second': 266.392, 'eval_steps_per_second': 33.408, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7651, 'eval_samples_per_second': 265.563, 'eval_steps_per_second': 33.304, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7381, 'eval_samples_per_second': 266.813, 'eval_steps_per_second': 33.461, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7455, 'eval_samples_per_second': 266.469, 'eval_steps_per_second': 33.417, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.833, 'eval_samples_per_second': 262.474, 'eval_steps_per_second': 32.916, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.506, 'eval_steps_per_second': 33.422, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7476, 'eval_samples_per_second': 266.371, 'eval_steps_per_second': 33.405, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7562, 'eval_samples_per_second': 265.974, 'eval_steps_per_second': 33.355, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.991, 'eval_steps_per_second': 33.358, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3362.2918, 'train_samples_per_second': 61.629, 'train_steps_per_second': 7.709, 'total_flos': 1.751047517859822e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.82
  predict_samples_per_second =    263.713
  predict_steps_per_second   =     32.964
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_09.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_40.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5689.66 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6622.79 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6674.26 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6800.07 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6889.10 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7043.58 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7152.43 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6271.99 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6611.02 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7331.97 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6967.52 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7000.06 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6833.68 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.5643, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0491, 'eval_samples_per_second': 502.122, 'eval_steps_per_second': 62.97, 'epoch': 1.0}
{'loss': 2.5643, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9908, 'eval_samples_per_second': 511.898, 'eval_steps_per_second': 64.196, 'epoch': 2.0}
{'loss': 2.5643, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.603, 'eval_steps_per_second': 64.159, 'epoch': 3.0}
{'loss': 2.5643, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0133, 'eval_samples_per_second': 508.073, 'eval_steps_per_second': 63.717, 'epoch': 4.0}
{'loss': 2.5643, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0108, 'eval_samples_per_second': 508.494, 'eval_steps_per_second': 63.769, 'epoch': 5.0}
{'loss': 2.5643, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0123, 'eval_samples_per_second': 508.247, 'eval_steps_per_second': 63.738, 'epoch': 6.0}
{'loss': 2.5643, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0838, 'eval_samples_per_second': 496.473, 'eval_steps_per_second': 62.262, 'epoch': 7.0}
{'loss': 2.5643, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.85, 'eval_steps_per_second': 64.065, 'epoch': 8.0}
{'loss': 2.5643, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0085, 'eval_samples_per_second': 508.895, 'eval_steps_per_second': 63.82, 'epoch': 9.0}
{'loss': 2.5643, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0132, 'eval_samples_per_second': 508.095, 'eval_steps_per_second': 63.719, 'epoch': 10.0}
{'loss': 2.5643, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9906, 'eval_samples_per_second': 511.936, 'eval_steps_per_second': 64.201, 'epoch': 11.0}
{'loss': 2.5643, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0105, 'eval_samples_per_second': 508.556, 'eval_steps_per_second': 63.777, 'epoch': 12.0}
{'loss': 2.5643, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.048, 'eval_steps_per_second': 64.466, 'epoch': 13.0}
{'loss': 2.5643, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0652, 'eval_samples_per_second': 499.474, 'eval_steps_per_second': 62.638, 'epoch': 14.0}
{'loss': 2.5643, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9834, 'eval_samples_per_second': 513.174, 'eval_steps_per_second': 64.356, 'epoch': 15.0}
{'loss': 2.5643, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9941, 'eval_samples_per_second': 511.34, 'eval_steps_per_second': 64.126, 'epoch': 16.0}
{'loss': 2.5643, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0195, 'eval_samples_per_second': 507.038, 'eval_steps_per_second': 63.587, 'epoch': 17.0}
{'loss': 2.5643, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.02, 'eval_samples_per_second': 506.947, 'eval_steps_per_second': 63.575, 'epoch': 18.0}
{'loss': 2.5643, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0101, 'eval_samples_per_second': 508.616, 'eval_steps_per_second': 63.785, 'epoch': 19.0}
{'loss': 2.5643, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0153, 'eval_samples_per_second': 507.747, 'eval_steps_per_second': 63.676, 'epoch': 20.0}
{'loss': 2.5643, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0138, 'eval_samples_per_second': 507.993, 'eval_steps_per_second': 63.707, 'epoch': 21.0}
{'loss': 2.5643, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.1007, 'eval_samples_per_second': 493.753, 'eval_steps_per_second': 61.921, 'epoch': 22.0}
{'loss': 2.5643, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0132, 'eval_samples_per_second': 508.095, 'eval_steps_per_second': 63.719, 'epoch': 23.0}
{'loss': 2.5643, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9886, 'eval_samples_per_second': 512.287, 'eval_steps_per_second': 64.245, 'epoch': 24.0}
{'train_runtime': 847.0384, 'train_samples_per_second': 244.636, 'train_steps_per_second': 3.825, 'train_loss': 2.5642656962076824, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     2.5643
  train_runtime            = 0:14:07.03
  train_samples            =       8634
  train_samples_per_second =    244.636
  train_steps_per_second   =      3.825
[{'loss': 2.5643, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0491, 'eval_samples_per_second': 502.122, 'eval_steps_per_second': 62.97, 'epoch': 1.0, 'step': 135}, {'loss': 2.5643, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9908, 'eval_samples_per_second': 511.898, 'eval_steps_per_second': 64.196, 'epoch': 2.0, 'step': 270}, {'loss': 2.5643, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9926, 'eval_samples_per_second': 511.603, 'eval_steps_per_second': 64.159, 'epoch': 3.0, 'step': 405}, {'loss': 2.5643, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0133, 'eval_samples_per_second': 508.073, 'eval_steps_per_second': 63.717, 'epoch': 4.0, 'step': 540}, {'loss': 2.5643, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0108, 'eval_samples_per_second': 508.494, 'eval_steps_per_second': 63.769, 'epoch': 5.0, 'step': 675}, {'loss': 2.5643, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0123, 'eval_samples_per_second': 508.247, 'eval_steps_per_second': 63.738, 'epoch': 6.0, 'step': 810}, {'loss': 2.5643, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0838, 'eval_samples_per_second': 496.473, 'eval_steps_per_second': 62.262, 'epoch': 7.0, 'step': 945}, {'loss': 2.5643, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.85, 'eval_steps_per_second': 64.065, 'epoch': 8.0, 'step': 1080}, {'loss': 2.5643, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0085, 'eval_samples_per_second': 508.895, 'eval_steps_per_second': 63.82, 'epoch': 9.0, 'step': 1215}, {'loss': 2.5643, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0132, 'eval_samples_per_second': 508.095, 'eval_steps_per_second': 63.719, 'epoch': 10.0, 'step': 1350}, {'loss': 2.5643, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9906, 'eval_samples_per_second': 511.936, 'eval_steps_per_second': 64.201, 'epoch': 11.0, 'step': 1485}, {'loss': 2.5643, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0105, 'eval_samples_per_second': 508.556, 'eval_steps_per_second': 63.777, 'epoch': 12.0, 'step': 1620}, {'loss': 2.5643, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.048, 'eval_steps_per_second': 64.466, 'epoch': 13.0, 'step': 1755}, {'loss': 2.5643, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0652, 'eval_samples_per_second': 499.474, 'eval_steps_per_second': 62.638, 'epoch': 14.0, 'step': 1890}, {'loss': 2.5643, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9834, 'eval_samples_per_second': 513.174, 'eval_steps_per_second': 64.356, 'epoch': 15.0, 'step': 2025}, {'loss': 2.5643, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9941, 'eval_samples_per_second': 511.34, 'eval_steps_per_second': 64.126, 'epoch': 16.0, 'step': 2160}, {'loss': 2.5643, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0195, 'eval_samples_per_second': 507.038, 'eval_steps_per_second': 63.587, 'epoch': 17.0, 'step': 2295}, {'loss': 2.5643, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.02, 'eval_samples_per_second': 506.947, 'eval_steps_per_second': 63.575, 'epoch': 18.0, 'step': 2430}, {'loss': 2.5643, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0101, 'eval_samples_per_second': 508.616, 'eval_steps_per_second': 63.785, 'epoch': 19.0, 'step': 2565}, {'loss': 2.5643, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0153, 'eval_samples_per_second': 507.747, 'eval_steps_per_second': 63.676, 'epoch': 20.0, 'step': 2700}, {'loss': 2.5643, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0138, 'eval_samples_per_second': 507.993, 'eval_steps_per_second': 63.707, 'epoch': 21.0, 'step': 2835}, {'loss': 2.5643, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.1007, 'eval_samples_per_second': 493.753, 'eval_steps_per_second': 61.921, 'epoch': 22.0, 'step': 2970}, {'loss': 2.5643, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 3.0132, 'eval_samples_per_second': 508.095, 'eval_steps_per_second': 63.719, 'epoch': 23.0, 'step': 3105}, {'loss': 2.5643, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 2.564211368560791, 'eval_precision': 0.0012708274498729173, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.0022615906520919715, 'eval_accuracy': 0.6835096116729715, 'eval_runtime': 2.9886, 'eval_samples_per_second': 512.287, 'eval_steps_per_second': 64.245, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 847.0384, 'train_samples_per_second': 244.636, 'train_steps_per_second': 3.825, 'total_flos': 7642265274881820.0, 'train_loss': 2.5642656962076824, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.6854
  predict_f1                 =     0.0024
  predict_loss               =     2.5642
  predict_precision          =     0.0013
  predict_recall             =     0.0109
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    509.717
  predict_steps_per_second   =     63.715
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_40.json completed. F1: 0.002402041735475154
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_43.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_43.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6323.27 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7078.20 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7031.76 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7118.69 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7188.18 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7356.29 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7525.61 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6541.21 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6945.56 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7582.98 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7189.57 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7225.24 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7047.12 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3315, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21692460775375366, 'eval_precision': 0.20431211498973306, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.21501890869800108, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6921, 'eval_samples_per_second': 326.291, 'eval_steps_per_second': 40.92, 'epoch': 1.0}
{'loss': 0.2007, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.19933924078941345, 'eval_precision': 0.25976768743400214, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26973684210526316, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.852, 'eval_steps_per_second': 41.241, 'epoch': 2.0}
{'loss': 0.1511, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.20231382548809052, 'eval_precision': 0.30470588235294116, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.29994209612044004, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.363, 'eval_steps_per_second': 41.305, 'epoch': 3.0}
{'loss': 0.1125, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21582312881946564, 'eval_precision': 0.29005847953216374, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.28637413394919164, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.571, 'eval_steps_per_second': 41.331, 'epoch': 4.0}
{'loss': 0.0838, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.24324947595596313, 'eval_precision': 0.32066508313539194, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31413612565445026, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.417, 'eval_steps_per_second': 41.312, 'epoch': 5.0}
{'loss': 0.062, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2697926163673401, 'eval_precision': 0.2706002034587996, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28602150537634413, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.62, 'eval_steps_per_second': 41.337, 'epoch': 6.0}
{'loss': 0.0474, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2854779362678528, 'eval_precision': 0.3045267489711934, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3201730665224446, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.7254, 'eval_samples_per_second': 323.993, 'eval_steps_per_second': 40.631, 'epoch': 7.0}
{'loss': 0.0344, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.29757362604141235, 'eval_precision': 0.29545454545454547, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.316569613552144, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.423, 'eval_steps_per_second': 41.312, 'epoch': 8.0}
{'loss': 0.0256, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3218071460723877, 'eval_precision': 0.2978505629477994, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31391585760517793, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.036, 'eval_steps_per_second': 41.264, 'epoch': 9.0}
{'loss': 0.0206, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3373754024505615, 'eval_precision': 0.29405737704918034, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30976794387479767, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6442, 'eval_samples_per_second': 329.662, 'eval_steps_per_second': 41.342, 'epoch': 10.0}
{'loss': 0.015, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3653952479362488, 'eval_precision': 0.2894736842105263, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3173621844410098, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6614, 'eval_samples_per_second': 328.44, 'eval_steps_per_second': 41.189, 'epoch': 11.0}
{'loss': 0.0121, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.36990493535995483, 'eval_precision': 0.29365079365079366, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31405835543766575, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.115, 'eval_steps_per_second': 41.274, 'epoch': 12.0}
{'loss': 0.0099, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.3880678117275238, 'eval_precision': 0.2932692307692308, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3182055294731351, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6525, 'eval_samples_per_second': 329.073, 'eval_steps_per_second': 41.269, 'epoch': 13.0}
{'loss': 0.0076, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.39411482214927673, 'eval_precision': 0.30362694300518134, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3181324647122693, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.653, 'eval_steps_per_second': 41.341, 'epoch': 14.0}
{'loss': 0.0058, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.4126776158809662, 'eval_precision': 0.27965367965367965, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.3179133858267717, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.179, 'eval_steps_per_second': 41.282, 'epoch': 15.0}
{'loss': 0.0051, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.41995468735694885, 'eval_precision': 0.3147751605995717, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3246824958586416, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.52, 'eval_steps_per_second': 41.325, 'epoch': 16.0}
{'loss': 0.0043, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.4248751699924469, 'eval_precision': 0.29907502569373073, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31459459459459466, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.523, 'eval_steps_per_second': 41.325, 'epoch': 17.0}
{'loss': 0.0038, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.42796584963798523, 'eval_precision': 0.3140495867768595, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32953929539295396, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.181, 'eval_steps_per_second': 41.282, 'epoch': 18.0}
{'loss': 0.0029, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.4347414970397949, 'eval_precision': 0.30456349206349204, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.32572944297082224, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.417, 'eval_steps_per_second': 41.312, 'epoch': 19.0}
{'loss': 0.0028, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.44006508588790894, 'eval_precision': 0.3090727816550349, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.32978723404255317, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.658, 'eval_samples_per_second': 328.681, 'eval_steps_per_second': 41.219, 'epoch': 20.0}
{'loss': 0.0023, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.44840165972709656, 'eval_precision': 0.30927835051546393, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.32485110990795885, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.542, 'eval_steps_per_second': 41.327, 'epoch': 21.0}
{'loss': 0.0021, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.44811517000198364, 'eval_precision': 0.3053053053053053, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3251599147121535, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.544, 'eval_steps_per_second': 41.328, 'epoch': 22.0}
{'loss': 0.0019, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.45120224356651306, 'eval_precision': 0.31020408163265306, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32740980075390413, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6464, 'eval_samples_per_second': 329.503, 'eval_steps_per_second': 41.322, 'epoch': 23.0}
{'loss': 0.0015, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.452898770570755, 'eval_precision': 0.3052738336713996, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3231347289318304, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6508, 'eval_samples_per_second': 329.189, 'eval_steps_per_second': 41.283, 'epoch': 24.0}
{'train_runtime': 2086.7739, 'train_samples_per_second': 99.3, 'train_steps_per_second': 1.553, 'train_loss': 0.04777067001035184, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0478
  train_runtime            = 0:34:46.77
  train_samples            =       8634
  train_samples_per_second =       99.3
  train_steps_per_second   =      1.553
[{'loss': 0.3315, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21692460775375366, 'eval_precision': 0.20431211498973306, 'eval_recall': 0.22690992018244013, 'eval_f1': 0.21501890869800108, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.6921, 'eval_samples_per_second': 326.291, 'eval_steps_per_second': 40.92, 'epoch': 1.0, 'step': 135}, {'loss': 0.2007, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.19933924078941345, 'eval_precision': 0.25976768743400214, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.26973684210526316, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.852, 'eval_steps_per_second': 41.241, 'epoch': 2.0, 'step': 270}, {'loss': 0.1511, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.20231382548809052, 'eval_precision': 0.30470588235294116, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.29994209612044004, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.363, 'eval_steps_per_second': 41.305, 'epoch': 3.0, 'step': 405}, {'loss': 0.1125, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.21582312881946564, 'eval_precision': 0.29005847953216374, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.28637413394919164, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.571, 'eval_steps_per_second': 41.331, 'epoch': 4.0, 'step': 540}, {'loss': 0.0838, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.24324947595596313, 'eval_precision': 0.32066508313539194, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31413612565445026, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.417, 'eval_steps_per_second': 41.312, 'epoch': 5.0, 'step': 675}, {'loss': 0.062, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2697926163673401, 'eval_precision': 0.2706002034587996, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28602150537634413, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.62, 'eval_steps_per_second': 41.337, 'epoch': 6.0, 'step': 810}, {'loss': 0.0474, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2854779362678528, 'eval_precision': 0.3045267489711934, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3201730665224446, 'eval_accuracy': 0.9400910985871999, 'eval_runtime': 4.7254, 'eval_samples_per_second': 323.993, 'eval_steps_per_second': 40.631, 'epoch': 7.0, 'step': 945}, {'loss': 0.0344, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.29757362604141235, 'eval_precision': 0.29545454545454547, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.316569613552144, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.423, 'eval_steps_per_second': 41.312, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0256, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3218071460723877, 'eval_precision': 0.2978505629477994, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31391585760517793, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.036, 'eval_steps_per_second': 41.264, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0206, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3373754024505615, 'eval_precision': 0.29405737704918034, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.30976794387479767, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6442, 'eval_samples_per_second': 329.662, 'eval_steps_per_second': 41.342, 'epoch': 10.0, 'step': 1350}, {'loss': 0.015, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3653952479362488, 'eval_precision': 0.2894736842105263, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3173621844410098, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6614, 'eval_samples_per_second': 328.44, 'eval_steps_per_second': 41.189, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0121, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.36990493535995483, 'eval_precision': 0.29365079365079366, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31405835543766575, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.115, 'eval_steps_per_second': 41.274, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0099, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3880678117275238, 'eval_precision': 0.2932692307692308, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3182055294731351, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 4.6525, 'eval_samples_per_second': 329.073, 'eval_steps_per_second': 41.269, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0076, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.39411482214927673, 'eval_precision': 0.30362694300518134, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3181324647122693, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.653, 'eval_steps_per_second': 41.341, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0058, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4126776158809662, 'eval_precision': 0.27965367965367965, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.3179133858267717, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.179, 'eval_steps_per_second': 41.282, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0051, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.41995468735694885, 'eval_precision': 0.3147751605995717, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3246824958586416, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.52, 'eval_steps_per_second': 41.325, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0043, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4248751699924469, 'eval_precision': 0.29907502569373073, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31459459459459466, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.523, 'eval_steps_per_second': 41.325, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0038, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.42796584963798523, 'eval_precision': 0.3140495867768595, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32953929539295396, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.181, 'eval_steps_per_second': 41.282, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0029, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4347414970397949, 'eval_precision': 0.30456349206349204, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.32572944297082224, 'eval_accuracy': 0.9390102678916081, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.417, 'eval_steps_per_second': 41.312, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0028, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.44006508588790894, 'eval_precision': 0.3090727816550349, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.32978723404255317, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 4.658, 'eval_samples_per_second': 328.681, 'eval_steps_per_second': 41.219, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0023, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.44840165972709656, 'eval_precision': 0.30927835051546393, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.32485110990795885, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.542, 'eval_steps_per_second': 41.327, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0021, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.44811517000198364, 'eval_precision': 0.3053053053053053, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3251599147121535, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.544, 'eval_steps_per_second': 41.328, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0019, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.45120224356651306, 'eval_precision': 0.31020408163265306, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32740980075390413, 'eval_accuracy': 0.940129699683471, 'eval_runtime': 4.6464, 'eval_samples_per_second': 329.503, 'eval_steps_per_second': 41.322, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0015, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.452898770570755, 'eval_precision': 0.3052738336713996, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3231347289318304, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6508, 'eval_samples_per_second': 329.189, 'eval_steps_per_second': 41.283, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2086.7739, 'train_samples_per_second': 99.3, 'train_steps_per_second': 1.553, 'total_flos': 2.5992057086835036e+16, 'train_loss': 0.04777067001035184, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9383
  predict_f1                 =     0.2601
  predict_loss               =     0.2114
  predict_precision          =     0.2563
  predict_recall             =     0.2639
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    325.296
  predict_steps_per_second   =     40.662
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_43.json completed. F1: 0.26005361930294907
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_32.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_32.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6314.46 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6914.07 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6847.63 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6927.06 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7001.74 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7128.13 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7301.55 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6368.23 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6757.35 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7378.40 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7008.68 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7038.62 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6891.42 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5729, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2597388029098511, 'eval_precision': 0.16923076923076924, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.04369414101290964, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.776, 'eval_steps_per_second': 64.181, 'epoch': 1.0}
{'loss': 0.2529, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.23498007655143738, 'eval_precision': 0.18327402135231316, 'eval_recall': 0.11744583808437856, 'eval_f1': 0.14315496872828354, 'eval_accuracy': 0.9385084536400834, 'eval_runtime': 2.9731, 'eval_samples_per_second': 514.949, 'eval_steps_per_second': 64.579, 'epoch': 2.0}
{'loss': 0.1709, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.23486559092998505, 'eval_precision': 0.20899470899470898, 'eval_recall': 0.18015963511972635, 'eval_f1': 0.19350887936313532, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.9786, 'eval_samples_per_second': 513.999, 'eval_steps_per_second': 64.46, 'epoch': 3.0}
{'loss': 0.1226, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2506472170352936, 'eval_precision': 0.26504481434058896, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.24969843184559706, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.578, 'eval_steps_per_second': 64.407, 'epoch': 4.0}
{'loss': 0.0902, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2991724908351898, 'eval_precision': 0.2448087431693989, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.25, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.9618, 'eval_samples_per_second': 516.908, 'eval_steps_per_second': 64.825, 'epoch': 5.0}
{'loss': 0.0647, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.32867181301116943, 'eval_precision': 0.254841997961264, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2691065662002153, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.9842, 'eval_samples_per_second': 513.036, 'eval_steps_per_second': 64.339, 'epoch': 6.0}
{'loss': 0.0482, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.33781319856643677, 'eval_precision': 0.27627302275189597, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2833333333333333, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.9741, 'eval_samples_per_second': 514.773, 'eval_steps_per_second': 64.557, 'epoch': 7.0}
{'loss': 0.0347, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3605060577392578, 'eval_precision': 0.268141592920354, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.30194319880418535, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.354, 'eval_steps_per_second': 64.504, 'epoch': 8.0}
{'loss': 0.024, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.39524373412132263, 'eval_precision': 0.2708333333333333, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.30754066042385414, 'eval_accuracy': 0.9284335675133174, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.385, 'eval_steps_per_second': 64.508, 'epoch': 9.0}
{'loss': 0.0186, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.39150238037109375, 'eval_precision': 0.2783603431839847, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3032191069574247, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.115, 'eval_steps_per_second': 63.22, 'epoch': 10.0}
{'loss': 0.0125, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4111676514148712, 'eval_precision': 0.2987598647125141, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.30045351473922904, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.9669, 'eval_samples_per_second': 516.022, 'eval_steps_per_second': 64.713, 'epoch': 11.0}
{'loss': 0.0103, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4343094229698181, 'eval_precision': 0.28530534351145037, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3106493506493507, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.9606, 'eval_samples_per_second': 517.121, 'eval_steps_per_second': 64.851, 'epoch': 12.0}
{'loss': 0.0097, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.43536651134490967, 'eval_precision': 0.2920997920997921, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30560087003806413, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9772, 'eval_samples_per_second': 514.242, 'eval_steps_per_second': 64.49, 'epoch': 13.0}
{'loss': 0.0071, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.45148223638534546, 'eval_precision': 0.2972972972972973, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31663113006396587, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.127, 'eval_steps_per_second': 64.601, 'epoch': 14.0}
{'loss': 0.0057, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4653164744377136, 'eval_precision': 0.2882703777335984, 'eval_recall': 0.330672748004561, 'eval_f1': 0.30801911842804036, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9804, 'eval_samples_per_second': 513.683, 'eval_steps_per_second': 64.42, 'epoch': 15.0}
{'loss': 0.004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4671618938446045, 'eval_precision': 0.2945570971184632, 'eval_recall': 0.314709236031927, 'eval_f1': 0.30429988974641675, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.337, 'eval_steps_per_second': 64.628, 'epoch': 16.0}
{'loss': 0.0033, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.47715356945991516, 'eval_precision': 0.28932038834951457, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3125327739905611, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.438, 'eval_steps_per_second': 64.64, 'epoch': 17.0}
{'loss': 0.0025, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.48047587275505066, 'eval_precision': 0.294940796555436, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3034330011074197, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.051, 'eval_steps_per_second': 64.466, 'epoch': 18.0}
{'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.48455217480659485, 'eval_precision': 0.29850746268656714, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.3085399449035812, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.821, 'eval_steps_per_second': 64.814, 'epoch': 19.0}
{'loss': 0.0017, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.48816046118736267, 'eval_precision': 0.3065380493033226, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3160220994475138, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.873, 'eval_steps_per_second': 64.695, 'epoch': 20.0}
{'loss': 0.0014, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.49775129556655884, 'eval_precision': 0.3042105263157895, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3163656267104543, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.9586, 'eval_samples_per_second': 517.477, 'eval_steps_per_second': 64.896, 'epoch': 21.0}
{'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5046783089637756, 'eval_precision': 0.30416666666666664, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3179096352749047, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 3.0464, 'eval_samples_per_second': 502.562, 'eval_steps_per_second': 63.025, 'epoch': 22.0}
{'loss': 0.0012, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.503990888595581, 'eval_precision': 0.3135775862068966, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3224376731301939, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.9568, 'eval_samples_per_second': 517.793, 'eval_steps_per_second': 64.935, 'epoch': 23.0}
{'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5035491585731506, 'eval_precision': 0.31229597388465724, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3195991091314031, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 2.9912, 'eval_samples_per_second': 511.831, 'eval_steps_per_second': 64.188, 'epoch': 24.0}
{'train_runtime': 883.0702, 'train_samples_per_second': 234.654, 'train_steps_per_second': 7.338, 'train_loss': 0.06095111832758527, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.061
  train_runtime            = 0:14:43.07
  train_samples            =       8634
  train_samples_per_second =    234.654
  train_steps_per_second   =      7.338
[{'loss': 0.5729, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.2597388029098511, 'eval_precision': 0.16923076923076924, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.04369414101290964, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.776, 'eval_steps_per_second': 64.181, 'epoch': 1.0, 'step': 270}, {'loss': 0.2529, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.23498007655143738, 'eval_precision': 0.18327402135231316, 'eval_recall': 0.11744583808437856, 'eval_f1': 0.14315496872828354, 'eval_accuracy': 0.9385084536400834, 'eval_runtime': 2.9731, 'eval_samples_per_second': 514.949, 'eval_steps_per_second': 64.579, 'epoch': 2.0, 'step': 540}, {'loss': 0.1709, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.23486559092998505, 'eval_precision': 0.20899470899470898, 'eval_recall': 0.18015963511972635, 'eval_f1': 0.19350887936313532, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.9786, 'eval_samples_per_second': 513.999, 'eval_steps_per_second': 64.46, 'epoch': 3.0, 'step': 810}, {'loss': 0.1226, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.2506472170352936, 'eval_precision': 0.26504481434058896, 'eval_recall': 0.23603192702394526, 'eval_f1': 0.24969843184559706, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.578, 'eval_steps_per_second': 64.407, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0902, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.2991724908351898, 'eval_precision': 0.2448087431693989, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.25, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 2.9618, 'eval_samples_per_second': 516.908, 'eval_steps_per_second': 64.825, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0647, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.32867181301116943, 'eval_precision': 0.254841997961264, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2691065662002153, 'eval_accuracy': 0.93294989577704, 'eval_runtime': 2.9842, 'eval_samples_per_second': 513.036, 'eval_steps_per_second': 64.339, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0482, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.33781319856643677, 'eval_precision': 0.27627302275189597, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.2833333333333333, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.9741, 'eval_samples_per_second': 514.773, 'eval_steps_per_second': 64.557, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0347, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.3605060577392578, 'eval_precision': 0.268141592920354, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.30194319880418535, 'eval_accuracy': 0.9315602563112793, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.354, 'eval_steps_per_second': 64.504, 'epoch': 8.0, 'step': 2160}, {'loss': 0.024, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.39524373412132263, 'eval_precision': 0.2708333333333333, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.30754066042385414, 'eval_accuracy': 0.9284335675133174, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.385, 'eval_steps_per_second': 64.508, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0186, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.39150238037109375, 'eval_precision': 0.2783603431839847, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3032191069574247, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.115, 'eval_steps_per_second': 63.22, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0125, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.4111676514148712, 'eval_precision': 0.2987598647125141, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.30045351473922904, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.9669, 'eval_samples_per_second': 516.022, 'eval_steps_per_second': 64.713, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0103, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.4343094229698181, 'eval_precision': 0.28530534351145037, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3106493506493507, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.9606, 'eval_samples_per_second': 517.121, 'eval_steps_per_second': 64.851, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0097, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.43536651134490967, 'eval_precision': 0.2920997920997921, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30560087003806413, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9772, 'eval_samples_per_second': 514.242, 'eval_steps_per_second': 64.49, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0071, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.45148223638534546, 'eval_precision': 0.2972972972972973, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31663113006396587, 'eval_accuracy': 0.932332278236702, 'eval_runtime': 2.9721, 'eval_samples_per_second': 515.127, 'eval_steps_per_second': 64.601, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0057, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.4653164744377136, 'eval_precision': 0.2882703777335984, 'eval_recall': 0.330672748004561, 'eval_f1': 0.30801911842804036, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9804, 'eval_samples_per_second': 513.683, 'eval_steps_per_second': 64.42, 'epoch': 15.0, 'step': 4050}, {'loss': 0.004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.4671618938446045, 'eval_precision': 0.2945570971184632, 'eval_recall': 0.314709236031927, 'eval_f1': 0.30429988974641675, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.337, 'eval_steps_per_second': 64.628, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0033, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.47715356945991516, 'eval_precision': 0.28932038834951457, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3125327739905611, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.438, 'eval_steps_per_second': 64.64, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0025, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.48047587275505066, 'eval_precision': 0.294940796555436, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3034330011074197, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.051, 'eval_steps_per_second': 64.466, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.48455217480659485, 'eval_precision': 0.29850746268656714, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.3085399449035812, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.821, 'eval_steps_per_second': 64.814, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0017, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.48816046118736267, 'eval_precision': 0.3065380493033226, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3160220994475138, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.873, 'eval_steps_per_second': 64.695, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0014, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.49775129556655884, 'eval_precision': 0.3042105263157895, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3163656267104543, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.9586, 'eval_samples_per_second': 517.477, 'eval_steps_per_second': 64.896, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.5046783089637756, 'eval_precision': 0.30416666666666664, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3179096352749047, 'eval_accuracy': 0.9348413494943256, 'eval_runtime': 3.0464, 'eval_samples_per_second': 502.562, 'eval_steps_per_second': 63.025, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0012, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.503990888595581, 'eval_precision': 0.3135775862068966, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3224376731301939, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.9568, 'eval_samples_per_second': 517.793, 'eval_steps_per_second': 64.935, 'epoch': 23.0, 'step': 6210}, {'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.5035491585731506, 'eval_precision': 0.31229597388465724, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3195991091314031, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 2.9912, 'eval_samples_per_second': 511.831, 'eval_steps_per_second': 64.188, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 883.0702, 'train_samples_per_second': 234.654, 'train_steps_per_second': 7.338, 'total_flos': 6697297123666968.0, 'train_loss': 0.06095111832758527, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9368
  predict_f1                 =     0.1865
  predict_loss               =     0.2438
  predict_precision          =     0.2045
  predict_recall             =     0.1714
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.919
  predict_steps_per_second   =      64.49
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_32.json completed. F1: 0.18652849740932645
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_23.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_23.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6219.23 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6958.08 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6899.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7016.08 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7112.69 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7231.56 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7439.37 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6477.69 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6859.24 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7507.35 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7172.42 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7204.58 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7014.41 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2608, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19645656645298004, 'eval_precision': 0.2841981132075472, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.27942028985507245, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6901, 'eval_samples_per_second': 326.433, 'eval_steps_per_second': 40.937, 'epoch': 1.0}
{'loss': 0.1696, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.21526597440242767, 'eval_precision': 0.2646048109965636, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26400000000000007, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.223, 'eval_steps_per_second': 41.162, 'epoch': 2.0}
{'loss': 0.1117, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.22617942094802856, 'eval_precision': 0.281767955801105, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.31176770249617924, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 4.6677, 'eval_samples_per_second': 327.997, 'eval_steps_per_second': 41.133, 'epoch': 3.0}
{'loss': 0.0736, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2794681787490845, 'eval_precision': 0.2656794425087108, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.30123456790123454, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 4.665, 'eval_samples_per_second': 328.186, 'eval_steps_per_second': 41.157, 'epoch': 4.0}
{'loss': 0.0501, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.32655248045921326, 'eval_precision': 0.273224043715847, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.27901785714285715, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 4.6646, 'eval_samples_per_second': 328.219, 'eval_steps_per_second': 41.161, 'epoch': 5.0}
{'loss': 0.0313, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3420671224594116, 'eval_precision': 0.27648839556004035, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29336188436830835, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.259, 'eval_steps_per_second': 41.166, 'epoch': 6.0}
{'loss': 0.0205, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3942190110683441, 'eval_precision': 0.30211817168338906, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3055242390078918, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.136, 'eval_steps_per_second': 41.151, 'epoch': 7.0}
{'loss': 0.0122, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.4099068343639374, 'eval_precision': 0.29591836734693877, 'eval_recall': 0.330672748004561, 'eval_f1': 0.31233171782444796, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 4.662, 'eval_samples_per_second': 328.399, 'eval_steps_per_second': 41.184, 'epoch': 8.0}
{'loss': 0.009, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.4096081256866455, 'eval_precision': 0.2839506172839506, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29853975121687404, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.309, 'eval_steps_per_second': 41.173, 'epoch': 9.0}
{'loss': 0.0076, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4483628571033478, 'eval_precision': 0.3064327485380117, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.30254041570438794, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 4.6634, 'eval_samples_per_second': 328.298, 'eval_steps_per_second': 41.171, 'epoch': 10.0}
{'loss': 0.0051, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4761226177215576, 'eval_precision': 0.2697176241480039, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2909663865546218, 'eval_accuracy': 0.9329884968733112, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.294, 'eval_steps_per_second': 41.171, 'epoch': 11.0}
{'loss': 0.004, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.48230496048927307, 'eval_precision': 0.3212669683257919, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32254400908574676, 'eval_accuracy': 0.9393576777580483, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.573, 'eval_steps_per_second': 41.206, 'epoch': 12.0}
{'loss': 0.0048, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.48649147152900696, 'eval_precision': 0.31542056074766356, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.311598384304674, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 13.0}
{'loss': 0.0031, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4859544336795807, 'eval_precision': 0.32646048109965636, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3257142857142857, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.247, 'eval_steps_per_second': 41.165, 'epoch': 14.0}
{'loss': 0.0017, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5090001821517944, 'eval_precision': 0.3106904231625835, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3143661971830986, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.064, 'eval_steps_per_second': 41.142, 'epoch': 15.0}
{'loss': 0.0015, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.49752551317214966, 'eval_precision': 0.3111566018423746, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3279395900755124, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.297, 'eval_steps_per_second': 41.171, 'epoch': 16.0}
{'loss': 0.0015, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.5186227560043335, 'eval_precision': 0.3256880733944954, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3247570040022871, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.96, 'eval_steps_per_second': 41.129, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5453371405601501, 'eval_precision': 0.33419354838709675, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.3135593220338983, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.145, 'eval_steps_per_second': 41.152, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5505555868148804, 'eval_precision': 0.3242320819112628, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.32460136674259676, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 4.6671, 'eval_samples_per_second': 328.038, 'eval_steps_per_second': 41.139, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5590003728866577, 'eval_precision': 0.3025027203482046, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.30957683741648107, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.472, 'eval_steps_per_second': 41.193, 'epoch': 20.0}
{'loss': 0.0012, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.557490348815918, 'eval_precision': 0.32689987937273823, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31770222743259086, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.7429, 'eval_samples_per_second': 322.801, 'eval_steps_per_second': 40.482, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.569586455821991, 'eval_precision': 0.3302857142857143, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3299086757990867, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.202, 'eval_steps_per_second': 41.159, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5753794312477112, 'eval_precision': 0.3264129181084198, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32454128440366975, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 4.6881, 'eval_samples_per_second': 326.568, 'eval_steps_per_second': 40.954, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5776349902153015, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32375366568914954, 'eval_accuracy': 0.9399752952983865, 'eval_runtime': 4.686, 'eval_samples_per_second': 326.717, 'eval_steps_per_second': 40.973, 'epoch': 24.0}
{'train_runtime': 2402.2276, 'train_samples_per_second': 86.26, 'train_steps_per_second': 5.395, 'train_loss': 0.03213831298628155, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0321
  train_runtime            = 0:40:02.22
  train_samples            =       8634
  train_samples_per_second =      86.26
  train_steps_per_second   =      5.395
[{'loss': 0.2608, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.19645656645298004, 'eval_precision': 0.2841981132075472, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.27942028985507245, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6901, 'eval_samples_per_second': 326.433, 'eval_steps_per_second': 40.937, 'epoch': 1.0, 'step': 540}, {'loss': 0.1696, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.21526597440242767, 'eval_precision': 0.2646048109965636, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.26400000000000007, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.223, 'eval_steps_per_second': 41.162, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1117, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.22617942094802856, 'eval_precision': 0.281767955801105, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.31176770249617924, 'eval_accuracy': 0.9344939396278854, 'eval_runtime': 4.6677, 'eval_samples_per_second': 327.997, 'eval_steps_per_second': 41.133, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0736, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.2794681787490845, 'eval_precision': 0.2656794425087108, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.30123456790123454, 'eval_accuracy': 0.9303636223268741, 'eval_runtime': 4.665, 'eval_samples_per_second': 328.186, 'eval_steps_per_second': 41.157, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0501, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.32655248045921326, 'eval_precision': 0.273224043715847, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.27901785714285715, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 4.6646, 'eval_samples_per_second': 328.219, 'eval_steps_per_second': 41.161, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0313, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.3420671224594116, 'eval_precision': 0.27648839556004035, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29336188436830835, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.259, 'eval_steps_per_second': 41.166, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0205, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.3942190110683441, 'eval_precision': 0.30211817168338906, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3055242390078918, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.136, 'eval_steps_per_second': 41.151, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0122, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.4099068343639374, 'eval_precision': 0.29591836734693877, 'eval_recall': 0.330672748004561, 'eval_f1': 0.31233171782444796, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 4.662, 'eval_samples_per_second': 328.399, 'eval_steps_per_second': 41.184, 'epoch': 8.0, 'step': 4320}, {'loss': 0.009, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.4096081256866455, 'eval_precision': 0.2839506172839506, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29853975121687404, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.309, 'eval_steps_per_second': 41.173, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0076, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.4483628571033478, 'eval_precision': 0.3064327485380117, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.30254041570438794, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 4.6634, 'eval_samples_per_second': 328.298, 'eval_steps_per_second': 41.171, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0051, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.4761226177215576, 'eval_precision': 0.2697176241480039, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.2909663865546218, 'eval_accuracy': 0.9329884968733112, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.294, 'eval_steps_per_second': 41.171, 'epoch': 11.0, 'step': 5940}, {'loss': 0.004, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.48230496048927307, 'eval_precision': 0.3212669683257919, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32254400908574676, 'eval_accuracy': 0.9393576777580483, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.573, 'eval_steps_per_second': 41.206, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0048, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.48649147152900696, 'eval_precision': 0.31542056074766356, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.311598384304674, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0031, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.4859544336795807, 'eval_precision': 0.32646048109965636, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3257142857142857, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.247, 'eval_steps_per_second': 41.165, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0017, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.5090001821517944, 'eval_precision': 0.3106904231625835, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3143661971830986, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.064, 'eval_steps_per_second': 41.142, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0015, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.49752551317214966, 'eval_precision': 0.3111566018423746, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3279395900755124, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.297, 'eval_steps_per_second': 41.171, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0015, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.5186227560043335, 'eval_precision': 0.3256880733944954, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3247570040022871, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.96, 'eval_steps_per_second': 41.129, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.5453371405601501, 'eval_precision': 0.33419354838709675, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.3135593220338983, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.145, 'eval_steps_per_second': 41.152, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5505555868148804, 'eval_precision': 0.3242320819112628, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.32460136674259676, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 4.6671, 'eval_samples_per_second': 328.038, 'eval_steps_per_second': 41.139, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5590003728866577, 'eval_precision': 0.3025027203482046, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.30957683741648107, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.472, 'eval_steps_per_second': 41.193, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0012, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.557490348815918, 'eval_precision': 0.32689987937273823, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.31770222743259086, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 4.7429, 'eval_samples_per_second': 322.801, 'eval_steps_per_second': 40.482, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.569586455821991, 'eval_precision': 0.3302857142857143, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3299086757990867, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 4.6648, 'eval_samples_per_second': 328.202, 'eval_steps_per_second': 41.159, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5753794312477112, 'eval_precision': 0.3264129181084198, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32454128440366975, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 4.6881, 'eval_samples_per_second': 326.568, 'eval_steps_per_second': 40.954, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5776349902153015, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32375366568914954, 'eval_accuracy': 0.9399752952983865, 'eval_runtime': 4.686, 'eval_samples_per_second': 326.717, 'eval_steps_per_second': 40.973, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2402.2276, 'train_samples_per_second': 86.26, 'train_steps_per_second': 5.395, 'total_flos': 1.9842535878870816e+16, 'train_loss': 0.03213831298628155, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9399
  predict_f1                 =     0.2982
  predict_loss               =     0.2179
  predict_precision          =     0.3103
  predict_recall             =     0.2871
  predict_runtime            = 0:00:03.94
  predict_samples_per_second =    322.795
  predict_steps_per_second   =     40.349
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_23.json completed. F1: 0.2982332155477032
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_18.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6353.26 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6972.18 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6880.68 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6947.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7052.02 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7165.05 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6303.67 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6641.85 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6772.81 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7371.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6988.38 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7044.23 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6869.14 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2841, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2097204625606537, 'eval_precision': 0.25405405405405407, 'eval_recall': 0.16077537058152794, 'eval_f1': 0.19692737430167595, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 2.3859, 'eval_samples_per_second': 641.684, 'eval_steps_per_second': 80.472, 'epoch': 1.0}
{'loss': 0.1894, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.20706041157245636, 'eval_precision': 0.2863568215892054, 'eval_recall': 0.217787913340935, 'eval_f1': 0.24740932642487043, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 2.3698, 'eval_samples_per_second': 646.033, 'eval_steps_per_second': 81.018, 'epoch': 2.0}
{'loss': 0.1388, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.22070269286632538, 'eval_precision': 0.27163198247535597, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2770949720670391, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3651, 'eval_samples_per_second': 647.341, 'eval_steps_per_second': 81.182, 'epoch': 3.0}
{'loss': 0.1027, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2532832622528076, 'eval_precision': 0.2872444011684518, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3098739495798319, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.281, 'eval_steps_per_second': 81.3, 'epoch': 4.0}
{'loss': 0.0723, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.28113749623298645, 'eval_precision': 0.27647714604236345, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.27959413754227735, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.183, 'eval_steps_per_second': 81.162, 'epoch': 5.0}
{'loss': 0.0521, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.3046816289424896, 'eval_precision': 0.28249744114636643, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2977346278317152, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.878, 'eval_steps_per_second': 81.375, 'epoch': 6.0}
{'loss': 0.0379, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.34045350551605225, 'eval_precision': 0.28467908902691513, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2984264785675529, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.19, 'eval_steps_per_second': 81.163, 'epoch': 7.0}
{'loss': 0.0294, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.375407338142395, 'eval_precision': 0.2944111776447106, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3139968068121341, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.952, 'eval_steps_per_second': 81.384, 'epoch': 8.0}
{'loss': 0.0201, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3961854577064514, 'eval_precision': 0.27053140096618356, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.29288702928870297, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3662, 'eval_samples_per_second': 647.037, 'eval_steps_per_second': 81.144, 'epoch': 9.0}
{'loss': 0.0151, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.4120081961154938, 'eval_precision': 0.2924944812362031, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29725182277061135, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3678, 'eval_samples_per_second': 646.586, 'eval_steps_per_second': 81.087, 'epoch': 10.0}
{'loss': 0.0107, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.43121907114982605, 'eval_precision': 0.2981366459627329, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3125339120998372, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.488, 'eval_steps_per_second': 80.95, 'epoch': 11.0}
{'loss': 0.009, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.45547255873680115, 'eval_precision': 0.3033067274800456, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3033067274800456, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.905, 'eval_steps_per_second': 81.253, 'epoch': 12.0}
{'loss': 0.0071, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.4710979461669922, 'eval_precision': 0.2870662460567823, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2986870897155361, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3782, 'eval_samples_per_second': 643.776, 'eval_steps_per_second': 80.735, 'epoch': 13.0}
{'loss': 0.006, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.4679291546344757, 'eval_precision': 0.3019911504424779, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.3065693430656935, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3645, 'eval_samples_per_second': 647.482, 'eval_steps_per_second': 81.2, 'epoch': 14.0}
{'loss': 0.0043, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.48990851640701294, 'eval_precision': 0.2832832832832833, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3017057569296375, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3637, 'eval_samples_per_second': 647.726, 'eval_steps_per_second': 81.23, 'epoch': 15.0}
{'loss': 0.0034, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.4946589171886444, 'eval_precision': 0.29641350210970463, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30794520547945203, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.755, 'eval_steps_per_second': 81.234, 'epoch': 16.0}
{'loss': 0.0031, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.5153250694274902, 'eval_precision': 0.2972699696663296, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31511254019292606, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.258, 'eval_steps_per_second': 81.297, 'epoch': 17.0}
{'loss': 0.0025, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.5134350061416626, 'eval_precision': 0.28714859437751006, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3053924185798185, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.221, 'eval_steps_per_second': 81.292, 'epoch': 18.0}
{'loss': 0.0017, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.5290094614028931, 'eval_precision': 0.30620985010706636, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.315847598012148, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.438, 'eval_steps_per_second': 81.194, 'epoch': 19.0}
{'loss': 0.0015, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.5285913944244385, 'eval_precision': 0.3059210526315789, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31190609278926773, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.3604, 'eval_samples_per_second': 648.608, 'eval_steps_per_second': 81.341, 'epoch': 20.0}
{'loss': 0.0013, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.5380176305770874, 'eval_precision': 0.3119047619047619, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3051834595224229, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.4265, 'eval_samples_per_second': 630.946, 'eval_steps_per_second': 79.126, 'epoch': 21.0}
{'loss': 0.0009, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5356902480125427, 'eval_precision': 0.3127035830618892, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.32035595105672965, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.809, 'eval_steps_per_second': 81.617, 'epoch': 22.0}
{'loss': 0.0009, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.5368192791938782, 'eval_precision': 0.3107960741548528, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31772575250836116, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.79, 'eval_steps_per_second': 81.614, 'epoch': 23.0}
{'loss': 0.0008, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5374352335929871, 'eval_precision': 0.3122923588039867, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.31685393258426964, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.931, 'eval_steps_per_second': 81.632, 'epoch': 24.0}
{'train_runtime': 1041.964, 'train_samples_per_second': 198.871, 'train_steps_per_second': 12.438, 'train_loss': 0.04145375528591282, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0415
  train_runtime            = 0:17:21.96
  train_samples            =       8634
  train_samples_per_second =    198.871
  train_steps_per_second   =     12.438
[{'loss': 0.2841, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.2097204625606537, 'eval_precision': 0.25405405405405407, 'eval_recall': 0.16077537058152794, 'eval_f1': 0.19692737430167595, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 2.3859, 'eval_samples_per_second': 641.684, 'eval_steps_per_second': 80.472, 'epoch': 1.0, 'step': 540}, {'loss': 0.1894, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.20706041157245636, 'eval_precision': 0.2863568215892054, 'eval_recall': 0.217787913340935, 'eval_f1': 0.24740932642487043, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 2.3698, 'eval_samples_per_second': 646.033, 'eval_steps_per_second': 81.018, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1388, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.22070269286632538, 'eval_precision': 0.27163198247535597, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.2770949720670391, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.3651, 'eval_samples_per_second': 647.341, 'eval_steps_per_second': 81.182, 'epoch': 3.0, 'step': 1620}, {'loss': 0.1027, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.2532832622528076, 'eval_precision': 0.2872444011684518, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3098739495798319, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.281, 'eval_steps_per_second': 81.3, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0723, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.28113749623298645, 'eval_precision': 0.27647714604236345, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.27959413754227735, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.183, 'eval_steps_per_second': 81.162, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0521, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.3046816289424896, 'eval_precision': 0.28249744114636643, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2977346278317152, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.878, 'eval_steps_per_second': 81.375, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0379, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.34045350551605225, 'eval_precision': 0.28467908902691513, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2984264785675529, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.19, 'eval_steps_per_second': 81.163, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0294, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.375407338142395, 'eval_precision': 0.2944111776447106, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3139968068121341, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.952, 'eval_steps_per_second': 81.384, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0201, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.3961854577064514, 'eval_precision': 0.27053140096618356, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.29288702928870297, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3662, 'eval_samples_per_second': 647.037, 'eval_steps_per_second': 81.144, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0151, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.4120081961154938, 'eval_precision': 0.2924944812362031, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.29725182277061135, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3678, 'eval_samples_per_second': 646.586, 'eval_steps_per_second': 81.087, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0107, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.43121907114982605, 'eval_precision': 0.2981366459627329, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3125339120998372, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3718, 'eval_samples_per_second': 645.488, 'eval_steps_per_second': 80.95, 'epoch': 11.0, 'step': 5940}, {'loss': 0.009, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.45547255873680115, 'eval_precision': 0.3033067274800456, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3033067274800456, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.905, 'eval_steps_per_second': 81.253, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0071, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.4710979461669922, 'eval_precision': 0.2870662460567823, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2986870897155361, 'eval_accuracy': 0.9354589670346638, 'eval_runtime': 2.3782, 'eval_samples_per_second': 643.776, 'eval_steps_per_second': 80.735, 'epoch': 13.0, 'step': 7020}, {'loss': 0.006, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.4679291546344757, 'eval_precision': 0.3019911504424779, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.3065693430656935, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3645, 'eval_samples_per_second': 647.482, 'eval_steps_per_second': 81.2, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0043, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.48990851640701294, 'eval_precision': 0.2832832832832833, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3017057569296375, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 2.3637, 'eval_samples_per_second': 647.726, 'eval_steps_per_second': 81.23, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0034, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.4946589171886444, 'eval_precision': 0.29641350210970463, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.30794520547945203, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.755, 'eval_steps_per_second': 81.234, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0031, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.5153250694274902, 'eval_precision': 0.2972699696663296, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31511254019292606, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3617, 'eval_samples_per_second': 648.258, 'eval_steps_per_second': 81.297, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0025, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.5134350061416626, 'eval_precision': 0.28714859437751006, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3053924185798185, 'eval_accuracy': 0.9339149231838184, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.221, 'eval_steps_per_second': 81.292, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0017, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5290094614028931, 'eval_precision': 0.30620985010706636, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.315847598012148, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.438, 'eval_steps_per_second': 81.194, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0015, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5285913944244385, 'eval_precision': 0.3059210526315789, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31190609278926773, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.3604, 'eval_samples_per_second': 648.608, 'eval_steps_per_second': 81.341, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0013, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.5380176305770874, 'eval_precision': 0.3119047619047619, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.3051834595224229, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.4265, 'eval_samples_per_second': 630.946, 'eval_steps_per_second': 79.126, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0009, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.5356902480125427, 'eval_precision': 0.3127035830618892, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.32035595105672965, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.809, 'eval_steps_per_second': 81.617, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0009, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5368192791938782, 'eval_precision': 0.3107960741548528, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31772575250836116, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.79, 'eval_steps_per_second': 81.614, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0008, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5374352335929871, 'eval_precision': 0.3122923588039867, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.31685393258426964, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.931, 'eval_steps_per_second': 81.632, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1041.964, 'train_samples_per_second': 198.871, 'train_steps_per_second': 12.438, 'total_flos': 6897940449212160.0, 'train_loss': 0.04145375528591282, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9411
  predict_f1                 =     0.2537
  predict_loss               =     0.2143
  predict_precision          =     0.2964
  predict_recall             =     0.2218
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =    644.522
  predict_steps_per_second   =     80.565
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_18.json completed. F1: 0.2536964980544747
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_13.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_13.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6008.95 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6825.19 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6822.02 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6944.00 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7033.97 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7181.28 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7363.90 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6440.75 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6786.70 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7454.79 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7087.58 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7125.11 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6918.77 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4162, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.2006734013557434, 'eval_precision': 0.204739336492891, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.2236024844720497, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 5.7114, 'eval_samples_per_second': 268.058, 'eval_steps_per_second': 33.617, 'epoch': 1.0}
{'loss': 0.1781, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.16374406218528748, 'eval_precision': 0.5140324963072378, 'eval_recall': 0.39680729760547323, 'eval_f1': 0.44787644787644787, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 5.7112, 'eval_samples_per_second': 268.071, 'eval_steps_per_second': 33.618, 'epoch': 2.0}
{'loss': 0.1156, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.1719880998134613, 'eval_precision': 0.459837019790454, 'eval_recall': 0.45039908779931587, 'eval_f1': 0.45506912442396313, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 5.6907, 'eval_samples_per_second': 269.037, 'eval_steps_per_second': 33.739, 'epoch': 3.0}
{'loss': 0.0727, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.19709958136081696, 'eval_precision': 0.5707133917396746, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5441527446300716, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 5.6854, 'eval_samples_per_second': 269.286, 'eval_steps_per_second': 33.771, 'epoch': 4.0}
{'loss': 0.0414, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.20589956641197205, 'eval_precision': 0.5441176470588235, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5462805224304371, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 5.6866, 'eval_samples_per_second': 269.231, 'eval_steps_per_second': 33.764, 'epoch': 5.0}
{'loss': 0.0241, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.22919602692127228, 'eval_precision': 0.5169578622816033, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5437837837837838, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.742, 'eval_steps_per_second': 33.702, 'epoch': 6.0}
{'loss': 0.0145, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.260131299495697, 'eval_precision': 0.5064039408866995, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5433403805496828, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 5.6911, 'eval_samples_per_second': 269.015, 'eval_steps_per_second': 33.737, 'epoch': 7.0}
{'loss': 0.0092, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.2668832242488861, 'eval_precision': 0.5419426048565121, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5507571508693212, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 5.7001, 'eval_samples_per_second': 268.59, 'eval_steps_per_second': 33.683, 'epoch': 8.0}
{'loss': 0.0054, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.28548765182495117, 'eval_precision': 0.5073891625615764, 'eval_recall': 0.5872291904218928, 'eval_f1': 0.5443974630021142, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 5.6898, 'eval_samples_per_second': 269.077, 'eval_steps_per_second': 33.744, 'epoch': 9.0}
{'loss': 0.0037, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.2957576811313629, 'eval_precision': 0.551487414187643, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5505425471159338, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 5.7008, 'eval_samples_per_second': 268.558, 'eval_steps_per_second': 33.679, 'epoch': 10.0}
{'loss': 0.0028, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.3114349842071533, 'eval_precision': 0.5656324582338902, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5527696793002914, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 5.6754, 'eval_samples_per_second': 269.762, 'eval_steps_per_second': 33.83, 'epoch': 11.0}
{'loss': 0.0025, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.31662285327911377, 'eval_precision': 0.5697808535178778, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.56651376146789, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 5.6852, 'eval_samples_per_second': 269.294, 'eval_steps_per_second': 33.772, 'epoch': 12.0}
{'loss': 0.0016, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.32457491755485535, 'eval_precision': 0.5473118279569893, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5633646928610958, 'eval_accuracy': 0.9528294603566742, 'eval_runtime': 5.7046, 'eval_samples_per_second': 268.381, 'eval_steps_per_second': 33.657, 'epoch': 13.0}
{'loss': 0.0014, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.34194082021713257, 'eval_precision': 0.5677966101694916, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.55079271873165, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.832, 'eval_steps_per_second': 33.714, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.3688567280769348, 'eval_precision': 0.5572082379862701, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5562535693889206, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 5.6898, 'eval_samples_per_second': 269.076, 'eval_steps_per_second': 33.744, 'epoch': 15.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.37667134404182434, 'eval_precision': 0.5941101152368758, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5597104945717734, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 5.6885, 'eval_samples_per_second': 269.141, 'eval_steps_per_second': 33.752, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.3723738491535187, 'eval_precision': 0.5578465063001146, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5565714285714286, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 5.6952, 'eval_samples_per_second': 268.823, 'eval_steps_per_second': 33.713, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.37052279710769653, 'eval_precision': 0.5646651270207852, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5611015490533562, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 5.6995, 'eval_samples_per_second': 268.618, 'eval_steps_per_second': 33.687, 'epoch': 18.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.37368836998939514, 'eval_precision': 0.5517241379310345, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5585585585585585, 'eval_accuracy': 0.9540260943410793, 'eval_runtime': 5.6868, 'eval_samples_per_second': 269.22, 'eval_steps_per_second': 33.762, 'epoch': 19.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.36891162395477295, 'eval_precision': 0.5612472160356348, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.567887323943662, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.6904, 'eval_samples_per_second': 269.048, 'eval_steps_per_second': 33.741, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.37611618638038635, 'eval_precision': 0.5549389567147613, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.562429696287964, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.879, 'eval_steps_per_second': 33.72, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.384412556886673, 'eval_precision': 0.5675990675990676, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5613832853025937, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 5.6878, 'eval_samples_per_second': 269.173, 'eval_steps_per_second': 33.756, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.3883037567138672, 'eval_precision': 0.5715962441314554, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5633314054366687, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 5.6999, 'eval_samples_per_second': 268.602, 'eval_steps_per_second': 33.685, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.38896816968917847, 'eval_precision': 0.5602272727272727, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5611838360842345, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 5.6827, 'eval_samples_per_second': 269.414, 'eval_steps_per_second': 33.787, 'epoch': 24.0}
{'train_runtime': 2616.5074, 'train_samples_per_second': 79.196, 'train_steps_per_second': 4.953, 'train_loss': 0.03734460797988706, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0373
  train_runtime            = 0:43:36.50
  train_samples            =       8634
  train_samples_per_second =     79.196
  train_steps_per_second   =      4.953
[{'loss': 0.4162, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.2006734013557434, 'eval_precision': 0.204739336492891, 'eval_recall': 0.24629418472063855, 'eval_f1': 0.2236024844720497, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 5.7114, 'eval_samples_per_second': 268.058, 'eval_steps_per_second': 33.617, 'epoch': 1.0, 'step': 540}, {'loss': 0.1781, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.16374406218528748, 'eval_precision': 0.5140324963072378, 'eval_recall': 0.39680729760547323, 'eval_f1': 0.44787644787644787, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 5.7112, 'eval_samples_per_second': 268.071, 'eval_steps_per_second': 33.618, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1156, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.1719880998134613, 'eval_precision': 0.459837019790454, 'eval_recall': 0.45039908779931587, 'eval_f1': 0.45506912442396313, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 5.6907, 'eval_samples_per_second': 269.037, 'eval_steps_per_second': 33.739, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0727, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.19709958136081696, 'eval_precision': 0.5707133917396746, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5441527446300716, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 5.6854, 'eval_samples_per_second': 269.286, 'eval_steps_per_second': 33.771, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0414, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.20589956641197205, 'eval_precision': 0.5441176470588235, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5462805224304371, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 5.6866, 'eval_samples_per_second': 269.231, 'eval_steps_per_second': 33.764, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0241, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.22919602692127228, 'eval_precision': 0.5169578622816033, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5437837837837838, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.742, 'eval_steps_per_second': 33.702, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0145, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.260131299495697, 'eval_precision': 0.5064039408866995, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5433403805496828, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 5.6911, 'eval_samples_per_second': 269.015, 'eval_steps_per_second': 33.737, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0092, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.2668832242488861, 'eval_precision': 0.5419426048565121, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5507571508693212, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 5.7001, 'eval_samples_per_second': 268.59, 'eval_steps_per_second': 33.683, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0054, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.28548765182495117, 'eval_precision': 0.5073891625615764, 'eval_recall': 0.5872291904218928, 'eval_f1': 0.5443974630021142, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 5.6898, 'eval_samples_per_second': 269.077, 'eval_steps_per_second': 33.744, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0037, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.2957576811313629, 'eval_precision': 0.551487414187643, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5505425471159338, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 5.7008, 'eval_samples_per_second': 268.558, 'eval_steps_per_second': 33.679, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0028, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.3114349842071533, 'eval_precision': 0.5656324582338902, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5527696793002914, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 5.6754, 'eval_samples_per_second': 269.762, 'eval_steps_per_second': 33.83, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0025, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.31662285327911377, 'eval_precision': 0.5697808535178778, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.56651376146789, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 5.6852, 'eval_samples_per_second': 269.294, 'eval_steps_per_second': 33.772, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0016, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.32457491755485535, 'eval_precision': 0.5473118279569893, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5633646928610958, 'eval_accuracy': 0.9528294603566742, 'eval_runtime': 5.7046, 'eval_samples_per_second': 268.381, 'eval_steps_per_second': 33.657, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0014, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.34194082021713257, 'eval_precision': 0.5677966101694916, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.55079271873165, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.832, 'eval_steps_per_second': 33.714, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0011, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3688567280769348, 'eval_precision': 0.5572082379862701, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5562535693889206, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 5.6898, 'eval_samples_per_second': 269.076, 'eval_steps_per_second': 33.744, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.37667134404182434, 'eval_precision': 0.5941101152368758, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5597104945717734, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 5.6885, 'eval_samples_per_second': 269.141, 'eval_steps_per_second': 33.752, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0012, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.3723738491535187, 'eval_precision': 0.5578465063001146, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5565714285714286, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 5.6952, 'eval_samples_per_second': 268.823, 'eval_steps_per_second': 33.713, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0009, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.37052279710769653, 'eval_precision': 0.5646651270207852, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5611015490533562, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 5.6995, 'eval_samples_per_second': 268.618, 'eval_steps_per_second': 33.687, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.37368836998939514, 'eval_precision': 0.5517241379310345, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5585585585585585, 'eval_accuracy': 0.9540260943410793, 'eval_runtime': 5.6868, 'eval_samples_per_second': 269.22, 'eval_steps_per_second': 33.762, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.36891162395477295, 'eval_precision': 0.5612472160356348, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.567887323943662, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.6904, 'eval_samples_per_second': 269.048, 'eval_steps_per_second': 33.741, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0004, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.37611618638038635, 'eval_precision': 0.5549389567147613, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.562429696287964, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.879, 'eval_steps_per_second': 33.72, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.384412556886673, 'eval_precision': 0.5675990675990676, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5613832853025937, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 5.6878, 'eval_samples_per_second': 269.173, 'eval_steps_per_second': 33.756, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0005, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.3883037567138672, 'eval_precision': 0.5715962441314554, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5633314054366687, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 5.6999, 'eval_samples_per_second': 268.602, 'eval_steps_per_second': 33.685, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.38896816968917847, 'eval_precision': 0.5602272727272727, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5611838360842345, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 5.6827, 'eval_samples_per_second': 269.414, 'eval_steps_per_second': 33.787, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2616.5074, 'train_samples_per_second': 79.196, 'train_steps_per_second': 4.953, 'total_flos': 2.054990708407374e+16, 'train_loss': 0.03734460797988706, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9533
  predict_f1                 =     0.4313
  predict_loss               =     0.1705
  predict_precision          =     0.5222
  predict_recall             =     0.3673
  predict_runtime            = 0:00:04.77
  predict_samples_per_second =    266.396
  predict_steps_per_second   =     33.299
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_13.json completed. F1: 0.43130990415335463
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_18.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6291.80 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6969.80 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6882.72 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6969.28 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7046.10 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7189.85 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6323.07 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6674.22 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6799.78 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7403.41 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7036.08 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7071.67 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6885.64 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NB-BERT_base/checkpoint-540 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2099, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.153870090842247, 'eval_precision': 0.45977011494252873, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.45792787635947335, 'eval_accuracy': 0.9487763452482051, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.095, 'eval_steps_per_second': 81.402, 'epoch': 1.0}
{'loss': 0.1302, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.14927104115486145, 'eval_precision': 0.5246523388116309, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.49760191846522783, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.339, 'eval_steps_per_second': 81.558, 'epoch': 2.0}
{'loss': 0.0841, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1745528131723404, 'eval_precision': 0.4235993208828523, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.48564476885644775, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.696, 'eval_steps_per_second': 81.477, 'epoch': 3.0}
{'loss': 0.0513, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21294404566287994, 'eval_precision': 0.4887940234791889, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5049614112458655, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.601, 'eval_steps_per_second': 81.465, 'epoch': 4.0}
{'loss': 0.0312, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.22671012580394745, 'eval_precision': 0.44986200551977923, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49796334012219956, 'eval_accuracy': 0.9448390334285494, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.704, 'eval_steps_per_second': 81.604, 'epoch': 5.0}
{'loss': 0.02, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2681204378604889, 'eval_precision': 0.49032992036405004, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.4908883826879271, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.81, 'eval_steps_per_second': 81.742, 'epoch': 6.0}
{'loss': 0.0147, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.27356404066085815, 'eval_precision': 0.5054229934924078, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5180655919955531, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.677, 'eval_steps_per_second': 81.224, 'epoch': 7.0}
{'loss': 0.0105, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.30054235458374023, 'eval_precision': 0.507361268403171, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.509090909090909, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.165, 'eval_steps_per_second': 81.662, 'epoch': 8.0}
{'loss': 0.007, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.33204030990600586, 'eval_precision': 0.45454545454545453, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.49663735126745995, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.318, 'eval_steps_per_second': 81.555, 'epoch': 9.0}
{'loss': 0.0055, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3243515193462372, 'eval_precision': 0.474216380182002, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.502679528403001, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.355, 'eval_samples_per_second': 650.111, 'eval_steps_per_second': 81.529, 'epoch': 10.0}
{'loss': 0.0049, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3562055230140686, 'eval_precision': 0.5011337868480725, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5025582717453099, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.407, 'eval_steps_per_second': 81.692, 'epoch': 11.0}
{'loss': 0.0045, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.35978585481643677, 'eval_precision': 0.5333333333333333, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5218404193360512, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.69, 'eval_steps_per_second': 81.853, 'epoch': 12.0}
{'loss': 0.0027, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.37128686904907227, 'eval_precision': 0.5060773480662983, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5140291806958474, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.421, 'eval_steps_per_second': 81.568, 'epoch': 13.0}
{'loss': 0.0026, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.37955382466316223, 'eval_precision': 0.48493975903614456, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5157501334757073, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.027, 'eval_steps_per_second': 81.519, 'epoch': 14.0}
{'loss': 0.0023, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3953820466995239, 'eval_precision': 0.4807692307692308, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5216484089723527, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.465, 'eval_steps_per_second': 81.448, 'epoch': 15.0}
{'loss': 0.0022, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.39257383346557617, 'eval_precision': 0.47332686711930166, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5115303983228512, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.166, 'eval_steps_per_second': 81.662, 'epoch': 16.0}
{'loss': 0.0011, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.40450146794319153, 'eval_precision': 0.4983277591973244, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.503945885005637, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 2.3533, 'eval_samples_per_second': 650.571, 'eval_steps_per_second': 81.587, 'epoch': 17.0}
{'loss': 0.0023, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.38642439246177673, 'eval_precision': 0.5058949624866024, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5215469613259669, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.856, 'eval_steps_per_second': 81.623, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.4187942147254944, 'eval_precision': 0.5197802197802198, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5293788472299945, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.876, 'eval_steps_per_second': 81.625, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.42043033242225647, 'eval_precision': 0.5288574793875147, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5202780996523755, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.3554, 'eval_samples_per_second': 649.999, 'eval_steps_per_second': 81.515, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.4283875524997711, 'eval_precision': 0.4984126984126984, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5170142700329308, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.4182, 'eval_samples_per_second': 633.115, 'eval_steps_per_second': 79.398, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.427776962518692, 'eval_precision': 0.5252643948296122, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.517361111111111, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.808, 'eval_steps_per_second': 81.867, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.427951455116272, 'eval_precision': 0.5214994487320838, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.530269058295964, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.329, 'eval_steps_per_second': 81.682, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4280789792537689, 'eval_precision': 0.5163398692810458, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5281337047353761, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.586, 'eval_steps_per_second': 81.714, 'epoch': 24.0}
{'train_runtime': 1025.3623, 'train_samples_per_second': 202.091, 'train_steps_per_second': 12.639, 'train_loss': 0.024588178562713257, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0246
  train_runtime            = 0:17:05.36
  train_samples            =       8634
  train_samples_per_second =    202.091
  train_steps_per_second   =     12.639
[{'loss': 0.2099, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.153870090842247, 'eval_precision': 0.45977011494252873, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.45792787635947335, 'eval_accuracy': 0.9487763452482051, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.095, 'eval_steps_per_second': 81.402, 'epoch': 1.0, 'step': 540}, {'loss': 0.1302, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.14927104115486145, 'eval_precision': 0.5246523388116309, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.49760191846522783, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.339, 'eval_steps_per_second': 81.558, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0841, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.1745528131723404, 'eval_precision': 0.4235993208828523, 'eval_recall': 0.5689851767388826, 'eval_f1': 0.48564476885644775, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.696, 'eval_steps_per_second': 81.477, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0513, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.21294404566287994, 'eval_precision': 0.4887940234791889, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5049614112458655, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.601, 'eval_steps_per_second': 81.465, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0312, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.22671012580394745, 'eval_precision': 0.44986200551977923, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49796334012219956, 'eval_accuracy': 0.9448390334285494, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.704, 'eval_steps_per_second': 81.604, 'epoch': 5.0, 'step': 2700}, {'loss': 0.02, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.2681204378604889, 'eval_precision': 0.49032992036405004, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.4908883826879271, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.81, 'eval_steps_per_second': 81.742, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0147, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.27356404066085815, 'eval_precision': 0.5054229934924078, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5180655919955531, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.3638, 'eval_samples_per_second': 647.677, 'eval_steps_per_second': 81.224, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0105, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.30054235458374023, 'eval_precision': 0.507361268403171, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.509090909090909, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.165, 'eval_steps_per_second': 81.662, 'epoch': 8.0, 'step': 4320}, {'loss': 0.007, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.33204030990600586, 'eval_precision': 0.45454545454545453, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.49663735126745995, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.318, 'eval_steps_per_second': 81.555, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0055, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3243515193462372, 'eval_precision': 0.474216380182002, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.502679528403001, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.355, 'eval_samples_per_second': 650.111, 'eval_steps_per_second': 81.529, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0049, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.3562055230140686, 'eval_precision': 0.5011337868480725, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5025582717453099, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.407, 'eval_steps_per_second': 81.692, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0045, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.35978585481643677, 'eval_precision': 0.5333333333333333, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5218404193360512, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.69, 'eval_steps_per_second': 81.853, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0027, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.37128686904907227, 'eval_precision': 0.5060773480662983, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5140291806958474, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.421, 'eval_steps_per_second': 81.568, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0026, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.37955382466316223, 'eval_precision': 0.48493975903614456, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5157501334757073, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3553, 'eval_samples_per_second': 650.027, 'eval_steps_per_second': 81.519, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0023, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3953820466995239, 'eval_precision': 0.4807692307692308, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5216484089723527, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3573, 'eval_samples_per_second': 649.465, 'eval_steps_per_second': 81.448, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0022, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.39257383346557617, 'eval_precision': 0.47332686711930166, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5115303983228512, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.166, 'eval_steps_per_second': 81.662, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0011, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.40450146794319153, 'eval_precision': 0.4983277591973244, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.503945885005637, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 2.3533, 'eval_samples_per_second': 650.571, 'eval_steps_per_second': 81.587, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0023, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.38642439246177673, 'eval_precision': 0.5058949624866024, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5215469613259669, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.856, 'eval_steps_per_second': 81.623, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.4187942147254944, 'eval_precision': 0.5197802197802198, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5293788472299945, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.876, 'eval_steps_per_second': 81.625, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.42043033242225647, 'eval_precision': 0.5288574793875147, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5202780996523755, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.3554, 'eval_samples_per_second': 649.999, 'eval_steps_per_second': 81.515, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.4283875524997711, 'eval_precision': 0.4984126984126984, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5170142700329308, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.4182, 'eval_samples_per_second': 633.115, 'eval_steps_per_second': 79.398, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0004, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.427776962518692, 'eval_precision': 0.5252643948296122, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.517361111111111, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.808, 'eval_steps_per_second': 81.867, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.427951455116272, 'eval_precision': 0.5214994487320838, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.530269058295964, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.329, 'eval_steps_per_second': 81.682, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.4280789792537689, 'eval_precision': 0.5163398692810458, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5281337047353761, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.586, 'eval_steps_per_second': 81.714, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1025.3623, 'train_samples_per_second': 202.091, 'train_steps_per_second': 12.639, 'total_flos': 6897441587961600.0, 'train_loss': 0.024588178562713257, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9538
  predict_f1                 =     0.4827
  predict_loss               =     0.1485
  predict_precision          =     0.5256
  predict_recall             =     0.4463
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    649.929
  predict_steps_per_second   =     81.241
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_18.json completed. F1: 0.4827078734363503
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_36.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6100.07 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6857.72 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6793.74 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6885.26 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6891.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7021.50 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7227.79 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6317.02 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6686.22 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7374.83 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7000.65 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7038.20 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6833.97 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.1943, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.7365773916244507, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1892, 'eval_samples_per_second': 480.055, 'eval_steps_per_second': 60.203, 'epoch': 1.0}
{'loss': 0.514, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.37216073274612427, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9583, 'eval_samples_per_second': 517.521, 'eval_steps_per_second': 64.901, 'epoch': 2.0}
{'loss': 0.3109, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.2439723163843155, 'eval_precision': 0.12323943661971831, 'eval_recall': 0.039908779931584946, 'eval_f1': 0.06029285099052541, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.9669, 'eval_samples_per_second': 516.026, 'eval_steps_per_second': 64.714, 'epoch': 3.0}
{'loss': 0.2287, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.21004760265350342, 'eval_precision': 0.205607476635514, 'eval_recall': 0.17559863169897377, 'eval_f1': 0.1894218942189422, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.217, 'eval_steps_per_second': 64.989, 'epoch': 4.0}
{'loss': 0.191, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.19193220138549805, 'eval_precision': 0.4240583232077764, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.41058823529411764, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.557, 'eval_steps_per_second': 65.031, 'epoch': 5.0}
{'loss': 0.1492, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.182781383395195, 'eval_precision': 0.4635678391959799, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.4411237298266587, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.9372, 'eval_samples_per_second': 521.238, 'eval_steps_per_second': 65.368, 'epoch': 6.0}
{'loss': 0.1238, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.18449972569942474, 'eval_precision': 0.46382428940568476, 'eval_recall': 0.40935005701254273, 'eval_f1': 0.4348879466989703, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.9381, 'eval_samples_per_second': 521.091, 'eval_steps_per_second': 65.349, 'epoch': 7.0}
{'loss': 0.1062, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.18992745876312256, 'eval_precision': 0.4469606674612634, 'eval_recall': 0.427594070695553, 'eval_f1': 0.4370629370629371, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.9373, 'eval_samples_per_second': 521.219, 'eval_steps_per_second': 65.365, 'epoch': 8.0}
{'loss': 0.0881, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.19017712771892548, 'eval_precision': 0.4865735767991407, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5011061946902654, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.9335, 'eval_samples_per_second': 521.911, 'eval_steps_per_second': 65.452, 'epoch': 9.0}
{'loss': 0.0745, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.18736200034618378, 'eval_precision': 0.5176886792452831, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5089855072463768, 'eval_accuracy': 0.95336987570447, 'eval_runtime': 3.0076, 'eval_samples_per_second': 509.041, 'eval_steps_per_second': 63.838, 'epoch': 10.0}
{'loss': 0.0627, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.1917811930179596, 'eval_precision': 0.4952178533475027, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5126512651265127, 'eval_accuracy': 0.9513240176021, 'eval_runtime': 2.9675, 'eval_samples_per_second': 515.914, 'eval_steps_per_second': 64.7, 'epoch': 11.0}
{'loss': 0.0538, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.2004317194223404, 'eval_precision': 0.5016322089227421, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5133630289532294, 'eval_accuracy': 0.9505133945804061, 'eval_runtime': 2.9297, 'eval_samples_per_second': 522.573, 'eval_steps_per_second': 65.535, 'epoch': 12.0}
{'loss': 0.0469, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.2020178735256195, 'eval_precision': 0.5089485458612976, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5138339920948617, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.9295, 'eval_samples_per_second': 522.611, 'eval_steps_per_second': 65.54, 'epoch': 13.0}
{'loss': 0.0407, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.203841432929039, 'eval_precision': 0.5078299776286354, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5127046866177299, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9286, 'eval_samples_per_second': 522.777, 'eval_steps_per_second': 65.561, 'epoch': 14.0}
{'loss': 0.036, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.21244236826896667, 'eval_precision': 0.48462354188759277, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5021978021978022, 'eval_accuracy': 0.9494325638848143, 'eval_runtime': 2.9357, 'eval_samples_per_second': 521.505, 'eval_steps_per_second': 65.401, 'epoch': 15.0}
{'loss': 0.0318, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.21772797405719757, 'eval_precision': 0.483971044467425, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5075921908893709, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.9398, 'eval_samples_per_second': 520.783, 'eval_steps_per_second': 65.311, 'epoch': 16.0}
{'loss': 0.0287, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.22247138619422913, 'eval_precision': 0.4896265560165975, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5127648017381857, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.9498, 'eval_samples_per_second': 519.02, 'eval_steps_per_second': 65.089, 'epoch': 17.0}
{'loss': 0.026, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.22290433943271637, 'eval_precision': 0.4961748633879781, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5066964285714286, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.9346, 'eval_samples_per_second': 521.701, 'eval_steps_per_second': 65.426, 'epoch': 18.0}
{'loss': 0.0243, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.2253103405237198, 'eval_precision': 0.5, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.509782001117943, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.521, 'eval_steps_per_second': 65.278, 'epoch': 19.0}
{'loss': 0.0227, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.22730566561222076, 'eval_precision': 0.5145739910313901, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5189372526851328, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 2.9347, 'eval_samples_per_second': 521.687, 'eval_steps_per_second': 65.424, 'epoch': 20.0}
{'loss': 0.022, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.23120777308940887, 'eval_precision': 0.4945770065075922, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5069483046136742, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.9302, 'eval_samples_per_second': 522.484, 'eval_steps_per_second': 65.524, 'epoch': 21.0}
{'loss': 0.0203, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.23541904985904694, 'eval_precision': 0.4989177489177489, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5119378123264854, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.9313, 'eval_samples_per_second': 522.294, 'eval_steps_per_second': 65.5, 'epoch': 22.0}
{'loss': 0.02, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.23489852249622345, 'eval_precision': 0.493048128342246, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5088300220750551, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 3.0245, 'eval_samples_per_second': 506.194, 'eval_steps_per_second': 63.481, 'epoch': 23.0}
{'loss': 0.0196, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.2347230464220047, 'eval_precision': 0.49730312837108953, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5110864745011087, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.618, 'eval_steps_per_second': 65.415, 'epoch': 24.0}
{'train_runtime': 844.8808, 'train_samples_per_second': 245.261, 'train_steps_per_second': 3.835, 'train_loss': 0.14317375943984514, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1432
  train_runtime            = 0:14:04.88
  train_samples            =       8634
  train_samples_per_second =    245.261
  train_steps_per_second   =      3.835
[{'loss': 1.1943, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.7365773916244507, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1892, 'eval_samples_per_second': 480.055, 'eval_steps_per_second': 60.203, 'epoch': 1.0, 'step': 135}, {'loss': 0.514, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.37216073274612427, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9583, 'eval_samples_per_second': 517.521, 'eval_steps_per_second': 64.901, 'epoch': 2.0, 'step': 270}, {'loss': 0.3109, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2439723163843155, 'eval_precision': 0.12323943661971831, 'eval_recall': 0.039908779931584946, 'eval_f1': 0.06029285099052541, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.9669, 'eval_samples_per_second': 516.026, 'eval_steps_per_second': 64.714, 'epoch': 3.0, 'step': 405}, {'loss': 0.2287, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.21004760265350342, 'eval_precision': 0.205607476635514, 'eval_recall': 0.17559863169897377, 'eval_f1': 0.1894218942189422, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.217, 'eval_steps_per_second': 64.989, 'epoch': 4.0, 'step': 540}, {'loss': 0.191, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.19193220138549805, 'eval_precision': 0.4240583232077764, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.41058823529411764, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.557, 'eval_steps_per_second': 65.031, 'epoch': 5.0, 'step': 675}, {'loss': 0.1492, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.182781383395195, 'eval_precision': 0.4635678391959799, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.4411237298266587, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.9372, 'eval_samples_per_second': 521.238, 'eval_steps_per_second': 65.368, 'epoch': 6.0, 'step': 810}, {'loss': 0.1238, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.18449972569942474, 'eval_precision': 0.46382428940568476, 'eval_recall': 0.40935005701254273, 'eval_f1': 0.4348879466989703, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.9381, 'eval_samples_per_second': 521.091, 'eval_steps_per_second': 65.349, 'epoch': 7.0, 'step': 945}, {'loss': 0.1062, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.18992745876312256, 'eval_precision': 0.4469606674612634, 'eval_recall': 0.427594070695553, 'eval_f1': 0.4370629370629371, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.9373, 'eval_samples_per_second': 521.219, 'eval_steps_per_second': 65.365, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0881, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.19017712771892548, 'eval_precision': 0.4865735767991407, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5011061946902654, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.9335, 'eval_samples_per_second': 521.911, 'eval_steps_per_second': 65.452, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0745, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.18736200034618378, 'eval_precision': 0.5176886792452831, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5089855072463768, 'eval_accuracy': 0.95336987570447, 'eval_runtime': 3.0076, 'eval_samples_per_second': 509.041, 'eval_steps_per_second': 63.838, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0627, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.1917811930179596, 'eval_precision': 0.4952178533475027, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5126512651265127, 'eval_accuracy': 0.9513240176021, 'eval_runtime': 2.9675, 'eval_samples_per_second': 515.914, 'eval_steps_per_second': 64.7, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0538, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2004317194223404, 'eval_precision': 0.5016322089227421, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5133630289532294, 'eval_accuracy': 0.9505133945804061, 'eval_runtime': 2.9297, 'eval_samples_per_second': 522.573, 'eval_steps_per_second': 65.535, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0469, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2020178735256195, 'eval_precision': 0.5089485458612976, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5138339920948617, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.9295, 'eval_samples_per_second': 522.611, 'eval_steps_per_second': 65.54, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0407, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.203841432929039, 'eval_precision': 0.5078299776286354, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5127046866177299, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9286, 'eval_samples_per_second': 522.777, 'eval_steps_per_second': 65.561, 'epoch': 14.0, 'step': 1890}, {'loss': 0.036, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.21244236826896667, 'eval_precision': 0.48462354188759277, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5021978021978022, 'eval_accuracy': 0.9494325638848143, 'eval_runtime': 2.9357, 'eval_samples_per_second': 521.505, 'eval_steps_per_second': 65.401, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0318, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.21772797405719757, 'eval_precision': 0.483971044467425, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5075921908893709, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.9398, 'eval_samples_per_second': 520.783, 'eval_steps_per_second': 65.311, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0287, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.22247138619422913, 'eval_precision': 0.4896265560165975, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5127648017381857, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.9498, 'eval_samples_per_second': 519.02, 'eval_steps_per_second': 65.089, 'epoch': 17.0, 'step': 2295}, {'loss': 0.026, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.22290433943271637, 'eval_precision': 0.4961748633879781, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5066964285714286, 'eval_accuracy': 0.9496641704624411, 'eval_runtime': 2.9346, 'eval_samples_per_second': 521.701, 'eval_steps_per_second': 65.426, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0243, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2253103405237198, 'eval_precision': 0.5, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.509782001117943, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.521, 'eval_steps_per_second': 65.278, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0227, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.22730566561222076, 'eval_precision': 0.5145739910313901, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5189372526851328, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 2.9347, 'eval_samples_per_second': 521.687, 'eval_steps_per_second': 65.424, 'epoch': 20.0, 'step': 2700}, {'loss': 0.022, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.23120777308940887, 'eval_precision': 0.4945770065075922, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5069483046136742, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.9302, 'eval_samples_per_second': 522.484, 'eval_steps_per_second': 65.524, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0203, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.23541904985904694, 'eval_precision': 0.4989177489177489, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5119378123264854, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.9313, 'eval_samples_per_second': 522.294, 'eval_steps_per_second': 65.5, 'epoch': 22.0, 'step': 2970}, {'loss': 0.02, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.23489852249622345, 'eval_precision': 0.493048128342246, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5088300220750551, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 3.0245, 'eval_samples_per_second': 506.194, 'eval_steps_per_second': 63.481, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0196, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.2347230464220047, 'eval_precision': 0.49730312837108953, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5110864745011087, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.618, 'eval_steps_per_second': 65.415, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 844.8808, 'train_samples_per_second': 245.261, 'train_steps_per_second': 3.835, 'total_flos': 7641716291195580.0, 'train_loss': 0.14317375943984514, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9504
  predict_f1                 =     0.4219
  predict_loss               =      0.183
  predict_precision          =     0.4707
  predict_recall             =     0.3823
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.071
  predict_steps_per_second   =     64.384
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_36.json completed. F1: 0.4219219219219219
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_04.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5913.49 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6739.76 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6756.75 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6868.14 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6959.62 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6781.82 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7053.47 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6233.29 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6599.56 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7369.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6979.98 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7105.26 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6884.22 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9822, 'eval_samples_per_second': 513.375, 'eval_steps_per_second': 64.381, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9546, 'eval_samples_per_second': 518.179, 'eval_steps_per_second': 64.984, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9426, 'eval_samples_per_second': 520.283, 'eval_steps_per_second': 65.248, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9611, 'eval_samples_per_second': 517.03, 'eval_steps_per_second': 64.84, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.017, 'eval_steps_per_second': 64.838, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9718, 'eval_samples_per_second': 515.183, 'eval_steps_per_second': 64.608, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.959, 'eval_steps_per_second': 64.831, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.956, 'eval_steps_per_second': 65.332, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.645, 'eval_steps_per_second': 63.161, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.941, 'eval_samples_per_second': 520.573, 'eval_steps_per_second': 65.284, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9588, 'eval_samples_per_second': 517.433, 'eval_steps_per_second': 64.89, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.825, 'eval_steps_per_second': 64.814, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9681, 'eval_samples_per_second': 515.814, 'eval_steps_per_second': 64.687, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.251, 'eval_steps_per_second': 64.742, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9534, 'eval_samples_per_second': 518.378, 'eval_steps_per_second': 65.009, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.942, 'eval_samples_per_second': 520.396, 'eval_steps_per_second': 65.262, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9813, 'eval_samples_per_second': 513.535, 'eval_steps_per_second': 64.402, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9468, 'eval_samples_per_second': 519.542, 'eval_steps_per_second': 65.155, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9762, 'eval_samples_per_second': 514.412, 'eval_steps_per_second': 64.511, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9477, 'eval_samples_per_second': 519.396, 'eval_steps_per_second': 65.137, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9466, 'eval_samples_per_second': 519.58, 'eval_steps_per_second': 65.16, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9599, 'eval_samples_per_second': 517.242, 'eval_steps_per_second': 64.866, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9557, 'eval_samples_per_second': 517.985, 'eval_steps_per_second': 64.96, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9523, 'eval_samples_per_second': 518.585, 'eval_steps_per_second': 65.035, 'epoch': 24.0}
{'train_runtime': 1478.5659, 'train_samples_per_second': 140.147, 'train_steps_per_second': 17.531, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:24:38.56
  train_samples            =       8634
  train_samples_per_second =    140.147
  train_steps_per_second   =     17.531
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9822, 'eval_samples_per_second': 513.375, 'eval_steps_per_second': 64.381, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9546, 'eval_samples_per_second': 518.179, 'eval_steps_per_second': 64.984, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9426, 'eval_samples_per_second': 520.283, 'eval_steps_per_second': 65.248, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9611, 'eval_samples_per_second': 517.03, 'eval_steps_per_second': 64.84, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.017, 'eval_steps_per_second': 64.838, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9718, 'eval_samples_per_second': 515.183, 'eval_steps_per_second': 64.608, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.959, 'eval_steps_per_second': 64.831, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.956, 'eval_steps_per_second': 65.332, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.645, 'eval_steps_per_second': 63.161, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.941, 'eval_samples_per_second': 520.573, 'eval_steps_per_second': 65.284, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9588, 'eval_samples_per_second': 517.433, 'eval_steps_per_second': 64.89, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9623, 'eval_samples_per_second': 516.825, 'eval_steps_per_second': 64.814, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9681, 'eval_samples_per_second': 515.814, 'eval_steps_per_second': 64.687, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.251, 'eval_steps_per_second': 64.742, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9534, 'eval_samples_per_second': 518.378, 'eval_steps_per_second': 65.009, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.942, 'eval_samples_per_second': 520.396, 'eval_steps_per_second': 65.262, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9813, 'eval_samples_per_second': 513.535, 'eval_steps_per_second': 64.402, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9468, 'eval_samples_per_second': 519.542, 'eval_steps_per_second': 65.155, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9762, 'eval_samples_per_second': 514.412, 'eval_steps_per_second': 64.511, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9477, 'eval_samples_per_second': 519.396, 'eval_steps_per_second': 65.137, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9466, 'eval_samples_per_second': 519.58, 'eval_steps_per_second': 65.16, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9599, 'eval_samples_per_second': 517.242, 'eval_steps_per_second': 64.866, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9557, 'eval_samples_per_second': 517.985, 'eval_steps_per_second': 64.96, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9523, 'eval_samples_per_second': 518.585, 'eval_steps_per_second': 65.035, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1478.5659, 'train_samples_per_second': 140.147, 'train_steps_per_second': 17.531, 'total_flos': 4945638992624460.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.45
  predict_samples_per_second =    517.635
  predict_steps_per_second   =     64.704
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_04.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_19.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_19.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6234.52 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6958.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6875.96 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7000.65 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7089.79 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7203.06 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7381.65 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6446.55 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6827.09 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7474.95 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7070.80 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7200.99 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6959.91 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NB-BERT_large/checkpoint-540 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1939, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.13837219774723053, 'eval_precision': 0.5037919826652221, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5166666666666666, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6593, 'eval_samples_per_second': 328.593, 'eval_steps_per_second': 41.208, 'epoch': 1.0}
{'loss': 0.1129, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.14354050159454346, 'eval_precision': 0.5741758241758241, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.5208722741433021, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.885, 'eval_steps_per_second': 41.245, 'epoch': 2.0}
{'loss': 0.0678, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.15615175664424896, 'eval_precision': 0.49619771863117873, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5412130637636081, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 4.6614, 'eval_samples_per_second': 328.44, 'eval_steps_per_second': 41.189, 'epoch': 3.0}
{'loss': 0.041, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.1896868199110031, 'eval_precision': 0.5095095095095095, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5426439232409382, 'eval_accuracy': 0.9535628811858257, 'eval_runtime': 4.6541, 'eval_samples_per_second': 328.955, 'eval_steps_per_second': 41.254, 'epoch': 4.0}
{'loss': 0.0219, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2187383770942688, 'eval_precision': 0.4933837429111531, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5395348837209302, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.796, 'eval_steps_per_second': 41.234, 'epoch': 5.0}
{'loss': 0.0119, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.24576449394226074, 'eval_precision': 0.47810858143607704, 'eval_recall': 0.6225769669327252, 'eval_f1': 0.5408618127786032, 'eval_accuracy': 0.9515556241797267, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.062, 'eval_steps_per_second': 41.142, 'epoch': 6.0}
{'loss': 0.009, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.26892825961112976, 'eval_precision': 0.5050200803212851, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5371062466631071, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.973, 'eval_steps_per_second': 41.256, 'epoch': 7.0}
{'loss': 0.0058, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3153362274169922, 'eval_precision': 0.5749674054758801, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5364963503649635, 'eval_accuracy': 0.955647340384467, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.885, 'eval_steps_per_second': 41.245, 'epoch': 8.0}
{'loss': 0.0046, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.2875365912914276, 'eval_precision': 0.5428893905191874, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5456608054452637, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.985, 'eval_steps_per_second': 41.257, 'epoch': 9.0}
{'loss': 0.0034, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3223711848258972, 'eval_precision': 0.5497572815533981, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5326278659611994, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.843, 'eval_steps_per_second': 41.24, 'epoch': 10.0}
{'loss': 0.0022, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3649982213973999, 'eval_precision': 0.5391923990498813, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5282140779522978, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6543, 'eval_samples_per_second': 328.946, 'eval_steps_per_second': 41.253, 'epoch': 11.0}
{'loss': 0.0029, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.36572912335395813, 'eval_precision': 0.5441696113074205, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5353418308227115, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.967, 'eval_steps_per_second': 41.255, 'epoch': 12.0}
{'loss': 0.002, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.38378384709358215, 'eval_precision': 0.5460992907801419, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5362739408009286, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6604, 'eval_samples_per_second': 328.51, 'eval_steps_per_second': 41.198, 'epoch': 13.0}
{'loss': 0.0012, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.3633058965206146, 'eval_precision': 0.5323974082073434, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5468663338879645, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 14.0}
{'loss': 0.0013, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3925609886646271, 'eval_precision': 0.5632603406326034, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5450264861683343, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.6529, 'eval_samples_per_second': 329.04, 'eval_steps_per_second': 41.264, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.4212208092212677, 'eval_precision': 0.5669586983729662, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5405727923627685, 'eval_accuracy': 0.955647340384467, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.965, 'eval_steps_per_second': 41.255, 'epoch': 16.0}
{'loss': 0.0013, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.4013229012489319, 'eval_precision': 0.5362162162162162, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5504994450610433, 'eval_accuracy': 0.9555315370956535, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.643, 'eval_steps_per_second': 41.215, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.4103543162345886, 'eval_precision': 0.5723350253807107, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5417417417417417, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6513, 'eval_samples_per_second': 329.154, 'eval_steps_per_second': 41.279, 'epoch': 18.0}
{'loss': 0.0009, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.41361719369888306, 'eval_precision': 0.5660847880299252, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5407980941036331, 'eval_accuracy': 0.956264957924805, 'eval_runtime': 4.6516, 'eval_samples_per_second': 329.133, 'eval_steps_per_second': 41.276, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.42640385031700134, 'eval_precision': 0.5717791411042945, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5508274231678486, 'eval_accuracy': 0.9573457886203968, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.423, 'eval_steps_per_second': 41.312, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.4245525002479553, 'eval_precision': 0.5585480093676815, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5511265164644714, 'eval_accuracy': 0.9566509688875164, 'eval_runtime': 4.7246, 'eval_samples_per_second': 324.047, 'eval_steps_per_second': 40.638, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4172256290912628, 'eval_precision': 0.5432639649507119, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5541899441340782, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6465, 'eval_samples_per_second': 329.498, 'eval_steps_per_second': 41.322, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.4337867796421051, 'eval_precision': 0.5768757687576875, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5550295857988164, 'eval_accuracy': 0.9574615919092102, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.873, 'eval_steps_per_second': 41.369, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4294906258583069, 'eval_precision': 0.5644599303135889, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5592635212888377, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.647, 'eval_samples_per_second': 329.459, 'eval_steps_per_second': 41.317, 'epoch': 24.0}
{'train_runtime': 2368.4386, 'train_samples_per_second': 87.491, 'train_steps_per_second': 5.472, 'train_loss': 0.020327374844144985, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0203
  train_runtime            = 0:39:28.43
  train_samples            =       8634
  train_samples_per_second =     87.491
  train_steps_per_second   =      5.472
[{'loss': 0.1939, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.13837219774723053, 'eval_precision': 0.5037919826652221, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5166666666666666, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6593, 'eval_samples_per_second': 328.593, 'eval_steps_per_second': 41.208, 'epoch': 1.0, 'step': 540}, {'loss': 0.1129, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.14354050159454346, 'eval_precision': 0.5741758241758241, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.5208722741433021, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.885, 'eval_steps_per_second': 41.245, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0678, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.15615175664424896, 'eval_precision': 0.49619771863117873, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5412130637636081, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 4.6614, 'eval_samples_per_second': 328.44, 'eval_steps_per_second': 41.189, 'epoch': 3.0, 'step': 1620}, {'loss': 0.041, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.1896868199110031, 'eval_precision': 0.5095095095095095, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5426439232409382, 'eval_accuracy': 0.9535628811858257, 'eval_runtime': 4.6541, 'eval_samples_per_second': 328.955, 'eval_steps_per_second': 41.254, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0219, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.2187383770942688, 'eval_precision': 0.4933837429111531, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5395348837209302, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.796, 'eval_steps_per_second': 41.234, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0119, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.24576449394226074, 'eval_precision': 0.47810858143607704, 'eval_recall': 0.6225769669327252, 'eval_f1': 0.5408618127786032, 'eval_accuracy': 0.9515556241797267, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.062, 'eval_steps_per_second': 41.142, 'epoch': 6.0, 'step': 3240}, {'loss': 0.009, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.26892825961112976, 'eval_precision': 0.5050200803212851, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5371062466631071, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.973, 'eval_steps_per_second': 41.256, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0058, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.3153362274169922, 'eval_precision': 0.5749674054758801, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5364963503649635, 'eval_accuracy': 0.955647340384467, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.885, 'eval_steps_per_second': 41.245, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0046, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.2875365912914276, 'eval_precision': 0.5428893905191874, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5456608054452637, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.985, 'eval_steps_per_second': 41.257, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0034, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3223711848258972, 'eval_precision': 0.5497572815533981, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5326278659611994, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.843, 'eval_steps_per_second': 41.24, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0022, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.3649982213973999, 'eval_precision': 0.5391923990498813, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5282140779522978, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6543, 'eval_samples_per_second': 328.946, 'eval_steps_per_second': 41.253, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0029, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.36572912335395813, 'eval_precision': 0.5441696113074205, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5353418308227115, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.967, 'eval_steps_per_second': 41.255, 'epoch': 12.0, 'step': 6480}, {'loss': 0.002, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.38378384709358215, 'eval_precision': 0.5460992907801419, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5362739408009286, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6604, 'eval_samples_per_second': 328.51, 'eval_steps_per_second': 41.198, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0012, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.3633058965206146, 'eval_precision': 0.5323974082073434, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5468663338879645, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0013, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3925609886646271, 'eval_precision': 0.5632603406326034, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5450264861683343, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.6529, 'eval_samples_per_second': 329.04, 'eval_steps_per_second': 41.264, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0011, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.4212208092212677, 'eval_precision': 0.5669586983729662, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5405727923627685, 'eval_accuracy': 0.955647340384467, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.965, 'eval_steps_per_second': 41.255, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0013, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.4013229012489319, 'eval_precision': 0.5362162162162162, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5504994450610433, 'eval_accuracy': 0.9555315370956535, 'eval_runtime': 4.6585, 'eval_samples_per_second': 328.643, 'eval_steps_per_second': 41.215, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.4103543162345886, 'eval_precision': 0.5723350253807107, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5417417417417417, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6513, 'eval_samples_per_second': 329.154, 'eval_steps_per_second': 41.279, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0009, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.41361719369888306, 'eval_precision': 0.5660847880299252, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5407980941036331, 'eval_accuracy': 0.956264957924805, 'eval_runtime': 4.6516, 'eval_samples_per_second': 329.133, 'eval_steps_per_second': 41.276, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0004, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.42640385031700134, 'eval_precision': 0.5717791411042945, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5508274231678486, 'eval_accuracy': 0.9573457886203968, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.423, 'eval_steps_per_second': 41.312, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0004, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.4245525002479553, 'eval_precision': 0.5585480093676815, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5511265164644714, 'eval_accuracy': 0.9566509688875164, 'eval_runtime': 4.7246, 'eval_samples_per_second': 324.047, 'eval_steps_per_second': 40.638, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0004, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.4172256290912628, 'eval_precision': 0.5432639649507119, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5541899441340782, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6465, 'eval_samples_per_second': 329.498, 'eval_steps_per_second': 41.322, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.4337867796421051, 'eval_precision': 0.5768757687576875, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5550295857988164, 'eval_accuracy': 0.9574615919092102, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.873, 'eval_steps_per_second': 41.369, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.4294906258583069, 'eval_precision': 0.5644599303135889, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5592635212888377, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.647, 'eval_samples_per_second': 329.459, 'eval_steps_per_second': 41.317, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2368.4386, 'train_samples_per_second': 87.491, 'train_steps_per_second': 5.472, 'total_flos': 1.9841997686762016e+16, 'train_loss': 0.020327374844144985, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9516
  predict_f1                 =     0.5043
  predict_loss               =     0.1531
  predict_precision          =     0.4935
  predict_recall             =     0.5156
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.994
  predict_steps_per_second   =     40.624
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_19.json completed. F1: 0.5043246839654025
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_07.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5671.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6675.13 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6722.14 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6886.62 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7003.22 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6782.31 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7081.27 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6268.48 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6615.92 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7438.83 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7074.76 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7154.52 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6980.45 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1861, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.13954411447048187, 'eval_precision': 0.5258264462809917, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5517615176151762, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.6636, 'eval_samples_per_second': 328.29, 'eval_steps_per_second': 41.17, 'epoch': 1.0}
{'loss': 0.1131, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1567220538854599, 'eval_precision': 0.6460767946577629, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.5243902439024389, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.225, 'eval_steps_per_second': 41.162, 'epoch': 2.0}
{'loss': 0.067, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.16166193783283234, 'eval_precision': 0.5199568500539374, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5343680709534367, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.234, 'eval_steps_per_second': 41.163, 'epoch': 3.0}
{'loss': 0.0352, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21390888094902039, 'eval_precision': 0.5102669404517454, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.5370070232306862, 'eval_accuracy': 0.9524820504902339, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.404, 'eval_steps_per_second': 41.185, 'epoch': 4.0}
{'loss': 0.0212, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.25751590728759766, 'eval_precision': 0.5284463894967177, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5393634840871022, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 4.6599, 'eval_samples_per_second': 328.549, 'eval_steps_per_second': 41.203, 'epoch': 5.0}
{'loss': 0.0118, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.31393110752105713, 'eval_precision': 0.5464159811985899, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5381944444444444, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.353, 'eval_steps_per_second': 41.178, 'epoch': 6.0}
{'loss': 0.0094, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.376059889793396, 'eval_precision': 0.5819209039548022, 'eval_recall': 0.4697833523375142, 'eval_f1': 0.5198738170347003, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.907, 'eval_steps_per_second': 41.248, 'epoch': 7.0}
{'loss': 0.007, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.30851197242736816, 'eval_precision': 0.5515643105446119, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5471264367816091, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.7412, 'eval_samples_per_second': 322.916, 'eval_steps_per_second': 40.496, 'epoch': 8.0}
{'loss': 0.0054, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.37919265031814575, 'eval_precision': 0.5604395604395604, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5412735849056604, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.323, 'eval_steps_per_second': 41.3, 'epoch': 9.0}
{'loss': 0.0048, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3539852499961853, 'eval_precision': 0.5697969543147208, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5393393393393393, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.454, 'eval_steps_per_second': 41.316, 'epoch': 10.0}
{'loss': 0.0043, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.38645052909851074, 'eval_precision': 0.5264270613107822, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5463521667580911, 'eval_accuracy': 0.9543735042075195, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.163, 'eval_steps_per_second': 41.28, 'epoch': 11.0}
{'loss': 0.0034, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.40833643078804016, 'eval_precision': 0.5994694960212201, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5542611894543223, 'eval_accuracy': 0.9566123677912453, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.712, 'eval_steps_per_second': 41.349, 'epoch': 12.0}
{'loss': 0.0028, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.41639259457588196, 'eval_precision': 0.6381766381766382, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5674477517416087, 'eval_accuracy': 0.9567667721763298, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.525, 'eval_steps_per_second': 41.325, 'epoch': 13.0}
{'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.4167400300502777, 'eval_precision': 0.5858064516129032, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.549636803874092, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6438, 'eval_samples_per_second': 329.684, 'eval_steps_per_second': 41.345, 'epoch': 14.0}
{'loss': 0.002, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.4107252061367035, 'eval_precision': 0.5583238958097395, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5602272727272728, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.6435, 'eval_samples_per_second': 329.705, 'eval_steps_per_second': 41.348, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.42257893085479736, 'eval_precision': 0.5903919089759798, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5599520383693045, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.839, 'eval_steps_per_second': 41.364, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.41306188702583313, 'eval_precision': 0.5682352941176471, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5593514765489287, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6437, 'eval_samples_per_second': 329.697, 'eval_steps_per_second': 41.347, 'epoch': 17.0}
{'loss': 0.001, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.41113337874412537, 'eval_precision': 0.5568797399783315, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5711111111111111, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.642, 'eval_samples_per_second': 329.817, 'eval_steps_per_second': 41.362, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.431622177362442, 'eval_precision': 0.5822002472187886, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5587188612099645, 'eval_accuracy': 0.9567281710800587, 'eval_runtime': 4.6436, 'eval_samples_per_second': 329.701, 'eval_steps_per_second': 41.347, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.42360490560531616, 'eval_precision': 0.6174142480211082, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5724770642201835, 'eval_accuracy': 0.9577317995831082, 'eval_runtime': 4.6404, 'eval_samples_per_second': 329.927, 'eval_steps_per_second': 41.376, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.4436313509941101, 'eval_precision': 0.5989847715736041, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.566966966966967, 'eval_accuracy': 0.9577704006793792, 'eval_runtime': 4.6396, 'eval_samples_per_second': 329.986, 'eval_steps_per_second': 41.383, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4363199472427368, 'eval_precision': 0.5808383233532934, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.566588785046729, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.904, 'eval_steps_per_second': 41.373, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.442792683839798, 'eval_precision': 0.5943627450980392, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5729474305965742, 'eval_accuracy': 0.9571913842353122, 'eval_runtime': 4.6381, 'eval_samples_per_second': 330.09, 'eval_steps_per_second': 41.396, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.44667449593544006, 'eval_precision': 0.6057571964956195, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5775656324582339, 'eval_accuracy': 0.9578862039681927, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.873, 'eval_steps_per_second': 41.369, 'epoch': 24.0}
{'train_runtime': 3132.0519, 'train_samples_per_second': 66.16, 'train_steps_per_second': 8.276, 'train_loss': 0.02005850039738702, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0201
  train_runtime            = 0:52:12.05
  train_samples            =       8634
  train_samples_per_second =      66.16
  train_steps_per_second   =      8.276
[{'loss': 0.1861, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.13954411447048187, 'eval_precision': 0.5258264462809917, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5517615176151762, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.6636, 'eval_samples_per_second': 328.29, 'eval_steps_per_second': 41.17, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1131, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.1567220538854599, 'eval_precision': 0.6460767946577629, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.5243902439024389, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6645, 'eval_samples_per_second': 328.225, 'eval_steps_per_second': 41.162, 'epoch': 2.0, 'step': 2160}, {'loss': 0.067, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.16166193783283234, 'eval_precision': 0.5199568500539374, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5343680709534367, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.234, 'eval_steps_per_second': 41.163, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0352, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.21390888094902039, 'eval_precision': 0.5102669404517454, 'eval_recall': 0.5667046750285063, 'eval_f1': 0.5370070232306862, 'eval_accuracy': 0.9524820504902339, 'eval_runtime': 4.6619, 'eval_samples_per_second': 328.404, 'eval_steps_per_second': 41.185, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0212, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.25751590728759766, 'eval_precision': 0.5284463894967177, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5393634840871022, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 4.6599, 'eval_samples_per_second': 328.549, 'eval_steps_per_second': 41.203, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0118, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.31393110752105713, 'eval_precision': 0.5464159811985899, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5381944444444444, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6627, 'eval_samples_per_second': 328.353, 'eval_steps_per_second': 41.178, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0094, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.376059889793396, 'eval_precision': 0.5819209039548022, 'eval_recall': 0.4697833523375142, 'eval_f1': 0.5198738170347003, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.907, 'eval_steps_per_second': 41.248, 'epoch': 7.0, 'step': 7560}, {'loss': 0.007, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.30851197242736816, 'eval_precision': 0.5515643105446119, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5471264367816091, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.7412, 'eval_samples_per_second': 322.916, 'eval_steps_per_second': 40.496, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0054, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.37919265031814575, 'eval_precision': 0.5604395604395604, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5412735849056604, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.323, 'eval_steps_per_second': 41.3, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0048, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.3539852499961853, 'eval_precision': 0.5697969543147208, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5393393393393393, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.454, 'eval_steps_per_second': 41.316, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0043, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.38645052909851074, 'eval_precision': 0.5264270613107822, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5463521667580911, 'eval_accuracy': 0.9543735042075195, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.163, 'eval_steps_per_second': 41.28, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0034, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.40833643078804016, 'eval_precision': 0.5994694960212201, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5542611894543223, 'eval_accuracy': 0.9566123677912453, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.712, 'eval_steps_per_second': 41.349, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0028, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.41639259457588196, 'eval_precision': 0.6381766381766382, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5674477517416087, 'eval_accuracy': 0.9567667721763298, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.525, 'eval_steps_per_second': 41.325, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.4167400300502777, 'eval_precision': 0.5858064516129032, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.549636803874092, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6438, 'eval_samples_per_second': 329.684, 'eval_steps_per_second': 41.345, 'epoch': 14.0, 'step': 15120}, {'loss': 0.002, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.4107252061367035, 'eval_precision': 0.5583238958097395, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5602272727272728, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.6435, 'eval_samples_per_second': 329.705, 'eval_steps_per_second': 41.348, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0019, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.42257893085479736, 'eval_precision': 0.5903919089759798, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5599520383693045, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.839, 'eval_steps_per_second': 41.364, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0012, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.41306188702583313, 'eval_precision': 0.5682352941176471, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5593514765489287, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6437, 'eval_samples_per_second': 329.697, 'eval_steps_per_second': 41.347, 'epoch': 17.0, 'step': 18360}, {'loss': 0.001, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.41113337874412537, 'eval_precision': 0.5568797399783315, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5711111111111111, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.642, 'eval_samples_per_second': 329.817, 'eval_steps_per_second': 41.362, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.431622177362442, 'eval_precision': 0.5822002472187886, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5587188612099645, 'eval_accuracy': 0.9567281710800587, 'eval_runtime': 4.6436, 'eval_samples_per_second': 329.701, 'eval_steps_per_second': 41.347, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.42360490560531616, 'eval_precision': 0.6174142480211082, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5724770642201835, 'eval_accuracy': 0.9577317995831082, 'eval_runtime': 4.6404, 'eval_samples_per_second': 329.927, 'eval_steps_per_second': 41.376, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.4436313509941101, 'eval_precision': 0.5989847715736041, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.566966966966967, 'eval_accuracy': 0.9577704006793792, 'eval_runtime': 4.6396, 'eval_samples_per_second': 329.986, 'eval_steps_per_second': 41.383, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.4363199472427368, 'eval_precision': 0.5808383233532934, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.566588785046729, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.904, 'eval_steps_per_second': 41.373, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0001, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.442792683839798, 'eval_precision': 0.5943627450980392, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5729474305965742, 'eval_accuracy': 0.9571913842353122, 'eval_runtime': 4.6381, 'eval_samples_per_second': 330.09, 'eval_steps_per_second': 41.396, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.44667449593544006, 'eval_precision': 0.6057571964956195, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5775656324582339, 'eval_accuracy': 0.9578862039681927, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.873, 'eval_steps_per_second': 41.369, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3132.0519, 'train_samples_per_second': 66.16, 'train_steps_per_second': 8.276, 'total_flos': 1.693654095901446e+16, 'train_loss': 0.02005850039738702, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =      0.951
  predict_f1                 =     0.5228
  predict_loss               =     0.1581
  predict_precision          =     0.5077
  predict_recall             =     0.5388
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.681
  predict_steps_per_second   =      40.71
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_07.json completed. F1: 0.5227722772277228
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_44.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_44.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5573.45 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6553.63 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6610.26 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6752.73 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6863.12 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7028.44 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7222.04 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6313.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6619.74 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7333.79 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6971.02 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7033.75 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6864.59 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0168, 'eval_samples_per_second': 507.483, 'eval_steps_per_second': 63.643, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9944, 'eval_samples_per_second': 511.285, 'eval_steps_per_second': 64.119, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0146, 'eval_samples_per_second': 507.859, 'eval_steps_per_second': 63.69, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9774, 'eval_samples_per_second': 514.208, 'eval_steps_per_second': 64.486, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.974, 'eval_samples_per_second': 514.792, 'eval_steps_per_second': 64.559, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9897, 'eval_samples_per_second': 512.09, 'eval_steps_per_second': 64.22, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9808, 'eval_samples_per_second': 513.625, 'eval_steps_per_second': 64.413, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9913, 'eval_samples_per_second': 511.825, 'eval_steps_per_second': 64.187, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.994, 'eval_samples_per_second': 511.352, 'eval_steps_per_second': 64.128, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0562, 'eval_samples_per_second': 500.944, 'eval_steps_per_second': 62.823, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9755, 'eval_samples_per_second': 514.541, 'eval_steps_per_second': 64.528, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9847, 'eval_samples_per_second': 512.954, 'eval_steps_per_second': 64.329, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9724, 'eval_samples_per_second': 515.08, 'eval_steps_per_second': 64.595, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9834, 'eval_samples_per_second': 513.181, 'eval_steps_per_second': 64.357, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0069, 'eval_samples_per_second': 509.168, 'eval_steps_per_second': 63.854, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.965, 'eval_samples_per_second': 516.35, 'eval_steps_per_second': 64.755, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.386, 'eval_steps_per_second': 64.508, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.045, 'eval_steps_per_second': 64.215, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.559, 'eval_steps_per_second': 64.53, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9831, 'eval_samples_per_second': 513.232, 'eval_steps_per_second': 64.364, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0579, 'eval_samples_per_second': 500.666, 'eval_steps_per_second': 62.788, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0085, 'eval_samples_per_second': 508.899, 'eval_steps_per_second': 63.82, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.734, 'eval_steps_per_second': 64.426, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.852, 'eval_steps_per_second': 64.441, 'epoch': 24.0}
{'train_runtime': 838.8643, 'train_samples_per_second': 247.02, 'train_steps_per_second': 3.862, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:13:58.86
  train_samples            =       8634
  train_samples_per_second =     247.02
  train_steps_per_second   =      3.862
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0168, 'eval_samples_per_second': 507.483, 'eval_steps_per_second': 63.643, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9944, 'eval_samples_per_second': 511.285, 'eval_steps_per_second': 64.119, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0146, 'eval_samples_per_second': 507.859, 'eval_steps_per_second': 63.69, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9774, 'eval_samples_per_second': 514.208, 'eval_steps_per_second': 64.486, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.974, 'eval_samples_per_second': 514.792, 'eval_steps_per_second': 64.559, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9897, 'eval_samples_per_second': 512.09, 'eval_steps_per_second': 64.22, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9808, 'eval_samples_per_second': 513.625, 'eval_steps_per_second': 64.413, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9913, 'eval_samples_per_second': 511.825, 'eval_steps_per_second': 64.187, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.994, 'eval_samples_per_second': 511.352, 'eval_steps_per_second': 64.128, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0562, 'eval_samples_per_second': 500.944, 'eval_steps_per_second': 62.823, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9755, 'eval_samples_per_second': 514.541, 'eval_steps_per_second': 64.528, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9847, 'eval_samples_per_second': 512.954, 'eval_steps_per_second': 64.329, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9724, 'eval_samples_per_second': 515.08, 'eval_steps_per_second': 64.595, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9834, 'eval_samples_per_second': 513.181, 'eval_steps_per_second': 64.357, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0069, 'eval_samples_per_second': 509.168, 'eval_steps_per_second': 63.854, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.965, 'eval_samples_per_second': 516.35, 'eval_steps_per_second': 64.755, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.386, 'eval_steps_per_second': 64.508, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.99, 'eval_samples_per_second': 512.045, 'eval_steps_per_second': 64.215, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.559, 'eval_steps_per_second': 64.53, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9831, 'eval_samples_per_second': 513.232, 'eval_steps_per_second': 64.364, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0579, 'eval_samples_per_second': 500.666, 'eval_steps_per_second': 62.788, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0085, 'eval_samples_per_second': 508.899, 'eval_steps_per_second': 63.82, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9801, 'eval_samples_per_second': 513.734, 'eval_steps_per_second': 64.426, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.852, 'eval_steps_per_second': 64.441, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 838.8643, 'train_samples_per_second': 247.02, 'train_steps_per_second': 3.862, 'total_flos': 7641716291195580.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    509.731
  predict_steps_per_second   =     63.716
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_44.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_30.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5680.10 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6611.91 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6656.52 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6804.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6906.81 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7056.17 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6239.51 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6574.25 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6594.42 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7328.30 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6926.06 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7047.06 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6844.30 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3088, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.22400102019309998, 'eval_precision': 0.22281879194630871, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.20468557336621454, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3809, 'eval_samples_per_second': 643.044, 'eval_steps_per_second': 80.643, 'epoch': 1.0}
{'loss': 0.2046, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.2051241248846054, 'eval_precision': 0.2753824756606398, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.2481203007518797, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.3821, 'eval_samples_per_second': 642.706, 'eval_steps_per_second': 80.601, 'epoch': 2.0}
{'loss': 0.155, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.21099913120269775, 'eval_precision': 0.2896305125148987, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2832167832167832, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 2.3615, 'eval_samples_per_second': 648.327, 'eval_steps_per_second': 81.306, 'epoch': 3.0}
{'loss': 0.1149, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.24409858882427216, 'eval_precision': 0.2872549019607843, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.308908803373748, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.155, 'eval_steps_per_second': 81.284, 'epoch': 4.0}
{'loss': 0.0886, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2624734044075012, 'eval_precision': 0.2775229357798165, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2767295597484276, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.732, 'eval_steps_per_second': 81.231, 'epoch': 5.0}
{'loss': 0.0684, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.28419598937034607, 'eval_precision': 0.30165745856353593, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.3063973063973064, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.535, 'eval_steps_per_second': 81.332, 'epoch': 6.0}
{'loss': 0.0537, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.311811238527298, 'eval_precision': 0.28711985688729874, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3218045112781955, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.3727, 'eval_samples_per_second': 645.244, 'eval_steps_per_second': 80.919, 'epoch': 7.0}
{'loss': 0.0426, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3239825963973999, 'eval_precision': 0.24888888888888888, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2797202797202797, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.3613, 'eval_samples_per_second': 648.384, 'eval_steps_per_second': 81.313, 'epoch': 8.0}
{'loss': 0.0331, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3401644825935364, 'eval_precision': 0.2697841726618705, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.30165912518853694, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.4371, 'eval_samples_per_second': 628.196, 'eval_steps_per_second': 78.781, 'epoch': 9.0}
{'loss': 0.027, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3634288012981415, 'eval_precision': 0.28617021276595744, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29609246009906437, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.524, 'eval_steps_per_second': 81.456, 'epoch': 10.0}
{'loss': 0.0215, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.37048834562301636, 'eval_precision': 0.2911764705882353, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3131259884027412, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3757, 'eval_samples_per_second': 644.431, 'eval_steps_per_second': 80.817, 'epoch': 11.0}
{'loss': 0.0162, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.387523889541626, 'eval_precision': 0.28167641325536064, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3037309511297951, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.559, 'eval_steps_per_second': 81.46, 'epoch': 12.0}
{'loss': 0.0138, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.39660653471946716, 'eval_precision': 0.285, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3036760788492275, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3687, 'eval_samples_per_second': 646.356, 'eval_steps_per_second': 81.058, 'epoch': 13.0}
{'loss': 0.0109, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.40216100215911865, 'eval_precision': 0.3019853709508882, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3151581243184296, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.364, 'eval_samples_per_second': 647.633, 'eval_steps_per_second': 81.218, 'epoch': 14.0}
{'loss': 0.0093, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.4196358025074005, 'eval_precision': 0.3035143769968051, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31387665198237885, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.007, 'eval_steps_per_second': 81.391, 'epoch': 15.0}
{'loss': 0.0079, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.4211248755455017, 'eval_precision': 0.3038105046343975, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31926406926406925, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3682, 'eval_samples_per_second': 646.473, 'eval_steps_per_second': 81.073, 'epoch': 16.0}
{'loss': 0.0066, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.42774179577827454, 'eval_precision': 0.3076923076923077, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.3133743704532736, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.4336, 'eval_samples_per_second': 629.101, 'eval_steps_per_second': 78.894, 'epoch': 17.0}
{'loss': 0.0052, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.42890027165412903, 'eval_precision': 0.32915717539863326, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.32934472934472936, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.411, 'eval_steps_per_second': 81.567, 'epoch': 18.0}
{'loss': 0.0046, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.4499707818031311, 'eval_precision': 0.300990099009901, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32220455749867516, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.475, 'eval_steps_per_second': 81.324, 'epoch': 19.0}
{'loss': 0.0043, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.44551119208335876, 'eval_precision': 0.310740354535975, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3246187363834423, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.547, 'eval_steps_per_second': 81.459, 'epoch': 20.0}
{'loss': 0.0035, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.4458862841129303, 'eval_precision': 0.32785087719298245, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3342649524874231, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 2.3634, 'eval_samples_per_second': 647.788, 'eval_steps_per_second': 81.238, 'epoch': 21.0}
{'loss': 0.0033, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4513169229030609, 'eval_precision': 0.32275132275132273, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33479692645444564, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.31, 'eval_steps_per_second': 81.178, 'epoch': 22.0}
{'loss': 0.0028, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.452981173992157, 'eval_precision': 0.31666666666666665, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3309744148067501, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3482, 'eval_samples_per_second': 652.002, 'eval_steps_per_second': 81.766, 'epoch': 23.0}
{'loss': 0.0028, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.45159122347831726, 'eval_precision': 0.31890179514255546, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.331140350877193, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.271, 'eval_steps_per_second': 81.424, 'epoch': 24.0}
{'train_runtime': 880.3439, 'train_samples_per_second': 235.381, 'train_steps_per_second': 7.361, 'train_loss': 0.05038330663501481, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0504
  train_runtime            = 0:14:40.34
  train_samples            =       8634
  train_samples_per_second =    235.381
  train_steps_per_second   =      7.361
[{'loss': 0.3088, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.22400102019309998, 'eval_precision': 0.22281879194630871, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.20468557336621454, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.3809, 'eval_samples_per_second': 643.044, 'eval_steps_per_second': 80.643, 'epoch': 1.0, 'step': 270}, {'loss': 0.2046, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.2051241248846054, 'eval_precision': 0.2753824756606398, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.2481203007518797, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.3821, 'eval_samples_per_second': 642.706, 'eval_steps_per_second': 80.601, 'epoch': 2.0, 'step': 540}, {'loss': 0.155, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.21099913120269775, 'eval_precision': 0.2896305125148987, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2832167832167832, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 2.3615, 'eval_samples_per_second': 648.327, 'eval_steps_per_second': 81.306, 'epoch': 3.0, 'step': 810}, {'loss': 0.1149, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.24409858882427216, 'eval_precision': 0.2872549019607843, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.308908803373748, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.3621, 'eval_samples_per_second': 648.155, 'eval_steps_per_second': 81.284, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0886, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.2624734044075012, 'eval_precision': 0.2775229357798165, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.2767295597484276, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.732, 'eval_steps_per_second': 81.231, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0684, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.28419598937034607, 'eval_precision': 0.30165745856353593, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.3063973063973064, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.535, 'eval_steps_per_second': 81.332, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0537, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.311811238527298, 'eval_precision': 0.28711985688729874, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3218045112781955, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.3727, 'eval_samples_per_second': 645.244, 'eval_steps_per_second': 80.919, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0426, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.3239825963973999, 'eval_precision': 0.24888888888888888, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2797202797202797, 'eval_accuracy': 0.9311356442522968, 'eval_runtime': 2.3613, 'eval_samples_per_second': 648.384, 'eval_steps_per_second': 81.313, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0331, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3401644825935364, 'eval_precision': 0.2697841726618705, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.30165912518853694, 'eval_accuracy': 0.9322550760441597, 'eval_runtime': 2.4371, 'eval_samples_per_second': 628.196, 'eval_steps_per_second': 78.781, 'epoch': 9.0, 'step': 2430}, {'loss': 0.027, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3634288012981415, 'eval_precision': 0.28617021276595744, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29609246009906437, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.524, 'eval_steps_per_second': 81.456, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0215, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.37048834562301636, 'eval_precision': 0.2911764705882353, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3131259884027412, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.3757, 'eval_samples_per_second': 644.431, 'eval_steps_per_second': 80.817, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0162, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.387523889541626, 'eval_precision': 0.28167641325536064, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3037309511297951, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.559, 'eval_steps_per_second': 81.46, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0138, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.39660653471946716, 'eval_precision': 0.285, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3036760788492275, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3687, 'eval_samples_per_second': 646.356, 'eval_steps_per_second': 81.058, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0109, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.40216100215911865, 'eval_precision': 0.3019853709508882, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.3151581243184296, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.364, 'eval_samples_per_second': 647.633, 'eval_steps_per_second': 81.218, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0093, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.4196358025074005, 'eval_precision': 0.3035143769968051, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.31387665198237885, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.007, 'eval_steps_per_second': 81.391, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0079, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.4211248755455017, 'eval_precision': 0.3038105046343975, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31926406926406925, 'eval_accuracy': 0.9363081911526288, 'eval_runtime': 2.3682, 'eval_samples_per_second': 646.473, 'eval_steps_per_second': 81.073, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0066, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.42774179577827454, 'eval_precision': 0.3076923076923077, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.3133743704532736, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.4336, 'eval_samples_per_second': 629.101, 'eval_steps_per_second': 78.894, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0052, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.42890027165412903, 'eval_precision': 0.32915717539863326, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.32934472934472936, 'eval_accuracy': 0.9387786613139814, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.411, 'eval_steps_per_second': 81.567, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0046, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.4499707818031311, 'eval_precision': 0.300990099009901, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32220455749867516, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.475, 'eval_steps_per_second': 81.324, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0043, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.44551119208335876, 'eval_precision': 0.310740354535975, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3246187363834423, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.357, 'eval_samples_per_second': 649.547, 'eval_steps_per_second': 81.459, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0035, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.4458862841129303, 'eval_precision': 0.32785087719298245, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3342649524874231, 'eval_accuracy': 0.9377364317146607, 'eval_runtime': 2.3634, 'eval_samples_per_second': 647.788, 'eval_steps_per_second': 81.238, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0033, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.4513169229030609, 'eval_precision': 0.32275132275132273, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33479692645444564, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.31, 'eval_steps_per_second': 81.178, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0028, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.452981173992157, 'eval_precision': 0.31666666666666665, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3309744148067501, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3482, 'eval_samples_per_second': 652.002, 'eval_steps_per_second': 81.766, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0028, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.45159122347831726, 'eval_precision': 0.31890179514255546, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.331140350877193, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.271, 'eval_steps_per_second': 81.424, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 880.3439, 'train_samples_per_second': 235.381, 'train_steps_per_second': 7.361, 'total_flos': 7896285197923800.0, 'train_loss': 0.05038330663501481, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9407
  predict_f1                 =     0.2559
  predict_loss               =     0.2128
  predict_precision          =     0.2907
  predict_recall             =     0.2286
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =     645.66
  predict_steps_per_second   =     80.707
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_30.json completed. F1: 0.2559025133282559
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_07.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5757.04 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6689.01 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6732.94 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6884.65 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6985.54 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7145.89 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7352.39 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6427.55 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6744.38 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7452.33 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7089.39 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7127.41 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6952.56 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2538, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19697235524654388, 'eval_precision': 0.3004750593824228, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.29435718440954045, 'eval_accuracy': 0.9429861808075349, 'eval_runtime': 4.6966, 'eval_samples_per_second': 325.982, 'eval_steps_per_second': 40.881, 'epoch': 1.0}
{'loss': 0.1672, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.20834332704544067, 'eval_precision': 0.30606060606060603, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.26284970722186074, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.853, 'eval_steps_per_second': 41.241, 'epoch': 2.0}
{'loss': 0.112, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.22387203574180603, 'eval_precision': 0.30425963488843816, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.32206119162640906, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.13, 'eval_steps_per_second': 41.15, 'epoch': 3.0}
{'loss': 0.0685, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2625304162502289, 'eval_precision': 0.30388349514563107, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3282642894598846, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.576, 'eval_steps_per_second': 41.206, 'epoch': 4.0}
{'loss': 0.0451, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.32275334000587463, 'eval_precision': 0.33373063170441003, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.32634032634032634, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.6623, 'eval_samples_per_second': 328.376, 'eval_steps_per_second': 41.181, 'epoch': 5.0}
{'loss': 0.026, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.36175864934921265, 'eval_precision': 0.34951456310679613, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.33862433862433866, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6603, 'eval_samples_per_second': 328.518, 'eval_steps_per_second': 41.199, 'epoch': 6.0}
{'loss': 0.0211, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.4012470245361328, 'eval_precision': 0.3216931216931217, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3336992316136114, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 4.6592, 'eval_samples_per_second': 328.598, 'eval_steps_per_second': 41.209, 'epoch': 7.0}
{'loss': 0.0122, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.43992236256599426, 'eval_precision': 0.31513083048919227, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.31548974943052394, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.7369, 'eval_samples_per_second': 323.207, 'eval_steps_per_second': 40.533, 'epoch': 8.0}
{'loss': 0.0093, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.47444018721580505, 'eval_precision': 0.29816069699903197, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3225130890052357, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 9.0}
{'loss': 0.0065, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.4599616527557373, 'eval_precision': 0.3293991416309013, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33941404090657823, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6584, 'eval_samples_per_second': 328.653, 'eval_steps_per_second': 41.216, 'epoch': 10.0}
{'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.5070510506629944, 'eval_precision': 0.336104513064133, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32926119837114604, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.824, 'eval_steps_per_second': 41.237, 'epoch': 11.0}
{'loss': 0.0044, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.5308775901794434, 'eval_precision': 0.3606770833333333, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.33677811550151976, 'eval_accuracy': 0.9444530224658381, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.036, 'eval_steps_per_second': 41.264, 'epoch': 12.0}
{'loss': 0.003, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.5503177046775818, 'eval_precision': 0.325098814229249, 'eval_recall': 0.3751425313568985, 'eval_f1': 0.34833245103229216, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.6546, 'eval_samples_per_second': 328.925, 'eval_steps_per_second': 41.25, 'epoch': 13.0}
{'loss': 0.0022, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.5437141060829163, 'eval_precision': 0.3047722342733189, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3123957754307949, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6561, 'eval_samples_per_second': 328.817, 'eval_steps_per_second': 41.236, 'epoch': 14.0}
{'loss': 0.0019, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.564459502696991, 'eval_precision': 0.35714285714285715, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3402985074626866, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.453, 'eval_steps_per_second': 41.316, 'epoch': 15.0}
{'loss': 0.0015, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.5781609416007996, 'eval_precision': 0.3570536828963795, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.34088200238379024, 'eval_accuracy': 0.9428703775187215, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.947, 'eval_steps_per_second': 41.253, 'epoch': 16.0}
{'loss': 0.002, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.5661513805389404, 'eval_precision': 0.351288056206089, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3466204506065858, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.64, 'eval_samples_per_second': 329.957, 'eval_steps_per_second': 41.379, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.5736610293388367, 'eval_precision': 0.34288990825688076, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.34190966266437967, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.6462, 'eval_samples_per_second': 329.515, 'eval_steps_per_second': 41.324, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.6005661487579346, 'eval_precision': 0.3341176470588235, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3288940359004054, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.6477, 'eval_samples_per_second': 329.41, 'eval_steps_per_second': 41.311, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.6031897068023682, 'eval_precision': 0.34543325526932084, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.340843443096476, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.545, 'eval_steps_per_second': 41.328, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.602551281452179, 'eval_precision': 0.34798534798534797, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.33608490566037735, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.726, 'eval_steps_per_second': 41.35, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.6166714429855347, 'eval_precision': 0.3397358943577431, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3309941520467836, 'eval_accuracy': 0.94213695668957, 'eval_runtime': 4.6485, 'eval_samples_per_second': 329.354, 'eval_steps_per_second': 41.304, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.6167365312576294, 'eval_precision': 0.34499396863691195, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.33528722157092616, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.965, 'eval_steps_per_second': 41.38, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.6175733208656311, 'eval_precision': 0.35108958837772397, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3405754550792719, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.527, 'eval_steps_per_second': 41.325, 'epoch': 24.0}
{'train_runtime': 3158.7942, 'train_samples_per_second': 65.6, 'train_steps_per_second': 8.206, 'train_loss': 0.031083706581252226, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0311
  train_runtime            = 0:52:38.79
  train_samples            =       8634
  train_samples_per_second =       65.6
  train_steps_per_second   =      8.206
[{'loss': 0.2538, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.19697235524654388, 'eval_precision': 0.3004750593824228, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.29435718440954045, 'eval_accuracy': 0.9429861808075349, 'eval_runtime': 4.6966, 'eval_samples_per_second': 325.982, 'eval_steps_per_second': 40.881, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1672, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.20834332704544067, 'eval_precision': 0.30606060606060603, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.26284970722186074, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.853, 'eval_steps_per_second': 41.241, 'epoch': 2.0, 'step': 2160}, {'loss': 0.112, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.22387203574180603, 'eval_precision': 0.30425963488843816, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.32206119162640906, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.13, 'eval_steps_per_second': 41.15, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0685, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.2625304162502289, 'eval_precision': 0.30388349514563107, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3282642894598846, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.576, 'eval_steps_per_second': 41.206, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0451, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.32275334000587463, 'eval_precision': 0.33373063170441003, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.32634032634032634, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.6623, 'eval_samples_per_second': 328.376, 'eval_steps_per_second': 41.181, 'epoch': 5.0, 'step': 5400}, {'loss': 0.026, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.36175864934921265, 'eval_precision': 0.34951456310679613, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.33862433862433866, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6603, 'eval_samples_per_second': 328.518, 'eval_steps_per_second': 41.199, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0211, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.4012470245361328, 'eval_precision': 0.3216931216931217, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3336992316136114, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 4.6592, 'eval_samples_per_second': 328.598, 'eval_steps_per_second': 41.209, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0122, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.43992236256599426, 'eval_precision': 0.31513083048919227, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.31548974943052394, 'eval_accuracy': 0.9392032733729638, 'eval_runtime': 4.7369, 'eval_samples_per_second': 323.207, 'eval_steps_per_second': 40.533, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0093, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.47444018721580505, 'eval_precision': 0.29816069699903197, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3225130890052357, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0065, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.4599616527557373, 'eval_precision': 0.3293991416309013, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33941404090657823, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6584, 'eval_samples_per_second': 328.653, 'eval_steps_per_second': 41.216, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.5070510506629944, 'eval_precision': 0.336104513064133, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32926119837114604, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.656, 'eval_samples_per_second': 328.824, 'eval_steps_per_second': 41.237, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0044, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.5308775901794434, 'eval_precision': 0.3606770833333333, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.33677811550151976, 'eval_accuracy': 0.9444530224658381, 'eval_runtime': 4.653, 'eval_samples_per_second': 329.036, 'eval_steps_per_second': 41.264, 'epoch': 12.0, 'step': 12960}, {'loss': 0.003, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.5503177046775818, 'eval_precision': 0.325098814229249, 'eval_recall': 0.3751425313568985, 'eval_f1': 0.34833245103229216, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.6546, 'eval_samples_per_second': 328.925, 'eval_steps_per_second': 41.25, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0022, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.5437141060829163, 'eval_precision': 0.3047722342733189, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3123957754307949, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 4.6561, 'eval_samples_per_second': 328.817, 'eval_steps_per_second': 41.236, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0019, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.564459502696991, 'eval_precision': 0.35714285714285715, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3402985074626866, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.453, 'eval_steps_per_second': 41.316, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0015, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.5781609416007996, 'eval_precision': 0.3570536828963795, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.34088200238379024, 'eval_accuracy': 0.9428703775187215, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.947, 'eval_steps_per_second': 41.253, 'epoch': 16.0, 'step': 17280}, {'loss': 0.002, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.5661513805389404, 'eval_precision': 0.351288056206089, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3466204506065858, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.64, 'eval_samples_per_second': 329.957, 'eval_steps_per_second': 41.379, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.5736610293388367, 'eval_precision': 0.34288990825688076, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.34190966266437967, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.6462, 'eval_samples_per_second': 329.515, 'eval_steps_per_second': 41.324, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.6005661487579346, 'eval_precision': 0.3341176470588235, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3288940359004054, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.6477, 'eval_samples_per_second': 329.41, 'eval_steps_per_second': 41.311, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.6031897068023682, 'eval_precision': 0.34543325526932084, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.340843443096476, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.6458, 'eval_samples_per_second': 329.545, 'eval_steps_per_second': 41.328, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.602551281452179, 'eval_precision': 0.34798534798534797, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.33608490566037735, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.726, 'eval_steps_per_second': 41.35, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0002, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.6166714429855347, 'eval_precision': 0.3397358943577431, 'eval_recall': 0.322690992018244, 'eval_f1': 0.3309941520467836, 'eval_accuracy': 0.94213695668957, 'eval_runtime': 4.6485, 'eval_samples_per_second': 329.354, 'eval_steps_per_second': 41.304, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.6167365312576294, 'eval_precision': 0.34499396863691195, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.33528722157092616, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.965, 'eval_steps_per_second': 41.38, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.6175733208656311, 'eval_precision': 0.35108958837772397, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3405754550792719, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.527, 'eval_steps_per_second': 41.325, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3158.7942, 'train_samples_per_second': 65.6, 'train_steps_per_second': 8.206, 'total_flos': 1.693700034384246e+16, 'train_loss': 0.031083706581252226, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9397
  predict_f1                 =      0.283
  predict_loss               =     0.2116
  predict_precision          =     0.3015
  predict_recall             =     0.2667
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.781
  predict_steps_per_second   =     40.723
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_07.json completed. F1: 0.28303249097472927
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_03.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5798.12 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6806.40 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6839.55 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7001.41 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7112.34 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7253.32 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7354.35 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6447.86 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6806.30 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7578.54 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7206.52 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7170.76 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6985.14 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NB-BERT_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1949, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.14248627424240112, 'eval_precision': 0.46830652790917693, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5118924508790073, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 4.6584, 'eval_samples_per_second': 328.654, 'eval_steps_per_second': 41.216, 'epoch': 1.0}
{'loss': 0.1208, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.15474668145179749, 'eval_precision': 0.5978915662650602, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.5152498377676833, 'eval_accuracy': 0.9565737666949742, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.076, 'eval_steps_per_second': 41.269, 'epoch': 2.0}
{'loss': 0.0807, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.1601124405860901, 'eval_precision': 0.4957983193277311, 'eval_recall': 0.6054732041049031, 'eval_f1': 0.5451745379876797, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.6538, 'eval_samples_per_second': 328.981, 'eval_steps_per_second': 41.257, 'epoch': 3.0}
{'loss': 0.0466, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.2040276676416397, 'eval_precision': 0.5181347150259067, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5428881650380021, 'eval_accuracy': 0.954798116266502, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.713, 'eval_steps_per_second': 41.223, 'epoch': 4.0}
{'loss': 0.0334, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.21252569556236267, 'eval_precision': 0.5147208121827411, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.5445757250268529, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6583, 'eval_samples_per_second': 328.657, 'eval_steps_per_second': 41.216, 'epoch': 5.0}
{'loss': 0.0186, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.27465033531188965, 'eval_precision': 0.5504252733900364, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5329411764705883, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.176, 'eval_steps_per_second': 41.281, 'epoch': 6.0}
{'loss': 0.0126, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.3296607732772827, 'eval_precision': 0.5634715025906736, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5275924802910855, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.485, 'eval_steps_per_second': 41.195, 'epoch': 7.0}
{'loss': 0.0116, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.3147764801979065, 'eval_precision': 0.5514705882352942, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5316007088009451, 'eval_accuracy': 0.9564579634061607, 'eval_runtime': 4.7345, 'eval_samples_per_second': 323.374, 'eval_steps_per_second': 40.554, 'epoch': 8.0}
{'loss': 0.0075, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.31599217653274536, 'eval_precision': 0.5308392315470172, 'eval_recall': 0.5986316989737742, 'eval_f1': 0.562700964630225, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6523, 'eval_samples_per_second': 329.082, 'eval_steps_per_second': 41.27, 'epoch': 9.0}
{'loss': 0.0058, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.3362219035625458, 'eval_precision': 0.5748129675810474, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5491363907087552, 'eval_accuracy': 0.9578862039681927, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.231, 'eval_steps_per_second': 41.288, 'epoch': 10.0}
{'loss': 0.0031, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.3831031322479248, 'eval_precision': 0.5273477812177503, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5536294691224268, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 11.0}
{'loss': 0.0042, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.40502893924713135, 'eval_precision': 0.5509964830011723, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5433526011560694, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.242, 'eval_steps_per_second': 41.164, 'epoch': 12.0}
{'loss': 0.0029, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.39626482129096985, 'eval_precision': 0.5511363636363636, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5520774046670461, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6528, 'eval_samples_per_second': 329.05, 'eval_steps_per_second': 41.266, 'epoch': 13.0}
{'loss': 0.002, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.42732617259025574, 'eval_precision': 0.5564610011641443, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5506912442396313, 'eval_accuracy': 0.9569597776576855, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.425, 'eval_steps_per_second': 41.313, 'epoch': 14.0}
{'loss': 0.0014, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.42794862389564514, 'eval_precision': 0.5449790794979079, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.5684669939989088, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.204, 'eval_steps_per_second': 41.285, 'epoch': 15.0}
{'loss': 0.0018, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.4419914186000824, 'eval_precision': 0.5347826086956522, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5475792988313857, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.531, 'eval_steps_per_second': 41.2, 'epoch': 16.0}
{'loss': 0.001, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.44661787152290344, 'eval_precision': 0.5413793103448276, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.53921007441328, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.793, 'eval_steps_per_second': 41.233, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.44379574060440063, 'eval_precision': 0.505324298160697, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5465968586387435, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.555, 'eval_steps_per_second': 41.204, 'epoch': 18.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.4477895498275757, 'eval_precision': 0.5486111111111112, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5445146467547386, 'eval_accuracy': 0.956226356828534, 'eval_runtime': 4.6684, 'eval_samples_per_second': 327.949, 'eval_steps_per_second': 41.128, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.45016366243362427, 'eval_precision': 0.5421822272215973, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5458663646659118, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.849, 'eval_steps_per_second': 41.24, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.45164260268211365, 'eval_precision': 0.556442417331813, 'eval_recall': 0.556442417331813, 'eval_f1': 0.556442417331813, 'eval_accuracy': 0.956843974368872, 'eval_runtime': 4.6521, 'eval_samples_per_second': 329.097, 'eval_steps_per_second': 41.272, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.45900341868400574, 'eval_precision': 0.5398037077426391, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5518394648829432, 'eval_accuracy': 0.9563421601173473, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.972, 'eval_steps_per_second': 41.256, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.46075955033302307, 'eval_precision': 0.5503963759909399, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5522727272727272, 'eval_accuracy': 0.9566895699837875, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.016, 'eval_steps_per_second': 41.261, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4612957239151001, 'eval_precision': 0.548460661345496, 'eval_recall': 0.548460661345496, 'eval_f1': 0.548460661345496, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.579, 'eval_steps_per_second': 41.207, 'epoch': 24.0}
{'train_runtime': 3189.3731, 'train_samples_per_second': 64.971, 'train_steps_per_second': 8.127, 'train_loss': 0.02303164523600796, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.023
  train_runtime            = 0:53:09.37
  train_samples            =       8634
  train_samples_per_second =     64.971
  train_steps_per_second   =      8.127
[{'loss': 0.1949, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.14248627424240112, 'eval_precision': 0.46830652790917693, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5118924508790073, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 4.6584, 'eval_samples_per_second': 328.654, 'eval_steps_per_second': 41.216, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1208, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.15474668145179749, 'eval_precision': 0.5978915662650602, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.5152498377676833, 'eval_accuracy': 0.9565737666949742, 'eval_runtime': 4.6524, 'eval_samples_per_second': 329.076, 'eval_steps_per_second': 41.269, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0807, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.1601124405860901, 'eval_precision': 0.4957983193277311, 'eval_recall': 0.6054732041049031, 'eval_f1': 0.5451745379876797, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.6538, 'eval_samples_per_second': 328.981, 'eval_steps_per_second': 41.257, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0466, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.2040276676416397, 'eval_precision': 0.5181347150259067, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5428881650380021, 'eval_accuracy': 0.954798116266502, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.713, 'eval_steps_per_second': 41.223, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0334, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.21252569556236267, 'eval_precision': 0.5147208121827411, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.5445757250268529, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6583, 'eval_samples_per_second': 328.657, 'eval_steps_per_second': 41.216, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0186, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.27465033531188965, 'eval_precision': 0.5504252733900364, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5329411764705883, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.176, 'eval_steps_per_second': 41.281, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0126, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.3296607732772827, 'eval_precision': 0.5634715025906736, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5275924802910855, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.485, 'eval_steps_per_second': 41.195, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0116, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.3147764801979065, 'eval_precision': 0.5514705882352942, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5316007088009451, 'eval_accuracy': 0.9564579634061607, 'eval_runtime': 4.7345, 'eval_samples_per_second': 323.374, 'eval_steps_per_second': 40.554, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0075, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.31599217653274536, 'eval_precision': 0.5308392315470172, 'eval_recall': 0.5986316989737742, 'eval_f1': 0.562700964630225, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6523, 'eval_samples_per_second': 329.082, 'eval_steps_per_second': 41.27, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0058, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.3362219035625458, 'eval_precision': 0.5748129675810474, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5491363907087552, 'eval_accuracy': 0.9578862039681927, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.231, 'eval_steps_per_second': 41.288, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0031, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.3831031322479248, 'eval_precision': 0.5273477812177503, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5536294691224268, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0042, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.40502893924713135, 'eval_precision': 0.5509964830011723, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5433526011560694, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.242, 'eval_steps_per_second': 41.164, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0029, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.39626482129096985, 'eval_precision': 0.5511363636363636, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5520774046670461, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6528, 'eval_samples_per_second': 329.05, 'eval_steps_per_second': 41.266, 'epoch': 13.0, 'step': 14040}, {'loss': 0.002, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.42732617259025574, 'eval_precision': 0.5564610011641443, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5506912442396313, 'eval_accuracy': 0.9569597776576855, 'eval_runtime': 4.6475, 'eval_samples_per_second': 329.425, 'eval_steps_per_second': 41.313, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0014, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.42794862389564514, 'eval_precision': 0.5449790794979079, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.5684669939989088, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6506, 'eval_samples_per_second': 329.204, 'eval_steps_per_second': 41.285, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0018, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.4419914186000824, 'eval_precision': 0.5347826086956522, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5475792988313857, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.531, 'eval_steps_per_second': 41.2, 'epoch': 16.0, 'step': 17280}, {'loss': 0.001, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.44661787152290344, 'eval_precision': 0.5413793103448276, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.53921007441328, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.793, 'eval_steps_per_second': 41.233, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.44379574060440063, 'eval_precision': 0.505324298160697, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5465968586387435, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.555, 'eval_steps_per_second': 41.204, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.4477895498275757, 'eval_precision': 0.5486111111111112, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5445146467547386, 'eval_accuracy': 0.956226356828534, 'eval_runtime': 4.6684, 'eval_samples_per_second': 327.949, 'eval_steps_per_second': 41.128, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.45016366243362427, 'eval_precision': 0.5421822272215973, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5458663646659118, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6556, 'eval_samples_per_second': 328.849, 'eval_steps_per_second': 41.24, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0006, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.45164260268211365, 'eval_precision': 0.556442417331813, 'eval_recall': 0.556442417331813, 'eval_f1': 0.556442417331813, 'eval_accuracy': 0.956843974368872, 'eval_runtime': 4.6521, 'eval_samples_per_second': 329.097, 'eval_steps_per_second': 41.272, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.45900341868400574, 'eval_precision': 0.5398037077426391, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5518394648829432, 'eval_accuracy': 0.9563421601173473, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.972, 'eval_steps_per_second': 41.256, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0003, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.46075955033302307, 'eval_precision': 0.5503963759909399, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5522727272727272, 'eval_accuracy': 0.9566895699837875, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.016, 'eval_steps_per_second': 41.261, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.4612957239151001, 'eval_precision': 0.548460661345496, 'eval_recall': 0.548460661345496, 'eval_f1': 0.548460661345496, 'eval_accuracy': 0.956535165598703, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.579, 'eval_steps_per_second': 41.207, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3189.3731, 'train_samples_per_second': 64.971, 'train_steps_per_second': 8.127, 'total_flos': 1.693654095901446e+16, 'train_loss': 0.02303164523600796, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9518
  predict_f1                 =     0.5135
  predict_loss               =     0.1559
  predict_precision          =     0.4756
  predict_recall             =     0.5578
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.879
  predict_steps_per_second   =      40.61
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_03.json completed. F1: 0.5134627426424546
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_46.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_46.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6150.51 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6851.56 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6754.61 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6832.97 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6905.73 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7036.84 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6217.50 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6531.71 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6661.86 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7310.14 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6844.70 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6994.55 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6786.28 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2269, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.15332958102226257, 'eval_precision': 0.4583333333333333, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.46118980169971663, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.6952, 'eval_samples_per_second': 568.044, 'eval_steps_per_second': 71.237, 'epoch': 1.0}
{'loss': 0.1362, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.14887751638889313, 'eval_precision': 0.4703476482617587, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.49595687331536387, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.138, 'eval_steps_per_second': 81.282, 'epoch': 2.0}
{'loss': 0.0812, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.16891944408416748, 'eval_precision': 0.5041128084606346, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.4965277777777778, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.293, 'eval_steps_per_second': 81.427, 'epoch': 3.0}
{'loss': 0.0502, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.19315804541110992, 'eval_precision': 0.465161923454367, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.739, 'eval_steps_per_second': 81.483, 'epoch': 4.0}
{'loss': 0.0307, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2214306890964508, 'eval_precision': 0.44377510040160645, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4719701014415376, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.3452, 'eval_samples_per_second': 652.83, 'eval_steps_per_second': 81.87, 'epoch': 5.0}
{'loss': 0.0193, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2408822625875473, 'eval_precision': 0.48723404255319147, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5041276829939461, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.546, 'eval_steps_per_second': 81.709, 'epoch': 6.0}
{'loss': 0.0135, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2819163203239441, 'eval_precision': 0.4625506072874494, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.49008042895442355, 'eval_accuracy': 0.9469620937234617, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.456, 'eval_steps_per_second': 81.698, 'epoch': 7.0}
{'loss': 0.0081, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.28763872385025024, 'eval_precision': 0.5083532219570406, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4967930029154519, 'eval_accuracy': 0.9503589901953216, 'eval_runtime': 2.3492, 'eval_samples_per_second': 651.715, 'eval_steps_per_second': 81.73, 'epoch': 8.0}
{'loss': 0.0066, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3052246868610382, 'eval_precision': 0.506508875739645, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.49709639953542384, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.983, 'eval_steps_per_second': 81.639, 'epoch': 9.0}
{'loss': 0.0057, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2925209403038025, 'eval_precision': 0.47283702213279677, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5024051309460182, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.694, 'eval_steps_per_second': 81.101, 'epoch': 10.0}
{'loss': 0.0037, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3150428235530853, 'eval_precision': 0.49455337690631807, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.505849582172702, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.328, 'eval_steps_per_second': 81.682, 'epoch': 11.0}
{'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.32237696647644043, 'eval_precision': 0.48468271334792123, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4946957007258515, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.782, 'eval_steps_per_second': 81.864, 'epoch': 12.0}
{'loss': 0.003, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3428727984428406, 'eval_precision': 0.5011337868480725, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5025582717453099, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.297, 'eval_steps_per_second': 81.678, 'epoch': 13.0}
{'loss': 0.0022, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.348745197057724, 'eval_precision': 0.5070921985815603, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.497968659315148, 'eval_accuracy': 0.9494325638848143, 'eval_runtime': 2.3484, 'eval_samples_per_second': 651.934, 'eval_steps_per_second': 81.758, 'epoch': 14.0}
{'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3478975296020508, 'eval_precision': 0.5043668122270742, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5153374233128836, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.675, 'eval_steps_per_second': 81.475, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3520660102367401, 'eval_precision': 0.4989130434782609, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5108514190317195, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.345, 'eval_samples_per_second': 652.865, 'eval_steps_per_second': 81.875, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3572145402431488, 'eval_precision': 0.5079365079365079, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5093803297328028, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.4274, 'eval_samples_per_second': 630.727, 'eval_steps_per_second': 79.098, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3631606101989746, 'eval_precision': 0.5208816705336426, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5163887291546865, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.05, 'eval_steps_per_second': 81.772, 'epoch': 18.0}
{'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.37014850974082947, 'eval_precision': 0.4892966360856269, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5166846071044133, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.842, 'eval_steps_per_second': 81.746, 'epoch': 19.0}
{'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3703556954860687, 'eval_precision': 0.5027746947835738, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5095613048368954, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.414, 'eval_steps_per_second': 81.693, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3709891438484192, 'eval_precision': 0.5072951739618407, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5113122171945701, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.3505, 'eval_samples_per_second': 651.364, 'eval_steps_per_second': 81.686, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3732994794845581, 'eval_precision': 0.512735326688815, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5202247191011236, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.3419, 'eval_samples_per_second': 653.752, 'eval_steps_per_second': 81.986, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.3741930425167084, 'eval_precision': 0.5063694267515924, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5244639912039583, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.074, 'eval_steps_per_second': 81.148, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.37396031618118286, 'eval_precision': 0.5155210643015521, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5227655986509275, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 2.3473, 'eval_samples_per_second': 652.242, 'eval_steps_per_second': 81.796, 'epoch': 24.0}
{'train_runtime': 835.4044, 'train_samples_per_second': 248.043, 'train_steps_per_second': 3.878, 'train_loss': 0.024976433011024823, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.025
  train_runtime            = 0:13:55.40
  train_samples            =       8634
  train_samples_per_second =    248.043
  train_steps_per_second   =      3.878
[{'loss': 0.2269, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.15332958102226257, 'eval_precision': 0.4583333333333333, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.46118980169971663, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.6952, 'eval_samples_per_second': 568.044, 'eval_steps_per_second': 71.237, 'epoch': 1.0, 'step': 135}, {'loss': 0.1362, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.14887751638889313, 'eval_precision': 0.4703476482617587, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.49595687331536387, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.138, 'eval_steps_per_second': 81.282, 'epoch': 2.0, 'step': 270}, {'loss': 0.0812, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.16891944408416748, 'eval_precision': 0.5041128084606346, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.4965277777777778, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.293, 'eval_steps_per_second': 81.427, 'epoch': 3.0, 'step': 405}, {'loss': 0.0502, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.19315804541110992, 'eval_precision': 0.465161923454367, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.739, 'eval_steps_per_second': 81.483, 'epoch': 4.0, 'step': 540}, {'loss': 0.0307, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2214306890964508, 'eval_precision': 0.44377510040160645, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4719701014415376, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.3452, 'eval_samples_per_second': 652.83, 'eval_steps_per_second': 81.87, 'epoch': 5.0, 'step': 675}, {'loss': 0.0193, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2408822625875473, 'eval_precision': 0.48723404255319147, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5041276829939461, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.546, 'eval_steps_per_second': 81.709, 'epoch': 6.0, 'step': 810}, {'loss': 0.0135, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2819163203239441, 'eval_precision': 0.4625506072874494, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.49008042895442355, 'eval_accuracy': 0.9469620937234617, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.456, 'eval_steps_per_second': 81.698, 'epoch': 7.0, 'step': 945}, {'loss': 0.0081, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.28763872385025024, 'eval_precision': 0.5083532219570406, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4967930029154519, 'eval_accuracy': 0.9503589901953216, 'eval_runtime': 2.3492, 'eval_samples_per_second': 651.715, 'eval_steps_per_second': 81.73, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0066, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3052246868610382, 'eval_precision': 0.506508875739645, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.49709639953542384, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.983, 'eval_steps_per_second': 81.639, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0057, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2925209403038025, 'eval_precision': 0.47283702213279677, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5024051309460182, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.694, 'eval_steps_per_second': 81.101, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0037, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3150428235530853, 'eval_precision': 0.49455337690631807, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.505849582172702, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.328, 'eval_steps_per_second': 81.682, 'epoch': 11.0, 'step': 1485}, {'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.32237696647644043, 'eval_precision': 0.48468271334792123, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4946957007258515, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.782, 'eval_steps_per_second': 81.864, 'epoch': 12.0, 'step': 1620}, {'loss': 0.003, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3428727984428406, 'eval_precision': 0.5011337868480725, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.5025582717453099, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3507, 'eval_samples_per_second': 651.297, 'eval_steps_per_second': 81.678, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0022, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.348745197057724, 'eval_precision': 0.5070921985815603, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.497968659315148, 'eval_accuracy': 0.9494325638848143, 'eval_runtime': 2.3484, 'eval_samples_per_second': 651.934, 'eval_steps_per_second': 81.758, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3478975296020508, 'eval_precision': 0.5043668122270742, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5153374233128836, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.675, 'eval_steps_per_second': 81.475, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0019, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3520660102367401, 'eval_precision': 0.4989130434782609, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5108514190317195, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.345, 'eval_samples_per_second': 652.865, 'eval_steps_per_second': 81.875, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0012, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3572145402431488, 'eval_precision': 0.5079365079365079, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5093803297328028, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.4274, 'eval_samples_per_second': 630.727, 'eval_steps_per_second': 79.098, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3631606101989746, 'eval_precision': 0.5208816705336426, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5163887291546865, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.05, 'eval_steps_per_second': 81.772, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.37014850974082947, 'eval_precision': 0.4892966360856269, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5166846071044133, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.842, 'eval_steps_per_second': 81.746, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3703556954860687, 'eval_precision': 0.5027746947835738, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5095613048368954, 'eval_accuracy': 0.9499343781363391, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.414, 'eval_steps_per_second': 81.693, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0006, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3709891438484192, 'eval_precision': 0.5072951739618407, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5113122171945701, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.3505, 'eval_samples_per_second': 651.364, 'eval_steps_per_second': 81.686, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3732994794845581, 'eval_precision': 0.512735326688815, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5202247191011236, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.3419, 'eval_samples_per_second': 653.752, 'eval_steps_per_second': 81.986, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3741930425167084, 'eval_precision': 0.5063694267515924, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5244639912039583, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.074, 'eval_steps_per_second': 81.148, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.37396031618118286, 'eval_precision': 0.5155210643015521, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5227655986509275, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 2.3473, 'eval_samples_per_second': 652.242, 'eval_steps_per_second': 81.796, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 835.4044, 'train_samples_per_second': 248.043, 'train_steps_per_second': 3.878, 'total_flos': 8936323010457180.0, 'train_loss': 0.024976433011024823, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9481
  predict_f1                 =     0.4811
  predict_loss               =     0.1498
  predict_precision          =     0.4701
  predict_recall             =     0.4925
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    650.652
  predict_steps_per_second   =     81.332
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_46.json completed. F1: 0.48106312292358805
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_17.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5666.39 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6638.23 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6696.27 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6850.90 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6954.40 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7118.19 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7300.75 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6387.94 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6698.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7385.20 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7032.54 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7113.26 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6934.83 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.777, 'eval_samples_per_second': 265.015, 'eval_steps_per_second': 33.235, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7421, 'eval_samples_per_second': 266.629, 'eval_steps_per_second': 33.437, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7308, 'eval_samples_per_second': 267.155, 'eval_steps_per_second': 33.503, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7321, 'eval_samples_per_second': 267.094, 'eval_steps_per_second': 33.496, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7565, 'eval_samples_per_second': 265.961, 'eval_steps_per_second': 33.354, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7371, 'eval_samples_per_second': 266.861, 'eval_steps_per_second': 33.467, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7254, 'eval_samples_per_second': 267.404, 'eval_steps_per_second': 33.535, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7277, 'eval_samples_per_second': 267.297, 'eval_steps_per_second': 33.521, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7348, 'eval_samples_per_second': 266.969, 'eval_steps_per_second': 33.48, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7194, 'eval_samples_per_second': 267.685, 'eval_steps_per_second': 33.57, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7175, 'eval_samples_per_second': 267.775, 'eval_steps_per_second': 33.581, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7145, 'eval_samples_per_second': 267.913, 'eval_steps_per_second': 33.598, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7172, 'eval_samples_per_second': 267.789, 'eval_steps_per_second': 33.583, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7219, 'eval_samples_per_second': 267.568, 'eval_steps_per_second': 33.555, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7161, 'eval_samples_per_second': 267.841, 'eval_steps_per_second': 33.589, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.809, 'eval_steps_per_second': 33.585, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7268, 'eval_samples_per_second': 267.338, 'eval_steps_per_second': 33.526, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.742, 'eval_samples_per_second': 266.63, 'eval_steps_per_second': 33.438, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.833, 'eval_steps_per_second': 33.714, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.879, 'eval_steps_per_second': 33.72, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7023, 'eval_samples_per_second': 268.488, 'eval_steps_per_second': 33.671, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.708, 'eval_samples_per_second': 268.222, 'eval_steps_per_second': 33.637, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7026, 'eval_samples_per_second': 268.475, 'eval_steps_per_second': 33.669, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7012, 'eval_samples_per_second': 268.539, 'eval_steps_per_second': 33.677, 'epoch': 24.0}
{'train_runtime': 2617.0923, 'train_samples_per_second': 79.178, 'train_steps_per_second': 4.952, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:43:37.09
  train_samples            =       8634
  train_samples_per_second =     79.178
  train_steps_per_second   =      4.952
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.777, 'eval_samples_per_second': 265.015, 'eval_steps_per_second': 33.235, 'epoch': 1.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7421, 'eval_samples_per_second': 266.629, 'eval_steps_per_second': 33.437, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7308, 'eval_samples_per_second': 267.155, 'eval_steps_per_second': 33.503, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7321, 'eval_samples_per_second': 267.094, 'eval_steps_per_second': 33.496, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7565, 'eval_samples_per_second': 265.961, 'eval_steps_per_second': 33.354, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7371, 'eval_samples_per_second': 266.861, 'eval_steps_per_second': 33.467, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7254, 'eval_samples_per_second': 267.404, 'eval_steps_per_second': 33.535, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7277, 'eval_samples_per_second': 267.297, 'eval_steps_per_second': 33.521, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7348, 'eval_samples_per_second': 266.969, 'eval_steps_per_second': 33.48, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7194, 'eval_samples_per_second': 267.685, 'eval_steps_per_second': 33.57, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7175, 'eval_samples_per_second': 267.775, 'eval_steps_per_second': 33.581, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7145, 'eval_samples_per_second': 267.913, 'eval_steps_per_second': 33.598, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7172, 'eval_samples_per_second': 267.789, 'eval_steps_per_second': 33.583, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7219, 'eval_samples_per_second': 267.568, 'eval_steps_per_second': 33.555, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7161, 'eval_samples_per_second': 267.841, 'eval_steps_per_second': 33.589, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.809, 'eval_steps_per_second': 33.585, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7268, 'eval_samples_per_second': 267.338, 'eval_steps_per_second': 33.526, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.742, 'eval_samples_per_second': 266.63, 'eval_steps_per_second': 33.438, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.833, 'eval_steps_per_second': 33.714, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.879, 'eval_steps_per_second': 33.72, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7023, 'eval_samples_per_second': 268.488, 'eval_steps_per_second': 33.671, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.708, 'eval_samples_per_second': 268.222, 'eval_steps_per_second': 33.637, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7026, 'eval_samples_per_second': 268.475, 'eval_steps_per_second': 33.669, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7012, 'eval_samples_per_second': 268.539, 'eval_steps_per_second': 33.677, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2617.0923, 'train_samples_per_second': 79.178, 'train_steps_per_second': 4.952, 'total_flos': 2.055046283595774e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.79
  predict_samples_per_second =    265.151
  predict_steps_per_second   =     33.144
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_17.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_36.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5990.87 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6758.87 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6756.29 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6877.31 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6924.37 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7056.43 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7244.70 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6334.17 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6685.59 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7319.75 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6971.56 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7042.92 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6878.37 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.5649, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0694, 'eval_samples_per_second': 498.79, 'eval_steps_per_second': 62.552, 'epoch': 1.0}
{'loss': 2.5649, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0738, 'eval_samples_per_second': 498.073, 'eval_steps_per_second': 62.462, 'epoch': 2.0}
{'loss': 2.5649, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0451, 'eval_samples_per_second': 502.767, 'eval_steps_per_second': 63.051, 'epoch': 3.0}
{'loss': 2.5649, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0383, 'eval_samples_per_second': 503.905, 'eval_steps_per_second': 63.194, 'epoch': 4.0}
{'loss': 2.5649, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0327, 'eval_samples_per_second': 504.838, 'eval_steps_per_second': 63.311, 'epoch': 5.0}
{'loss': 2.5649, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0444, 'eval_samples_per_second': 502.896, 'eval_steps_per_second': 63.067, 'epoch': 6.0}
{'loss': 2.5649, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1187, 'eval_samples_per_second': 490.909, 'eval_steps_per_second': 61.564, 'epoch': 7.0}
{'loss': 2.5649, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0425, 'eval_samples_per_second': 503.197, 'eval_steps_per_second': 63.105, 'epoch': 8.0}
{'loss': 2.5649, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0319, 'eval_samples_per_second': 504.963, 'eval_steps_per_second': 63.327, 'epoch': 9.0}
{'loss': 2.5649, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.066, 'eval_steps_per_second': 63.214, 'epoch': 10.0}
{'loss': 2.5649, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0487, 'eval_samples_per_second': 502.187, 'eval_steps_per_second': 62.978, 'epoch': 11.0}
{'loss': 2.5649, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0431, 'eval_samples_per_second': 503.1, 'eval_steps_per_second': 63.093, 'epoch': 12.0}
{'loss': 2.5649, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1224, 'eval_samples_per_second': 490.334, 'eval_steps_per_second': 61.492, 'epoch': 13.0}
{'loss': 2.5649, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.044, 'eval_samples_per_second': 502.953, 'eval_steps_per_second': 63.074, 'epoch': 14.0}
{'loss': 2.5649, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0594, 'eval_samples_per_second': 500.421, 'eval_steps_per_second': 62.757, 'epoch': 15.0}
{'loss': 2.5649, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0377, 'eval_samples_per_second': 504.001, 'eval_steps_per_second': 63.206, 'epoch': 16.0}
{'loss': 2.5649, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0505, 'eval_samples_per_second': 501.89, 'eval_steps_per_second': 62.941, 'epoch': 17.0}
{'loss': 2.5649, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.039, 'eval_samples_per_second': 503.792, 'eval_steps_per_second': 63.18, 'epoch': 18.0}
{'loss': 2.5649, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0458, 'eval_samples_per_second': 502.662, 'eval_steps_per_second': 63.038, 'epoch': 19.0}
{'loss': 2.5649, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1203, 'eval_samples_per_second': 490.655, 'eval_steps_per_second': 61.532, 'epoch': 20.0}
{'loss': 2.5649, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0348, 'eval_samples_per_second': 504.486, 'eval_steps_per_second': 63.267, 'epoch': 21.0}
{'loss': 2.5649, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.114, 'eval_steps_per_second': 63.22, 'epoch': 22.0}
{'loss': 2.5649, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0351, 'eval_samples_per_second': 504.424, 'eval_steps_per_second': 63.259, 'epoch': 23.0}
{'loss': 2.5649, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0415, 'eval_samples_per_second': 503.378, 'eval_steps_per_second': 63.128, 'epoch': 24.0}
{'train_runtime': 846.4039, 'train_samples_per_second': 244.819, 'train_steps_per_second': 3.828, 'train_loss': 2.5649467939212, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     2.5649
  train_runtime            = 0:14:06.40
  train_samples            =       8634
  train_samples_per_second =    244.819
  train_steps_per_second   =      3.828
[{'loss': 2.5649, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0694, 'eval_samples_per_second': 498.79, 'eval_steps_per_second': 62.552, 'epoch': 1.0, 'step': 135}, {'loss': 2.5649, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0738, 'eval_samples_per_second': 498.073, 'eval_steps_per_second': 62.462, 'epoch': 2.0, 'step': 270}, {'loss': 2.5649, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0451, 'eval_samples_per_second': 502.767, 'eval_steps_per_second': 63.051, 'epoch': 3.0, 'step': 405}, {'loss': 2.5649, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0383, 'eval_samples_per_second': 503.905, 'eval_steps_per_second': 63.194, 'epoch': 4.0, 'step': 540}, {'loss': 2.5649, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0327, 'eval_samples_per_second': 504.838, 'eval_steps_per_second': 63.311, 'epoch': 5.0, 'step': 675}, {'loss': 2.5649, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0444, 'eval_samples_per_second': 502.896, 'eval_steps_per_second': 63.067, 'epoch': 6.0, 'step': 810}, {'loss': 2.5649, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1187, 'eval_samples_per_second': 490.909, 'eval_steps_per_second': 61.564, 'epoch': 7.0, 'step': 945}, {'loss': 2.5649, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0425, 'eval_samples_per_second': 503.197, 'eval_steps_per_second': 63.105, 'epoch': 8.0, 'step': 1080}, {'loss': 2.5649, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0319, 'eval_samples_per_second': 504.963, 'eval_steps_per_second': 63.327, 'epoch': 9.0, 'step': 1215}, {'loss': 2.5649, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0373, 'eval_samples_per_second': 504.066, 'eval_steps_per_second': 63.214, 'epoch': 10.0, 'step': 1350}, {'loss': 2.5649, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0487, 'eval_samples_per_second': 502.187, 'eval_steps_per_second': 62.978, 'epoch': 11.0, 'step': 1485}, {'loss': 2.5649, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0431, 'eval_samples_per_second': 503.1, 'eval_steps_per_second': 63.093, 'epoch': 12.0, 'step': 1620}, {'loss': 2.5649, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1224, 'eval_samples_per_second': 490.334, 'eval_steps_per_second': 61.492, 'epoch': 13.0, 'step': 1755}, {'loss': 2.5649, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.044, 'eval_samples_per_second': 502.953, 'eval_steps_per_second': 63.074, 'epoch': 14.0, 'step': 1890}, {'loss': 2.5649, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0594, 'eval_samples_per_second': 500.421, 'eval_steps_per_second': 62.757, 'epoch': 15.0, 'step': 2025}, {'loss': 2.5649, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0377, 'eval_samples_per_second': 504.001, 'eval_steps_per_second': 63.206, 'epoch': 16.0, 'step': 2160}, {'loss': 2.5649, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0505, 'eval_samples_per_second': 501.89, 'eval_steps_per_second': 62.941, 'epoch': 17.0, 'step': 2295}, {'loss': 2.5649, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.039, 'eval_samples_per_second': 503.792, 'eval_steps_per_second': 63.18, 'epoch': 18.0, 'step': 2430}, {'loss': 2.5649, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0458, 'eval_samples_per_second': 502.662, 'eval_steps_per_second': 63.038, 'epoch': 19.0, 'step': 2565}, {'loss': 2.5649, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.1203, 'eval_samples_per_second': 490.655, 'eval_steps_per_second': 61.532, 'epoch': 20.0, 'step': 2700}, {'loss': 2.5649, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0348, 'eval_samples_per_second': 504.486, 'eval_steps_per_second': 63.267, 'epoch': 21.0, 'step': 2835}, {'loss': 2.5649, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.037, 'eval_samples_per_second': 504.114, 'eval_steps_per_second': 63.22, 'epoch': 22.0, 'step': 2970}, {'loss': 2.5649, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0351, 'eval_samples_per_second': 504.424, 'eval_steps_per_second': 63.259, 'epoch': 23.0, 'step': 3105}, {'loss': 2.5649, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0010093497662558436, 'eval_recall': 0.021664766248574687, 'eval_f1': 0.0019288360996903712, 'eval_accuracy': 0.2523353663244036, 'eval_runtime': 3.0415, 'eval_samples_per_second': 503.378, 'eval_steps_per_second': 63.128, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 846.4039, 'train_samples_per_second': 244.819, 'train_steps_per_second': 3.828, 'total_flos': 7642265274881820.0, 'train_loss': 2.5649467939212, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =      0.249
  predict_f1                 =     0.0017
  predict_loss               =     2.5649
  predict_precision          =     0.0009
  predict_recall             =      0.019
  predict_runtime            = 0:00:02.54
  predict_samples_per_second =    500.371
  predict_steps_per_second   =     62.546
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_36.json completed. F1: 0.0016801680168016802
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_35.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5532.06 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6655.91 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6789.54 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6975.41 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7106.68 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7247.82 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7423.01 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6484.65 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6799.22 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7524.98 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7125.22 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7267.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7044.40 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1945, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.13547798991203308, 'eval_precision': 0.5097142857142857, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5091324200913242, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 4.6606, 'eval_samples_per_second': 328.496, 'eval_steps_per_second': 41.196, 'epoch': 1.0}
{'loss': 0.109, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.16134271025657654, 'eval_precision': 0.6254681647940075, 'eval_recall': 0.3808437856328392, 'eval_f1': 0.4734231041814316, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.449, 'eval_steps_per_second': 41.316, 'epoch': 2.0}
{'loss': 0.0605, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.17629460990428925, 'eval_precision': 0.40497076023391815, 'eval_recall': 0.6316989737742303, 'eval_f1': 0.4935412026726058, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.017, 'eval_steps_per_second': 41.261, 'epoch': 3.0}
{'loss': 0.0348, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.19948701560497284, 'eval_precision': 0.5236447520184544, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5206422018348623, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6464, 'eval_samples_per_second': 329.506, 'eval_steps_per_second': 41.323, 'epoch': 4.0}
{'loss': 0.0206, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.21137264370918274, 'eval_precision': 0.5273159144893111, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5165794066317626, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 4.6468, 'eval_samples_per_second': 329.476, 'eval_steps_per_second': 41.319, 'epoch': 5.0}
{'loss': 0.0112, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2512115240097046, 'eval_precision': 0.55125, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5259391771019678, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.571, 'eval_steps_per_second': 41.331, 'epoch': 6.0}
{'loss': 0.0073, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.263975590467453, 'eval_precision': 0.5564102564102564, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.523838261919131, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.7253, 'eval_samples_per_second': 323.998, 'eval_steps_per_second': 40.632, 'epoch': 7.0}
{'loss': 0.0058, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.28067079186439514, 'eval_precision': 0.5568445475638051, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.552041403105233, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.055, 'eval_steps_per_second': 41.266, 'epoch': 8.0}
{'loss': 0.0047, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3024854362010956, 'eval_precision': 0.4479338842975207, 'eval_recall': 0.6180159635119726, 'eval_f1': 0.5194058457115477, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 4.6497, 'eval_samples_per_second': 329.265, 'eval_steps_per_second': 41.293, 'epoch': 9.0}
{'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3156464099884033, 'eval_precision': 0.5484633569739953, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5385954730121881, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.707, 'eval_steps_per_second': 41.223, 'epoch': 10.0}
{'loss': 0.0021, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.33546245098114014, 'eval_precision': 0.5354330708661418, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5390713476783692, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.231, 'eval_steps_per_second': 41.288, 'epoch': 11.0}
{'loss': 0.0018, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.33692339062690735, 'eval_precision': 0.5385427666314678, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5592105263157895, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 12.0}
{'loss': 0.0018, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.35812750458717346, 'eval_precision': 0.5572792362768496, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5446064139941691, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.6463, 'eval_samples_per_second': 329.506, 'eval_steps_per_second': 41.323, 'epoch': 13.0}
{'loss': 0.0015, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.35522356629371643, 'eval_precision': 0.5795868772782503, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5611764705882354, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.378, 'eval_steps_per_second': 41.307, 'epoch': 14.0}
{'loss': 0.0012, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.355271577835083, 'eval_precision': 0.5248447204968945, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.5501899077590885, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6382, 'eval_samples_per_second': 330.083, 'eval_steps_per_second': 41.395, 'epoch': 15.0}
{'loss': 0.0012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.38255575299263, 'eval_precision': 0.577020202020202, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5476333133612942, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6483, 'eval_samples_per_second': 329.367, 'eval_steps_per_second': 41.305, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3616383671760559, 'eval_precision': 0.537180910099889, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5444319460067492, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.644, 'eval_samples_per_second': 329.675, 'eval_steps_per_second': 41.344, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3537318706512451, 'eval_precision': 0.551094890510949, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5332548557975281, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6433, 'eval_samples_per_second': 329.724, 'eval_steps_per_second': 41.35, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.36830833554267883, 'eval_precision': 0.5454545454545454, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5531197301854974, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.6371, 'eval_samples_per_second': 330.162, 'eval_steps_per_second': 41.405, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3819142282009125, 'eval_precision': 0.5587892898719441, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5529953917050691, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6394, 'eval_samples_per_second': 329.998, 'eval_steps_per_second': 41.385, 'epoch': 20.0}
{'loss': 0.0007, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.37732890248298645, 'eval_precision': 0.554932735426009, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5596382136800453, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.905, 'eval_steps_per_second': 41.373, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.37911731004714966, 'eval_precision': 0.5586206896551724, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5563823697767601, 'eval_accuracy': 0.9557245425770092, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.281, 'eval_steps_per_second': 41.295, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.38574692606925964, 'eval_precision': 0.5617070357554786, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5584862385321101, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.319, 'eval_steps_per_second': 41.299, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.389806866645813, 'eval_precision': 0.5585168018539977, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.554022988505747, 'eval_accuracy': 0.9559947502509071, 'eval_runtime': 4.6409, 'eval_samples_per_second': 329.893, 'eval_steps_per_second': 41.371, 'epoch': 24.0}
{'train_runtime': 2110.9058, 'train_samples_per_second': 98.164, 'train_steps_per_second': 3.07, 'train_loss': 0.019365927435883126, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0194
  train_runtime            = 0:35:10.90
  train_samples            =       8634
  train_samples_per_second =     98.164
  train_steps_per_second   =       3.07
[{'loss': 0.1945, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.13547798991203308, 'eval_precision': 0.5097142857142857, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5091324200913242, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 4.6606, 'eval_samples_per_second': 328.496, 'eval_steps_per_second': 41.196, 'epoch': 1.0, 'step': 270}, {'loss': 0.109, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.16134271025657654, 'eval_precision': 0.6254681647940075, 'eval_recall': 0.3808437856328392, 'eval_f1': 0.4734231041814316, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.449, 'eval_steps_per_second': 41.316, 'epoch': 2.0, 'step': 540}, {'loss': 0.0605, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.17629460990428925, 'eval_precision': 0.40497076023391815, 'eval_recall': 0.6316989737742303, 'eval_f1': 0.4935412026726058, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 4.6533, 'eval_samples_per_second': 329.017, 'eval_steps_per_second': 41.261, 'epoch': 3.0, 'step': 810}, {'loss': 0.0348, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.19948701560497284, 'eval_precision': 0.5236447520184544, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5206422018348623, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6464, 'eval_samples_per_second': 329.506, 'eval_steps_per_second': 41.323, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0206, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.21137264370918274, 'eval_precision': 0.5273159144893111, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5165794066317626, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 4.6468, 'eval_samples_per_second': 329.476, 'eval_steps_per_second': 41.319, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0112, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.2512115240097046, 'eval_precision': 0.55125, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5259391771019678, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.571, 'eval_steps_per_second': 41.331, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0073, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.263975590467453, 'eval_precision': 0.5564102564102564, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.523838261919131, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.7253, 'eval_samples_per_second': 323.998, 'eval_steps_per_second': 40.632, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0058, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.28067079186439514, 'eval_precision': 0.5568445475638051, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.552041403105233, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.055, 'eval_steps_per_second': 41.266, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0047, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3024854362010956, 'eval_precision': 0.4479338842975207, 'eval_recall': 0.6180159635119726, 'eval_f1': 0.5194058457115477, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 4.6497, 'eval_samples_per_second': 329.265, 'eval_steps_per_second': 41.293, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3156464099884033, 'eval_precision': 0.5484633569739953, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5385954730121881, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.707, 'eval_steps_per_second': 41.223, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0021, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.33546245098114014, 'eval_precision': 0.5354330708661418, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5390713476783692, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.231, 'eval_steps_per_second': 41.288, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0018, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.33692339062690735, 'eval_precision': 0.5385427666314678, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5592105263157895, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.212, 'eval_steps_per_second': 41.286, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0018, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.35812750458717346, 'eval_precision': 0.5572792362768496, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5446064139941691, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.6463, 'eval_samples_per_second': 329.506, 'eval_steps_per_second': 41.323, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0015, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.35522356629371643, 'eval_precision': 0.5795868772782503, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5611764705882354, 'eval_accuracy': 0.9551455261329421, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.378, 'eval_steps_per_second': 41.307, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0012, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.355271577835083, 'eval_precision': 0.5248447204968945, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.5501899077590885, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6382, 'eval_samples_per_second': 330.083, 'eval_steps_per_second': 41.395, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.38255575299263, 'eval_precision': 0.577020202020202, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5476333133612942, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6483, 'eval_samples_per_second': 329.367, 'eval_steps_per_second': 41.305, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3616383671760559, 'eval_precision': 0.537180910099889, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5444319460067492, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.644, 'eval_samples_per_second': 329.675, 'eval_steps_per_second': 41.344, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.3537318706512451, 'eval_precision': 0.551094890510949, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5332548557975281, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6433, 'eval_samples_per_second': 329.724, 'eval_steps_per_second': 41.35, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.36830833554267883, 'eval_precision': 0.5454545454545454, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5531197301854974, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.6371, 'eval_samples_per_second': 330.162, 'eval_steps_per_second': 41.405, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.3819142282009125, 'eval_precision': 0.5587892898719441, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5529953917050691, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6394, 'eval_samples_per_second': 329.998, 'eval_steps_per_second': 41.385, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0007, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.37732890248298645, 'eval_precision': 0.554932735426009, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5596382136800453, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.905, 'eval_steps_per_second': 41.373, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.37911731004714966, 'eval_precision': 0.5586206896551724, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5563823697767601, 'eval_accuracy': 0.9557245425770092, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.281, 'eval_steps_per_second': 41.295, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.38574692606925964, 'eval_precision': 0.5617070357554786, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5584862385321101, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.319, 'eval_steps_per_second': 41.299, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.389806866645813, 'eval_precision': 0.5585168018539977, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.554022988505747, 'eval_accuracy': 0.9559947502509071, 'eval_runtime': 4.6409, 'eval_samples_per_second': 329.893, 'eval_steps_per_second': 41.371, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2110.9058, 'train_samples_per_second': 98.164, 'train_steps_per_second': 3.07, 'total_flos': 2.2848307215255972e+16, 'train_loss': 0.019365927435883126, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9511
  predict_f1                 =     0.4765
  predict_loss               =     0.1519
  predict_precision          =     0.4913
  predict_recall             =     0.4626
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =     325.78
  predict_steps_per_second   =     40.722
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_35.json completed. F1: 0.47652417659425367
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_22.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_22.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5986.01 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6768.75 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6727.00 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6839.37 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6922.94 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7054.99 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6227.29 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6557.73 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6667.72 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7312.02 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6941.82 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6991.28 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6812.15 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NB-BERT_base/checkpoint-540 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2716, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.211644247174263, 'eval_precision': 0.2815405046480744, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.2601226993865031, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 2.3842, 'eval_samples_per_second': 642.147, 'eval_steps_per_second': 80.531, 'epoch': 1.0}
{'loss': 0.1813, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.21177975833415985, 'eval_precision': 0.2603092783505155, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24440411373260737, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3526, 'eval_samples_per_second': 650.765, 'eval_steps_per_second': 81.611, 'epoch': 2.0}
{'loss': 0.1241, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.250007301568985, 'eval_precision': 0.25267665952890794, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2606294864715627, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.378, 'eval_steps_per_second': 81.437, 'epoch': 3.0}
{'loss': 0.0868, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2848096191883087, 'eval_precision': 0.262, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27916888652104427, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.961, 'eval_steps_per_second': 81.51, 'epoch': 4.0}
{'loss': 0.0599, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.3292348086833954, 'eval_precision': 0.2849673202614379, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.2655298416565164, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.698, 'eval_steps_per_second': 81.603, 'epoch': 5.0}
{'loss': 0.0398, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.34157153964042664, 'eval_precision': 0.2872467222884386, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2808857808857809, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3551, 'eval_samples_per_second': 650.079, 'eval_steps_per_second': 81.525, 'epoch': 6.0}
{'loss': 0.0266, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.379891037940979, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.972, 'eval_steps_per_second': 81.386, 'epoch': 7.0}
{'loss': 0.0172, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.40041103959083557, 'eval_precision': 0.2733668341708543, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29059829059829057, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.649, 'eval_steps_per_second': 81.471, 'epoch': 8.0}
{'loss': 0.0116, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.43154266476631165, 'eval_precision': 0.296045197740113, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29738933030646997, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.702, 'eval_steps_per_second': 81.603, 'epoch': 9.0}
{'loss': 0.009, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.45893168449401855, 'eval_precision': 0.2952503209242619, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2777777777777778, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.382, 'eval_steps_per_second': 81.689, 'epoch': 10.0}
{'loss': 0.0066, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4460493326187134, 'eval_precision': 0.27319587628865977, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28695181375203027, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.228, 'eval_steps_per_second': 81.544, 'epoch': 11.0}
{'loss': 0.0051, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.47481846809387207, 'eval_precision': 0.2902208201892745, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3019693654266959, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.942, 'eval_steps_per_second': 81.634, 'epoch': 12.0}
{'loss': 0.0048, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.47629937529563904, 'eval_precision': 0.28883774453394706, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.28751431844215347, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3481, 'eval_samples_per_second': 652.018, 'eval_steps_per_second': 81.768, 'epoch': 13.0}
{'loss': 0.0034, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4914756417274475, 'eval_precision': 0.33877551020408164, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.3089330024813896, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.688, 'eval_steps_per_second': 81.476, 'epoch': 14.0}
{'loss': 0.0022, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5075029134750366, 'eval_precision': 0.3293010752688172, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.30228254164096235, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.504, 'eval_steps_per_second': 81.704, 'epoch': 15.0}
{'loss': 0.0024, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.5433444976806641, 'eval_precision': 0.28874734607218683, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29906542056074764, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.17, 'eval_steps_per_second': 81.913, 'epoch': 16.0}
{'loss': 0.002, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.5526576042175293, 'eval_precision': 0.32907801418439714, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.293299620733249, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.564, 'eval_steps_per_second': 81.711, 'epoch': 17.0}
{'loss': 0.0014, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5380364060401917, 'eval_precision': 0.29073170731707315, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.31335436382755, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.3467, 'eval_samples_per_second': 652.405, 'eval_steps_per_second': 81.817, 'epoch': 18.0}
{'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.5548481345176697, 'eval_precision': 0.3236040609137056, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3063063063063063, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.3508, 'eval_samples_per_second': 651.267, 'eval_steps_per_second': 81.674, 'epoch': 19.0}
{'loss': 0.0011, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.5591408014297485, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.702, 'eval_steps_per_second': 81.603, 'epoch': 20.0}
{'loss': 0.0006, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5592876672744751, 'eval_precision': 0.3231132075471698, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3176811594202899, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 2.4298, 'eval_samples_per_second': 630.099, 'eval_steps_per_second': 79.02, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5561479926109314, 'eval_precision': 0.31887456037514655, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.31445086705202313, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.793, 'eval_steps_per_second': 81.615, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5646358728408813, 'eval_precision': 0.3162901307966706, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.30966239813736907, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3552, 'eval_samples_per_second': 650.063, 'eval_steps_per_second': 81.523, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5645286440849304, 'eval_precision': 0.31770222743259086, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3132947976878612, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.411, 'eval_steps_per_second': 81.692, 'epoch': 24.0}
{'train_runtime': 1031.1114, 'train_samples_per_second': 200.964, 'train_steps_per_second': 12.569, 'train_loss': 0.035804839435113985, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0358
  train_runtime            = 0:17:11.11
  train_samples            =       8634
  train_samples_per_second =    200.964
  train_steps_per_second   =     12.569
[{'loss': 0.2716, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.211644247174263, 'eval_precision': 0.2815405046480744, 'eval_recall': 0.24173318129988597, 'eval_f1': 0.2601226993865031, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 2.3842, 'eval_samples_per_second': 642.147, 'eval_steps_per_second': 80.531, 'epoch': 1.0, 'step': 540}, {'loss': 0.1813, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.21177975833415985, 'eval_precision': 0.2603092783505155, 'eval_recall': 0.23033067274800456, 'eval_f1': 0.24440411373260737, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3526, 'eval_samples_per_second': 650.765, 'eval_steps_per_second': 81.611, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1241, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.250007301568985, 'eval_precision': 0.25267665952890794, 'eval_recall': 0.2690992018244014, 'eval_f1': 0.2606294864715627, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.378, 'eval_steps_per_second': 81.437, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0868, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.2848096191883087, 'eval_precision': 0.262, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.27916888652104427, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.961, 'eval_steps_per_second': 81.51, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0599, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.3292348086833954, 'eval_precision': 0.2849673202614379, 'eval_recall': 0.24857468643101482, 'eval_f1': 0.2655298416565164, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.698, 'eval_steps_per_second': 81.603, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0398, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.34157153964042664, 'eval_precision': 0.2872467222884386, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.2808857808857809, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.3551, 'eval_samples_per_second': 650.079, 'eval_steps_per_second': 81.525, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0266, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.379891037940979, 'eval_precision': 0.27040816326530615, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28540656973613354, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.972, 'eval_steps_per_second': 81.386, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0172, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.40041103959083557, 'eval_precision': 0.2733668341708543, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29059829059829057, 'eval_accuracy': 0.9325638848143287, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.649, 'eval_steps_per_second': 81.471, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0116, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.43154266476631165, 'eval_precision': 0.296045197740113, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.29738933030646997, 'eval_accuracy': 0.9358449779973751, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.702, 'eval_steps_per_second': 81.603, 'epoch': 9.0, 'step': 4860}, {'loss': 0.009, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.45893168449401855, 'eval_precision': 0.2952503209242619, 'eval_recall': 0.26225769669327254, 'eval_f1': 0.2777777777777778, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.382, 'eval_steps_per_second': 81.689, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0066, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.4460493326187134, 'eval_precision': 0.27319587628865977, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.28695181375203027, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.228, 'eval_steps_per_second': 81.544, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0051, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.47481846809387207, 'eval_precision': 0.2902208201892745, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3019693654266959, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.352, 'eval_samples_per_second': 650.942, 'eval_steps_per_second': 81.634, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0048, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.47629937529563904, 'eval_precision': 0.28883774453394706, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.28751431844215347, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3481, 'eval_samples_per_second': 652.018, 'eval_steps_per_second': 81.768, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0034, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.4914756417274475, 'eval_precision': 0.33877551020408164, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.3089330024813896, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 2.3565, 'eval_samples_per_second': 649.688, 'eval_steps_per_second': 81.476, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0022, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.5075029134750366, 'eval_precision': 0.3293010752688172, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.30228254164096235, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.504, 'eval_steps_per_second': 81.704, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0024, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.5433444976806641, 'eval_precision': 0.28874734607218683, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29906542056074764, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.17, 'eval_steps_per_second': 81.913, 'epoch': 16.0, 'step': 8640}, {'loss': 0.002, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.5526576042175293, 'eval_precision': 0.32907801418439714, 'eval_recall': 0.2645381984036488, 'eval_f1': 0.293299620733249, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.564, 'eval_steps_per_second': 81.711, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0014, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.5380364060401917, 'eval_precision': 0.29073170731707315, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.31335436382755, 'eval_accuracy': 0.933799119895005, 'eval_runtime': 2.3467, 'eval_samples_per_second': 652.405, 'eval_steps_per_second': 81.817, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0009, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5548481345176697, 'eval_precision': 0.3236040609137056, 'eval_recall': 0.29076396807297605, 'eval_f1': 0.3063063063063063, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.3508, 'eval_samples_per_second': 651.267, 'eval_steps_per_second': 81.674, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0011, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5591408014297485, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.702, 'eval_steps_per_second': 81.603, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0006, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.5592876672744751, 'eval_precision': 0.3231132075471698, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3176811594202899, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 2.4298, 'eval_samples_per_second': 630.099, 'eval_steps_per_second': 79.02, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.5561479926109314, 'eval_precision': 0.31887456037514655, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.31445086705202313, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 2.3525, 'eval_samples_per_second': 650.793, 'eval_steps_per_second': 81.615, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5646358728408813, 'eval_precision': 0.3162901307966706, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.30966239813736907, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3552, 'eval_samples_per_second': 650.063, 'eval_steps_per_second': 81.523, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5645286440849304, 'eval_precision': 0.31770222743259086, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3132947976878612, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.411, 'eval_steps_per_second': 81.692, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1031.1114, 'train_samples_per_second': 200.964, 'train_steps_per_second': 12.569, 'total_flos': 6897940449212160.0, 'train_loss': 0.035804839435113985, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9371
  predict_f1                 =     0.2335
  predict_loss               =     0.2243
  predict_precision          =     0.2681
  predict_recall             =     0.2068
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    648.165
  predict_steps_per_second   =     81.021
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_22.json completed. F1: 0.23348694316436253
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_39.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7072.92 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7485.97 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7256.52 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7282.39 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7298.13 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7386.18 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7564.06 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6576.92 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7049.74 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7588.42 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7226.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7246.73 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7086.42 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2791, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.16649389266967773, 'eval_precision': 0.38762214983713356, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.3971078976640711, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 4.6622, 'eval_samples_per_second': 328.388, 'eval_steps_per_second': 41.183, 'epoch': 1.0}
{'loss': 0.1531, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.14127840101718903, 'eval_precision': 0.4994606256742179, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5133037694013304, 'eval_accuracy': 0.9526364548753185, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.443, 'eval_steps_per_second': 41.315, 'epoch': 2.0}
{'loss': 0.1185, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.13965857028961182, 'eval_precision': 0.5589041095890411, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.5077784691972621, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.97, 'eval_steps_per_second': 41.256, 'epoch': 3.0}
{'loss': 0.0903, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.14433608949184418, 'eval_precision': 0.5142857142857142, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5334796926454446, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6587, 'eval_samples_per_second': 328.635, 'eval_steps_per_second': 41.213, 'epoch': 4.0}
{'loss': 0.0689, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.15347981452941895, 'eval_precision': 0.5095338983050848, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5282811641954969, 'eval_accuracy': 0.9535628811858257, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.654, 'eval_steps_per_second': 41.341, 'epoch': 5.0}
{'loss': 0.0532, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.17858968675136566, 'eval_precision': 0.5493975903614458, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5342706502636204, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6466, 'eval_samples_per_second': 329.49, 'eval_steps_per_second': 41.321, 'epoch': 6.0}
{'loss': 0.0421, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.18032537400722504, 'eval_precision': 0.4658158614402917, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5177304964539007, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 4.7232, 'eval_samples_per_second': 324.147, 'eval_steps_per_second': 40.651, 'epoch': 7.0}
{'loss': 0.0342, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.191300630569458, 'eval_precision': 0.5034550839091807, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5396825396825397, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 4.6442, 'eval_samples_per_second': 329.661, 'eval_steps_per_second': 41.342, 'epoch': 8.0}
{'loss': 0.0273, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.2040807455778122, 'eval_precision': 0.4964249233912155, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5237068965517241, 'eval_accuracy': 0.9529066625492164, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.874, 'eval_steps_per_second': 41.369, 'epoch': 9.0}
{'loss': 0.023, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.22072337567806244, 'eval_precision': 0.503030303030303, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.533476164970541, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6507, 'eval_samples_per_second': 329.2, 'eval_steps_per_second': 41.284, 'epoch': 10.0}
{'loss': 0.0187, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.23011665046215057, 'eval_precision': 0.4806054872280038, 'eval_recall': 0.5792474344355758, 'eval_f1': 0.5253360910031024, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6438, 'eval_samples_per_second': 329.684, 'eval_steps_per_second': 41.345, 'epoch': 11.0}
{'loss': 0.0157, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.24644429981708527, 'eval_precision': 0.5195652173913043, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.531997774067891, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.624, 'eval_steps_per_second': 41.338, 'epoch': 12.0}
{'loss': 0.0127, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.25349852442741394, 'eval_precision': 0.5243362831858407, 'eval_recall': 0.540478905359179, 'eval_f1': 0.53228523301516, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6549, 'eval_samples_per_second': 328.902, 'eval_steps_per_second': 41.247, 'epoch': 13.0}
{'loss': 0.0105, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.26311784982681274, 'eval_precision': 0.5232300884955752, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5311622683885457, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.952, 'eval_steps_per_second': 41.253, 'epoch': 14.0}
{'loss': 0.0092, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.26658180356025696, 'eval_precision': 0.5020040080160321, 'eval_recall': 0.5712656784492588, 'eval_f1': 0.5344, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.483, 'eval_steps_per_second': 41.32, 'epoch': 15.0}
{'loss': 0.0077, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.27503031492233276, 'eval_precision': 0.5035677879714577, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5317545748116255, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.6479, 'eval_samples_per_second': 329.395, 'eval_steps_per_second': 41.309, 'epoch': 16.0}
{'loss': 0.007, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.2853333055973053, 'eval_precision': 0.5087358684480987, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5351351351351351, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 4.6339, 'eval_samples_per_second': 330.392, 'eval_steps_per_second': 41.434, 'epoch': 17.0}
{'loss': 0.0066, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.28569766879081726, 'eval_precision': 0.5045871559633027, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5328310010764262, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.373, 'eval_steps_per_second': 41.306, 'epoch': 18.0}
{'loss': 0.0059, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.2850101888179779, 'eval_precision': 0.5274122807017544, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5377305757406372, 'eval_accuracy': 0.9551841272292133, 'eval_runtime': 4.6354, 'eval_samples_per_second': 330.284, 'eval_steps_per_second': 41.42, 'epoch': 19.0}
{'loss': 0.0049, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.2913770079612732, 'eval_precision': 0.5188679245283019, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5406881485527034, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 4.6374, 'eval_samples_per_second': 330.141, 'eval_steps_per_second': 41.402, 'epoch': 20.0}
{'loss': 0.0045, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.2966530919075012, 'eval_precision': 0.5225522552255225, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5319148936170213, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6316, 'eval_samples_per_second': 330.556, 'eval_steps_per_second': 41.454, 'epoch': 21.0}
{'loss': 0.0042, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3012830913066864, 'eval_precision': 0.5222584147665581, 'eval_recall': 0.548460661345496, 'eval_f1': 0.53503893214683, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.6414, 'eval_samples_per_second': 329.855, 'eval_steps_per_second': 41.367, 'epoch': 22.0}
{'loss': 0.0041, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.304988294839859, 'eval_precision': 0.5253863134657837, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5339315759955132, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.7106, 'eval_samples_per_second': 325.013, 'eval_steps_per_second': 40.759, 'epoch': 23.0}
{'loss': 0.0039, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.30337557196617126, 'eval_precision': 0.5213219616204691, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5388429752066115, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6369, 'eval_samples_per_second': 330.178, 'eval_steps_per_second': 41.407, 'epoch': 24.0}
{'train_runtime': 2088.7973, 'train_samples_per_second': 99.203, 'train_steps_per_second': 1.551, 'train_loss': 0.041891697656225274, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0419
  train_runtime            = 0:34:48.79
  train_samples            =       8634
  train_samples_per_second =     99.203
  train_steps_per_second   =      1.551
[{'loss': 0.2791, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.16649389266967773, 'eval_precision': 0.38762214983713356, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.3971078976640711, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 4.6622, 'eval_samples_per_second': 328.388, 'eval_steps_per_second': 41.183, 'epoch': 1.0, 'step': 135}, {'loss': 0.1531, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.14127840101718903, 'eval_precision': 0.4994606256742179, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5133037694013304, 'eval_accuracy': 0.9526364548753185, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.443, 'eval_steps_per_second': 41.315, 'epoch': 2.0, 'step': 270}, {'loss': 0.1185, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.13965857028961182, 'eval_precision': 0.5589041095890411, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.5077784691972621, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.97, 'eval_steps_per_second': 41.256, 'epoch': 3.0, 'step': 405}, {'loss': 0.0903, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.14433608949184418, 'eval_precision': 0.5142857142857142, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5334796926454446, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.6587, 'eval_samples_per_second': 328.635, 'eval_steps_per_second': 41.213, 'epoch': 4.0, 'step': 540}, {'loss': 0.0689, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.15347981452941895, 'eval_precision': 0.5095338983050848, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5282811641954969, 'eval_accuracy': 0.9535628811858257, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.654, 'eval_steps_per_second': 41.341, 'epoch': 5.0, 'step': 675}, {'loss': 0.0532, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.17858968675136566, 'eval_precision': 0.5493975903614458, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5342706502636204, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6466, 'eval_samples_per_second': 329.49, 'eval_steps_per_second': 41.321, 'epoch': 6.0, 'step': 810}, {'loss': 0.0421, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.18032537400722504, 'eval_precision': 0.4658158614402917, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.5177304964539007, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 4.7232, 'eval_samples_per_second': 324.147, 'eval_steps_per_second': 40.651, 'epoch': 7.0, 'step': 945}, {'loss': 0.0342, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.191300630569458, 'eval_precision': 0.5034550839091807, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5396825396825397, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 4.6442, 'eval_samples_per_second': 329.661, 'eval_steps_per_second': 41.342, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0273, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2040807455778122, 'eval_precision': 0.4964249233912155, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5237068965517241, 'eval_accuracy': 0.9529066625492164, 'eval_runtime': 4.6412, 'eval_samples_per_second': 329.874, 'eval_steps_per_second': 41.369, 'epoch': 9.0, 'step': 1215}, {'loss': 0.023, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.22072337567806244, 'eval_precision': 0.503030303030303, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.533476164970541, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6507, 'eval_samples_per_second': 329.2, 'eval_steps_per_second': 41.284, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0187, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.23011665046215057, 'eval_precision': 0.4806054872280038, 'eval_recall': 0.5792474344355758, 'eval_f1': 0.5253360910031024, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6438, 'eval_samples_per_second': 329.684, 'eval_steps_per_second': 41.345, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0157, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.24644429981708527, 'eval_precision': 0.5195652173913043, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.531997774067891, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.624, 'eval_steps_per_second': 41.338, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0127, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.25349852442741394, 'eval_precision': 0.5243362831858407, 'eval_recall': 0.540478905359179, 'eval_f1': 0.53228523301516, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6549, 'eval_samples_per_second': 328.902, 'eval_steps_per_second': 41.247, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0105, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.26311784982681274, 'eval_precision': 0.5232300884955752, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5311622683885457, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.952, 'eval_steps_per_second': 41.253, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0092, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.26658180356025696, 'eval_precision': 0.5020040080160321, 'eval_recall': 0.5712656784492588, 'eval_f1': 0.5344, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.483, 'eval_steps_per_second': 41.32, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0077, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.27503031492233276, 'eval_precision': 0.5035677879714577, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5317545748116255, 'eval_accuracy': 0.9537172855709102, 'eval_runtime': 4.6479, 'eval_samples_per_second': 329.395, 'eval_steps_per_second': 41.309, 'epoch': 16.0, 'step': 2160}, {'loss': 0.007, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.2853333055973053, 'eval_precision': 0.5087358684480987, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5351351351351351, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 4.6339, 'eval_samples_per_second': 330.392, 'eval_steps_per_second': 41.434, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0066, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.28569766879081726, 'eval_precision': 0.5045871559633027, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5328310010764262, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.373, 'eval_steps_per_second': 41.306, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0059, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2850101888179779, 'eval_precision': 0.5274122807017544, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5377305757406372, 'eval_accuracy': 0.9551841272292133, 'eval_runtime': 4.6354, 'eval_samples_per_second': 330.284, 'eval_steps_per_second': 41.42, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0049, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.2913770079612732, 'eval_precision': 0.5188679245283019, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5406881485527034, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 4.6374, 'eval_samples_per_second': 330.141, 'eval_steps_per_second': 41.402, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0045, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.2966530919075012, 'eval_precision': 0.5225522552255225, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5319148936170213, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.6316, 'eval_samples_per_second': 330.556, 'eval_steps_per_second': 41.454, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0042, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3012830913066864, 'eval_precision': 0.5222584147665581, 'eval_recall': 0.548460661345496, 'eval_f1': 0.53503893214683, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.6414, 'eval_samples_per_second': 329.855, 'eval_steps_per_second': 41.367, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0041, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.304988294839859, 'eval_precision': 0.5253863134657837, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5339315759955132, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.7106, 'eval_samples_per_second': 325.013, 'eval_steps_per_second': 40.759, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0039, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.30337557196617126, 'eval_precision': 0.5213219616204691, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5388429752066115, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6369, 'eval_samples_per_second': 330.178, 'eval_steps_per_second': 41.407, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2088.7973, 'train_samples_per_second': 99.203, 'train_steps_per_second': 1.551, 'total_flos': 2.5991352100330236e+16, 'train_loss': 0.041891697656225274, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9544
  predict_f1                 =     0.4934
  predict_loss               =     0.1439
  predict_precision          =     0.5396
  predict_recall             =     0.4544
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.694
  predict_steps_per_second   =     40.712
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_39.json completed. F1: 0.49335302806499265
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_37.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6105.73 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6865.73 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6823.46 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6937.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7012.44 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7142.47 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7313.21 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6392.79 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6762.04 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7382.66 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7039.85 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7143.20 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6962.26 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0018, 'eval_samples_per_second': 255.092, 'eval_steps_per_second': 31.991, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7656, 'eval_samples_per_second': 265.54, 'eval_steps_per_second': 33.301, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7531, 'eval_samples_per_second': 266.116, 'eval_steps_per_second': 33.373, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7521, 'eval_samples_per_second': 266.162, 'eval_steps_per_second': 33.379, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7365, 'eval_samples_per_second': 266.887, 'eval_steps_per_second': 33.47, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7504, 'eval_samples_per_second': 266.243, 'eval_steps_per_second': 33.389, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7573, 'eval_samples_per_second': 265.922, 'eval_steps_per_second': 33.349, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.609, 'eval_steps_per_second': 33.435, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8175, 'eval_samples_per_second': 263.173, 'eval_steps_per_second': 33.004, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7543, 'eval_samples_per_second': 266.063, 'eval_steps_per_second': 33.366, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.506, 'eval_steps_per_second': 33.422, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7361, 'eval_samples_per_second': 266.906, 'eval_steps_per_second': 33.472, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7564, 'eval_samples_per_second': 265.966, 'eval_steps_per_second': 33.354, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7342, 'eval_samples_per_second': 266.997, 'eval_steps_per_second': 33.484, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7415, 'eval_samples_per_second': 266.655, 'eval_steps_per_second': 33.441, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7507, 'eval_samples_per_second': 266.227, 'eval_steps_per_second': 33.387, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7262, 'eval_samples_per_second': 267.366, 'eval_steps_per_second': 33.53, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7291, 'eval_samples_per_second': 267.231, 'eval_steps_per_second': 33.513, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7451, 'eval_samples_per_second': 266.489, 'eval_steps_per_second': 33.42, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.707, 'eval_steps_per_second': 33.447, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.807, 'eval_steps_per_second': 33.585, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.758, 'eval_samples_per_second': 265.892, 'eval_steps_per_second': 33.345, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7232, 'eval_samples_per_second': 267.51, 'eval_steps_per_second': 33.548, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7247, 'eval_samples_per_second': 267.439, 'eval_steps_per_second': 33.539, 'epoch': 24.0}
{'train_runtime': 2425.2728, 'train_samples_per_second': 85.44, 'train_steps_per_second': 1.336, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:25.27
  train_samples            =       8634
  train_samples_per_second =      85.44
  train_steps_per_second   =      1.336
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0018, 'eval_samples_per_second': 255.092, 'eval_steps_per_second': 31.991, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7656, 'eval_samples_per_second': 265.54, 'eval_steps_per_second': 33.301, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7531, 'eval_samples_per_second': 266.116, 'eval_steps_per_second': 33.373, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7521, 'eval_samples_per_second': 266.162, 'eval_steps_per_second': 33.379, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7365, 'eval_samples_per_second': 266.887, 'eval_steps_per_second': 33.47, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7504, 'eval_samples_per_second': 266.243, 'eval_steps_per_second': 33.389, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7573, 'eval_samples_per_second': 265.922, 'eval_steps_per_second': 33.349, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7425, 'eval_samples_per_second': 266.609, 'eval_steps_per_second': 33.435, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8175, 'eval_samples_per_second': 263.173, 'eval_steps_per_second': 33.004, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7543, 'eval_samples_per_second': 266.063, 'eval_steps_per_second': 33.366, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.506, 'eval_steps_per_second': 33.422, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7361, 'eval_samples_per_second': 266.906, 'eval_steps_per_second': 33.472, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7564, 'eval_samples_per_second': 265.966, 'eval_steps_per_second': 33.354, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7342, 'eval_samples_per_second': 266.997, 'eval_steps_per_second': 33.484, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7415, 'eval_samples_per_second': 266.655, 'eval_steps_per_second': 33.441, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7507, 'eval_samples_per_second': 266.227, 'eval_steps_per_second': 33.387, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7262, 'eval_samples_per_second': 267.366, 'eval_steps_per_second': 33.53, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7291, 'eval_samples_per_second': 267.231, 'eval_steps_per_second': 33.513, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7451, 'eval_samples_per_second': 266.489, 'eval_steps_per_second': 33.42, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.707, 'eval_steps_per_second': 33.447, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.807, 'eval_steps_per_second': 33.585, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.758, 'eval_samples_per_second': 265.892, 'eval_steps_per_second': 33.345, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7232, 'eval_samples_per_second': 267.51, 'eval_steps_per_second': 33.548, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7247, 'eval_samples_per_second': 267.439, 'eval_steps_per_second': 33.539, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2425.2728, 'train_samples_per_second': 85.44, 'train_steps_per_second': 1.336, 'total_flos': 2.705812061973174e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =    265.785
  predict_steps_per_second   =     33.223
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_37.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_33.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_33.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5333.30 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6334.99 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6464.73 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6635.38 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6742.91 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6892.49 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7101.43 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6240.07 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6500.68 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7244.49 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6855.70 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6967.26 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6792.65 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7305, 'eval_samples_per_second': 267.166, 'eval_steps_per_second': 33.505, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.689, 'eval_samples_per_second': 269.114, 'eval_steps_per_second': 33.749, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6878, 'eval_samples_per_second': 269.173, 'eval_steps_per_second': 33.756, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6949, 'eval_samples_per_second': 268.837, 'eval_steps_per_second': 33.714, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7151, 'eval_samples_per_second': 267.888, 'eval_steps_per_second': 33.595, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7203, 'eval_samples_per_second': 267.642, 'eval_steps_per_second': 33.564, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7085, 'eval_samples_per_second': 268.197, 'eval_steps_per_second': 33.634, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6959, 'eval_samples_per_second': 268.788, 'eval_steps_per_second': 33.708, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6916, 'eval_samples_per_second': 268.993, 'eval_steps_per_second': 33.734, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7054, 'eval_samples_per_second': 268.342, 'eval_steps_per_second': 33.652, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6964, 'eval_samples_per_second': 268.768, 'eval_steps_per_second': 33.706, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7608, 'eval_samples_per_second': 265.763, 'eval_steps_per_second': 33.329, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7079, 'eval_samples_per_second': 268.223, 'eval_steps_per_second': 33.637, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6946, 'eval_samples_per_second': 268.852, 'eval_steps_per_second': 33.716, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6971, 'eval_samples_per_second': 268.732, 'eval_steps_per_second': 33.701, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7094, 'eval_samples_per_second': 268.153, 'eval_steps_per_second': 33.629, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7645, 'eval_samples_per_second': 265.591, 'eval_steps_per_second': 33.307, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.941, 'eval_steps_per_second': 33.602, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7021, 'eval_samples_per_second': 268.499, 'eval_steps_per_second': 33.672, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6992, 'eval_samples_per_second': 268.634, 'eval_steps_per_second': 33.689, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7051, 'eval_samples_per_second': 268.358, 'eval_steps_per_second': 33.654, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6896, 'eval_samples_per_second': 269.09, 'eval_steps_per_second': 33.746, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6921, 'eval_samples_per_second': 268.969, 'eval_steps_per_second': 33.731, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7081, 'eval_samples_per_second': 268.216, 'eval_steps_per_second': 33.636, 'epoch': 24.0}
{'train_runtime': 2429.0067, 'train_samples_per_second': 85.309, 'train_steps_per_second': 2.668, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:29.00
  train_samples            =       8634
  train_samples_per_second =     85.309
  train_steps_per_second   =      2.668
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7305, 'eval_samples_per_second': 267.166, 'eval_steps_per_second': 33.505, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.689, 'eval_samples_per_second': 269.114, 'eval_steps_per_second': 33.749, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6878, 'eval_samples_per_second': 269.173, 'eval_steps_per_second': 33.756, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6949, 'eval_samples_per_second': 268.837, 'eval_steps_per_second': 33.714, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7151, 'eval_samples_per_second': 267.888, 'eval_steps_per_second': 33.595, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7203, 'eval_samples_per_second': 267.642, 'eval_steps_per_second': 33.564, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7085, 'eval_samples_per_second': 268.197, 'eval_steps_per_second': 33.634, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6959, 'eval_samples_per_second': 268.788, 'eval_steps_per_second': 33.708, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6916, 'eval_samples_per_second': 268.993, 'eval_steps_per_second': 33.734, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7054, 'eval_samples_per_second': 268.342, 'eval_steps_per_second': 33.652, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6964, 'eval_samples_per_second': 268.768, 'eval_steps_per_second': 33.706, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7608, 'eval_samples_per_second': 265.763, 'eval_steps_per_second': 33.329, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7079, 'eval_samples_per_second': 268.223, 'eval_steps_per_second': 33.637, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6946, 'eval_samples_per_second': 268.852, 'eval_steps_per_second': 33.716, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6971, 'eval_samples_per_second': 268.732, 'eval_steps_per_second': 33.701, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7094, 'eval_samples_per_second': 268.153, 'eval_steps_per_second': 33.629, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7645, 'eval_samples_per_second': 265.591, 'eval_steps_per_second': 33.307, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.941, 'eval_steps_per_second': 33.602, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7021, 'eval_samples_per_second': 268.499, 'eval_steps_per_second': 33.672, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6992, 'eval_samples_per_second': 268.634, 'eval_steps_per_second': 33.689, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7051, 'eval_samples_per_second': 268.358, 'eval_steps_per_second': 33.654, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6896, 'eval_samples_per_second': 269.09, 'eval_steps_per_second': 33.746, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6921, 'eval_samples_per_second': 268.969, 'eval_steps_per_second': 33.731, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7081, 'eval_samples_per_second': 268.216, 'eval_steps_per_second': 33.636, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2429.0067, 'train_samples_per_second': 85.309, 'train_steps_per_second': 2.668, 'total_flos': 2.3712376746980376e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =    265.942
  predict_steps_per_second   =     33.243
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_33.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_01.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6766.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7178.18 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6986.46 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7023.59 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7065.29 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7017.74 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7239.97 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6350.11 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6793.01 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7380.41 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7003.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7076.58 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6891.64 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NorBERT_3_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7449, 'eval_samples_per_second': 266.496, 'eval_steps_per_second': 33.421, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7394, 'eval_samples_per_second': 266.751, 'eval_steps_per_second': 33.453, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.7, 'eval_steps_per_second': 33.572, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7312, 'eval_samples_per_second': 267.135, 'eval_steps_per_second': 33.501, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7181, 'eval_samples_per_second': 267.744, 'eval_steps_per_second': 33.577, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7149, 'eval_samples_per_second': 267.898, 'eval_steps_per_second': 33.597, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7265, 'eval_samples_per_second': 267.356, 'eval_steps_per_second': 33.529, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7535, 'eval_samples_per_second': 266.099, 'eval_steps_per_second': 33.371, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7279, 'eval_samples_per_second': 267.288, 'eval_steps_per_second': 33.52, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7095, 'eval_samples_per_second': 268.149, 'eval_steps_per_second': 33.628, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7342, 'eval_samples_per_second': 266.996, 'eval_steps_per_second': 33.484, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.331, 'eval_steps_per_second': 33.651, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7186, 'eval_samples_per_second': 267.725, 'eval_steps_per_second': 33.575, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.732, 'eval_samples_per_second': 267.096, 'eval_steps_per_second': 33.496, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7104, 'eval_samples_per_second': 268.106, 'eval_steps_per_second': 33.623, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7121, 'eval_samples_per_second': 268.026, 'eval_steps_per_second': 33.613, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.712, 'eval_samples_per_second': 268.034, 'eval_steps_per_second': 33.614, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.708, 'eval_samples_per_second': 268.218, 'eval_steps_per_second': 33.637, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.787, 'eval_samples_per_second': 264.557, 'eval_steps_per_second': 33.178, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7106, 'eval_samples_per_second': 268.096, 'eval_steps_per_second': 33.621, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7321, 'eval_samples_per_second': 267.095, 'eval_steps_per_second': 33.496, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7146, 'eval_samples_per_second': 267.911, 'eval_steps_per_second': 33.598, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7103, 'eval_samples_per_second': 268.114, 'eval_steps_per_second': 33.624, 'epoch': 24.0}
{'train_runtime': 3347.123, 'train_samples_per_second': 61.909, 'train_steps_per_second': 7.744, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:55:47.12
  train_samples            =       8634
  train_samples_per_second =     61.909
  train_steps_per_second   =      7.744
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7449, 'eval_samples_per_second': 266.496, 'eval_steps_per_second': 33.421, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7394, 'eval_samples_per_second': 266.751, 'eval_steps_per_second': 33.453, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.7, 'eval_steps_per_second': 33.572, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7312, 'eval_samples_per_second': 267.135, 'eval_steps_per_second': 33.501, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7181, 'eval_samples_per_second': 267.744, 'eval_steps_per_second': 33.577, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7149, 'eval_samples_per_second': 267.898, 'eval_steps_per_second': 33.597, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7265, 'eval_samples_per_second': 267.356, 'eval_steps_per_second': 33.529, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7535, 'eval_samples_per_second': 266.099, 'eval_steps_per_second': 33.371, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7279, 'eval_samples_per_second': 267.288, 'eval_steps_per_second': 33.52, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7095, 'eval_samples_per_second': 268.149, 'eval_steps_per_second': 33.628, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7342, 'eval_samples_per_second': 266.996, 'eval_steps_per_second': 33.484, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.331, 'eval_steps_per_second': 33.651, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7186, 'eval_samples_per_second': 267.725, 'eval_steps_per_second': 33.575, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.732, 'eval_samples_per_second': 267.096, 'eval_steps_per_second': 33.496, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7104, 'eval_samples_per_second': 268.106, 'eval_steps_per_second': 33.623, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7121, 'eval_samples_per_second': 268.026, 'eval_steps_per_second': 33.613, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.712, 'eval_samples_per_second': 268.034, 'eval_steps_per_second': 33.614, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.708, 'eval_samples_per_second': 268.218, 'eval_steps_per_second': 33.637, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.787, 'eval_samples_per_second': 264.557, 'eval_steps_per_second': 33.178, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7106, 'eval_samples_per_second': 268.096, 'eval_steps_per_second': 33.621, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7321, 'eval_samples_per_second': 267.095, 'eval_steps_per_second': 33.496, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7146, 'eval_samples_per_second': 267.911, 'eval_steps_per_second': 33.598, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7103, 'eval_samples_per_second': 268.114, 'eval_steps_per_second': 33.624, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3347.123, 'train_samples_per_second': 61.909, 'train_steps_per_second': 7.744, 'total_flos': 1.751000163794622e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =    265.802
  predict_steps_per_second   =     33.225
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_01.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_08.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6752.76 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7221.26 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6993.17 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7046.17 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7098.35 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7220.02 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7383.54 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6426.96 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6862.81 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7383.70 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7028.42 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7166.32 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6986.55 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9744, 'eval_samples_per_second': 514.73, 'eval_steps_per_second': 64.551, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.077, 'eval_steps_per_second': 64.971, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9534, 'eval_samples_per_second': 518.392, 'eval_steps_per_second': 65.011, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9639, 'eval_samples_per_second': 516.546, 'eval_steps_per_second': 64.779, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9843, 'eval_samples_per_second': 513.011, 'eval_steps_per_second': 64.336, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9788, 'eval_samples_per_second': 513.965, 'eval_steps_per_second': 64.455, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.909, 'eval_steps_per_second': 64.574, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.119, 'eval_steps_per_second': 64.976, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0402, 'eval_samples_per_second': 503.585, 'eval_steps_per_second': 63.154, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9672, 'eval_samples_per_second': 515.974, 'eval_steps_per_second': 64.707, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9711, 'eval_samples_per_second': 515.293, 'eval_steps_per_second': 64.622, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.353, 'eval_steps_per_second': 65.006, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.803, 'eval_steps_per_second': 64.686, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.638, 'eval_steps_per_second': 64.916, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9574, 'eval_samples_per_second': 517.681, 'eval_steps_per_second': 64.921, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9649, 'eval_samples_per_second': 516.379, 'eval_steps_per_second': 64.758, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9662, 'eval_samples_per_second': 516.143, 'eval_steps_per_second': 64.729, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9625, 'eval_samples_per_second': 516.794, 'eval_steps_per_second': 64.81, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9643, 'eval_samples_per_second': 516.476, 'eval_steps_per_second': 64.77, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9687, 'eval_samples_per_second': 515.707, 'eval_steps_per_second': 64.674, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9543, 'eval_samples_per_second': 518.227, 'eval_steps_per_second': 64.99, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9615, 'eval_samples_per_second': 516.968, 'eval_steps_per_second': 64.832, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9706, 'eval_samples_per_second': 515.376, 'eval_steps_per_second': 64.632, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9874, 'eval_samples_per_second': 512.492, 'eval_steps_per_second': 64.271, 'epoch': 24.0}
{'train_runtime': 1484.8915, 'train_samples_per_second': 139.55, 'train_steps_per_second': 17.456, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:24:44.89
  train_samples            =       8634
  train_samples_per_second =     139.55
  train_steps_per_second   =     17.456
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9744, 'eval_samples_per_second': 514.73, 'eval_steps_per_second': 64.551, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9552, 'eval_samples_per_second': 518.077, 'eval_steps_per_second': 64.971, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9534, 'eval_samples_per_second': 518.392, 'eval_steps_per_second': 65.011, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9639, 'eval_samples_per_second': 516.546, 'eval_steps_per_second': 64.779, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9843, 'eval_samples_per_second': 513.011, 'eval_steps_per_second': 64.336, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9788, 'eval_samples_per_second': 513.965, 'eval_steps_per_second': 64.455, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.909, 'eval_steps_per_second': 64.574, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.119, 'eval_steps_per_second': 64.976, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0402, 'eval_samples_per_second': 503.585, 'eval_steps_per_second': 63.154, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9672, 'eval_samples_per_second': 515.974, 'eval_steps_per_second': 64.707, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9711, 'eval_samples_per_second': 515.293, 'eval_steps_per_second': 64.622, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9536, 'eval_samples_per_second': 518.353, 'eval_steps_per_second': 65.006, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.803, 'eval_steps_per_second': 64.686, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9577, 'eval_samples_per_second': 517.638, 'eval_steps_per_second': 64.916, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9574, 'eval_samples_per_second': 517.681, 'eval_steps_per_second': 64.921, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9649, 'eval_samples_per_second': 516.379, 'eval_steps_per_second': 64.758, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9662, 'eval_samples_per_second': 516.143, 'eval_steps_per_second': 64.729, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9625, 'eval_samples_per_second': 516.794, 'eval_steps_per_second': 64.81, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9643, 'eval_samples_per_second': 516.476, 'eval_steps_per_second': 64.77, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9687, 'eval_samples_per_second': 515.707, 'eval_steps_per_second': 64.674, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9543, 'eval_samples_per_second': 518.227, 'eval_steps_per_second': 64.99, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9615, 'eval_samples_per_second': 516.968, 'eval_steps_per_second': 64.832, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9706, 'eval_samples_per_second': 515.376, 'eval_steps_per_second': 64.632, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9874, 'eval_samples_per_second': 512.492, 'eval_steps_per_second': 64.271, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1484.8915, 'train_samples_per_second': 139.55, 'train_steps_per_second': 17.456, 'total_flos': 4945638992624460.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    515.264
  predict_steps_per_second   =     64.408
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_08.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_42.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_42.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6208.46 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6929.46 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6819.17 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6903.89 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6961.33 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7093.33 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6250.47 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6584.44 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6714.19 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7271.55 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6906.31 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6977.51 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6786.42 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2512, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1665552854537964, 'eval_precision': 0.42436974789915966, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3808925204274042, 'eval_accuracy': 0.9460356674129545, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.5, 'eval_steps_per_second': 80.826, 'epoch': 1.0}
{'loss': 0.1503, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.15182632207870483, 'eval_precision': 0.44629014396456257, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.4528089887640449, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.079, 'eval_steps_per_second': 81.274, 'epoch': 2.0}
{'loss': 0.1078, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.15398722887039185, 'eval_precision': 0.4834123222748815, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47414294015107494, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.3633, 'eval_samples_per_second': 647.822, 'eval_steps_per_second': 81.242, 'epoch': 3.0}
{'loss': 0.0768, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.1739153116941452, 'eval_precision': 0.4528846153846154, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.49139280125195617, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.749, 'eval_steps_per_second': 81.233, 'epoch': 4.0}
{'loss': 0.0549, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.19442597031593323, 'eval_precision': 0.46540880503144655, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4849808847624249, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.322, 'eval_steps_per_second': 81.556, 'epoch': 5.0}
{'loss': 0.0407, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2042708694934845, 'eval_precision': 0.45235707121364094, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.4813233724653148, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.596, 'eval_steps_per_second': 81.214, 'epoch': 6.0}
{'loss': 0.0312, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.21937881410121918, 'eval_precision': 0.4541947926711668, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.4921630094043887, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.165, 'eval_steps_per_second': 81.912, 'epoch': 7.0}
{'loss': 0.024, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.23775851726531982, 'eval_precision': 0.465161923454367, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5, 'eval_accuracy': 0.947618312360071, 'eval_runtime': 2.3619, 'eval_samples_per_second': 648.196, 'eval_steps_per_second': 81.289, 'epoch': 8.0}
{'loss': 0.0191, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.23997895419597626, 'eval_precision': 0.4495592556317336, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.48366701791359323, 'eval_accuracy': 0.947039295916004, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.988, 'eval_steps_per_second': 81.388, 'epoch': 9.0}
{'loss': 0.0142, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.2656055986881256, 'eval_precision': 0.4731404958677686, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.4964769647696477, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.239, 'eval_steps_per_second': 81.42, 'epoch': 10.0}
{'loss': 0.0116, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.27138423919677734, 'eval_precision': 0.4600389863547758, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.4960588544403573, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.422, 'eval_steps_per_second': 81.568, 'epoch': 11.0}
{'loss': 0.0091, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.28012800216674805, 'eval_precision': 0.4817444219066937, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5099302200751477, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.661, 'eval_steps_per_second': 81.473, 'epoch': 12.0}
{'loss': 0.0073, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.2909235656261444, 'eval_precision': 0.48012889366272826, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.49446902654867253, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3701, 'eval_samples_per_second': 645.975, 'eval_steps_per_second': 81.011, 'epoch': 13.0}
{'loss': 0.0063, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.2972777187824249, 'eval_precision': 0.48829787234042554, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5052283984589983, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.815, 'eval_steps_per_second': 81.492, 'epoch': 14.0}
{'loss': 0.0059, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.2998928427696228, 'eval_precision': 0.4609450337512054, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.4994775339602926, 'eval_accuracy': 0.9479657222265112, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.218, 'eval_steps_per_second': 81.543, 'epoch': 15.0}
{'loss': 0.0045, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.30781129002571106, 'eval_precision': 0.48008171603677224, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5064655172413793, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3509, 'eval_samples_per_second': 651.237, 'eval_steps_per_second': 81.67, 'epoch': 16.0}
{'loss': 0.0047, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.3100281357765198, 'eval_precision': 0.49333333333333335, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4997186268992684, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.4272, 'eval_samples_per_second': 630.766, 'eval_steps_per_second': 79.103, 'epoch': 17.0}
{'loss': 0.0041, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.31312939524650574, 'eval_precision': 0.4695740365111562, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.49704777241009124, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.869, 'eval_steps_per_second': 81.373, 'epoch': 18.0}
{'loss': 0.0031, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.3248876631259918, 'eval_precision': 0.4514018691588785, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.4961479198767335, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3643, 'eval_samples_per_second': 647.538, 'eval_steps_per_second': 81.207, 'epoch': 19.0}
{'loss': 0.003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.3209705650806427, 'eval_precision': 0.47474747474747475, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5034815211569362, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3554, 'eval_samples_per_second': 649.995, 'eval_steps_per_second': 81.515, 'epoch': 20.0}
{'loss': 0.0025, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.3242283761501312, 'eval_precision': 0.47875647668393784, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.501628664495114, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.991, 'eval_steps_per_second': 81.64, 'epoch': 21.0}
{'loss': 0.0024, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3276551365852356, 'eval_precision': 0.4842105263157895, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5035577449370553, 'eval_accuracy': 0.9497413726549834, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.059, 'eval_steps_per_second': 81.648, 'epoch': 22.0}
{'loss': 0.0022, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.3281256854534149, 'eval_precision': 0.47830578512396693, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5018970189701897, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.626, 'eval_steps_per_second': 81.468, 'epoch': 23.0}
{'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.32834696769714355, 'eval_precision': 0.47758081334723673, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.49891067538126366, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.539, 'eval_steps_per_second': 81.332, 'epoch': 24.0}
{'train_runtime': 838.0947, 'train_samples_per_second': 247.247, 'train_steps_per_second': 3.866, 'train_loss': 0.03495260653672395, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.035
  train_runtime            = 0:13:58.09
  train_samples            =       8634
  train_samples_per_second =    247.247
  train_steps_per_second   =      3.866
[{'loss': 0.2512, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.1665552854537964, 'eval_precision': 0.42436974789915966, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3808925204274042, 'eval_accuracy': 0.9460356674129545, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.5, 'eval_steps_per_second': 80.826, 'epoch': 1.0, 'step': 135}, {'loss': 0.1503, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.15182632207870483, 'eval_precision': 0.44629014396456257, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.4528089887640449, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.3624, 'eval_samples_per_second': 648.079, 'eval_steps_per_second': 81.274, 'epoch': 2.0, 'step': 270}, {'loss': 0.1078, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.15398722887039185, 'eval_precision': 0.4834123222748815, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47414294015107494, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.3633, 'eval_samples_per_second': 647.822, 'eval_steps_per_second': 81.242, 'epoch': 3.0, 'step': 405}, {'loss': 0.0768, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.1739153116941452, 'eval_precision': 0.4528846153846154, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.49139280125195617, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3636, 'eval_samples_per_second': 647.749, 'eval_steps_per_second': 81.233, 'epoch': 4.0, 'step': 540}, {'loss': 0.0549, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.19442597031593323, 'eval_precision': 0.46540880503144655, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4849808847624249, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3542, 'eval_samples_per_second': 650.322, 'eval_steps_per_second': 81.556, 'epoch': 5.0, 'step': 675}, {'loss': 0.0407, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2042708694934845, 'eval_precision': 0.45235707121364094, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.4813233724653148, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3641, 'eval_samples_per_second': 647.596, 'eval_steps_per_second': 81.214, 'epoch': 6.0, 'step': 810}, {'loss': 0.0312, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.21937881410121918, 'eval_precision': 0.4541947926711668, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.4921630094043887, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.344, 'eval_samples_per_second': 653.165, 'eval_steps_per_second': 81.912, 'epoch': 7.0, 'step': 945}, {'loss': 0.024, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.23775851726531982, 'eval_precision': 0.465161923454367, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5, 'eval_accuracy': 0.947618312360071, 'eval_runtime': 2.3619, 'eval_samples_per_second': 648.196, 'eval_steps_per_second': 81.289, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0191, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.23997895419597626, 'eval_precision': 0.4495592556317336, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.48366701791359323, 'eval_accuracy': 0.947039295916004, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.988, 'eval_steps_per_second': 81.388, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0142, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2656055986881256, 'eval_precision': 0.4731404958677686, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.4964769647696477, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.239, 'eval_steps_per_second': 81.42, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0116, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.27138423919677734, 'eval_precision': 0.4600389863547758, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.4960588544403573, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.3539, 'eval_samples_per_second': 650.422, 'eval_steps_per_second': 81.568, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0091, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.28012800216674805, 'eval_precision': 0.4817444219066937, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5099302200751477, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.661, 'eval_steps_per_second': 81.473, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0073, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2909235656261444, 'eval_precision': 0.48012889366272826, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.49446902654867253, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3701, 'eval_samples_per_second': 645.975, 'eval_steps_per_second': 81.011, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0063, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2972777187824249, 'eval_precision': 0.48829787234042554, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5052283984589983, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.815, 'eval_steps_per_second': 81.492, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0059, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.2998928427696228, 'eval_precision': 0.4609450337512054, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.4994775339602926, 'eval_accuracy': 0.9479657222265112, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.218, 'eval_steps_per_second': 81.543, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0045, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.30781129002571106, 'eval_precision': 0.48008171603677224, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5064655172413793, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3509, 'eval_samples_per_second': 651.237, 'eval_steps_per_second': 81.67, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0047, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3100281357765198, 'eval_precision': 0.49333333333333335, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4997186268992684, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.4272, 'eval_samples_per_second': 630.766, 'eval_steps_per_second': 79.103, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0041, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.31312939524650574, 'eval_precision': 0.4695740365111562, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.49704777241009124, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3595, 'eval_samples_per_second': 648.869, 'eval_steps_per_second': 81.373, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0031, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3248876631259918, 'eval_precision': 0.4514018691588785, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.4961479198767335, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3643, 'eval_samples_per_second': 647.538, 'eval_steps_per_second': 81.207, 'epoch': 19.0, 'step': 2565}, {'loss': 0.003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3209705650806427, 'eval_precision': 0.47474747474747475, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5034815211569362, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3554, 'eval_samples_per_second': 649.995, 'eval_steps_per_second': 81.515, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0025, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3242283761501312, 'eval_precision': 0.47875647668393784, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.501628664495114, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3518, 'eval_samples_per_second': 650.991, 'eval_steps_per_second': 81.64, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0024, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3276551365852356, 'eval_precision': 0.4842105263157895, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5035577449370553, 'eval_accuracy': 0.9497413726549834, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.059, 'eval_steps_per_second': 81.648, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0022, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3281256854534149, 'eval_precision': 0.47830578512396693, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5018970189701897, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3567, 'eval_samples_per_second': 649.626, 'eval_steps_per_second': 81.468, 'epoch': 23.0, 'step': 3105}, {'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.32834696769714355, 'eval_precision': 0.47758081334723673, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.49891067538126366, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.539, 'eval_steps_per_second': 81.332, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 838.0947, 'train_samples_per_second': 247.247, 'train_steps_per_second': 3.866, 'total_flos': 8936323010457180.0, 'train_loss': 0.03495260653672395, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9499
  predict_f1                 =     0.4573
  predict_loss               =     0.1507
  predict_precision          =     0.4751
  predict_recall             =     0.4408
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    647.341
  predict_steps_per_second   =     80.918
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_42.json completed. F1: 0.4573041637261821
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_41.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6217.83 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6894.59 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6847.40 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6912.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6990.79 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7102.19 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7273.09 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6351.31 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6732.16 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7272.57 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6955.71 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7050.41 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6883.34 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
slurmstepd: error: *** JOB 410882 ON gpu-7 CANCELLED AT 2024-01-20T15:05:02 DUE TO TIME LIMIT ***

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
410882       tsa_norbe+          1                                             23:00:28      0:0 
410882.batch      batch          1        1   22:34:01          0   22:34:01   23:00:28     0:15 
410882.exte+     extern          1        1   00:00:00          0   00:00:00   23:00:28      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
410882                                                                           
410882.batch   4030292K          0   4030292K        0              0          0 
410882.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
410882                                                                                                
410882.batch    32785.06M               0      32785.06M  3245578.15M                0    3245578.15M 
410882.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 410882 completed at Sat Jan 20 15:05:02 CET 2024
