Starting job 409574 on gpu-7 at Wed Jan 17 10:13:37 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_27.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_27.json
01170939_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5840.24 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6729.01 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6731.93 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6839.90 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6931.54 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7078.65 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7270.92 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6371.56 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6698.02 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7332.51 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6973.58 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 5759.36 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 5877.02 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9431, 'eval_samples_per_second': 257.612, 'eval_steps_per_second': 32.307, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.752, 'eval_samples_per_second': 266.167, 'eval_steps_per_second': 33.379, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7655, 'eval_samples_per_second': 265.546, 'eval_steps_per_second': 33.302, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7556, 'eval_samples_per_second': 266.003, 'eval_steps_per_second': 33.359, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7701, 'eval_samples_per_second': 265.333, 'eval_steps_per_second': 33.275, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7625, 'eval_samples_per_second': 265.681, 'eval_steps_per_second': 33.319, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7358, 'eval_samples_per_second': 266.922, 'eval_steps_per_second': 33.474, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7686, 'eval_samples_per_second': 265.401, 'eval_steps_per_second': 33.283, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8123, 'eval_samples_per_second': 263.405, 'eval_steps_per_second': 33.033, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7597, 'eval_samples_per_second': 265.811, 'eval_steps_per_second': 33.335, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7459, 'eval_samples_per_second': 266.452, 'eval_steps_per_second': 33.415, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.763, 'eval_samples_per_second': 265.66, 'eval_steps_per_second': 33.316, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.748, 'eval_steps_per_second': 33.327, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7457, 'eval_samples_per_second': 266.462, 'eval_steps_per_second': 33.417, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7383, 'eval_samples_per_second': 266.805, 'eval_steps_per_second': 33.459, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.759, 'eval_samples_per_second': 265.846, 'eval_steps_per_second': 33.339, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7633, 'eval_samples_per_second': 265.649, 'eval_steps_per_second': 33.315, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7551, 'eval_samples_per_second': 266.024, 'eval_steps_per_second': 33.362, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7619, 'eval_samples_per_second': 265.712, 'eval_steps_per_second': 33.322, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7859, 'eval_samples_per_second': 264.609, 'eval_steps_per_second': 33.184, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7498, 'eval_samples_per_second': 266.269, 'eval_steps_per_second': 33.392, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8316, 'eval_samples_per_second': 262.536, 'eval_steps_per_second': 32.924, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7392, 'eval_samples_per_second': 266.763, 'eval_steps_per_second': 33.454, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.733, 'eval_samples_per_second': 267.052, 'eval_steps_per_second': 33.49, 'epoch': 24.0}
{'train_runtime': 2425.8891, 'train_samples_per_second': 85.419, 'train_steps_per_second': 1.336, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:40:25.88
  train_samples            =       8634
  train_samples_per_second =     85.419
  train_steps_per_second   =      1.336
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9431, 'eval_samples_per_second': 257.612, 'eval_steps_per_second': 32.307, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.752, 'eval_samples_per_second': 266.167, 'eval_steps_per_second': 33.379, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7655, 'eval_samples_per_second': 265.546, 'eval_steps_per_second': 33.302, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7556, 'eval_samples_per_second': 266.003, 'eval_steps_per_second': 33.359, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7701, 'eval_samples_per_second': 265.333, 'eval_steps_per_second': 33.275, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7625, 'eval_samples_per_second': 265.681, 'eval_steps_per_second': 33.319, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7358, 'eval_samples_per_second': 266.922, 'eval_steps_per_second': 33.474, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7686, 'eval_samples_per_second': 265.401, 'eval_steps_per_second': 33.283, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8123, 'eval_samples_per_second': 263.405, 'eval_steps_per_second': 33.033, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7597, 'eval_samples_per_second': 265.811, 'eval_steps_per_second': 33.335, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7459, 'eval_samples_per_second': 266.452, 'eval_steps_per_second': 33.415, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.763, 'eval_samples_per_second': 265.66, 'eval_steps_per_second': 33.316, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7611, 'eval_samples_per_second': 265.748, 'eval_steps_per_second': 33.327, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7457, 'eval_samples_per_second': 266.462, 'eval_steps_per_second': 33.417, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7383, 'eval_samples_per_second': 266.805, 'eval_steps_per_second': 33.459, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.759, 'eval_samples_per_second': 265.846, 'eval_steps_per_second': 33.339, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7633, 'eval_samples_per_second': 265.649, 'eval_steps_per_second': 33.315, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7551, 'eval_samples_per_second': 266.024, 'eval_steps_per_second': 33.362, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7619, 'eval_samples_per_second': 265.712, 'eval_steps_per_second': 33.322, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7859, 'eval_samples_per_second': 264.609, 'eval_steps_per_second': 33.184, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7498, 'eval_samples_per_second': 266.269, 'eval_steps_per_second': 33.392, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8316, 'eval_samples_per_second': 262.536, 'eval_steps_per_second': 32.924, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7392, 'eval_samples_per_second': 266.763, 'eval_steps_per_second': 33.454, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.733, 'eval_samples_per_second': 267.052, 'eval_steps_per_second': 33.49, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2425.8891, 'train_samples_per_second': 85.419, 'train_steps_per_second': 1.336, 'total_flos': 2.705738887944774e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.82
  predict_samples_per_second =    263.885
  predict_steps_per_second   =     32.986
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_27.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_25.json
01170939_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6870.12 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7260.07 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7037.42 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7048.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7080.87 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7211.86 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6347.26 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6674.14 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6862.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7356.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7013.66 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6958.38 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6823.80 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2233, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.15194521844387054, 'eval_precision': 0.4569832402234637, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4616252821670429, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.3692, 'eval_samples_per_second': 646.222, 'eval_steps_per_second': 81.042, 'epoch': 1.0}
{'loss': 0.131, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.14697585999965668, 'eval_precision': 0.46772591857000995, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.243, 'eval_steps_per_second': 81.295, 'epoch': 2.0}
{'loss': 0.0768, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.1677834540605545, 'eval_precision': 0.4930232558139535, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.48819804260218763, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.063, 'eval_steps_per_second': 81.774, 'epoch': 3.0}
{'loss': 0.0462, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.1960379183292389, 'eval_precision': 0.4983240223463687, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5033860045146727, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.894, 'eval_steps_per_second': 81.878, 'epoch': 4.0}
{'loss': 0.0288, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.24002321064472198, 'eval_precision': 0.43285123966942146, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.45420054200542, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.68, 'eval_steps_per_second': 81.851, 'epoch': 5.0}
{'loss': 0.0182, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.24211065471172333, 'eval_precision': 0.48693834900731453, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5081788440567067, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.684, 'eval_steps_per_second': 81.852, 'epoch': 6.0}
{'loss': 0.0122, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.26917144656181335, 'eval_precision': 0.48026315789473684, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.48965902738960315, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3536, 'eval_samples_per_second': 650.49, 'eval_steps_per_second': 81.577, 'epoch': 7.0}
{'loss': 0.009, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.27834150195121765, 'eval_precision': 0.5224071702944942, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.49215922798552475, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3421, 'eval_samples_per_second': 653.693, 'eval_steps_per_second': 81.979, 'epoch': 8.0}
{'loss': 0.0064, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.2918115258216858, 'eval_precision': 0.4954954954954955, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4985835694050992, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.459, 'eval_steps_per_second': 81.824, 'epoch': 9.0}
{'loss': 0.0042, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3096466064453125, 'eval_precision': 0.5241038318912238, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.5029655990510085, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 2.3423, 'eval_samples_per_second': 653.62, 'eval_steps_per_second': 81.969, 'epoch': 10.0}
{'loss': 0.0035, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3049204349517822, 'eval_precision': 0.49183673469387756, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5191168551427033, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3444, 'eval_samples_per_second': 653.057, 'eval_steps_per_second': 81.899, 'epoch': 11.0}
{'loss': 0.0031, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3370280861854553, 'eval_precision': 0.5254437869822485, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5156794425087109, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.3419, 'eval_samples_per_second': 653.739, 'eval_steps_per_second': 81.984, 'epoch': 12.0}
{'loss': 0.0025, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.32707536220550537, 'eval_precision': 0.48367346938775513, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5105008077544426, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3491, 'eval_samples_per_second': 651.74, 'eval_steps_per_second': 81.734, 'epoch': 13.0}
{'loss': 0.0014, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.34771406650543213, 'eval_precision': 0.533175355450237, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5229517722254504, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 2.3412, 'eval_samples_per_second': 653.946, 'eval_steps_per_second': 82.01, 'epoch': 14.0}
{'loss': 0.0015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.33995649218559265, 'eval_precision': 0.5158013544018059, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5184344866704481, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.685, 'eval_steps_per_second': 81.852, 'epoch': 15.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.35855942964553833, 'eval_precision': 0.4892966360856269, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5166846071044133, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.79, 'eval_steps_per_second': 81.865, 'epoch': 16.0}
{'loss': 0.0011, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.36065489053726196, 'eval_precision': 0.49326424870466323, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.516829533116178, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.389, 'eval_steps_per_second': 81.69, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.36162519454956055, 'eval_precision': 0.5087145969498911, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5203342618384402, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 2.3464, 'eval_samples_per_second': 652.5, 'eval_steps_per_second': 81.829, 'epoch': 18.0}
{'loss': 0.0012, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3681843876838684, 'eval_precision': 0.49794661190965095, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.524041058887088, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.856, 'eval_steps_per_second': 81.748, 'epoch': 19.0}
{'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3680153489112854, 'eval_precision': 0.5288788221970555, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5306818181818183, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.222, 'eval_steps_per_second': 81.669, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.37006083130836487, 'eval_precision': 0.5237556561085973, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5258375922771154, 'eval_accuracy': 0.9511696132170153, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.672, 'eval_steps_per_second': 81.474, 'epoch': 21.0}
{'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3708343803882599, 'eval_precision': 0.522083805209513, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5238636363636363, 'eval_accuracy': 0.9510924110244731, 'eval_runtime': 2.3371, 'eval_samples_per_second': 655.079, 'eval_steps_per_second': 82.152, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.37297412753105164, 'eval_precision': 0.5246277205040092, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5234285714285714, 'eval_accuracy': 0.9515942252759978, 'eval_runtime': 2.34, 'eval_samples_per_second': 654.283, 'eval_steps_per_second': 82.052, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3721989095211029, 'eval_precision': 0.5230078563411896, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5271493212669683, 'eval_accuracy': 0.9512468154095576, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.912, 'eval_steps_per_second': 81.881, 'epoch': 24.0}
{'train_runtime': 835.4515, 'train_samples_per_second': 248.029, 'train_steps_per_second': 3.878, 'train_loss': 0.02396564590457229, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.024
  train_runtime            = 0:13:55.45
  train_samples            =       8634
  train_samples_per_second =    248.029
  train_steps_per_second   =      3.878
[{'loss': 0.2233, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.15194521844387054, 'eval_precision': 0.4569832402234637, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4616252821670429, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.3692, 'eval_samples_per_second': 646.222, 'eval_steps_per_second': 81.042, 'epoch': 1.0, 'step': 135}, {'loss': 0.131, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.14697585999965668, 'eval_precision': 0.46772591857000995, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.243, 'eval_steps_per_second': 81.295, 'epoch': 2.0, 'step': 270}, {'loss': 0.0768, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1677834540605545, 'eval_precision': 0.4930232558139535, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.48819804260218763, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.063, 'eval_steps_per_second': 81.774, 'epoch': 3.0, 'step': 405}, {'loss': 0.0462, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.1960379183292389, 'eval_precision': 0.4983240223463687, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5033860045146727, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.894, 'eval_steps_per_second': 81.878, 'epoch': 4.0, 'step': 540}, {'loss': 0.0288, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.24002321064472198, 'eval_precision': 0.43285123966942146, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.45420054200542, 'eval_accuracy': 0.9450320389099051, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.68, 'eval_steps_per_second': 81.851, 'epoch': 5.0, 'step': 675}, {'loss': 0.0182, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.24211065471172333, 'eval_precision': 0.48693834900731453, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5081788440567067, 'eval_accuracy': 0.9485061375743071, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.684, 'eval_steps_per_second': 81.852, 'epoch': 6.0, 'step': 810}, {'loss': 0.0122, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.26917144656181335, 'eval_precision': 0.48026315789473684, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.48965902738960315, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3536, 'eval_samples_per_second': 650.49, 'eval_steps_per_second': 81.577, 'epoch': 7.0, 'step': 945}, {'loss': 0.009, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.27834150195121765, 'eval_precision': 0.5224071702944942, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.49215922798552475, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 2.3421, 'eval_samples_per_second': 653.693, 'eval_steps_per_second': 81.979, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0064, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2918115258216858, 'eval_precision': 0.4954954954954955, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4985835694050992, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.459, 'eval_steps_per_second': 81.824, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0042, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3096466064453125, 'eval_precision': 0.5241038318912238, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.5029655990510085, 'eval_accuracy': 0.9508994055431175, 'eval_runtime': 2.3423, 'eval_samples_per_second': 653.62, 'eval_steps_per_second': 81.969, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0035, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3049204349517822, 'eval_precision': 0.49183673469387756, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.5191168551427033, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3444, 'eval_samples_per_second': 653.057, 'eval_steps_per_second': 81.899, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0031, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3370280861854553, 'eval_precision': 0.5254437869822485, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5156794425087109, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.3419, 'eval_samples_per_second': 653.739, 'eval_steps_per_second': 81.984, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0025, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.32707536220550537, 'eval_precision': 0.48367346938775513, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5105008077544426, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3491, 'eval_samples_per_second': 651.74, 'eval_steps_per_second': 81.734, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0014, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.34771406650543213, 'eval_precision': 0.533175355450237, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5229517722254504, 'eval_accuracy': 0.9522890450088782, 'eval_runtime': 2.3412, 'eval_samples_per_second': 653.946, 'eval_steps_per_second': 82.01, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.33995649218559265, 'eval_precision': 0.5158013544018059, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5184344866704481, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.3457, 'eval_samples_per_second': 652.685, 'eval_steps_per_second': 81.852, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.35855942964553833, 'eval_precision': 0.4892966360856269, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5166846071044133, 'eval_accuracy': 0.9498957770400679, 'eval_runtime': 2.3453, 'eval_samples_per_second': 652.79, 'eval_steps_per_second': 81.865, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0011, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.36065489053726196, 'eval_precision': 0.49326424870466323, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.516829533116178, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3504, 'eval_samples_per_second': 651.389, 'eval_steps_per_second': 81.69, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0011, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.36162519454956055, 'eval_precision': 0.5087145969498911, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5203342618384402, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 2.3464, 'eval_samples_per_second': 652.5, 'eval_steps_per_second': 81.829, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0012, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3681843876838684, 'eval_precision': 0.49794661190965095, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.524041058887088, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.856, 'eval_steps_per_second': 81.748, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3680153489112854, 'eval_precision': 0.5288788221970555, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5306818181818183, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.222, 'eval_steps_per_second': 81.669, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.37006083130836487, 'eval_precision': 0.5237556561085973, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5258375922771154, 'eval_accuracy': 0.9511696132170153, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.672, 'eval_steps_per_second': 81.474, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3708343803882599, 'eval_precision': 0.522083805209513, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.5238636363636363, 'eval_accuracy': 0.9510924110244731, 'eval_runtime': 2.3371, 'eval_samples_per_second': 655.079, 'eval_steps_per_second': 82.152, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.37297412753105164, 'eval_precision': 0.5246277205040092, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5234285714285714, 'eval_accuracy': 0.9515942252759978, 'eval_runtime': 2.34, 'eval_samples_per_second': 654.283, 'eval_steps_per_second': 82.052, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3721989095211029, 'eval_precision': 0.5230078563411896, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5271493212669683, 'eval_accuracy': 0.9512468154095576, 'eval_runtime': 2.3449, 'eval_samples_per_second': 652.912, 'eval_steps_per_second': 81.881, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 835.4515, 'train_samples_per_second': 248.029, 'train_steps_per_second': 3.878, 'total_flos': 8936323010457180.0, 'train_loss': 0.02396564590457229, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9477
  predict_f1                 =     0.4727
  predict_loss               =     0.1486
  predict_precision          =     0.4477
  predict_recall             =     0.5007
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    649.184
  predict_steps_per_second   =     81.148
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_25.json completed. F1: 0.47270391779062304
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_03.json
config.json:   0%|          | 0.00/383 [00:00<?, ?B/s]config.json: 100%|██████████| 383/383 [00:00<00:00, 2.67MB/s]
tokenizer_config.json:   0%|          | 0.00/29.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 29.0/29.0 [00:00<00:00, 292kB/s]
vocab.txt:   0%|          | 0.00/383k [00:00<?, ?B/s]vocab.txt: 100%|██████████| 383k/383k [00:00<00:00, 1.28MB/s]vocab.txt: 100%|██████████| 383k/383k [00:00<00:00, 1.28MB/s]
model.safetensors:   0%|          | 0.00/501M [00:00<?, ?B/s]model.safetensors:   2%|▏         | 10.5M/501M [00:00<00:06, 79.3MB/s]model.safetensors:   4%|▍         | 21.0M/501M [00:00<00:05, 91.3MB/s]model.safetensors:   8%|▊         | 41.9M/501M [00:00<00:04, 105MB/s] model.safetensors:  13%|█▎        | 62.9M/501M [00:00<00:03, 110MB/s]model.safetensors:  17%|█▋        | 83.9M/501M [00:00<00:03, 113MB/s]model.safetensors:  21%|██        | 105M/501M [00:00<00:03, 114MB/s] model.safetensors:  25%|██▌       | 126M/501M [00:01<00:03, 115MB/s]model.safetensors:  29%|██▉       | 147M/501M [00:01<00:03, 116MB/s]model.safetensors:  34%|███▎      | 168M/501M [00:01<00:02, 116MB/s]model.safetensors:  38%|███▊      | 189M/501M [00:01<00:02, 117MB/s]model.safetensors:  42%|████▏     | 210M/501M [00:01<00:02, 117MB/s]model.safetensors:  46%|████▌     | 231M/501M [00:02<00:02, 117MB/s]model.safetensors:  50%|█████     | 252M/501M [00:02<00:02, 117MB/s]model.safetensors:  54%|█████▍    | 273M/501M [00:02<00:01, 117MB/s]model.safetensors:  59%|█████▊    | 294M/501M [00:02<00:01, 117MB/s]model.safetensors:  63%|██████▎   | 315M/501M [00:02<00:01, 117MB/s]model.safetensors:  67%|██████▋   | 336M/501M [00:02<00:01, 117MB/s]model.safetensors:  71%|███████   | 357M/501M [00:03<00:01, 117MB/s]model.safetensors:  75%|███████▌  | 377M/501M [00:03<00:01, 117MB/s]model.safetensors:  80%|███████▉  | 398M/501M [00:03<00:00, 117MB/s]model.safetensors:  84%|████████▍ | 419M/501M [00:03<00:00, 117MB/s]model.safetensors:  88%|████████▊ | 440M/501M [00:03<00:00, 117MB/s]model.safetensors:  92%|█████████▏| 461M/501M [00:03<00:00, 117MB/s]model.safetensors:  96%|█████████▋| 482M/501M [00:04<00:00, 117MB/s]model.safetensors: 100%|██████████| 501M/501M [00:04<00:00, 117MB/s]model.safetensors: 100%|██████████| 501M/501M [00:04<00:00, 115MB/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01170939_tsa-bin_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7146.42 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7611.40 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7402.26 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7431.01 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7492.54 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7635.98 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7815.44 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6617.08 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7180.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6431.78 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6563.68 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7560.03 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7360.92 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2084, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1568419188261032, 'eval_precision': 0.4340909090909091, 'eval_recall': 0.43557582668187, 'eval_f1': 0.4348321001707456, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2358, 'eval_samples_per_second': 684.754, 'eval_steps_per_second': 85.874, 'epoch': 1.0}
{'loss': 0.1112, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.15694858133792877, 'eval_precision': 0.45958429561200925, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.45668387837062535, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.2133, 'eval_samples_per_second': 691.718, 'eval_steps_per_second': 86.747, 'epoch': 2.0}
{'loss': 0.05, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.20743465423583984, 'eval_precision': 0.42534381139489197, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.4569920844327177, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2291, 'eval_samples_per_second': 686.839, 'eval_steps_per_second': 86.135, 'epoch': 3.0}
{'loss': 0.0255, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.259810209274292, 'eval_precision': 0.48753462603878117, 'eval_recall': 0.4013683010262258, 'eval_f1': 0.44027517198248906, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 2.2082, 'eval_samples_per_second': 693.311, 'eval_steps_per_second': 86.947, 'epoch': 4.0}
{'loss': 0.0135, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2800065279006958, 'eval_precision': 0.46145251396648046, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4661399548532731, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.2077, 'eval_samples_per_second': 693.477, 'eval_steps_per_second': 86.968, 'epoch': 5.0}
{'loss': 0.0085, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.32324302196502686, 'eval_precision': 0.4694408322496749, 'eval_recall': 0.41163055872291904, 'eval_f1': 0.43863912515188336, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.2066, 'eval_samples_per_second': 693.818, 'eval_steps_per_second': 87.01, 'epoch': 6.0}
{'loss': 0.0057, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3386983275413513, 'eval_precision': 0.44577006507592193, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.4569205113952196, 'eval_accuracy': 0.9448776345248205, 'eval_runtime': 2.2111, 'eval_samples_per_second': 692.41, 'eval_steps_per_second': 86.834, 'epoch': 7.0}
{'loss': 0.0041, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3527779281139374, 'eval_precision': 0.4834123222748815, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47414294015107494, 'eval_accuracy': 0.947618312360071, 'eval_runtime': 2.2311, 'eval_samples_per_second': 686.215, 'eval_steps_per_second': 86.057, 'epoch': 8.0}
{'loss': 0.0028, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.36698848009109497, 'eval_precision': 0.4752475247524752, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.455786350148368, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.224, 'eval_samples_per_second': 688.405, 'eval_steps_per_second': 86.332, 'epoch': 9.0}
{'loss': 0.0025, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.365810751914978, 'eval_precision': 0.456242707117853, 'eval_recall': 0.44583808437856326, 'eval_f1': 0.45098039215686275, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.2062, 'eval_samples_per_second': 693.962, 'eval_steps_per_second': 87.029, 'epoch': 10.0}
{'loss': 0.0019, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4056340754032135, 'eval_precision': 0.42611336032388664, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.45147453083109923, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 2.2787, 'eval_samples_per_second': 671.877, 'eval_steps_per_second': 84.259, 'epoch': 11.0}
{'loss': 0.0015, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.41237926483154297, 'eval_precision': 0.4524590163934426, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.46205357142857145, 'eval_accuracy': 0.9435265961553309, 'eval_runtime': 2.2314, 'eval_samples_per_second': 686.109, 'eval_steps_per_second': 86.044, 'epoch': 12.0}
{'loss': 0.0009, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.43349242210388184, 'eval_precision': 0.48120300751879697, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.45850746268656717, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.938, 'eval_steps_per_second': 86.273, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4327448010444641, 'eval_precision': 0.4375, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.457267283614589, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2267, 'eval_samples_per_second': 687.565, 'eval_steps_per_second': 86.226, 'epoch': 14.0}
{'loss': 0.0009, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.42674529552459717, 'eval_precision': 0.45869565217391306, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4696716750139121, 'eval_accuracy': 0.9442986180807534, 'eval_runtime': 2.2253, 'eval_samples_per_second': 687.992, 'eval_steps_per_second': 86.28, 'epoch': 15.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4316266179084778, 'eval_precision': 0.45464362850971923, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.46699944536882976, 'eval_accuracy': 0.9452636454875318, 'eval_runtime': 2.2034, 'eval_samples_per_second': 694.847, 'eval_steps_per_second': 87.139, 'epoch': 16.0}
{'loss': 0.0004, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.44848617911338806, 'eval_precision': 0.4429175475687104, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4596818431157433, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.2026, 'eval_samples_per_second': 695.103, 'eval_steps_per_second': 87.172, 'epoch': 17.0}
{'loss': 0.0007, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.43605270981788635, 'eval_precision': 0.4437367303609342, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4595931830676196, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.932, 'eval_steps_per_second': 86.272, 'epoch': 18.0}
{'loss': 0.0002, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.44271811842918396, 'eval_precision': 0.4842105263157895, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4780600461893765, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.2317, 'eval_samples_per_second': 686.015, 'eval_steps_per_second': 86.032, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4384026527404785, 'eval_precision': 0.4816933638443936, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.48086807538549403, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3056, 'eval_samples_per_second': 664.039, 'eval_steps_per_second': 83.276, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.446922242641449, 'eval_precision': 0.4886499402628435, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4772462077012835, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.2272, 'eval_samples_per_second': 687.402, 'eval_steps_per_second': 86.206, 'epoch': 21.0}
{'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.45133835077285767, 'eval_precision': 0.47026431718061673, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.47843137254901963, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.2246, 'eval_samples_per_second': 688.202, 'eval_steps_per_second': 86.306, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.45512261986732483, 'eval_precision': 0.46909492273730685, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.47672462142456534, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.2712, 'eval_samples_per_second': 674.099, 'eval_steps_per_second': 84.538, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4556783437728882, 'eval_precision': 0.4720982142857143, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.47715736040609136, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.2242, 'eval_samples_per_second': 688.351, 'eval_steps_per_second': 86.325, 'epoch': 24.0}
{'train_runtime': 743.7234, 'train_samples_per_second': 278.62, 'train_steps_per_second': 6.97, 'train_loss': 0.0183946285817203, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0184
  train_runtime            = 0:12:23.72
  train_samples            =       8634
  train_samples_per_second =     278.62
  train_steps_per_second   =       6.97
[{'loss': 0.2084, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.1568419188261032, 'eval_precision': 0.4340909090909091, 'eval_recall': 0.43557582668187, 'eval_f1': 0.4348321001707456, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2358, 'eval_samples_per_second': 684.754, 'eval_steps_per_second': 85.874, 'epoch': 1.0, 'step': 216}, {'loss': 0.1112, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.15694858133792877, 'eval_precision': 0.45958429561200925, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.45668387837062535, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.2133, 'eval_samples_per_second': 691.718, 'eval_steps_per_second': 86.747, 'epoch': 2.0, 'step': 432}, {'loss': 0.05, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.20743465423583984, 'eval_precision': 0.42534381139489197, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.4569920844327177, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2291, 'eval_samples_per_second': 686.839, 'eval_steps_per_second': 86.135, 'epoch': 3.0, 'step': 648}, {'loss': 0.0255, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.259810209274292, 'eval_precision': 0.48753462603878117, 'eval_recall': 0.4013683010262258, 'eval_f1': 0.44027517198248906, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 2.2082, 'eval_samples_per_second': 693.311, 'eval_steps_per_second': 86.947, 'epoch': 4.0, 'step': 864}, {'loss': 0.0135, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2800065279006958, 'eval_precision': 0.46145251396648046, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4661399548532731, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.2077, 'eval_samples_per_second': 693.477, 'eval_steps_per_second': 86.968, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0085, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.32324302196502686, 'eval_precision': 0.4694408322496749, 'eval_recall': 0.41163055872291904, 'eval_f1': 0.43863912515188336, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.2066, 'eval_samples_per_second': 693.818, 'eval_steps_per_second': 87.01, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0057, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.3386983275413513, 'eval_precision': 0.44577006507592193, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.4569205113952196, 'eval_accuracy': 0.9448776345248205, 'eval_runtime': 2.2111, 'eval_samples_per_second': 692.41, 'eval_steps_per_second': 86.834, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0041, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3527779281139374, 'eval_precision': 0.4834123222748815, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47414294015107494, 'eval_accuracy': 0.947618312360071, 'eval_runtime': 2.2311, 'eval_samples_per_second': 686.215, 'eval_steps_per_second': 86.057, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0028, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.36698848009109497, 'eval_precision': 0.4752475247524752, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.455786350148368, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.224, 'eval_samples_per_second': 688.405, 'eval_steps_per_second': 86.332, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0025, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.365810751914978, 'eval_precision': 0.456242707117853, 'eval_recall': 0.44583808437856326, 'eval_f1': 0.45098039215686275, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.2062, 'eval_samples_per_second': 693.962, 'eval_steps_per_second': 87.029, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0019, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.4056340754032135, 'eval_precision': 0.42611336032388664, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.45147453083109923, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 2.2787, 'eval_samples_per_second': 671.877, 'eval_steps_per_second': 84.259, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0015, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.41237926483154297, 'eval_precision': 0.4524590163934426, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.46205357142857145, 'eval_accuracy': 0.9435265961553309, 'eval_runtime': 2.2314, 'eval_samples_per_second': 686.109, 'eval_steps_per_second': 86.044, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0009, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.43349242210388184, 'eval_precision': 0.48120300751879697, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.45850746268656717, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.938, 'eval_steps_per_second': 86.273, 'epoch': 13.0, 'step': 2808}, {'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.4327448010444641, 'eval_precision': 0.4375, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.457267283614589, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2267, 'eval_samples_per_second': 687.565, 'eval_steps_per_second': 86.226, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0009, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.42674529552459717, 'eval_precision': 0.45869565217391306, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4696716750139121, 'eval_accuracy': 0.9442986180807534, 'eval_runtime': 2.2253, 'eval_samples_per_second': 687.992, 'eval_steps_per_second': 86.28, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4316266179084778, 'eval_precision': 0.45464362850971923, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.46699944536882976, 'eval_accuracy': 0.9452636454875318, 'eval_runtime': 2.2034, 'eval_samples_per_second': 694.847, 'eval_steps_per_second': 87.139, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0004, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.44848617911338806, 'eval_precision': 0.4429175475687104, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4596818431157433, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.2026, 'eval_samples_per_second': 695.103, 'eval_steps_per_second': 87.172, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0007, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.43605270981788635, 'eval_precision': 0.4437367303609342, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4595931830676196, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.932, 'eval_steps_per_second': 86.272, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0002, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.44271811842918396, 'eval_precision': 0.4842105263157895, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4780600461893765, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.2317, 'eval_samples_per_second': 686.015, 'eval_steps_per_second': 86.032, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4384026527404785, 'eval_precision': 0.4816933638443936, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.48086807538549403, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3056, 'eval_samples_per_second': 664.039, 'eval_steps_per_second': 83.276, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.446922242641449, 'eval_precision': 0.4886499402628435, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4772462077012835, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.2272, 'eval_samples_per_second': 687.402, 'eval_steps_per_second': 86.206, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.45133835077285767, 'eval_precision': 0.47026431718061673, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.47843137254901963, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.2246, 'eval_samples_per_second': 688.202, 'eval_steps_per_second': 86.306, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.45512261986732483, 'eval_precision': 0.46909492273730685, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.47672462142456534, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.2712, 'eval_samples_per_second': 674.099, 'eval_steps_per_second': 84.538, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.4556783437728882, 'eval_precision': 0.4720982142857143, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.47715736040609136, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.2242, 'eval_samples_per_second': 688.351, 'eval_steps_per_second': 86.325, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 743.7234, 'train_samples_per_second': 278.62, 'train_steps_per_second': 6.97, 'total_flos': 6810645841644840.0, 'train_loss': 0.0183946285817203, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9464
  predict_f1                 =     0.4141
  predict_loss               =     0.1657
  predict_precision          =     0.4292
  predict_recall             =        0.4
  predict_runtime            = 0:00:01.85
  predict_samples_per_second =    684.228
  predict_steps_per_second   =     85.528
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_03.json completed. F1: 0.4140845070422535
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_37.json
config.json:   0%|          | 0.00/382 [00:00<?, ?B/s]config.json: 100%|██████████| 382/382 [00:00<00:00, 3.74MB/s]
tokenizer_config.json:   0%|          | 0.00/29.0 [00:00<?, ?B/s]tokenizer_config.json: 100%|██████████| 29.0/29.0 [00:00<00:00, 268kB/s]
vocab.txt:   0%|          | 0.00/261k [00:00<?, ?B/s]vocab.txt: 100%|██████████| 261k/261k [00:00<00:00, 1.31MB/s]vocab.txt: 100%|██████████| 261k/261k [00:00<00:00, 1.31MB/s]
added_tokens.json:   0%|          | 0.00/4.00 [00:00<?, ?B/s]added_tokens.json: 100%|██████████| 4.00/4.00 [00:00<00:00, 30.2kB/s]
special_tokens_map.json:   0%|          | 0.00/113 [00:00<?, ?B/s]special_tokens_map.json: 100%|██████████| 113/113 [00:00<00:00, 727kB/s]
model.safetensors:   0%|          | 0.00/448M [00:00<?, ?B/s]model.safetensors:   2%|▏         | 10.5M/448M [00:00<00:05, 81.4MB/s]model.safetensors:   5%|▍         | 21.0M/448M [00:00<00:04, 92.7MB/s]model.safetensors:   9%|▉         | 41.9M/448M [00:00<00:03, 105MB/s] model.safetensors:  14%|█▍        | 62.9M/448M [00:00<00:03, 110MB/s]model.safetensors:  19%|█▊        | 83.9M/448M [00:00<00:03, 113MB/s]model.safetensors:  23%|██▎       | 105M/448M [00:00<00:02, 114MB/s] model.safetensors:  28%|██▊       | 126M/448M [00:01<00:02, 115MB/s]model.safetensors:  33%|███▎      | 147M/448M [00:01<00:02, 116MB/s]model.safetensors:  37%|███▋      | 168M/448M [00:01<00:02, 116MB/s]model.safetensors:  42%|████▏     | 189M/448M [00:01<00:02, 117MB/s]model.safetensors:  47%|████▋     | 210M/448M [00:01<00:02, 117MB/s]model.safetensors:  52%|█████▏    | 231M/448M [00:02<00:01, 117MB/s]model.safetensors:  56%|█████▌    | 252M/448M [00:02<00:01, 117MB/s]model.safetensors:  61%|██████    | 273M/448M [00:02<00:01, 117MB/s]model.safetensors:  66%|██████▌   | 294M/448M [00:02<00:01, 117MB/s]model.safetensors:  70%|███████   | 315M/448M [00:02<00:01, 117MB/s]model.safetensors:  75%|███████▍  | 336M/448M [00:02<00:00, 117MB/s]model.safetensors:  80%|███████▉  | 357M/448M [00:03<00:00, 117MB/s]model.safetensors:  84%|████████▍ | 377M/448M [00:03<00:00, 117MB/s]model.safetensors:  89%|████████▉ | 398M/448M [00:03<00:00, 117MB/s]model.safetensors:  94%|█████████▎| 419M/448M [00:03<00:00, 117MB/s]model.safetensors:  98%|█████████▊| 440M/448M [00:03<00:00, 117MB/s]model.safetensors: 100%|██████████| 448M/448M [00:03<00:00, 115MB/s]
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
01170939_tsa-bin_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6513.65 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7132.57 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7077.68 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7204.11 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7309.33 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7426.67 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6386.63 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6797.08 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6965.60 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7691.13 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7332.14 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7447.40 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7261.32 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2496, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.1863345503807068, 'eval_precision': 0.33879781420765026, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3459821428571429, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 2.2914, 'eval_samples_per_second': 668.162, 'eval_steps_per_second': 83.793, 'epoch': 1.0}
{'loss': 0.1662, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.17433717846870422, 'eval_precision': 0.41509433962264153, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3652618135376756, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.2628, 'eval_samples_per_second': 676.601, 'eval_steps_per_second': 84.851, 'epoch': 2.0}
{'loss': 0.1017, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.2140091508626938, 'eval_precision': 0.40665873959571935, 'eval_recall': 0.3899657924743444, 'eval_f1': 0.3981373690337602, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.464, 'eval_steps_per_second': 84.834, 'epoch': 3.0}
{'loss': 0.0604, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.21862578392028809, 'eval_precision': 0.3784648187633262, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.39118457300275483, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 2.2564, 'eval_samples_per_second': 678.501, 'eval_steps_per_second': 85.09, 'epoch': 4.0}
{'loss': 0.0335, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.268226683139801, 'eval_precision': 0.34807149576669805, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.38144329896907214, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.2628, 'eval_samples_per_second': 676.597, 'eval_steps_per_second': 84.851, 'epoch': 5.0}
{'loss': 0.0217, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2877306044101715, 'eval_precision': 0.372528616024974, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.3895538628944505, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.2625, 'eval_samples_per_second': 676.683, 'eval_steps_per_second': 84.862, 'epoch': 6.0}
{'loss': 0.0153, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.30810195207595825, 'eval_precision': 0.4092570036540804, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.39575971731448767, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 2.2629, 'eval_samples_per_second': 676.551, 'eval_steps_per_second': 84.845, 'epoch': 7.0}
{'loss': 0.0106, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.30431342124938965, 'eval_precision': 0.3743119266055046, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.41484494153533297, 'eval_accuracy': 0.9365783988265267, 'eval_runtime': 2.2593, 'eval_samples_per_second': 677.636, 'eval_steps_per_second': 84.981, 'epoch': 8.0}
{'loss': 0.0068, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3404403328895569, 'eval_precision': 0.3664874551971326, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4104365278474661, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.491, 'eval_steps_per_second': 85.088, 'epoch': 9.0}
{'loss': 0.0058, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.346973180770874, 'eval_precision': 0.3615537848605578, 'eval_recall': 0.41391106043329534, 'eval_f1': 0.3859649122807018, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.2608, 'eval_samples_per_second': 677.205, 'eval_steps_per_second': 84.927, 'epoch': 10.0}
{'loss': 0.0048, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.3586263060569763, 'eval_precision': 0.37886872998932764, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.3914002205071665, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.2563, 'eval_samples_per_second': 678.536, 'eval_steps_per_second': 85.094, 'epoch': 11.0}
{'loss': 0.0032, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.37119555473327637, 'eval_precision': 0.3912568306010929, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.39955357142857145, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 2.261, 'eval_samples_per_second': 677.147, 'eval_steps_per_second': 84.92, 'epoch': 12.0}
{'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3969228267669678, 'eval_precision': 0.3779795686719637, 'eval_recall': 0.37970353477765106, 'eval_f1': 0.37883959044368604, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 2.2546, 'eval_samples_per_second': 679.047, 'eval_steps_per_second': 85.158, 'epoch': 13.0}
{'loss': 0.0024, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.3739977777004242, 'eval_precision': 0.3959007551240561, 'eval_recall': 0.4184720638540479, 'eval_f1': 0.40687361419068735, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 2.2622, 'eval_samples_per_second': 676.787, 'eval_steps_per_second': 84.875, 'epoch': 14.0}
{'loss': 0.0023, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.37455302476882935, 'eval_precision': 0.41755634638196915, 'eval_recall': 0.4013683010262258, 'eval_f1': 0.40930232558139534, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.2764, 'eval_samples_per_second': 672.545, 'eval_steps_per_second': 84.343, 'epoch': 15.0}
{'loss': 0.0014, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3986682593822479, 'eval_precision': 0.4053117782909931, 'eval_recall': 0.40022805017103763, 'eval_f1': 0.4027538726333907, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.2525, 'eval_samples_per_second': 679.682, 'eval_steps_per_second': 85.238, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.4131107032299042, 'eval_precision': 0.41507024265644954, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.39156626506024095, 'eval_accuracy': 0.9422913610746545, 'eval_runtime': 2.2539, 'eval_samples_per_second': 679.256, 'eval_steps_per_second': 85.184, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.41595685482025146, 'eval_precision': 0.4072727272727273, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.3948296122209166, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 2.25, 'eval_samples_per_second': 680.446, 'eval_steps_per_second': 85.334, 'epoch': 18.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.41149774193763733, 'eval_precision': 0.38534031413612563, 'eval_recall': 0.41961231470923605, 'eval_f1': 0.4017467248908297, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 2.2546, 'eval_samples_per_second': 679.044, 'eval_steps_per_second': 85.158, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4213707447052002, 'eval_precision': 0.41536614645858344, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.4046783625730994, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 2.2514, 'eval_samples_per_second': 680.019, 'eval_steps_per_second': 85.28, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.42735427618026733, 'eval_precision': 0.4383033419023136, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.41208459214501514, 'eval_accuracy': 0.9422141588821122, 'eval_runtime': 2.2507, 'eval_samples_per_second': 680.223, 'eval_steps_per_second': 85.306, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.4253063499927521, 'eval_precision': 0.4183796856106409, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.4061032863849765, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 2.2499, 'eval_samples_per_second': 680.463, 'eval_steps_per_second': 85.336, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.42401787638664246, 'eval_precision': 0.41737032569360677, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.40562719812426734, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 2.2504, 'eval_samples_per_second': 680.328, 'eval_steps_per_second': 85.319, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4255836009979248, 'eval_precision': 0.42839195979899497, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.4076509264793784, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.2501, 'eval_samples_per_second': 680.411, 'eval_steps_per_second': 85.329, 'epoch': 24.0}
{'train_runtime': 758.129, 'train_samples_per_second': 273.326, 'train_steps_per_second': 4.274, 'train_loss': 0.0289075204734633, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0289
  train_runtime            = 0:12:38.12
  train_samples            =       8634
  train_samples_per_second =    273.326
  train_steps_per_second   =      4.274
[{'loss': 0.2496, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.1863345503807068, 'eval_precision': 0.33879781420765026, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3459821428571429, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 2.2914, 'eval_samples_per_second': 668.162, 'eval_steps_per_second': 83.793, 'epoch': 1.0, 'step': 135}, {'loss': 0.1662, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.17433717846870422, 'eval_precision': 0.41509433962264153, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3652618135376756, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.2628, 'eval_samples_per_second': 676.601, 'eval_steps_per_second': 84.851, 'epoch': 2.0, 'step': 270}, {'loss': 0.1017, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2140091508626938, 'eval_precision': 0.40665873959571935, 'eval_recall': 0.3899657924743444, 'eval_f1': 0.3981373690337602, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2632, 'eval_samples_per_second': 676.464, 'eval_steps_per_second': 84.834, 'epoch': 3.0, 'step': 405}, {'loss': 0.0604, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.21862578392028809, 'eval_precision': 0.3784648187633262, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.39118457300275483, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 2.2564, 'eval_samples_per_second': 678.501, 'eval_steps_per_second': 85.09, 'epoch': 4.0, 'step': 540}, {'loss': 0.0335, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.268226683139801, 'eval_precision': 0.34807149576669805, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.38144329896907214, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.2628, 'eval_samples_per_second': 676.597, 'eval_steps_per_second': 84.851, 'epoch': 5.0, 'step': 675}, {'loss': 0.0217, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2877306044101715, 'eval_precision': 0.372528616024974, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.3895538628944505, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.2625, 'eval_samples_per_second': 676.683, 'eval_steps_per_second': 84.862, 'epoch': 6.0, 'step': 810}, {'loss': 0.0153, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.30810195207595825, 'eval_precision': 0.4092570036540804, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.39575971731448767, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 2.2629, 'eval_samples_per_second': 676.551, 'eval_steps_per_second': 84.845, 'epoch': 7.0, 'step': 945}, {'loss': 0.0106, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.30431342124938965, 'eval_precision': 0.3743119266055046, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.41484494153533297, 'eval_accuracy': 0.9365783988265267, 'eval_runtime': 2.2593, 'eval_samples_per_second': 677.636, 'eval_steps_per_second': 84.981, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0068, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3404403328895569, 'eval_precision': 0.3664874551971326, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4104365278474661, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.2565, 'eval_samples_per_second': 678.491, 'eval_steps_per_second': 85.088, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0058, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.346973180770874, 'eval_precision': 0.3615537848605578, 'eval_recall': 0.41391106043329534, 'eval_f1': 0.3859649122807018, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 2.2608, 'eval_samples_per_second': 677.205, 'eval_steps_per_second': 84.927, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0048, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3586263060569763, 'eval_precision': 0.37886872998932764, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.3914002205071665, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 2.2563, 'eval_samples_per_second': 678.536, 'eval_steps_per_second': 85.094, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0032, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.37119555473327637, 'eval_precision': 0.3912568306010929, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.39955357142857145, 'eval_accuracy': 0.9377750328109319, 'eval_runtime': 2.261, 'eval_samples_per_second': 677.147, 'eval_steps_per_second': 84.92, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3969228267669678, 'eval_precision': 0.3779795686719637, 'eval_recall': 0.37970353477765106, 'eval_f1': 0.37883959044368604, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 2.2546, 'eval_samples_per_second': 679.047, 'eval_steps_per_second': 85.158, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0024, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3739977777004242, 'eval_precision': 0.3959007551240561, 'eval_recall': 0.4184720638540479, 'eval_f1': 0.40687361419068735, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 2.2622, 'eval_samples_per_second': 676.787, 'eval_steps_per_second': 84.875, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0023, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.37455302476882935, 'eval_precision': 0.41755634638196915, 'eval_recall': 0.4013683010262258, 'eval_f1': 0.40930232558139534, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.2764, 'eval_samples_per_second': 672.545, 'eval_steps_per_second': 84.343, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0014, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3986682593822479, 'eval_precision': 0.4053117782909931, 'eval_recall': 0.40022805017103763, 'eval_f1': 0.4027538726333907, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.2525, 'eval_samples_per_second': 679.682, 'eval_steps_per_second': 85.238, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4131107032299042, 'eval_precision': 0.41507024265644954, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.39156626506024095, 'eval_accuracy': 0.9422913610746545, 'eval_runtime': 2.2539, 'eval_samples_per_second': 679.256, 'eval_steps_per_second': 85.184, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0008, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.41595685482025146, 'eval_precision': 0.4072727272727273, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.3948296122209166, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 2.25, 'eval_samples_per_second': 680.446, 'eval_steps_per_second': 85.334, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.41149774193763733, 'eval_precision': 0.38534031413612563, 'eval_recall': 0.41961231470923605, 'eval_f1': 0.4017467248908297, 'eval_accuracy': 0.9380066393885587, 'eval_runtime': 2.2546, 'eval_samples_per_second': 679.044, 'eval_steps_per_second': 85.158, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.4213707447052002, 'eval_precision': 0.41536614645858344, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.4046783625730994, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 2.2514, 'eval_samples_per_second': 680.019, 'eval_steps_per_second': 85.28, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0005, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.42735427618026733, 'eval_precision': 0.4383033419023136, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.41208459214501514, 'eval_accuracy': 0.9422141588821122, 'eval_runtime': 2.2507, 'eval_samples_per_second': 680.223, 'eval_steps_per_second': 85.306, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0006, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4253063499927521, 'eval_precision': 0.4183796856106409, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.4061032863849765, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 2.2499, 'eval_samples_per_second': 680.463, 'eval_steps_per_second': 85.336, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.42401787638664246, 'eval_precision': 0.41737032569360677, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.40562719812426734, 'eval_accuracy': 0.941866749015672, 'eval_runtime': 2.2504, 'eval_samples_per_second': 680.328, 'eval_steps_per_second': 85.319, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4255836009979248, 'eval_precision': 0.42839195979899497, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.4076509264793784, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.2501, 'eval_samples_per_second': 680.411, 'eval_steps_per_second': 85.329, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 758.129, 'train_samples_per_second': 273.326, 'train_steps_per_second': 4.274, 'total_flos': 8063437520109660.0, 'train_loss': 0.0289075204734633, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9465
  predict_f1                 =     0.3528
  predict_loss               =     0.1734
  predict_precision          =     0.4384
  predict_recall             =     0.2952
  predict_runtime            = 0:00:01.89
  predict_samples_per_second =    672.592
  predict_steps_per_second   =     84.074
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_37.json completed. F1: 0.35284552845528455
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_08.json
01170939_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6943.97 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7167.11 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6967.93 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7003.00 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7057.52 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7166.84 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7330.17 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7399.61 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6843.70 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7028.98 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6812.14 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7055.29 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6895.98 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0029, 'eval_samples_per_second': 509.845, 'eval_steps_per_second': 63.939, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9831, 'eval_samples_per_second': 513.23, 'eval_steps_per_second': 64.363, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.367, 'eval_steps_per_second': 64.506, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9858, 'eval_samples_per_second': 512.763, 'eval_steps_per_second': 64.305, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.213, 'eval_steps_per_second': 64.236, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.837, 'eval_steps_per_second': 64.439, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.842, 'eval_steps_per_second': 64.691, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9772, 'eval_samples_per_second': 514.245, 'eval_steps_per_second': 64.491, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.806, 'eval_steps_per_second': 64.686, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.56, 'eval_steps_per_second': 64.53, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0493, 'eval_samples_per_second': 502.081, 'eval_steps_per_second': 62.965, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.445, 'eval_steps_per_second': 64.641, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9662, 'eval_samples_per_second': 516.144, 'eval_steps_per_second': 64.729, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9694, 'eval_samples_per_second': 515.589, 'eval_steps_per_second': 64.659, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.828, 'eval_steps_per_second': 64.689, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9689, 'eval_samples_per_second': 515.687, 'eval_steps_per_second': 64.671, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9642, 'eval_samples_per_second': 516.491, 'eval_steps_per_second': 64.772, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.353, 'eval_steps_per_second': 64.63, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.98, 'eval_samples_per_second': 513.766, 'eval_steps_per_second': 64.43, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9887, 'eval_samples_per_second': 512.267, 'eval_steps_per_second': 64.242, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9838, 'eval_samples_per_second': 513.103, 'eval_steps_per_second': 64.347, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9679, 'eval_samples_per_second': 515.854, 'eval_steps_per_second': 64.692, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9621, 'eval_samples_per_second': 516.864, 'eval_steps_per_second': 64.819, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0404, 'eval_samples_per_second': 503.552, 'eval_steps_per_second': 63.15, 'epoch': 24.0}
{'train_runtime': 858.9709, 'train_samples_per_second': 241.238, 'train_steps_per_second': 6.035, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:18.97
  train_samples            =       8634
  train_samples_per_second =    241.238
  train_steps_per_second   =      6.035
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0029, 'eval_samples_per_second': 509.845, 'eval_steps_per_second': 63.939, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9831, 'eval_samples_per_second': 513.23, 'eval_steps_per_second': 64.363, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.367, 'eval_steps_per_second': 64.506, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9858, 'eval_samples_per_second': 512.763, 'eval_steps_per_second': 64.305, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.213, 'eval_steps_per_second': 64.236, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9795, 'eval_samples_per_second': 513.837, 'eval_steps_per_second': 64.439, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.842, 'eval_steps_per_second': 64.691, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9772, 'eval_samples_per_second': 514.245, 'eval_steps_per_second': 64.491, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.806, 'eval_steps_per_second': 64.686, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9754, 'eval_samples_per_second': 514.56, 'eval_steps_per_second': 64.53, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0493, 'eval_samples_per_second': 502.081, 'eval_steps_per_second': 62.965, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9703, 'eval_samples_per_second': 515.445, 'eval_steps_per_second': 64.641, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9662, 'eval_samples_per_second': 516.144, 'eval_steps_per_second': 64.729, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9694, 'eval_samples_per_second': 515.589, 'eval_steps_per_second': 64.659, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.968, 'eval_samples_per_second': 515.828, 'eval_steps_per_second': 64.689, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9689, 'eval_samples_per_second': 515.687, 'eval_steps_per_second': 64.671, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9642, 'eval_samples_per_second': 516.491, 'eval_steps_per_second': 64.772, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.353, 'eval_steps_per_second': 64.63, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.98, 'eval_samples_per_second': 513.766, 'eval_steps_per_second': 64.43, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9887, 'eval_samples_per_second': 512.267, 'eval_steps_per_second': 64.242, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9838, 'eval_samples_per_second': 513.103, 'eval_steps_per_second': 64.347, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9679, 'eval_samples_per_second': 515.854, 'eval_steps_per_second': 64.692, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9621, 'eval_samples_per_second': 516.864, 'eval_steps_per_second': 64.819, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0404, 'eval_samples_per_second': 503.552, 'eval_steps_per_second': 63.15, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 858.9709, 'train_samples_per_second': 241.238, 'train_steps_per_second': 6.035, 'total_flos': 7004249699478276.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.48
  predict_samples_per_second =    512.054
  predict_steps_per_second   =     64.007
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_08.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_30.json
01170939_tsa-bin_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6877.95 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7334.38 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7170.47 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7204.76 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7260.58 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7384.64 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6479.08 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6827.23 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7006.21 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7617.17 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7229.03 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7294.28 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7098.09 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2588, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.18464410305023193, 'eval_precision': 0.36123853211009177, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3602058319039452, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 2.2682, 'eval_samples_per_second': 674.998, 'eval_steps_per_second': 84.65, 'epoch': 1.0}
{'loss': 0.17, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.17155268788337708, 'eval_precision': 0.49337748344370863, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.4024307900067522, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.2465, 'eval_samples_per_second': 681.51, 'eval_steps_per_second': 85.467, 'epoch': 2.0}
{'loss': 0.1187, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.17738325893878937, 'eval_precision': 0.4227053140096618, 'eval_recall': 0.3990877993158495, 'eval_f1': 0.4105571847507331, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2466, 'eval_samples_per_second': 681.485, 'eval_steps_per_second': 85.464, 'epoch': 3.0}
{'loss': 0.0777, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2087946981191635, 'eval_precision': 0.4652777777777778, 'eval_recall': 0.38198403648802737, 'eval_f1': 0.419536631183469, 'eval_accuracy': 0.9455724542577009, 'eval_runtime': 2.2411, 'eval_samples_per_second': 683.144, 'eval_steps_per_second': 85.672, 'epoch': 4.0}
{'loss': 0.0509, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.23187780380249023, 'eval_precision': 0.39447513812154694, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.4006734006734007, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.2396, 'eval_samples_per_second': 683.612, 'eval_steps_per_second': 85.731, 'epoch': 5.0}
{'loss': 0.0388, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2493579387664795, 'eval_precision': 0.4115267947421638, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.4362272240085745, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 2.2408, 'eval_samples_per_second': 683.228, 'eval_steps_per_second': 85.682, 'epoch': 6.0}
{'loss': 0.0265, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.25242283940315247, 'eval_precision': 0.4215686274509804, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.43119777158774375, 'eval_accuracy': 0.9422527599783834, 'eval_runtime': 2.2478, 'eval_samples_per_second': 681.105, 'eval_steps_per_second': 85.416, 'epoch': 7.0}
{'loss': 0.0165, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2787042558193207, 'eval_precision': 0.4021421616358325, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.43382352941176466, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 2.2417, 'eval_samples_per_second': 682.978, 'eval_steps_per_second': 85.651, 'epoch': 8.0}
{'loss': 0.0115, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.29730281233787537, 'eval_precision': 0.44617092119866814, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.4521934758155231, 'eval_accuracy': 0.9448004323322783, 'eval_runtime': 2.246, 'eval_samples_per_second': 681.644, 'eval_steps_per_second': 85.484, 'epoch': 9.0}
{'loss': 0.0094, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.31468936800956726, 'eval_precision': 0.41414141414141414, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.417420814479638, 'eval_accuracy': 0.9423685632671968, 'eval_runtime': 2.2649, 'eval_samples_per_second': 675.97, 'eval_steps_per_second': 84.772, 'epoch': 10.0}
{'loss': 0.0075, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.33026474714279175, 'eval_precision': 0.4430379746835443, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.44100801832760594, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2446, 'eval_samples_per_second': 682.096, 'eval_steps_per_second': 85.54, 'epoch': 11.0}
{'loss': 0.0052, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.3389788269996643, 'eval_precision': 0.4252232142857143, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.42978003384094754, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 2.2413, 'eval_samples_per_second': 683.073, 'eval_steps_per_second': 85.663, 'epoch': 12.0}
{'loss': 0.0048, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.33713600039482117, 'eval_precision': 0.4764331210191083, 'eval_recall': 0.4264538198403649, 'eval_f1': 0.4500601684717208, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.2433, 'eval_samples_per_second': 682.481, 'eval_steps_per_second': 85.589, 'epoch': 13.0}
{'loss': 0.0047, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.35096800327301025, 'eval_precision': 0.4513172966781214, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.45028571428571434, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.2475, 'eval_samples_per_second': 681.199, 'eval_steps_per_second': 85.428, 'epoch': 14.0}
{'loss': 0.0033, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.3558579683303833, 'eval_precision': 0.4573170731707317, 'eval_recall': 0.427594070695553, 'eval_f1': 0.44195639363582795, 'eval_accuracy': 0.9439126071180421, 'eval_runtime': 2.2447, 'eval_samples_per_second': 682.066, 'eval_steps_per_second': 85.537, 'epoch': 15.0}
{'loss': 0.0025, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3755643367767334, 'eval_precision': 0.447953216374269, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.4422632794457274, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2404, 'eval_samples_per_second': 683.347, 'eval_steps_per_second': 85.697, 'epoch': 16.0}
{'loss': 0.002, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.3834558129310608, 'eval_precision': 0.43367935409457903, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.4311926605504587, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 2.2408, 'eval_samples_per_second': 683.253, 'eval_steps_per_second': 85.686, 'epoch': 17.0}
{'loss': 0.0016, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.3764956295490265, 'eval_precision': 0.4525810324129652, 'eval_recall': 0.4298745724059293, 'eval_f1': 0.4409356725146199, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.2415, 'eval_samples_per_second': 683.029, 'eval_steps_per_second': 85.657, 'epoch': 18.0}
{'loss': 0.0015, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.38495519757270813, 'eval_precision': 0.4606613454960091, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4606613454960091, 'eval_accuracy': 0.9440284104068556, 'eval_runtime': 2.2411, 'eval_samples_per_second': 683.152, 'eval_steps_per_second': 85.673, 'epoch': 19.0}
{'loss': 0.0013, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.37797775864601135, 'eval_precision': 0.45528455284552843, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.4510932105868815, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.238, 'eval_samples_per_second': 684.093, 'eval_steps_per_second': 85.791, 'epoch': 20.0}
{'loss': 0.0012, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.3776472210884094, 'eval_precision': 0.458041958041958, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.45302593659942364, 'eval_accuracy': 0.9445302246583803, 'eval_runtime': 2.2384, 'eval_samples_per_second': 683.966, 'eval_steps_per_second': 85.775, 'epoch': 21.0}
{'loss': 0.001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3862709701061249, 'eval_precision': 0.45324532453245325, 'eval_recall': 0.4697833523375142, 'eval_f1': 0.46136618141097424, 'eval_accuracy': 0.9436423994441442, 'eval_runtime': 2.2413, 'eval_samples_per_second': 683.081, 'eval_steps_per_second': 85.664, 'epoch': 22.0}
{'loss': 0.0008, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.38473471999168396, 'eval_precision': 0.46118192352259557, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.45747126436781604, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.2405, 'eval_samples_per_second': 683.337, 'eval_steps_per_second': 85.696, 'epoch': 23.0}
{'loss': 0.0007, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3855360746383667, 'eval_precision': 0.461271676300578, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4580941446613089, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.2352, 'eval_samples_per_second': 684.936, 'eval_steps_per_second': 85.897, 'epoch': 24.0}
{'train_runtime': 754.1118, 'train_samples_per_second': 274.782, 'train_steps_per_second': 4.296, 'train_loss': 0.034026480433933526, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.034
  train_runtime            = 0:12:34.11
  train_samples            =       8634
  train_samples_per_second =    274.782
  train_steps_per_second   =      4.296
[{'loss': 0.2588, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.18464410305023193, 'eval_precision': 0.36123853211009177, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3602058319039452, 'eval_accuracy': 0.9396664865282174, 'eval_runtime': 2.2682, 'eval_samples_per_second': 674.998, 'eval_steps_per_second': 84.65, 'epoch': 1.0, 'step': 135}, {'loss': 0.17, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.17155268788337708, 'eval_precision': 0.49337748344370863, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.4024307900067522, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.2465, 'eval_samples_per_second': 681.51, 'eval_steps_per_second': 85.467, 'epoch': 2.0, 'step': 270}, {'loss': 0.1187, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.17738325893878937, 'eval_precision': 0.4227053140096618, 'eval_recall': 0.3990877993158495, 'eval_f1': 0.4105571847507331, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2466, 'eval_samples_per_second': 681.485, 'eval_steps_per_second': 85.464, 'epoch': 3.0, 'step': 405}, {'loss': 0.0777, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2087946981191635, 'eval_precision': 0.4652777777777778, 'eval_recall': 0.38198403648802737, 'eval_f1': 0.419536631183469, 'eval_accuracy': 0.9455724542577009, 'eval_runtime': 2.2411, 'eval_samples_per_second': 683.144, 'eval_steps_per_second': 85.672, 'epoch': 4.0, 'step': 540}, {'loss': 0.0509, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.23187780380249023, 'eval_precision': 0.39447513812154694, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.4006734006734007, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.2396, 'eval_samples_per_second': 683.612, 'eval_steps_per_second': 85.731, 'epoch': 5.0, 'step': 675}, {'loss': 0.0388, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2493579387664795, 'eval_precision': 0.4115267947421638, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.4362272240085745, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 2.2408, 'eval_samples_per_second': 683.228, 'eval_steps_per_second': 85.682, 'epoch': 6.0, 'step': 810}, {'loss': 0.0265, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.25242283940315247, 'eval_precision': 0.4215686274509804, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.43119777158774375, 'eval_accuracy': 0.9422527599783834, 'eval_runtime': 2.2478, 'eval_samples_per_second': 681.105, 'eval_steps_per_second': 85.416, 'epoch': 7.0, 'step': 945}, {'loss': 0.0165, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2787042558193207, 'eval_precision': 0.4021421616358325, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.43382352941176466, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 2.2417, 'eval_samples_per_second': 682.978, 'eval_steps_per_second': 85.651, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0115, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.29730281233787537, 'eval_precision': 0.44617092119866814, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.4521934758155231, 'eval_accuracy': 0.9448004323322783, 'eval_runtime': 2.246, 'eval_samples_per_second': 681.644, 'eval_steps_per_second': 85.484, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0094, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.31468936800956726, 'eval_precision': 0.41414141414141414, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.417420814479638, 'eval_accuracy': 0.9423685632671968, 'eval_runtime': 2.2649, 'eval_samples_per_second': 675.97, 'eval_steps_per_second': 84.772, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0075, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.33026474714279175, 'eval_precision': 0.4430379746835443, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.44100801832760594, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2446, 'eval_samples_per_second': 682.096, 'eval_steps_per_second': 85.54, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0052, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3389788269996643, 'eval_precision': 0.4252232142857143, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.42978003384094754, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 2.2413, 'eval_samples_per_second': 683.073, 'eval_steps_per_second': 85.663, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0048, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.33713600039482117, 'eval_precision': 0.4764331210191083, 'eval_recall': 0.4264538198403649, 'eval_f1': 0.4500601684717208, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.2433, 'eval_samples_per_second': 682.481, 'eval_steps_per_second': 85.589, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0047, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.35096800327301025, 'eval_precision': 0.4513172966781214, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.45028571428571434, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.2475, 'eval_samples_per_second': 681.199, 'eval_steps_per_second': 85.428, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0033, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3558579683303833, 'eval_precision': 0.4573170731707317, 'eval_recall': 0.427594070695553, 'eval_f1': 0.44195639363582795, 'eval_accuracy': 0.9439126071180421, 'eval_runtime': 2.2447, 'eval_samples_per_second': 682.066, 'eval_steps_per_second': 85.537, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0025, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3755643367767334, 'eval_precision': 0.447953216374269, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.4422632794457274, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2404, 'eval_samples_per_second': 683.347, 'eval_steps_per_second': 85.697, 'epoch': 16.0, 'step': 2160}, {'loss': 0.002, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3834558129310608, 'eval_precision': 0.43367935409457903, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.4311926605504587, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 2.2408, 'eval_samples_per_second': 683.253, 'eval_steps_per_second': 85.686, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0016, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3764956295490265, 'eval_precision': 0.4525810324129652, 'eval_recall': 0.4298745724059293, 'eval_f1': 0.4409356725146199, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.2415, 'eval_samples_per_second': 683.029, 'eval_steps_per_second': 85.657, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0015, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.38495519757270813, 'eval_precision': 0.4606613454960091, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4606613454960091, 'eval_accuracy': 0.9440284104068556, 'eval_runtime': 2.2411, 'eval_samples_per_second': 683.152, 'eval_steps_per_second': 85.673, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0013, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.37797775864601135, 'eval_precision': 0.45528455284552843, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.4510932105868815, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.238, 'eval_samples_per_second': 684.093, 'eval_steps_per_second': 85.791, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0012, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3776472210884094, 'eval_precision': 0.458041958041958, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.45302593659942364, 'eval_accuracy': 0.9445302246583803, 'eval_runtime': 2.2384, 'eval_samples_per_second': 683.966, 'eval_steps_per_second': 85.775, 'epoch': 21.0, 'step': 2835}, {'loss': 0.001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3862709701061249, 'eval_precision': 0.45324532453245325, 'eval_recall': 0.4697833523375142, 'eval_f1': 0.46136618141097424, 'eval_accuracy': 0.9436423994441442, 'eval_runtime': 2.2413, 'eval_samples_per_second': 683.081, 'eval_steps_per_second': 85.664, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0008, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.38473471999168396, 'eval_precision': 0.46118192352259557, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.45747126436781604, 'eval_accuracy': 0.9444144213695669, 'eval_runtime': 2.2405, 'eval_samples_per_second': 683.337, 'eval_steps_per_second': 85.696, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0007, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3855360746383667, 'eval_precision': 0.461271676300578, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4580941446613089, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.2352, 'eval_samples_per_second': 684.936, 'eval_steps_per_second': 85.897, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 754.1118, 'train_samples_per_second': 274.782, 'train_steps_per_second': 4.296, 'total_flos': 8063437520109660.0, 'train_loss': 0.034026480433933526, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9459
  predict_f1                 =     0.3649
  predict_loss               =     0.1757
  predict_precision          =     0.4886
  predict_recall             =     0.2912
  predict_runtime            = 0:00:01.87
  predict_samples_per_second =    676.873
  predict_steps_per_second   =     84.609
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_30.json completed. F1: 0.3648763853367434
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_16.json
01170939_tsa-bin_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6826.80 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7266.89 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7035.12 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7107.82 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7146.27 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7257.24 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6379.81 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6729.58 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6903.23 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7516.65 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7173.27 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7218.27 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7045.92 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.23310376703739166, 'eval_precision': 1.0, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004550625711035268, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.292, 'eval_samples_per_second': 667.974, 'eval_steps_per_second': 83.769, 'epoch': 1.0}
{'loss': 0.2357, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.2077656388282776, 'eval_precision': 0.26506024096385544, 'eval_recall': 0.12542759407069556, 'eval_f1': 0.17027863777089786, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.2733, 'eval_samples_per_second': 673.476, 'eval_steps_per_second': 84.459, 'epoch': 2.0}
{'loss': 0.217, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.23513302206993103, 'eval_precision': 0.3537234042553192, 'eval_recall': 0.1516533637400228, 'eval_f1': 0.21229050279329606, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 2.2712, 'eval_samples_per_second': 674.091, 'eval_steps_per_second': 84.537, 'epoch': 3.0}
{'loss': 0.2778, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.26283636689186096, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2596, 'eval_samples_per_second': 677.561, 'eval_steps_per_second': 84.972, 'epoch': 4.0}
{'loss': 0.2804, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.251216322183609, 'eval_precision': 0.1503957783641161, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.09076433121019109, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 2.2633, 'eval_samples_per_second': 676.455, 'eval_steps_per_second': 84.833, 'epoch': 5.0}
{'loss': 0.2486, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2582247853279114, 'eval_precision': 0.7333333333333333, 'eval_recall': 0.012542759407069556, 'eval_f1': 0.024663677130044845, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2624, 'eval_samples_per_second': 676.706, 'eval_steps_per_second': 84.864, 'epoch': 6.0}
{'loss': 0.2461, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.24049358069896698, 'eval_precision': 0.24273858921161826, 'eval_recall': 0.13340935005701254, 'eval_f1': 0.17218543046357615, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2601, 'eval_samples_per_second': 677.417, 'eval_steps_per_second': 84.954, 'epoch': 7.0}
{'loss': 0.2139, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.2416672706604004, 'eval_precision': 0.23439099283520984, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.24703344120819853, 'eval_accuracy': 0.9257700918706091, 'eval_runtime': 2.2862, 'eval_samples_per_second': 669.661, 'eval_steps_per_second': 83.981, 'epoch': 8.0}
{'loss': 0.1871, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.2475021779537201, 'eval_precision': 0.33689839572192515, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.3101538461538462, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.696, 'eval_steps_per_second': 84.612, 'epoch': 9.0}
{'loss': 0.1643, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.20624488592147827, 'eval_precision': 0.285, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.23155044008124576, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.2726, 'eval_samples_per_second': 673.67, 'eval_steps_per_second': 84.484, 'epoch': 10.0}
{'loss': 0.1637, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.2159365564584732, 'eval_precision': 0.3091891891891892, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31742508324084356, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.3493, 'eval_samples_per_second': 651.685, 'eval_steps_per_second': 81.727, 'epoch': 11.0}
{'loss': 0.1391, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.24312745034694672, 'eval_precision': 0.3218543046357616, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2977941176470588, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.2661, 'eval_samples_per_second': 675.602, 'eval_steps_per_second': 84.726, 'epoch': 12.0}
{'loss': 0.1295, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.23522427678108215, 'eval_precision': 0.3035230352303523, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.3387096774193548, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 2.2749, 'eval_samples_per_second': 673.011, 'eval_steps_per_second': 84.401, 'epoch': 13.0}
{'loss': 0.1261, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.24529916048049927, 'eval_precision': 0.34923076923076923, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.29731499672560574, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.2561, 'eval_samples_per_second': 678.607, 'eval_steps_per_second': 85.103, 'epoch': 14.0}
{'loss': 0.1146, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.24150614440441132, 'eval_precision': 0.32108317214700194, 'eval_recall': 0.37856328392246297, 'eval_f1': 0.34746206174777605, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.2599, 'eval_samples_per_second': 677.474, 'eval_steps_per_second': 84.961, 'epoch': 15.0}
{'loss': 0.1045, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.25250548124313354, 'eval_precision': 0.3372365339578454, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3327556325823223, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2646, 'eval_samples_per_second': 676.046, 'eval_steps_per_second': 84.782, 'epoch': 16.0}
{'loss': 0.0947, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.246986985206604, 'eval_precision': 0.3487348734873487, 'eval_recall': 0.3614595210946408, 'eval_f1': 0.35498320268756994, 'eval_accuracy': 0.9349957538794101, 'eval_runtime': 2.2616, 'eval_samples_per_second': 676.945, 'eval_steps_per_second': 84.894, 'epoch': 17.0}
{'loss': 0.085, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.25769034028053284, 'eval_precision': 0.3403693931398417, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.3155963302752294, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.2558, 'eval_samples_per_second': 678.697, 'eval_steps_per_second': 85.114, 'epoch': 18.0}
{'loss': 0.0766, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.25967031717300415, 'eval_precision': 0.32432432432432434, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.34541577825159914, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2647, 'eval_samples_per_second': 676.037, 'eval_steps_per_second': 84.781, 'epoch': 19.0}
{'loss': 0.0697, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.2704216539859772, 'eval_precision': 0.3295336787564767, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.34527687296416937, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.3505, 'eval_samples_per_second': 651.347, 'eval_steps_per_second': 81.684, 'epoch': 20.0}
{'loss': 0.0631, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.27660420536994934, 'eval_precision': 0.3435722411831627, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3439635535307517, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.982, 'eval_steps_per_second': 84.899, 'epoch': 21.0}
{'loss': 0.0582, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.2785879075527191, 'eval_precision': 0.33572159672466734, 'eval_recall': 0.37400228050171036, 'eval_f1': 0.3538295577130529, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.2655, 'eval_samples_per_second': 675.779, 'eval_steps_per_second': 84.748, 'epoch': 22.0}
{'loss': 0.0566, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.28135162591934204, 'eval_precision': 0.34572072072072074, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.34787535410764875, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.993, 'eval_steps_per_second': 84.9, 'epoch': 23.0}
{'loss': 0.0521, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.2846919298171997, 'eval_precision': 0.34486607142857145, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34856175972927245, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.2581, 'eval_samples_per_second': 678.018, 'eval_steps_per_second': 85.029, 'epoch': 24.0}
{'train_runtime': 782.0363, 'train_samples_per_second': 264.97, 'train_steps_per_second': 6.629, 'train_loss': 0.1543629480364882, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1544
  train_runtime            = 0:13:02.03
  train_samples            =       8634
  train_samples_per_second =     264.97
  train_steps_per_second   =      6.629
[{'loss': 0.3, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.23310376703739166, 'eval_precision': 1.0, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004550625711035268, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.292, 'eval_samples_per_second': 667.974, 'eval_steps_per_second': 83.769, 'epoch': 1.0, 'step': 216}, {'loss': 0.2357, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.2077656388282776, 'eval_precision': 0.26506024096385544, 'eval_recall': 0.12542759407069556, 'eval_f1': 0.17027863777089786, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.2733, 'eval_samples_per_second': 673.476, 'eval_steps_per_second': 84.459, 'epoch': 2.0, 'step': 432}, {'loss': 0.217, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.23513302206993103, 'eval_precision': 0.3537234042553192, 'eval_recall': 0.1516533637400228, 'eval_f1': 0.21229050279329606, 'eval_accuracy': 0.9384698525438122, 'eval_runtime': 2.2712, 'eval_samples_per_second': 674.091, 'eval_steps_per_second': 84.537, 'epoch': 3.0, 'step': 648}, {'loss': 0.2778, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.26283636689186096, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.2596, 'eval_samples_per_second': 677.561, 'eval_steps_per_second': 84.972, 'epoch': 4.0, 'step': 864}, {'loss': 0.2804, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.251216322183609, 'eval_precision': 0.1503957783641161, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.09076433121019109, 'eval_accuracy': 0.9325252837180575, 'eval_runtime': 2.2633, 'eval_samples_per_second': 676.455, 'eval_steps_per_second': 84.833, 'epoch': 5.0, 'step': 1080}, {'loss': 0.2486, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.2582247853279114, 'eval_precision': 0.7333333333333333, 'eval_recall': 0.012542759407069556, 'eval_f1': 0.024663677130044845, 'eval_accuracy': 0.9345325407241566, 'eval_runtime': 2.2624, 'eval_samples_per_second': 676.706, 'eval_steps_per_second': 84.864, 'epoch': 6.0, 'step': 1296}, {'loss': 0.2461, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.24049358069896698, 'eval_precision': 0.24273858921161826, 'eval_recall': 0.13340935005701254, 'eval_f1': 0.17218543046357615, 'eval_accuracy': 0.9291283872461978, 'eval_runtime': 2.2601, 'eval_samples_per_second': 677.417, 'eval_steps_per_second': 84.954, 'epoch': 7.0, 'step': 1512}, {'loss': 0.2139, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.2416672706604004, 'eval_precision': 0.23439099283520984, 'eval_recall': 0.2611174458380844, 'eval_f1': 0.24703344120819853, 'eval_accuracy': 0.9257700918706091, 'eval_runtime': 2.2862, 'eval_samples_per_second': 669.661, 'eval_steps_per_second': 83.981, 'epoch': 8.0, 'step': 1728}, {'loss': 0.1871, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.2475021779537201, 'eval_precision': 0.33689839572192515, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.3101538461538462, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.2692, 'eval_samples_per_second': 674.696, 'eval_steps_per_second': 84.612, 'epoch': 9.0, 'step': 1944}, {'loss': 0.1643, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.20624488592147827, 'eval_precision': 0.285, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.23155044008124576, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.2726, 'eval_samples_per_second': 673.67, 'eval_steps_per_second': 84.484, 'epoch': 10.0, 'step': 2160}, {'loss': 0.1637, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.2159365564584732, 'eval_precision': 0.3091891891891892, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31742508324084356, 'eval_accuracy': 0.9333359067397514, 'eval_runtime': 2.3493, 'eval_samples_per_second': 651.685, 'eval_steps_per_second': 81.727, 'epoch': 11.0, 'step': 2376}, {'loss': 0.1391, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.24312745034694672, 'eval_precision': 0.3218543046357616, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.2977941176470588, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.2661, 'eval_samples_per_second': 675.602, 'eval_steps_per_second': 84.726, 'epoch': 12.0, 'step': 2592}, {'loss': 0.1295, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.23522427678108215, 'eval_precision': 0.3035230352303523, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.3387096774193548, 'eval_accuracy': 0.9282791631282329, 'eval_runtime': 2.2749, 'eval_samples_per_second': 673.011, 'eval_steps_per_second': 84.401, 'epoch': 13.0, 'step': 2808}, {'loss': 0.1261, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.24529916048049927, 'eval_precision': 0.34923076923076923, 'eval_recall': 0.2588369441277081, 'eval_f1': 0.29731499672560574, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.2561, 'eval_samples_per_second': 678.607, 'eval_steps_per_second': 85.103, 'epoch': 14.0, 'step': 3024}, {'loss': 0.1146, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.24150614440441132, 'eval_precision': 0.32108317214700194, 'eval_recall': 0.37856328392246297, 'eval_f1': 0.34746206174777605, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.2599, 'eval_samples_per_second': 677.474, 'eval_steps_per_second': 84.961, 'epoch': 15.0, 'step': 3240}, {'loss': 0.1045, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.25250548124313354, 'eval_precision': 0.3372365339578454, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3327556325823223, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.2646, 'eval_samples_per_second': 676.046, 'eval_steps_per_second': 84.782, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0947, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.246986985206604, 'eval_precision': 0.3487348734873487, 'eval_recall': 0.3614595210946408, 'eval_f1': 0.35498320268756994, 'eval_accuracy': 0.9349957538794101, 'eval_runtime': 2.2616, 'eval_samples_per_second': 676.945, 'eval_steps_per_second': 84.894, 'epoch': 17.0, 'step': 3672}, {'loss': 0.085, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.25769034028053284, 'eval_precision': 0.3403693931398417, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.3155963302752294, 'eval_accuracy': 0.9371188141743225, 'eval_runtime': 2.2558, 'eval_samples_per_second': 678.697, 'eval_steps_per_second': 85.114, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0766, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.25967031717300415, 'eval_precision': 0.32432432432432434, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.34541577825159914, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.2647, 'eval_samples_per_second': 676.037, 'eval_steps_per_second': 84.781, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0697, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.2704216539859772, 'eval_precision': 0.3295336787564767, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.34527687296416937, 'eval_accuracy': 0.9326024859105999, 'eval_runtime': 2.3505, 'eval_samples_per_second': 651.347, 'eval_steps_per_second': 81.684, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0631, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.27660420536994934, 'eval_precision': 0.3435722411831627, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3439635535307517, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.982, 'eval_steps_per_second': 84.899, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0582, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.2785879075527191, 'eval_precision': 0.33572159672466734, 'eval_recall': 0.37400228050171036, 'eval_f1': 0.3538295577130529, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.2655, 'eval_samples_per_second': 675.779, 'eval_steps_per_second': 84.748, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0566, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.28135162591934204, 'eval_precision': 0.34572072072072074, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.34787535410764875, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.993, 'eval_steps_per_second': 84.9, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0521, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.2846919298171997, 'eval_precision': 0.34486607142857145, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34856175972927245, 'eval_accuracy': 0.9365011966339845, 'eval_runtime': 2.2581, 'eval_samples_per_second': 678.018, 'eval_steps_per_second': 85.029, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 782.0363, 'train_samples_per_second': 264.97, 'train_steps_per_second': 6.629, 'total_flos': 7390962891524160.0, 'train_loss': 0.1543629480364882, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9383
  predict_f1                 =     0.2134
  predict_loss               =     0.2087
  predict_precision          =     0.2825
  predict_recall             =     0.1714
  predict_runtime            = 0:00:01.89
  predict_samples_per_second =     670.74
  predict_steps_per_second   =     83.843
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_16.json completed. F1: 0.21337849280270957
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_00.json
01170939_tsa-bin_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6818.00 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7161.56 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6744.69 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6749.68 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6795.06 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7001.10 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7212.82 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7318.57 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6727.68 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7389.19 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7033.39 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7024.54 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6869.83 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5111, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.22234991192817688, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.16077537058152794, 'eval_f1': 0.18951612903225803, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 3.0014, 'eval_samples_per_second': 510.103, 'eval_steps_per_second': 63.971, 'epoch': 1.0}
{'loss': 0.2178, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.202357679605484, 'eval_precision': 0.19668737060041408, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2061855670103093, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 3.0024, 'eval_samples_per_second': 509.932, 'eval_steps_per_second': 63.95, 'epoch': 2.0}
{'loss': 0.1776, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.20505954325199127, 'eval_precision': 0.2239884393063584, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.19757807520713835, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 3.0094, 'eval_samples_per_second': 508.731, 'eval_steps_per_second': 63.799, 'epoch': 3.0}
{'loss': 0.1281, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21689969301223755, 'eval_precision': 0.424812030075188, 'eval_recall': 0.3865450399087799, 'eval_f1': 0.40477611940298514, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.9911, 'eval_samples_per_second': 511.859, 'eval_steps_per_second': 64.191, 'epoch': 4.0}
{'loss': 0.0905, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2179936319589615, 'eval_precision': 0.4267734553775744, 'eval_recall': 0.42531356898517675, 'eval_f1': 0.4260422615648201, 'eval_accuracy': 0.9426387709410947, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.843, 'eval_steps_per_second': 64.064, 'epoch': 5.0}
{'loss': 0.0727, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2262965589761734, 'eval_precision': 0.4380664652567976, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.46524064171123, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 2.9977, 'eval_samples_per_second': 510.722, 'eval_steps_per_second': 64.049, 'epoch': 6.0}
{'loss': 0.0555, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.23340709507465363, 'eval_precision': 0.4703982777179763, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.4839424141749723, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 3.0135, 'eval_samples_per_second': 508.055, 'eval_steps_per_second': 63.714, 'epoch': 7.0}
{'loss': 0.0417, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.2513831555843353, 'eval_precision': 0.48916761687571264, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.48916761687571264, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 3.0226, 'eval_samples_per_second': 506.511, 'eval_steps_per_second': 63.521, 'epoch': 8.0}
{'loss': 0.0328, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.25268667936325073, 'eval_precision': 0.45401174168297453, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.48867825171142704, 'eval_accuracy': 0.9446846290434648, 'eval_runtime': 2.9968, 'eval_samples_per_second': 510.884, 'eval_steps_per_second': 64.069, 'epoch': 9.0}
{'loss': 0.0234, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2646082639694214, 'eval_precision': 0.45260915867944623, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4680616740088106, 'eval_accuracy': 0.9453408476800741, 'eval_runtime': 2.9876, 'eval_samples_per_second': 512.456, 'eval_steps_per_second': 64.266, 'epoch': 10.0}
{'loss': 0.0208, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.2794647514820099, 'eval_precision': 0.47497089639115253, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.4700460829493087, 'eval_accuracy': 0.9474639079749865, 'eval_runtime': 3.0723, 'eval_samples_per_second': 498.329, 'eval_steps_per_second': 62.495, 'epoch': 11.0}
{'loss': 0.015, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.28697502613067627, 'eval_precision': 0.4651898734177215, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4832876712328767, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.9997, 'eval_samples_per_second': 510.381, 'eval_steps_per_second': 64.006, 'epoch': 12.0}
{'loss': 0.0116, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.30300748348236084, 'eval_precision': 0.46547884187082406, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4709859154929577, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.97, 'eval_samples_per_second': 515.488, 'eval_steps_per_second': 64.646, 'epoch': 13.0}
{'loss': 0.0098, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3002164661884308, 'eval_precision': 0.46233230134158926, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4853737811484291, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 3.0232, 'eval_samples_per_second': 506.418, 'eval_steps_per_second': 63.509, 'epoch': 14.0}
{'loss': 0.008, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3079661428928375, 'eval_precision': 0.4748040313549832, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.4790960451977401, 'eval_accuracy': 0.9474639079749865, 'eval_runtime': 2.9898, 'eval_samples_per_second': 512.069, 'eval_steps_per_second': 64.218, 'epoch': 15.0}
{'loss': 0.0065, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3110550045967102, 'eval_precision': 0.4857792946530148, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4863325740318907, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.396, 'eval_steps_per_second': 64.008, 'epoch': 16.0}
{'loss': 0.0055, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3241249918937683, 'eval_precision': 0.4762979683972912, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.47872943845717525, 'eval_accuracy': 0.9471937003010885, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.708, 'eval_steps_per_second': 64.172, 'epoch': 17.0}
{'loss': 0.0049, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.33196789026260376, 'eval_precision': 0.43580131208997186, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.4783950617283951, 'eval_accuracy': 0.9437582027329576, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.709, 'eval_steps_per_second': 64.172, 'epoch': 18.0}
{'loss': 0.0039, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.33506685495376587, 'eval_precision': 0.4785553047404063, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.48099829835507657, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.785, 'eval_steps_per_second': 64.182, 'epoch': 19.0}
{'loss': 0.0038, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3359176814556122, 'eval_precision': 0.46334012219959264, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.4895104895104895, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.9974, 'eval_samples_per_second': 510.769, 'eval_steps_per_second': 64.055, 'epoch': 20.0}
{'loss': 0.0032, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.33807477355003357, 'eval_precision': 0.47064989517819705, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.49044238121245226, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.9856, 'eval_samples_per_second': 512.794, 'eval_steps_per_second': 64.309, 'epoch': 21.0}
{'loss': 0.0026, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3428526818752289, 'eval_precision': 0.46914893617021275, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4854155200880573, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.9893, 'eval_samples_per_second': 512.155, 'eval_steps_per_second': 64.228, 'epoch': 22.0}
{'loss': 0.0022, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.34402355551719666, 'eval_precision': 0.4740820734341253, 'eval_recall': 0.500570125427594, 'eval_f1': 0.4869661674986134, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.9912, 'eval_samples_per_second': 511.827, 'eval_steps_per_second': 64.187, 'epoch': 23.0}
{'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3442820608615875, 'eval_precision': 0.4750542299349241, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.4869371873262924, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 3.0586, 'eval_samples_per_second': 500.557, 'eval_steps_per_second': 62.774, 'epoch': 24.0}
{'train_runtime': 459.2914, 'train_samples_per_second': 451.165, 'train_steps_per_second': 11.287, 'train_loss': 0.06044889617435358, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0604
  train_runtime            = 0:07:39.29
  train_samples            =       8634
  train_samples_per_second =    451.165
  train_steps_per_second   =     11.287
[{'loss': 0.5111, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.22234991192817688, 'eval_precision': 0.23076923076923078, 'eval_recall': 0.16077537058152794, 'eval_f1': 0.18951612903225803, 'eval_accuracy': 0.9368100054041535, 'eval_runtime': 3.0014, 'eval_samples_per_second': 510.103, 'eval_steps_per_second': 63.971, 'epoch': 1.0, 'step': 216}, {'loss': 0.2178, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.202357679605484, 'eval_precision': 0.19668737060041408, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2061855670103093, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 3.0024, 'eval_samples_per_second': 509.932, 'eval_steps_per_second': 63.95, 'epoch': 2.0, 'step': 432}, {'loss': 0.1776, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.20505954325199127, 'eval_precision': 0.2239884393063584, 'eval_recall': 0.17673888255416192, 'eval_f1': 0.19757807520713835, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 3.0094, 'eval_samples_per_second': 508.731, 'eval_steps_per_second': 63.799, 'epoch': 3.0, 'step': 648}, {'loss': 0.1281, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.21689969301223755, 'eval_precision': 0.424812030075188, 'eval_recall': 0.3865450399087799, 'eval_f1': 0.40477611940298514, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.9911, 'eval_samples_per_second': 511.859, 'eval_steps_per_second': 64.191, 'epoch': 4.0, 'step': 864}, {'loss': 0.0905, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2179936319589615, 'eval_precision': 0.4267734553775744, 'eval_recall': 0.42531356898517675, 'eval_f1': 0.4260422615648201, 'eval_accuracy': 0.9426387709410947, 'eval_runtime': 2.997, 'eval_samples_per_second': 510.843, 'eval_steps_per_second': 64.064, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0727, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.2262965589761734, 'eval_precision': 0.4380664652567976, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.46524064171123, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 2.9977, 'eval_samples_per_second': 510.722, 'eval_steps_per_second': 64.049, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0555, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.23340709507465363, 'eval_precision': 0.4703982777179763, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.4839424141749723, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 3.0135, 'eval_samples_per_second': 508.055, 'eval_steps_per_second': 63.714, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0417, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.2513831555843353, 'eval_precision': 0.48916761687571264, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.48916761687571264, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 3.0226, 'eval_samples_per_second': 506.511, 'eval_steps_per_second': 63.521, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0328, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.25268667936325073, 'eval_precision': 0.45401174168297453, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.48867825171142704, 'eval_accuracy': 0.9446846290434648, 'eval_runtime': 2.9968, 'eval_samples_per_second': 510.884, 'eval_steps_per_second': 64.069, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0234, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.2646082639694214, 'eval_precision': 0.45260915867944623, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4680616740088106, 'eval_accuracy': 0.9453408476800741, 'eval_runtime': 2.9876, 'eval_samples_per_second': 512.456, 'eval_steps_per_second': 64.266, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0208, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.2794647514820099, 'eval_precision': 0.47497089639115253, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.4700460829493087, 'eval_accuracy': 0.9474639079749865, 'eval_runtime': 3.0723, 'eval_samples_per_second': 498.329, 'eval_steps_per_second': 62.495, 'epoch': 11.0, 'step': 2376}, {'loss': 0.015, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.28697502613067627, 'eval_precision': 0.4651898734177215, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4832876712328767, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.9997, 'eval_samples_per_second': 510.381, 'eval_steps_per_second': 64.006, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0116, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.30300748348236084, 'eval_precision': 0.46547884187082406, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4709859154929577, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.97, 'eval_samples_per_second': 515.488, 'eval_steps_per_second': 64.646, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0098, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.3002164661884308, 'eval_precision': 0.46233230134158926, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4853737811484291, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 3.0232, 'eval_samples_per_second': 506.418, 'eval_steps_per_second': 63.509, 'epoch': 14.0, 'step': 3024}, {'loss': 0.008, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.3079661428928375, 'eval_precision': 0.4748040313549832, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.4790960451977401, 'eval_accuracy': 0.9474639079749865, 'eval_runtime': 2.9898, 'eval_samples_per_second': 512.069, 'eval_steps_per_second': 64.218, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0065, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.3110550045967102, 'eval_precision': 0.4857792946530148, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4863325740318907, 'eval_accuracy': 0.9480429244190535, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.396, 'eval_steps_per_second': 64.008, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0055, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.3241249918937683, 'eval_precision': 0.4762979683972912, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.47872943845717525, 'eval_accuracy': 0.9471937003010885, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.708, 'eval_steps_per_second': 64.172, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0049, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.33196789026260376, 'eval_precision': 0.43580131208997186, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.4783950617283951, 'eval_accuracy': 0.9437582027329576, 'eval_runtime': 2.9919, 'eval_samples_per_second': 511.709, 'eval_steps_per_second': 64.172, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0039, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.33506685495376587, 'eval_precision': 0.4785553047404063, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.48099829835507657, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.785, 'eval_steps_per_second': 64.182, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0038, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.3359176814556122, 'eval_precision': 0.46334012219959264, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.4895104895104895, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.9974, 'eval_samples_per_second': 510.769, 'eval_steps_per_second': 64.055, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0032, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.33807477355003357, 'eval_precision': 0.47064989517819705, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.49044238121245226, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.9856, 'eval_samples_per_second': 512.794, 'eval_steps_per_second': 64.309, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0026, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.3428526818752289, 'eval_precision': 0.46914893617021275, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4854155200880573, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.9893, 'eval_samples_per_second': 512.155, 'eval_steps_per_second': 64.228, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0022, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.34402355551719666, 'eval_precision': 0.4740820734341253, 'eval_recall': 0.500570125427594, 'eval_f1': 0.4869661674986134, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.9912, 'eval_samples_per_second': 511.827, 'eval_steps_per_second': 64.187, 'epoch': 23.0, 'step': 4968}, {'loss': 0.002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3442820608615875, 'eval_precision': 0.4750542299349241, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.4869371873262924, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 3.0586, 'eval_samples_per_second': 500.557, 'eval_steps_per_second': 62.774, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 459.2914, 'train_samples_per_second': 451.165, 'train_steps_per_second': 11.287, 'total_flos': 1753308428228868.0, 'train_loss': 0.06044889617435358, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9358
  predict_f1                 =     0.1583
  predict_loss               =     0.2072
  predict_precision          =     0.1536
  predict_recall             =     0.1633
  predict_runtime            = 0:00:02.48
  predict_samples_per_second =    512.663
  predict_steps_per_second   =     64.083
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_00.json completed. F1: 0.15831134564643798
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_06.json
01170939_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6185.95 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6897.41 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6801.92 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6858.03 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6942.87 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7059.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7241.56 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6320.91 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6698.80 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7397.95 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6917.50 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7040.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6830.47 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5756, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.4253873825073242, 'eval_precision': 0.4, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0045351473922902496, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7504, 'eval_samples_per_second': 266.24, 'eval_steps_per_second': 33.389, 'epoch': 1.0}
{'loss': 0.494, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.42559799551963806, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004524886877828054, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.7196, 'eval_samples_per_second': 267.678, 'eval_steps_per_second': 33.569, 'epoch': 2.0}
{'loss': 0.5099, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.5067537426948547, 'eval_precision': 0.2222222222222222, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02577873254564984, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7223, 'eval_samples_per_second': 267.551, 'eval_steps_per_second': 33.553, 'epoch': 3.0}
{'loss': 0.4596, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.48527780175209045, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.722, 'eval_samples_per_second': 267.562, 'eval_steps_per_second': 33.555, 'epoch': 4.0}
{'loss': 0.4485, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.5047521591186523, 'eval_precision': 0.2727272727272727, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006756756756756758, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7255, 'eval_samples_per_second': 267.399, 'eval_steps_per_second': 33.534, 'epoch': 5.0}
{'loss': 0.4559, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.5032520890235901, 'eval_precision': 0.5, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.013498312710911137, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.718, 'eval_samples_per_second': 267.75, 'eval_steps_per_second': 33.578, 'epoch': 6.0}
{'loss': 0.4696, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.5238604545593262, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008978675645342313, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 5.7852, 'eval_samples_per_second': 264.643, 'eval_steps_per_second': 33.188, 'epoch': 7.0}
{'loss': 0.4197, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.45843514800071716, 'eval_precision': 0.25, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022701475595913734, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7315, 'eval_samples_per_second': 267.122, 'eval_steps_per_second': 33.499, 'epoch': 8.0}
{'loss': 0.3999, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.44391581416130066, 'eval_precision': 0.125, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022598870056497176, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7175, 'eval_samples_per_second': 267.776, 'eval_steps_per_second': 33.581, 'epoch': 9.0}
{'loss': 0.4042, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.5047754049301147, 'eval_precision': 0.42857142857142855, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0067873303167420825, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.7091, 'eval_samples_per_second': 268.17, 'eval_steps_per_second': 33.631, 'epoch': 10.0}
{'loss': 0.386, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.40263617038726807, 'eval_precision': 0.2222222222222222, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004514672686230249, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7226, 'eval_samples_per_second': 267.534, 'eval_steps_per_second': 33.551, 'epoch': 11.0}
{'loss': 0.3763, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.46391597390174866, 'eval_precision': 0.375, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006779661016949153, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7217, 'eval_samples_per_second': 267.576, 'eval_steps_per_second': 33.556, 'epoch': 12.0}
{'loss': 0.3725, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.38313058018684387, 'eval_precision': 0.18181818181818182, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0045045045045045045, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7904, 'eval_samples_per_second': 264.403, 'eval_steps_per_second': 33.158, 'epoch': 13.0}
{'loss': 0.3606, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.39569976925849915, 'eval_precision': 0.2, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022675736961451248, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.7222, 'eval_samples_per_second': 267.554, 'eval_steps_per_second': 33.553, 'epoch': 14.0}
{'loss': 0.3489, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3857596516609192, 'eval_precision': 0.5, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.00903954802259887, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7074, 'eval_samples_per_second': 268.247, 'eval_steps_per_second': 33.64, 'epoch': 15.0}
{'loss': 0.3391, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4110058844089508, 'eval_precision': 0.14285714285714285, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002262443438914027, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.24, 'eval_steps_per_second': 33.514, 'epoch': 16.0}
{'loss': 0.3352, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4122314453125, 'eval_precision': 0.3, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006764374295377678, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 5.7037, 'eval_samples_per_second': 268.424, 'eval_steps_per_second': 33.663, 'epoch': 17.0}
{'loss': 0.3282, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.42430660128593445, 'eval_precision': 0.16666666666666666, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0044994375703037125, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 5.7333, 'eval_samples_per_second': 267.037, 'eval_steps_per_second': 33.489, 'epoch': 18.0}
{'loss': 0.3423, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4205023944377899, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022727272727272726, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.7251, 'eval_samples_per_second': 267.421, 'eval_steps_per_second': 33.537, 'epoch': 19.0}
{'loss': 0.3354, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.4016216993331909, 'eval_precision': 0.5, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004540295119182747, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.774, 'eval_samples_per_second': 265.153, 'eval_steps_per_second': 33.252, 'epoch': 20.0}
{'loss': 0.3199, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.39198875427246094, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004524886877828054, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.7025, 'eval_samples_per_second': 268.48, 'eval_steps_per_second': 33.67, 'epoch': 21.0}
{'loss': 0.2882, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.38525670766830444, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.6967, 'eval_samples_per_second': 268.75, 'eval_steps_per_second': 33.703, 'epoch': 22.0}
{'loss': 0.2982, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.377715528011322, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7061, 'eval_samples_per_second': 268.312, 'eval_steps_per_second': 33.648, 'epoch': 23.0}
{'loss': 0.2832, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3724467158317566, 'eval_precision': 0.14285714285714285, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002262443438914027, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.6904, 'eval_samples_per_second': 269.05, 'eval_steps_per_second': 33.741, 'epoch': 24.0}
{'train_runtime': 2442.6873, 'train_samples_per_second': 84.831, 'train_steps_per_second': 2.122, 'train_loss': 0.3896244433191087, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.3896
  train_runtime            = 0:40:42.68
  train_samples            =       8634
  train_samples_per_second =     84.831
  train_steps_per_second   =      2.122
[{'loss': 0.5756, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.4253873825073242, 'eval_precision': 0.4, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0045351473922902496, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7504, 'eval_samples_per_second': 266.24, 'eval_steps_per_second': 33.389, 'epoch': 1.0, 'step': 216}, {'loss': 0.494, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.42559799551963806, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004524886877828054, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.7196, 'eval_samples_per_second': 267.678, 'eval_steps_per_second': 33.569, 'epoch': 2.0, 'step': 432}, {'loss': 0.5099, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.5067537426948547, 'eval_precision': 0.2222222222222222, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02577873254564984, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7223, 'eval_samples_per_second': 267.551, 'eval_steps_per_second': 33.553, 'epoch': 3.0, 'step': 648}, {'loss': 0.4596, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.48527780175209045, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.722, 'eval_samples_per_second': 267.562, 'eval_steps_per_second': 33.555, 'epoch': 4.0, 'step': 864}, {'loss': 0.4485, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.5047521591186523, 'eval_precision': 0.2727272727272727, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006756756756756758, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7255, 'eval_samples_per_second': 267.399, 'eval_steps_per_second': 33.534, 'epoch': 5.0, 'step': 1080}, {'loss': 0.4559, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.5032520890235901, 'eval_precision': 0.5, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.013498312710911137, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.718, 'eval_samples_per_second': 267.75, 'eval_steps_per_second': 33.578, 'epoch': 6.0, 'step': 1296}, {'loss': 0.4696, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.5238604545593262, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.008978675645342313, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 5.7852, 'eval_samples_per_second': 264.643, 'eval_steps_per_second': 33.188, 'epoch': 7.0, 'step': 1512}, {'loss': 0.4197, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.45843514800071716, 'eval_precision': 0.25, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022701475595913734, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7315, 'eval_samples_per_second': 267.122, 'eval_steps_per_second': 33.499, 'epoch': 8.0, 'step': 1728}, {'loss': 0.3999, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.44391581416130066, 'eval_precision': 0.125, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022598870056497176, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7175, 'eval_samples_per_second': 267.776, 'eval_steps_per_second': 33.581, 'epoch': 9.0, 'step': 1944}, {'loss': 0.4042, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.5047754049301147, 'eval_precision': 0.42857142857142855, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0067873303167420825, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.7091, 'eval_samples_per_second': 268.17, 'eval_steps_per_second': 33.631, 'epoch': 10.0, 'step': 2160}, {'loss': 0.386, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.40263617038726807, 'eval_precision': 0.2222222222222222, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004514672686230249, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7226, 'eval_samples_per_second': 267.534, 'eval_steps_per_second': 33.551, 'epoch': 11.0, 'step': 2376}, {'loss': 0.3763, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.46391597390174866, 'eval_precision': 0.375, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006779661016949153, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.7217, 'eval_samples_per_second': 267.576, 'eval_steps_per_second': 33.556, 'epoch': 12.0, 'step': 2592}, {'loss': 0.3725, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.38313058018684387, 'eval_precision': 0.18181818181818182, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0045045045045045045, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7904, 'eval_samples_per_second': 264.403, 'eval_steps_per_second': 33.158, 'epoch': 13.0, 'step': 2808}, {'loss': 0.3606, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.39569976925849915, 'eval_precision': 0.2, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022675736961451248, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.7222, 'eval_samples_per_second': 267.554, 'eval_steps_per_second': 33.553, 'epoch': 14.0, 'step': 3024}, {'loss': 0.3489, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.3857596516609192, 'eval_precision': 0.5, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.00903954802259887, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7074, 'eval_samples_per_second': 268.247, 'eval_steps_per_second': 33.64, 'epoch': 15.0, 'step': 3240}, {'loss': 0.3391, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.4110058844089508, 'eval_precision': 0.14285714285714285, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002262443438914027, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.24, 'eval_steps_per_second': 33.514, 'epoch': 16.0, 'step': 3456}, {'loss': 0.3352, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.4122314453125, 'eval_precision': 0.3, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.006764374295377678, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 5.7037, 'eval_samples_per_second': 268.424, 'eval_steps_per_second': 33.663, 'epoch': 17.0, 'step': 3672}, {'loss': 0.3282, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.42430660128593445, 'eval_precision': 0.16666666666666666, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0044994375703037125, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 5.7333, 'eval_samples_per_second': 267.037, 'eval_steps_per_second': 33.489, 'epoch': 18.0, 'step': 3888}, {'loss': 0.3423, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.4205023944377899, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022727272727272726, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 5.7251, 'eval_samples_per_second': 267.421, 'eval_steps_per_second': 33.537, 'epoch': 19.0, 'step': 4104}, {'loss': 0.3354, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4016216993331909, 'eval_precision': 0.5, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004540295119182747, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.774, 'eval_samples_per_second': 265.153, 'eval_steps_per_second': 33.252, 'epoch': 20.0, 'step': 4320}, {'loss': 0.3199, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.39198875427246094, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004524886877828054, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.7025, 'eval_samples_per_second': 268.48, 'eval_steps_per_second': 33.67, 'epoch': 21.0, 'step': 4536}, {'loss': 0.2882, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.38525670766830444, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.6967, 'eval_samples_per_second': 268.75, 'eval_steps_per_second': 33.703, 'epoch': 22.0, 'step': 4752}, {'loss': 0.2982, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.377715528011322, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.004530011325028313, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7061, 'eval_samples_per_second': 268.312, 'eval_steps_per_second': 33.648, 'epoch': 23.0, 'step': 4968}, {'loss': 0.2832, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3724467158317566, 'eval_precision': 0.14285714285714285, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002262443438914027, 'eval_accuracy': 0.9340693275689029, 'eval_runtime': 5.6904, 'eval_samples_per_second': 269.05, 'eval_steps_per_second': 33.741, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2442.6873, 'train_samples_per_second': 84.831, 'train_steps_per_second': 2.122, 'total_flos': 2.4800280552929028e+16, 'train_loss': 0.3896244433191087, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9329
  predict_f1                 =     0.0081
  predict_loss               =     0.3794
  predict_precision          =        1.0
  predict_recall             =     0.0041
  predict_runtime            = 0:00:04.79
  predict_samples_per_second =    265.524
  predict_steps_per_second   =      33.19
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_06.json completed. F1: 0.008130081300813009
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_01.json
01170939_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6370.80 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6753.10 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6736.69 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6833.17 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6905.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7007.21 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7136.84 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7229.41 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6663.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7320.58 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6959.90 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7007.52 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6830.25 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170939_tsa-bin_NorBERT_3_base/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.662, 'eval_steps_per_second': 64.292, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9638, 'eval_samples_per_second': 516.574, 'eval_steps_per_second': 64.783, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9564, 'eval_samples_per_second': 517.866, 'eval_steps_per_second': 64.945, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.422, 'eval_steps_per_second': 65.14, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9691, 'eval_samples_per_second': 515.651, 'eval_steps_per_second': 64.667, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.952, 'eval_samples_per_second': 518.626, 'eval_steps_per_second': 65.04, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9619, 'eval_samples_per_second': 516.902, 'eval_steps_per_second': 64.824, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.953, 'eval_samples_per_second': 518.451, 'eval_steps_per_second': 65.018, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9489, 'eval_samples_per_second': 519.18, 'eval_steps_per_second': 65.109, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9414, 'eval_samples_per_second': 520.495, 'eval_steps_per_second': 65.274, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0242, 'eval_samples_per_second': 506.25, 'eval_steps_per_second': 63.488, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9471, 'eval_samples_per_second': 519.501, 'eval_steps_per_second': 65.15, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9473, 'eval_samples_per_second': 519.465, 'eval_steps_per_second': 65.145, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.303, 'eval_steps_per_second': 65.25, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.96, 'eval_samples_per_second': 517.232, 'eval_steps_per_second': 64.865, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9568, 'eval_samples_per_second': 517.788, 'eval_steps_per_second': 64.935, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9368, 'eval_samples_per_second': 521.324, 'eval_steps_per_second': 65.378, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9482, 'eval_samples_per_second': 519.299, 'eval_steps_per_second': 65.124, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9504, 'eval_samples_per_second': 518.919, 'eval_steps_per_second': 65.077, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9444, 'eval_samples_per_second': 519.967, 'eval_steps_per_second': 65.208, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9498, 'eval_samples_per_second': 519.022, 'eval_steps_per_second': 65.09, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9499, 'eval_samples_per_second': 518.994, 'eval_steps_per_second': 65.086, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.946, 'eval_steps_per_second': 65.205, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.904, 'eval_steps_per_second': 63.695, 'epoch': 24.0}
{'train_runtime': 855.7296, 'train_samples_per_second': 242.151, 'train_steps_per_second': 6.058, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:15.72
  train_samples            =       8634
  train_samples_per_second =    242.151
  train_steps_per_second   =      6.058
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9864, 'eval_samples_per_second': 512.662, 'eval_steps_per_second': 64.292, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9638, 'eval_samples_per_second': 516.574, 'eval_steps_per_second': 64.783, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9564, 'eval_samples_per_second': 517.866, 'eval_steps_per_second': 64.945, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.422, 'eval_steps_per_second': 65.14, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9691, 'eval_samples_per_second': 515.651, 'eval_steps_per_second': 64.667, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.952, 'eval_samples_per_second': 518.626, 'eval_steps_per_second': 65.04, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9619, 'eval_samples_per_second': 516.902, 'eval_steps_per_second': 64.824, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.953, 'eval_samples_per_second': 518.451, 'eval_steps_per_second': 65.018, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9489, 'eval_samples_per_second': 519.18, 'eval_steps_per_second': 65.109, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9414, 'eval_samples_per_second': 520.495, 'eval_steps_per_second': 65.274, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0242, 'eval_samples_per_second': 506.25, 'eval_steps_per_second': 63.488, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9471, 'eval_samples_per_second': 519.501, 'eval_steps_per_second': 65.15, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9473, 'eval_samples_per_second': 519.465, 'eval_steps_per_second': 65.145, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.303, 'eval_steps_per_second': 65.25, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.96, 'eval_samples_per_second': 517.232, 'eval_steps_per_second': 64.865, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9568, 'eval_samples_per_second': 517.788, 'eval_steps_per_second': 64.935, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9368, 'eval_samples_per_second': 521.324, 'eval_steps_per_second': 65.378, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9482, 'eval_samples_per_second': 519.299, 'eval_steps_per_second': 65.124, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9504, 'eval_samples_per_second': 518.919, 'eval_steps_per_second': 65.077, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9444, 'eval_samples_per_second': 519.967, 'eval_steps_per_second': 65.208, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9498, 'eval_samples_per_second': 519.022, 'eval_steps_per_second': 65.09, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9499, 'eval_samples_per_second': 518.994, 'eval_steps_per_second': 65.086, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9445, 'eval_samples_per_second': 519.946, 'eval_steps_per_second': 65.205, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.904, 'eval_steps_per_second': 63.695, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 855.7296, 'train_samples_per_second': 242.151, 'train_steps_per_second': 6.058, 'total_flos': 7004249699478276.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    517.061
  predict_steps_per_second   =     64.633
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_01.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_35.json
01170939_tsa-bin_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6770.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7142.86 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6923.71 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6880.08 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6953.40 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7080.69 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7249.81 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7311.64 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6762.55 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7277.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6947.22 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6991.75 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6824.90 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.9453, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.8960040807723999, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.323, 'eval_steps_per_second': 64.124, 'epoch': 1.0}
{'loss': 1.0811, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 1.0910570621490479, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.9753, 'eval_samples_per_second': 514.574, 'eval_steps_per_second': 64.532, 'epoch': 2.0}
{'loss': 1.2458, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 1.293182611465454, 'eval_precision': 0.07142857142857142, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.010559662090813094, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.9956, 'eval_samples_per_second': 511.078, 'eval_steps_per_second': 64.093, 'epoch': 3.0}
{'loss': 1.3198, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 1.3793880939483643, 'eval_precision': 0.07142857142857142, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.03713080168776371, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.9833, 'eval_samples_per_second': 513.197, 'eval_steps_per_second': 64.359, 'epoch': 4.0}
{'loss': 1.232, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 1.3019059896469116, 'eval_precision': 0.057692307692307696, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02211981566820277, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9984, 'eval_samples_per_second': 510.604, 'eval_steps_per_second': 64.034, 'epoch': 5.0}
{'loss': 1.4217, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 1.4641826152801514, 'eval_precision': 0.012048192771084338, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0053285968028419185, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9803, 'eval_samples_per_second': 513.703, 'eval_steps_per_second': 64.423, 'epoch': 6.0}
{'loss': 1.4358, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 1.4539471864700317, 'eval_precision': 0.00546448087431694, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0018867924528301887, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9841, 'eval_samples_per_second': 513.051, 'eval_steps_per_second': 64.341, 'epoch': 7.0}
{'loss': 1.433, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 1.4443514347076416, 'eval_precision': 0.029850746268656716, 'eval_recall': 0.009122006841505131, 'eval_f1': 0.013973799126637553, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.394, 'eval_steps_per_second': 64.008, 'epoch': 8.0}
{'loss': 1.4112, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 1.4347628355026245, 'eval_precision': 0.015873015873015872, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.005628517823639775, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9684, 'eval_samples_per_second': 515.774, 'eval_steps_per_second': 64.682, 'epoch': 9.0}
{'loss': 1.3955, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 1.4212318658828735, 'eval_precision': 0.016891891891891893, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.008525149190110827, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 3.0484, 'eval_samples_per_second': 502.223, 'eval_steps_per_second': 62.983, 'epoch': 10.0}
{'loss': 1.3876, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 1.4178555011749268, 'eval_precision': 0.013513513513513514, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0039024390243902443, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.126, 'eval_steps_per_second': 64.977, 'epoch': 11.0}
{'loss': 1.3836, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 1.4028736352920532, 'eval_precision': 0.008130081300813009, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.135, 'eval_steps_per_second': 64.477, 'epoch': 12.0}
{'loss': 1.3721, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 1.3963807821273804, 'eval_precision': 0.011627906976744186, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0020768431983385254, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9639, 'eval_samples_per_second': 516.552, 'eval_steps_per_second': 64.78, 'epoch': 13.0}
{'loss': 1.363, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 1.3867636919021606, 'eval_precision': 0.03468208092485549, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.011428571428571429, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.985, 'eval_samples_per_second': 512.896, 'eval_steps_per_second': 64.321, 'epoch': 14.0}
{'loss': 1.3495, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 1.380134105682373, 'eval_precision': 0.03164556962025317, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.009661835748792272, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.583, 'eval_steps_per_second': 64.408, 'epoch': 15.0}
{'loss': 1.3521, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 1.3780789375305176, 'eval_precision': 0.05333333333333334, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02177858439201452, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.36, 'eval_steps_per_second': 64.505, 'epoch': 16.0}
{'loss': 1.347, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 1.371924877166748, 'eval_precision': 0.0223463687150838, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007575757575757576, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.21, 'eval_steps_per_second': 64.235, 'epoch': 17.0}
{'loss': 1.3368, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 1.3683369159698486, 'eval_precision': 0.033707865168539325, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.011374407582938388, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.9723, 'eval_samples_per_second': 515.085, 'eval_steps_per_second': 64.596, 'epoch': 18.0}
{'loss': 1.3283, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 1.3627235889434814, 'eval_precision': 0.023391812865497075, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.0076335877862595426, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.9763, 'eval_samples_per_second': 514.403, 'eval_steps_per_second': 64.51, 'epoch': 19.0}
{'loss': 1.3276, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 1.3556017875671387, 'eval_precision': 0.05527638190954774, 'eval_recall': 0.012542759407069556, 'eval_f1': 0.020446096654275093, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.9739, 'eval_samples_per_second': 514.82, 'eval_steps_per_second': 64.563, 'epoch': 20.0}
{'loss': 1.3177, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 1.3518195152282715, 'eval_precision': 0.04522613065326633, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.016728624535315987, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 3.0712, 'eval_samples_per_second': 498.503, 'eval_steps_per_second': 62.516, 'epoch': 21.0}
{'loss': 1.3195, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 1.3510429859161377, 'eval_precision': 0.025477707006369428, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007736943907156674, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.9789, 'eval_samples_per_second': 513.947, 'eval_steps_per_second': 64.453, 'epoch': 22.0}
{'loss': 1.3185, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 1.349037528038025, 'eval_precision': 0.029411764705882353, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.009551098376313275, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.9542, 'eval_samples_per_second': 518.244, 'eval_steps_per_second': 64.992, 'epoch': 23.0}
{'loss': 1.3159, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 1.3483607769012451, 'eval_precision': 0.023668639053254437, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007648183556405354, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.9646, 'eval_samples_per_second': 516.431, 'eval_steps_per_second': 64.765, 'epoch': 24.0}
{'train_runtime': 409.875, 'train_samples_per_second': 505.559, 'train_steps_per_second': 7.905, 'train_loss': 1.3225156995985243, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     1.3225
  train_runtime            = 0:06:49.87
  train_samples            =       8634
  train_samples_per_second =    505.559
  train_steps_per_second   =      7.905
[{'loss': 0.9453, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.8960040807723999, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.323, 'eval_steps_per_second': 64.124, 'epoch': 1.0, 'step': 135}, {'loss': 1.0811, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 1.0910570621490479, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9344167374353431, 'eval_runtime': 2.9753, 'eval_samples_per_second': 514.574, 'eval_steps_per_second': 64.532, 'epoch': 2.0, 'step': 270}, {'loss': 1.2458, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 1.293182611465454, 'eval_precision': 0.07142857142857142, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.010559662090813094, 'eval_accuracy': 0.9346097429166988, 'eval_runtime': 2.9956, 'eval_samples_per_second': 511.078, 'eval_steps_per_second': 64.093, 'epoch': 3.0, 'step': 405}, {'loss': 1.3198, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 1.3793880939483643, 'eval_precision': 0.07142857142857142, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.03713080168776371, 'eval_accuracy': 0.93669420211534, 'eval_runtime': 2.9833, 'eval_samples_per_second': 513.197, 'eval_steps_per_second': 64.359, 'epoch': 4.0, 'step': 540}, {'loss': 1.232, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 1.3019059896469116, 'eval_precision': 0.057692307692307696, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02211981566820277, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9984, 'eval_samples_per_second': 510.604, 'eval_steps_per_second': 64.034, 'epoch': 5.0, 'step': 675}, {'loss': 1.4217, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 1.4641826152801514, 'eval_precision': 0.012048192771084338, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.0053285968028419185, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.9803, 'eval_samples_per_second': 513.703, 'eval_steps_per_second': 64.423, 'epoch': 6.0, 'step': 810}, {'loss': 1.4358, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 1.4539471864700317, 'eval_precision': 0.00546448087431694, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0018867924528301887, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9841, 'eval_samples_per_second': 513.051, 'eval_steps_per_second': 64.341, 'epoch': 7.0, 'step': 945}, {'loss': 1.433, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 1.4443514347076416, 'eval_precision': 0.029850746268656716, 'eval_recall': 0.009122006841505131, 'eval_f1': 0.013973799126637553, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9996, 'eval_samples_per_second': 510.394, 'eval_steps_per_second': 64.008, 'epoch': 8.0, 'step': 1080}, {'loss': 1.4112, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 1.4347628355026245, 'eval_precision': 0.015873015873015872, 'eval_recall': 0.0034207525655644243, 'eval_f1': 0.005628517823639775, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.9684, 'eval_samples_per_second': 515.774, 'eval_steps_per_second': 64.682, 'epoch': 9.0, 'step': 1215}, {'loss': 1.3955, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 1.4212318658828735, 'eval_precision': 0.016891891891891893, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.008525149190110827, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 3.0484, 'eval_samples_per_second': 502.223, 'eval_steps_per_second': 62.983, 'epoch': 10.0, 'step': 1350}, {'loss': 1.3876, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 1.4178555011749268, 'eval_precision': 0.013513513513513514, 'eval_recall': 0.002280501710376283, 'eval_f1': 0.0039024390243902443, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.126, 'eval_steps_per_second': 64.977, 'epoch': 11.0, 'step': 1485}, {'loss': 1.3836, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 1.4028736352920532, 'eval_precision': 0.008130081300813009, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.002, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.9778, 'eval_samples_per_second': 514.135, 'eval_steps_per_second': 64.477, 'epoch': 12.0, 'step': 1620}, {'loss': 1.3721, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 1.3963807821273804, 'eval_precision': 0.011627906976744186, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0020768431983385254, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9639, 'eval_samples_per_second': 516.552, 'eval_steps_per_second': 64.78, 'epoch': 13.0, 'step': 1755}, {'loss': 1.363, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 1.3867636919021606, 'eval_precision': 0.03468208092485549, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.011428571428571429, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.985, 'eval_samples_per_second': 512.896, 'eval_steps_per_second': 64.321, 'epoch': 14.0, 'step': 1890}, {'loss': 1.3495, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 1.380134105682373, 'eval_precision': 0.03164556962025317, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.009661835748792272, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.583, 'eval_steps_per_second': 64.408, 'epoch': 15.0, 'step': 2025}, {'loss': 1.3521, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 1.3780789375305176, 'eval_precision': 0.05333333333333334, 'eval_recall': 0.013683010262257697, 'eval_f1': 0.02177858439201452, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9765, 'eval_samples_per_second': 514.36, 'eval_steps_per_second': 64.505, 'epoch': 16.0, 'step': 2160}, {'loss': 1.347, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 1.371924877166748, 'eval_precision': 0.0223463687150838, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007575757575757576, 'eval_accuracy': 0.9370802130780514, 'eval_runtime': 2.989, 'eval_samples_per_second': 512.21, 'eval_steps_per_second': 64.235, 'epoch': 17.0, 'step': 2295}, {'loss': 1.3368, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 1.3683369159698486, 'eval_precision': 0.033707865168539325, 'eval_recall': 0.0068415051311288486, 'eval_f1': 0.011374407582938388, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 2.9723, 'eval_samples_per_second': 515.085, 'eval_steps_per_second': 64.596, 'epoch': 18.0, 'step': 2430}, {'loss': 1.3283, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 1.3627235889434814, 'eval_precision': 0.023391812865497075, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.0076335877862595426, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.9763, 'eval_samples_per_second': 514.403, 'eval_steps_per_second': 64.51, 'epoch': 19.0, 'step': 2565}, {'loss': 1.3276, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 1.3556017875671387, 'eval_precision': 0.05527638190954774, 'eval_recall': 0.012542759407069556, 'eval_f1': 0.020446096654275093, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 2.9739, 'eval_samples_per_second': 514.82, 'eval_steps_per_second': 64.563, 'epoch': 20.0, 'step': 2700}, {'loss': 1.3177, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 1.3518195152282715, 'eval_precision': 0.04522613065326633, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.016728624535315987, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 3.0712, 'eval_samples_per_second': 498.503, 'eval_steps_per_second': 62.516, 'epoch': 21.0, 'step': 2835}, {'loss': 1.3195, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 1.3510429859161377, 'eval_precision': 0.025477707006369428, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007736943907156674, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.9789, 'eval_samples_per_second': 513.947, 'eval_steps_per_second': 64.453, 'epoch': 22.0, 'step': 2970}, {'loss': 1.3185, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 1.349037528038025, 'eval_precision': 0.029411764705882353, 'eval_recall': 0.005701254275940707, 'eval_f1': 0.009551098376313275, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.9542, 'eval_samples_per_second': 518.244, 'eval_steps_per_second': 64.992, 'epoch': 23.0, 'step': 3105}, {'loss': 1.3159, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 1.3483607769012451, 'eval_precision': 0.023668639053254437, 'eval_recall': 0.004561003420752566, 'eval_f1': 0.007648183556405354, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.9646, 'eval_samples_per_second': 516.431, 'eval_steps_per_second': 64.765, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 409.875, 'train_samples_per_second': 505.559, 'train_steps_per_second': 7.905, 'total_flos': 1912879488074940.0, 'train_loss': 1.3225156995985243, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     0.8961
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    514.717
  predict_steps_per_second   =      64.34
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_35.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_12.json
01170939_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6004.97 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6895.63 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6916.09 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7046.58 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7148.51 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7285.82 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6395.30 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6758.58 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6856.64 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7622.18 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7235.80 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7263.30 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7085.40 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2026, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.14033429324626923, 'eval_precision': 0.5033259423503326, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5103991006183248, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 4.6654, 'eval_samples_per_second': 328.162, 'eval_steps_per_second': 41.154, 'epoch': 1.0}
{'loss': 0.1127, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1460670828819275, 'eval_precision': 0.5575079872204473, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.4644045242847638, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6639, 'eval_samples_per_second': 328.267, 'eval_steps_per_second': 41.167, 'epoch': 2.0}
{'loss': 0.0633, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.16643550992012024, 'eval_precision': 0.4714686623012161, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5179856115107914, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.833, 'eval_steps_per_second': 41.238, 'epoch': 3.0}
{'loss': 0.0377, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21280674636363983, 'eval_precision': 0.4582560296846011, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5053708439897698, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 4.6677, 'eval_samples_per_second': 327.998, 'eval_steps_per_second': 41.134, 'epoch': 4.0}
{'loss': 0.0219, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.23908811807632446, 'eval_precision': 0.5437415881561238, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4987654320987654, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 4.6546, 'eval_samples_per_second': 328.919, 'eval_steps_per_second': 41.249, 'epoch': 5.0}
{'loss': 0.0135, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2522323429584503, 'eval_precision': 0.5103305785123967, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5355013550135502, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.482, 'eval_steps_per_second': 41.32, 'epoch': 6.0}
{'loss': 0.0095, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.2802785634994507, 'eval_precision': 0.5704874835309618, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.5293398533007334, 'eval_accuracy': 0.9555701381919246, 'eval_runtime': 4.6507, 'eval_samples_per_second': 329.2, 'eval_steps_per_second': 41.284, 'epoch': 7.0}
{'loss': 0.0079, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2697049379348755, 'eval_precision': 0.5471698113207547, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.520334928229665, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6497, 'eval_samples_per_second': 329.266, 'eval_steps_per_second': 41.293, 'epoch': 8.0}
{'loss': 0.0046, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.30152156949043274, 'eval_precision': 0.4690522243713733, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5075876504447933, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.323, 'eval_steps_per_second': 41.3, 'epoch': 9.0}
{'loss': 0.0041, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2990696132183075, 'eval_precision': 0.5211111111111111, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5278559369724254, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.362, 'eval_steps_per_second': 41.305, 'epoch': 10.0}
{'loss': 0.0038, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3304855227470398, 'eval_precision': 0.4783027965284474, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5182863113897598, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.887, 'eval_steps_per_second': 41.245, 'epoch': 11.0}
{'loss': 0.0025, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.3176555335521698, 'eval_precision': 0.5061349693251533, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5336927223719676, 'eval_accuracy': 0.952790859260403, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.249, 'eval_steps_per_second': 41.291, 'epoch': 12.0}
{'loss': 0.0016, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.34157851338386536, 'eval_precision': 0.5568783068783069, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.5156154317207594, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.282, 'eval_steps_per_second': 41.295, 'epoch': 13.0}
{'loss': 0.0021, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.3623330295085907, 'eval_precision': 0.5254041570438799, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5220883534136546, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.261, 'eval_steps_per_second': 41.167, 'epoch': 14.0}
{'loss': 0.0017, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.3310616612434387, 'eval_precision': 0.521594684385382, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5292134831460673, 'eval_accuracy': 0.9515556241797267, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.604, 'eval_steps_per_second': 41.21, 'epoch': 15.0}
{'loss': 0.0016, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.34450116753578186, 'eval_precision': 0.5614702154626109, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5318127250900361, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6455, 'eval_samples_per_second': 329.568, 'eval_steps_per_second': 41.331, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.3525833189487457, 'eval_precision': 0.5147540983606558, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5256696428571429, 'eval_accuracy': 0.9530224658380299, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.55, 'eval_steps_per_second': 41.328, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.3531408905982971, 'eval_precision': 0.5015105740181269, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5326203208556151, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 4.6518, 'eval_samples_per_second': 329.118, 'eval_steps_per_second': 41.274, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.3663673996925354, 'eval_precision': 0.5676359039190898, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.538369304556355, 'eval_accuracy': 0.955685941480738, 'eval_runtime': 4.6493, 'eval_samples_per_second': 329.295, 'eval_steps_per_second': 41.296, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.36623287200927734, 'eval_precision': 0.5293453724604966, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5320476460578559, 'eval_accuracy': 0.9530610669343009, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.361, 'eval_steps_per_second': 41.305, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.37790703773498535, 'eval_precision': 0.530751708428246, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.531054131054131, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.185, 'eval_steps_per_second': 41.283, 'epoch': 21.0}
{'loss': 0.0001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.38421496748924255, 'eval_precision': 0.5485380116959064, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5415704387990762, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6494, 'eval_samples_per_second': 329.293, 'eval_steps_per_second': 41.296, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.3868524134159088, 'eval_precision': 0.5484247374562428, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5420991926182239, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6372, 'eval_samples_per_second': 330.158, 'eval_steps_per_second': 41.405, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.38947534561157227, 'eval_precision': 0.5511904761904762, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5393127548048923, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.962, 'eval_steps_per_second': 41.38, 'epoch': 24.0}
{'train_runtime': 2091.5805, 'train_samples_per_second': 99.071, 'train_steps_per_second': 2.479, 'train_loss': 0.020602676850911748, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0206
  train_runtime            = 0:34:51.58
  train_samples            =       8634
  train_samples_per_second =     99.071
  train_steps_per_second   =      2.479
[{'loss': 0.2026, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.14033429324626923, 'eval_precision': 0.5033259423503326, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5103991006183248, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 4.6654, 'eval_samples_per_second': 328.162, 'eval_steps_per_second': 41.154, 'epoch': 1.0, 'step': 216}, {'loss': 0.1127, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.1460670828819275, 'eval_precision': 0.5575079872204473, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.4644045242847638, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6639, 'eval_samples_per_second': 328.267, 'eval_steps_per_second': 41.167, 'epoch': 2.0, 'step': 432}, {'loss': 0.0633, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.16643550992012024, 'eval_precision': 0.4714686623012161, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5179856115107914, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.833, 'eval_steps_per_second': 41.238, 'epoch': 3.0, 'step': 648}, {'loss': 0.0377, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.21280674636363983, 'eval_precision': 0.4582560296846011, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5053708439897698, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 4.6677, 'eval_samples_per_second': 327.998, 'eval_steps_per_second': 41.134, 'epoch': 4.0, 'step': 864}, {'loss': 0.0219, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.23908811807632446, 'eval_precision': 0.5437415881561238, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4987654320987654, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 4.6546, 'eval_samples_per_second': 328.919, 'eval_steps_per_second': 41.249, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0135, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.2522323429584503, 'eval_precision': 0.5103305785123967, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5355013550135502, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.482, 'eval_steps_per_second': 41.32, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0095, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.2802785634994507, 'eval_precision': 0.5704874835309618, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.5293398533007334, 'eval_accuracy': 0.9555701381919246, 'eval_runtime': 4.6507, 'eval_samples_per_second': 329.2, 'eval_steps_per_second': 41.284, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0079, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.2697049379348755, 'eval_precision': 0.5471698113207547, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.520334928229665, 'eval_accuracy': 0.9543349031112484, 'eval_runtime': 4.6497, 'eval_samples_per_second': 329.266, 'eval_steps_per_second': 41.293, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0046, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.30152156949043274, 'eval_precision': 0.4690522243713733, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5075876504447933, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.323, 'eval_steps_per_second': 41.3, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0041, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.2990696132183075, 'eval_precision': 0.5211111111111111, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5278559369724254, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.362, 'eval_steps_per_second': 41.305, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0038, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3304855227470398, 'eval_precision': 0.4783027965284474, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5182863113897598, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 4.6551, 'eval_samples_per_second': 328.887, 'eval_steps_per_second': 41.245, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0025, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3176555335521698, 'eval_precision': 0.5061349693251533, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5336927223719676, 'eval_accuracy': 0.952790859260403, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.249, 'eval_steps_per_second': 41.291, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0016, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.34157851338386536, 'eval_precision': 0.5568783068783069, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.5156154317207594, 'eval_accuracy': 0.9544893074963329, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.282, 'eval_steps_per_second': 41.295, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0021, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.3623330295085907, 'eval_precision': 0.5254041570438799, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5220883534136546, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 4.664, 'eval_samples_per_second': 328.261, 'eval_steps_per_second': 41.167, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0017, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.3310616612434387, 'eval_precision': 0.521594684385382, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5292134831460673, 'eval_accuracy': 0.9515556241797267, 'eval_runtime': 4.6591, 'eval_samples_per_second': 328.604, 'eval_steps_per_second': 41.21, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0016, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.34450116753578186, 'eval_precision': 0.5614702154626109, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5318127250900361, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.6455, 'eval_samples_per_second': 329.568, 'eval_steps_per_second': 41.331, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0012, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.3525833189487457, 'eval_precision': 0.5147540983606558, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5256696428571429, 'eval_accuracy': 0.9530224658380299, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.55, 'eval_steps_per_second': 41.328, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0009, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.3531408905982971, 'eval_precision': 0.5015105740181269, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5326203208556151, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 4.6518, 'eval_samples_per_second': 329.118, 'eval_steps_per_second': 41.274, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.3663673996925354, 'eval_precision': 0.5676359039190898, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.538369304556355, 'eval_accuracy': 0.955685941480738, 'eval_runtime': 4.6493, 'eval_samples_per_second': 329.295, 'eval_steps_per_second': 41.296, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0003, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.36623287200927734, 'eval_precision': 0.5293453724604966, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5320476460578559, 'eval_accuracy': 0.9530610669343009, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.361, 'eval_steps_per_second': 41.305, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.37790703773498535, 'eval_precision': 0.530751708428246, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.531054131054131, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.185, 'eval_steps_per_second': 41.283, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0001, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.38421496748924255, 'eval_precision': 0.5485380116959064, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5415704387990762, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6494, 'eval_samples_per_second': 329.293, 'eval_steps_per_second': 41.296, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.3868524134159088, 'eval_precision': 0.5484247374562428, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5420991926182239, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6372, 'eval_samples_per_second': 330.158, 'eval_steps_per_second': 41.405, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.38947534561157227, 'eval_precision': 0.5511904761904762, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5393127548048923, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.962, 'eval_steps_per_second': 41.38, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2091.5805, 'train_samples_per_second': 99.071, 'train_steps_per_second': 2.479, 'total_flos': 2.388271956564535e+16, 'train_loss': 0.020602676850911748, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9479
  predict_f1                 =     0.4767
  predict_loss               =     0.1603
  predict_precision          =     0.4872
  predict_recall             =     0.4667
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    325.273
  predict_steps_per_second   =     40.659
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_12.json completed. F1: 0.4767199444058374
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_40.json
01170939_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6996.26 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7387.08 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7166.20 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7193.76 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7231.06 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7352.82 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6364.19 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6686.68 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6930.29 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7538.57 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7183.46 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7219.24 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7016.28 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2038, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.14324550330638885, 'eval_precision': 0.4717171717171717, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5002678093197642, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 4.7952, 'eval_samples_per_second': 319.276, 'eval_steps_per_second': 40.04, 'epoch': 1.0}
{'loss': 0.12, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.1496281772851944, 'eval_precision': 0.45072836332476435, 'eval_recall': 0.5997719498289624, 'eval_f1': 0.5146771037181996, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 4.6581, 'eval_samples_per_second': 328.673, 'eval_steps_per_second': 41.218, 'epoch': 2.0}
{'loss': 0.0655, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.1727137416601181, 'eval_precision': 0.5010121457489879, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5308310991957105, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 4.6582, 'eval_samples_per_second': 328.666, 'eval_steps_per_second': 41.217, 'epoch': 3.0}
{'loss': 0.0374, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.1947360336780548, 'eval_precision': 0.49661181026137463, 'eval_recall': 0.5849486887115165, 'eval_f1': 0.53717277486911, 'eval_accuracy': 0.9502431869065081, 'eval_runtime': 4.6589, 'eval_samples_per_second': 328.62, 'eval_steps_per_second': 41.212, 'epoch': 4.0}
{'loss': 0.0212, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.23137947916984558, 'eval_precision': 0.5166872682323856, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4958481613285884, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6552, 'eval_samples_per_second': 328.881, 'eval_steps_per_second': 41.244, 'epoch': 5.0}
{'loss': 0.0125, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.24312706291675568, 'eval_precision': 0.467680608365019, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5101088646967341, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 4.6529, 'eval_samples_per_second': 329.039, 'eval_steps_per_second': 41.264, 'epoch': 6.0}
{'loss': 0.0085, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.28941696882247925, 'eval_precision': 0.49169435215946844, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.498876404494382, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.175, 'eval_steps_per_second': 41.281, 'epoch': 7.0}
{'loss': 0.0065, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.2785200774669647, 'eval_precision': 0.5232018561484919, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5186889016676249, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.784, 'eval_steps_per_second': 41.232, 'epoch': 8.0}
{'loss': 0.0056, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3058227598667145, 'eval_precision': 0.5041152263374485, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5300162249864792, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.567, 'eval_steps_per_second': 41.205, 'epoch': 9.0}
{'loss': 0.0045, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.2847757041454315, 'eval_precision': 0.4856046065259117, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5273579989577905, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 4.669, 'eval_samples_per_second': 327.905, 'eval_steps_per_second': 41.122, 'epoch': 10.0}
{'loss': 0.0036, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.31608638167381287, 'eval_precision': 0.534037558685446, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5263157894736843, 'eval_accuracy': 0.9540260943410793, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.355, 'eval_steps_per_second': 41.178, 'epoch': 11.0}
{'loss': 0.0028, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.317911297082901, 'eval_precision': 0.5586034912718204, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5336509827278141, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.949, 'eval_steps_per_second': 41.253, 'epoch': 12.0}
{'loss': 0.002, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3518733084201813, 'eval_precision': 0.5235849056603774, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5147826086956522, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.738, 'eval_steps_per_second': 41.227, 'epoch': 13.0}
{'loss': 0.0022, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.32810717821121216, 'eval_precision': 0.5122767857142857, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5177664974619288, 'eval_accuracy': 0.95167142746854, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.169, 'eval_steps_per_second': 41.281, 'epoch': 14.0}
{'loss': 0.0022, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.3264770805835724, 'eval_precision': 0.47953216374269003, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5170782974251182, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 4.6844, 'eval_samples_per_second': 326.83, 'eval_steps_per_second': 40.987, 'epoch': 15.0}
{'loss': 0.0013, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3458222448825836, 'eval_precision': 0.5371900826446281, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5278422273781902, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.974, 'eval_steps_per_second': 41.256, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.35154417157173157, 'eval_precision': 0.5124056094929881, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5266075388026608, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6568, 'eval_samples_per_second': 328.768, 'eval_steps_per_second': 41.23, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.35226237773895264, 'eval_precision': 0.5099476439790576, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5316593886462881, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.798, 'eval_steps_per_second': 41.234, 'epoch': 18.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.37749940156936646, 'eval_precision': 0.5502336448598131, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5435660703981534, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 4.6621, 'eval_samples_per_second': 328.394, 'eval_steps_per_second': 41.183, 'epoch': 19.0}
{'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.38444963097572327, 'eval_precision': 0.5325842696629214, 'eval_recall': 0.540478905359179, 'eval_f1': 0.536502546689304, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 4.7439, 'eval_samples_per_second': 322.732, 'eval_steps_per_second': 40.473, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.39068931341171265, 'eval_precision': 0.5474537037037037, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.543365881677197, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.111, 'eval_steps_per_second': 41.273, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.3882625997066498, 'eval_precision': 0.5345982142857143, 'eval_recall': 0.5461801596351197, 'eval_f1': 0.5403271291596166, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.553, 'eval_steps_per_second': 41.203, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.3908398747444153, 'eval_precision': 0.5411899313501144, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5402627070245573, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 4.6606, 'eval_samples_per_second': 328.496, 'eval_steps_per_second': 41.196, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3913854956626892, 'eval_precision': 0.5406643757159221, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5394285714285715, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.847, 'eval_steps_per_second': 41.24, 'epoch': 24.0}
{'train_runtime': 2094.1254, 'train_samples_per_second': 98.951, 'train_steps_per_second': 1.547, 'train_loss': 0.0209356834999872, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0209
  train_runtime            = 0:34:54.12
  train_samples            =       8634
  train_samples_per_second =     98.951
  train_steps_per_second   =      1.547
[{'loss': 0.2038, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.14324550330638885, 'eval_precision': 0.4717171717171717, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5002678093197642, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 4.7952, 'eval_samples_per_second': 319.276, 'eval_steps_per_second': 40.04, 'epoch': 1.0, 'step': 135}, {'loss': 0.12, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.1496281772851944, 'eval_precision': 0.45072836332476435, 'eval_recall': 0.5997719498289624, 'eval_f1': 0.5146771037181996, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 4.6581, 'eval_samples_per_second': 328.673, 'eval_steps_per_second': 41.218, 'epoch': 2.0, 'step': 270}, {'loss': 0.0655, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1727137416601181, 'eval_precision': 0.5010121457489879, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5308310991957105, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 4.6582, 'eval_samples_per_second': 328.666, 'eval_steps_per_second': 41.217, 'epoch': 3.0, 'step': 405}, {'loss': 0.0374, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.1947360336780548, 'eval_precision': 0.49661181026137463, 'eval_recall': 0.5849486887115165, 'eval_f1': 0.53717277486911, 'eval_accuracy': 0.9502431869065081, 'eval_runtime': 4.6589, 'eval_samples_per_second': 328.62, 'eval_steps_per_second': 41.212, 'epoch': 4.0, 'step': 540}, {'loss': 0.0212, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.23137947916984558, 'eval_precision': 0.5166872682323856, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4958481613285884, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6552, 'eval_samples_per_second': 328.881, 'eval_steps_per_second': 41.244, 'epoch': 5.0, 'step': 675}, {'loss': 0.0125, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.24312706291675568, 'eval_precision': 0.467680608365019, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5101088646967341, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 4.6529, 'eval_samples_per_second': 329.039, 'eval_steps_per_second': 41.264, 'epoch': 6.0, 'step': 810}, {'loss': 0.0085, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.28941696882247925, 'eval_precision': 0.49169435215946844, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.498876404494382, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.175, 'eval_steps_per_second': 41.281, 'epoch': 7.0, 'step': 945}, {'loss': 0.0065, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2785200774669647, 'eval_precision': 0.5232018561484919, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5186889016676249, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6566, 'eval_samples_per_second': 328.784, 'eval_steps_per_second': 41.232, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0056, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3058227598667145, 'eval_precision': 0.5041152263374485, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5300162249864792, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6596, 'eval_samples_per_second': 328.567, 'eval_steps_per_second': 41.205, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0045, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2847757041454315, 'eval_precision': 0.4856046065259117, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5273579989577905, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 4.669, 'eval_samples_per_second': 327.905, 'eval_steps_per_second': 41.122, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0036, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.31608638167381287, 'eval_precision': 0.534037558685446, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5263157894736843, 'eval_accuracy': 0.9540260943410793, 'eval_runtime': 4.6626, 'eval_samples_per_second': 328.355, 'eval_steps_per_second': 41.178, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0028, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.317911297082901, 'eval_precision': 0.5586034912718204, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5336509827278141, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6542, 'eval_samples_per_second': 328.949, 'eval_steps_per_second': 41.253, 'epoch': 12.0, 'step': 1620}, {'loss': 0.002, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3518733084201813, 'eval_precision': 0.5235849056603774, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5147826086956522, 'eval_accuracy': 0.9517872307573535, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.738, 'eval_steps_per_second': 41.227, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0022, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.32810717821121216, 'eval_precision': 0.5122767857142857, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5177664974619288, 'eval_accuracy': 0.95167142746854, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.169, 'eval_steps_per_second': 41.281, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0022, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3264770805835724, 'eval_precision': 0.47953216374269003, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5170782974251182, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 4.6844, 'eval_samples_per_second': 326.83, 'eval_steps_per_second': 40.987, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0013, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3458222448825836, 'eval_precision': 0.5371900826446281, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5278422273781902, 'eval_accuracy': 0.9537944877634524, 'eval_runtime': 4.6539, 'eval_samples_per_second': 328.974, 'eval_steps_per_second': 41.256, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.35154417157173157, 'eval_precision': 0.5124056094929881, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5266075388026608, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6568, 'eval_samples_per_second': 328.768, 'eval_steps_per_second': 41.23, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.35226237773895264, 'eval_precision': 0.5099476439790576, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5316593886462881, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.798, 'eval_steps_per_second': 41.234, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0003, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.37749940156936646, 'eval_precision': 0.5502336448598131, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5435660703981534, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 4.6621, 'eval_samples_per_second': 328.394, 'eval_steps_per_second': 41.183, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0002, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.38444963097572327, 'eval_precision': 0.5325842696629214, 'eval_recall': 0.540478905359179, 'eval_f1': 0.536502546689304, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 4.7439, 'eval_samples_per_second': 322.732, 'eval_steps_per_second': 40.473, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0002, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.39068931341171265, 'eval_precision': 0.5474537037037037, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.543365881677197, 'eval_accuracy': 0.9539102910522659, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.111, 'eval_steps_per_second': 41.273, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3882625997066498, 'eval_precision': 0.5345982142857143, 'eval_recall': 0.5461801596351197, 'eval_f1': 0.5403271291596166, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 4.6598, 'eval_samples_per_second': 328.553, 'eval_steps_per_second': 41.203, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3908398747444153, 'eval_precision': 0.5411899313501144, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5402627070245573, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 4.6606, 'eval_samples_per_second': 328.496, 'eval_steps_per_second': 41.196, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3913854956626892, 'eval_precision': 0.5406643757159221, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5394285714285715, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.847, 'eval_steps_per_second': 41.24, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2094.1254, 'train_samples_per_second': 98.951, 'train_steps_per_second': 1.547, 'total_flos': 2.5991352100330236e+16, 'train_loss': 0.0209356834999872, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9479
  predict_f1                 =     0.4759
  predict_loss               =     0.1622
  predict_precision          =     0.4616
  predict_recall             =     0.4912
  predict_runtime            = 0:00:03.92
  predict_samples_per_second =    323.808
  predict_steps_per_second   =     40.476
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_40.json completed. F1: 0.4759393539881345
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_23.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_23.json
01170939_tsa-bin_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5443.08 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6606.46 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6778.80 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7001.67 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7154.82 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7322.60 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6466.54 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6822.51 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6839.50 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7651.97 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7283.07 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7349.63 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7184.39 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2788, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.2081119865179062, 'eval_precision': 0.3199152542372881, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3316858868753432, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.2826, 'eval_samples_per_second': 670.714, 'eval_steps_per_second': 84.113, 'epoch': 1.0}
{'loss': 0.1941, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.18200714886188507, 'eval_precision': 0.4107692307692308, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3497053045186641, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 2.2724, 'eval_samples_per_second': 673.751, 'eval_steps_per_second': 84.494, 'epoch': 2.0}
{'loss': 0.1618, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.1710425466299057, 'eval_precision': 0.4175977653631285, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3753923414940364, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 2.2633, 'eval_samples_per_second': 676.436, 'eval_steps_per_second': 84.831, 'epoch': 3.0}
{'loss': 0.1169, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.18425694108009338, 'eval_precision': 0.40748898678414097, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.41456582633053224, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2644, 'eval_samples_per_second': 676.12, 'eval_steps_per_second': 84.791, 'epoch': 4.0}
{'loss': 0.0841, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.19649390876293182, 'eval_precision': 0.4067796610169492, 'eval_recall': 0.4104903078677309, 'eval_f1': 0.4086265607264472, 'eval_accuracy': 0.940978923801436, 'eval_runtime': 2.2657, 'eval_samples_per_second': 675.734, 'eval_steps_per_second': 84.743, 'epoch': 5.0}
{'loss': 0.061, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.22705265879631042, 'eval_precision': 0.3647984267453294, 'eval_recall': 0.42303306727480045, 'eval_f1': 0.3917634635691658, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 2.2683, 'eval_samples_per_second': 674.941, 'eval_steps_per_second': 84.643, 'epoch': 6.0}
{'loss': 0.0443, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2401294857263565, 'eval_precision': 0.3903345724907063, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4301075268817204, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.2617, 'eval_samples_per_second': 676.925, 'eval_steps_per_second': 84.892, 'epoch': 7.0}
{'loss': 0.0318, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.2504562735557556, 'eval_precision': 0.39272030651340994, 'eval_recall': 0.467502850627138, 'eval_f1': 0.42686100989068193, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.704, 'eval_steps_per_second': 84.739, 'epoch': 8.0}
{'loss': 0.0222, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.27576178312301636, 'eval_precision': 0.4021215043394407, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4357366771159875, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.266, 'eval_steps_per_second': 84.935, 'epoch': 9.0}
{'loss': 0.0173, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.27792438864707947, 'eval_precision': 0.4265033407572383, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.43154929577464785, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 2.2684, 'eval_samples_per_second': 674.931, 'eval_steps_per_second': 84.642, 'epoch': 10.0}
{'loss': 0.0137, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.2990208566188812, 'eval_precision': 0.4028197381671702, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.42780748663101603, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.2817, 'eval_samples_per_second': 670.999, 'eval_steps_per_second': 84.149, 'epoch': 11.0}
{'loss': 0.0111, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3170413672924042, 'eval_precision': 0.43855421686746987, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.42647920328060923, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2668, 'eval_samples_per_second': 675.402, 'eval_steps_per_second': 84.701, 'epoch': 12.0}
{'loss': 0.0089, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3210795521736145, 'eval_precision': 0.427594070695553, 'eval_recall': 0.427594070695553, 'eval_f1': 0.427594070695553, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2597, 'eval_samples_per_second': 677.509, 'eval_steps_per_second': 84.965, 'epoch': 13.0}
{'loss': 0.0066, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.32694026827812195, 'eval_precision': 0.3966861598440546, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.42774566473988435, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 2.268, 'eval_samples_per_second': 675.054, 'eval_steps_per_second': 84.657, 'epoch': 14.0}
{'loss': 0.005, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3317278325557709, 'eval_precision': 0.4261744966442953, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.43026538678712595, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 2.2711, 'eval_samples_per_second': 674.12, 'eval_steps_per_second': 84.54, 'epoch': 15.0}
{'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3579060137271881, 'eval_precision': 0.44711538461538464, 'eval_recall': 0.4241733181299886, 'eval_f1': 0.4353423054417788, 'eval_accuracy': 0.9445302246583803, 'eval_runtime': 2.2666, 'eval_samples_per_second': 675.475, 'eval_steps_per_second': 84.71, 'epoch': 16.0}
{'loss': 0.0034, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3508097529411316, 'eval_precision': 0.4279615795090715, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4421168687982359, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2703, 'eval_samples_per_second': 674.369, 'eval_steps_per_second': 84.571, 'epoch': 17.0}
{'loss': 0.0027, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.35485249757766724, 'eval_precision': 0.43812709030100333, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.44306651634723787, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.2614, 'eval_samples_per_second': 677.018, 'eval_steps_per_second': 84.904, 'epoch': 18.0}
{'loss': 0.0022, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3579208552837372, 'eval_precision': 0.4310160427807487, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.44481236203090513, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.976, 'eval_steps_per_second': 84.898, 'epoch': 19.0}
{'loss': 0.002, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.36175230145454407, 'eval_precision': 0.43546576879910215, 'eval_recall': 0.44241733181299886, 'eval_f1': 0.43891402714932126, 'eval_accuracy': 0.9438354049254999, 'eval_runtime': 2.2623, 'eval_samples_per_second': 676.732, 'eval_steps_per_second': 84.868, 'epoch': 20.0}
{'loss': 0.0016, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.364187091588974, 'eval_precision': 0.4268292682926829, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.4328274311410905, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2652, 'eval_samples_per_second': 675.884, 'eval_steps_per_second': 84.761, 'epoch': 21.0}
{'loss': 0.0017, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3644549250602722, 'eval_precision': 0.4481955762514552, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.4435483870967742, 'eval_accuracy': 0.9438354049254999, 'eval_runtime': 2.2652, 'eval_samples_per_second': 675.886, 'eval_steps_per_second': 84.762, 'epoch': 22.0}
{'loss': 0.0014, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.3685782849788666, 'eval_precision': 0.426264800861141, 'eval_recall': 0.45153933865450396, 'eval_f1': 0.43853820598006643, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.693, 'eval_steps_per_second': 84.737, 'epoch': 23.0}
{'loss': 0.0013, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3695353865623474, 'eval_precision': 0.43660418963616315, 'eval_recall': 0.45153933865450396, 'eval_f1': 0.4439461883408072, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 2.2572, 'eval_samples_per_second': 678.282, 'eval_steps_per_second': 85.062, 'epoch': 24.0}
{'train_runtime': 757.33, 'train_samples_per_second': 273.614, 'train_steps_per_second': 4.278, 'train_loss': 0.044889296549889775, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0449
  train_runtime            = 0:12:37.33
  train_samples            =       8634
  train_samples_per_second =    273.614
  train_steps_per_second   =      4.278
[{'loss': 0.2788, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.2081119865179062, 'eval_precision': 0.3199152542372881, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3316858868753432, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 2.2826, 'eval_samples_per_second': 670.714, 'eval_steps_per_second': 84.113, 'epoch': 1.0, 'step': 135}, {'loss': 0.1941, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.18200714886188507, 'eval_precision': 0.4107692307692308, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.3497053045186641, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 2.2724, 'eval_samples_per_second': 673.751, 'eval_steps_per_second': 84.494, 'epoch': 2.0, 'step': 270}, {'loss': 0.1618, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1710425466299057, 'eval_precision': 0.4175977653631285, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3753923414940364, 'eval_accuracy': 0.9423299621709257, 'eval_runtime': 2.2633, 'eval_samples_per_second': 676.436, 'eval_steps_per_second': 84.831, 'epoch': 3.0, 'step': 405}, {'loss': 0.1169, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.18425694108009338, 'eval_precision': 0.40748898678414097, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.41456582633053224, 'eval_accuracy': 0.9429475797112638, 'eval_runtime': 2.2644, 'eval_samples_per_second': 676.12, 'eval_steps_per_second': 84.791, 'epoch': 4.0, 'step': 540}, {'loss': 0.0841, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.19649390876293182, 'eval_precision': 0.4067796610169492, 'eval_recall': 0.4104903078677309, 'eval_f1': 0.4086265607264472, 'eval_accuracy': 0.940978923801436, 'eval_runtime': 2.2657, 'eval_samples_per_second': 675.734, 'eval_steps_per_second': 84.743, 'epoch': 5.0, 'step': 675}, {'loss': 0.061, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.22705265879631042, 'eval_precision': 0.3647984267453294, 'eval_recall': 0.42303306727480045, 'eval_f1': 0.3917634635691658, 'eval_accuracy': 0.9379294371960164, 'eval_runtime': 2.2683, 'eval_samples_per_second': 674.941, 'eval_steps_per_second': 84.643, 'epoch': 6.0, 'step': 810}, {'loss': 0.0443, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2401294857263565, 'eval_precision': 0.3903345724907063, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4301075268817204, 'eval_accuracy': 0.9381996448699143, 'eval_runtime': 2.2617, 'eval_samples_per_second': 676.925, 'eval_steps_per_second': 84.892, 'epoch': 7.0, 'step': 945}, {'loss': 0.0318, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2504562735557556, 'eval_precision': 0.39272030651340994, 'eval_recall': 0.467502850627138, 'eval_f1': 0.42686100989068193, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.704, 'eval_steps_per_second': 84.739, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0222, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.27576178312301636, 'eval_precision': 0.4021215043394407, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4357366771159875, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 2.2606, 'eval_samples_per_second': 677.266, 'eval_steps_per_second': 84.935, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0173, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.27792438864707947, 'eval_precision': 0.4265033407572383, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.43154929577464785, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 2.2684, 'eval_samples_per_second': 674.931, 'eval_steps_per_second': 84.642, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0137, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2990208566188812, 'eval_precision': 0.4028197381671702, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.42780748663101603, 'eval_accuracy': 0.9403613062610978, 'eval_runtime': 2.2817, 'eval_samples_per_second': 670.999, 'eval_steps_per_second': 84.149, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0111, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3170413672924042, 'eval_precision': 0.43855421686746987, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.42647920328060923, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2668, 'eval_samples_per_second': 675.402, 'eval_steps_per_second': 84.701, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0089, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3210795521736145, 'eval_precision': 0.427594070695553, 'eval_recall': 0.427594070695553, 'eval_f1': 0.427594070695553, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2597, 'eval_samples_per_second': 677.509, 'eval_steps_per_second': 84.965, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0066, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.32694026827812195, 'eval_precision': 0.3966861598440546, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.42774566473988435, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 2.268, 'eval_samples_per_second': 675.054, 'eval_steps_per_second': 84.657, 'epoch': 14.0, 'step': 1890}, {'loss': 0.005, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3317278325557709, 'eval_precision': 0.4261744966442953, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.43026538678712595, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 2.2711, 'eval_samples_per_second': 674.12, 'eval_steps_per_second': 84.54, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3579060137271881, 'eval_precision': 0.44711538461538464, 'eval_recall': 0.4241733181299886, 'eval_f1': 0.4353423054417788, 'eval_accuracy': 0.9445302246583803, 'eval_runtime': 2.2666, 'eval_samples_per_second': 675.475, 'eval_steps_per_second': 84.71, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0034, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3508097529411316, 'eval_precision': 0.4279615795090715, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4421168687982359, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2703, 'eval_samples_per_second': 674.369, 'eval_steps_per_second': 84.571, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0027, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.35485249757766724, 'eval_precision': 0.43812709030100333, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.44306651634723787, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.2614, 'eval_samples_per_second': 677.018, 'eval_steps_per_second': 84.904, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0022, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3579208552837372, 'eval_precision': 0.4310160427807487, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.44481236203090513, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2615, 'eval_samples_per_second': 676.976, 'eval_steps_per_second': 84.898, 'epoch': 19.0, 'step': 2565}, {'loss': 0.002, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.36175230145454407, 'eval_precision': 0.43546576879910215, 'eval_recall': 0.44241733181299886, 'eval_f1': 0.43891402714932126, 'eval_accuracy': 0.9438354049254999, 'eval_runtime': 2.2623, 'eval_samples_per_second': 676.732, 'eval_steps_per_second': 84.868, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0016, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.364187091588974, 'eval_precision': 0.4268292682926829, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.4328274311410905, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.2652, 'eval_samples_per_second': 675.884, 'eval_steps_per_second': 84.761, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0017, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3644549250602722, 'eval_precision': 0.4481955762514552, 'eval_recall': 0.43899657924743446, 'eval_f1': 0.4435483870967742, 'eval_accuracy': 0.9438354049254999, 'eval_runtime': 2.2652, 'eval_samples_per_second': 675.886, 'eval_steps_per_second': 84.762, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0014, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3685782849788666, 'eval_precision': 0.426264800861141, 'eval_recall': 0.45153933865450396, 'eval_f1': 0.43853820598006643, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 2.2658, 'eval_samples_per_second': 675.693, 'eval_steps_per_second': 84.737, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0013, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3695353865623474, 'eval_precision': 0.43660418963616315, 'eval_recall': 0.45153933865450396, 'eval_f1': 0.4439461883408072, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 2.2572, 'eval_samples_per_second': 678.282, 'eval_steps_per_second': 85.062, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 757.33, 'train_samples_per_second': 273.614, 'train_steps_per_second': 4.278, 'total_flos': 8063437520109660.0, 'train_loss': 0.044889296549889775, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9425
  predict_f1                 =     0.3229
  predict_loss               =     0.1786
  predict_precision          =     0.3808
  predict_recall             =     0.2803
  predict_runtime            = 0:00:01.90
  predict_samples_per_second =    668.222
  predict_steps_per_second   =     83.528
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_23.json completed. F1: 0.322884012539185
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_36.json
01170939_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6851.21 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7122.89 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6930.60 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6984.25 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7040.90 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7166.85 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7327.82 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7389.24 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6823.63 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7354.43 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7018.53 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7048.60 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6879.14 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4755, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.21008552610874176, 'eval_precision': 0.21895424836601307, 'eval_recall': 0.15279361459521096, 'eval_f1': 0.17998656816655473, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9932, 'eval_samples_per_second': 511.488, 'eval_steps_per_second': 64.145, 'epoch': 1.0}
{'loss': 0.2065, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.21023160219192505, 'eval_precision': 0.20246659815005139, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.21297297297297296, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9493, 'eval_samples_per_second': 519.111, 'eval_steps_per_second': 65.101, 'epoch': 2.0}
{'loss': 0.1238, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.19018524885177612, 'eval_precision': 0.42483660130718953, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.3958587088915956, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 3.0244, 'eval_samples_per_second': 506.214, 'eval_steps_per_second': 63.483, 'epoch': 3.0}
{'loss': 0.0768, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.24008320271968842, 'eval_precision': 0.4059171597633136, 'eval_recall': 0.39110604332953247, 'eval_f1': 0.39837398373983735, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 2.9412, 'eval_samples_per_second': 520.537, 'eval_steps_per_second': 65.28, 'epoch': 4.0}
{'loss': 0.0523, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.2558034062385559, 'eval_precision': 0.3956756756756757, 'eval_recall': 0.41733181299885974, 'eval_f1': 0.4062153163152053, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 2.9479, 'eval_samples_per_second': 519.344, 'eval_steps_per_second': 65.13, 'epoch': 5.0}
{'loss': 0.0331, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.28916847705841064, 'eval_precision': 0.37763713080168776, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.3923287671232877, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.077, 'eval_steps_per_second': 64.846, 'epoch': 6.0}
{'loss': 0.0232, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.2708092927932739, 'eval_precision': 0.4238773274917853, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.4324022346368715, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.9465, 'eval_samples_per_second': 519.598, 'eval_steps_per_second': 65.162, 'epoch': 7.0}
{'loss': 0.0134, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.30255281925201416, 'eval_precision': 0.4038668098818475, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.41592920353982304, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 2.939, 'eval_samples_per_second': 520.932, 'eval_steps_per_second': 65.329, 'epoch': 8.0}
{'loss': 0.0087, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3089081645011902, 'eval_precision': 0.42780172413793105, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.4398891966759003, 'eval_accuracy': 0.9443372191770246, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.415, 'eval_steps_per_second': 65.139, 'epoch': 9.0}
{'loss': 0.0058, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.3342864513397217, 'eval_precision': 0.40725806451612906, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.43231674692348854, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 3.0142, 'eval_samples_per_second': 507.922, 'eval_steps_per_second': 63.698, 'epoch': 10.0}
{'loss': 0.0044, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.3478345274925232, 'eval_precision': 0.42675893886966554, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.4243119266055046, 'eval_accuracy': 0.9425229676522813, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.56, 'eval_steps_per_second': 65.032, 'epoch': 11.0}
{'loss': 0.0034, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.3304484486579895, 'eval_precision': 0.4445664105378705, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.45302013422818793, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.9525, 'eval_samples_per_second': 518.539, 'eval_steps_per_second': 65.029, 'epoch': 12.0}
{'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3536146879196167, 'eval_precision': 0.4246305418719212, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.45560253699788583, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.9291, 'eval_samples_per_second': 522.691, 'eval_steps_per_second': 65.55, 'epoch': 13.0}
{'loss': 0.0018, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.36229392886161804, 'eval_precision': 0.45620022753128553, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.45671981776765375, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.616, 'eval_steps_per_second': 65.415, 'epoch': 14.0}
{'loss': 0.0013, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.3559821546077728, 'eval_precision': 0.46691176470588236, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.45008860011813345, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.216, 'eval_steps_per_second': 64.989, 'epoch': 15.0}
{'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3742446005344391, 'eval_precision': 0.47017543859649125, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.46420323325635104, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 2.9358, 'eval_samples_per_second': 521.502, 'eval_steps_per_second': 65.401, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.37396666407585144, 'eval_precision': 0.45352743561030234, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4576271186440678, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.875, 'eval_steps_per_second': 64.82, 'epoch': 17.0}
{'loss': 0.001, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.37639540433883667, 'eval_precision': 0.4727272727272727, 'eval_recall': 0.44469783352337516, 'eval_f1': 0.4582843713278496, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9555, 'eval_samples_per_second': 518.022, 'eval_steps_per_second': 64.964, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.38191282749176025, 'eval_precision': 0.46306504961411243, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.47085201793721976, 'eval_accuracy': 0.9465374816644793, 'eval_runtime': 2.9591, 'eval_samples_per_second': 517.393, 'eval_steps_per_second': 64.885, 'epoch': 19.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.39586955308914185, 'eval_precision': 0.4525862068965517, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4653739612188365, 'eval_accuracy': 0.9456882575465143, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.311, 'eval_steps_per_second': 65.0, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.4069715738296509, 'eval_precision': 0.4452871072589382, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.4566666666666666, 'eval_accuracy': 0.9447232301397359, 'eval_runtime': 2.9464, 'eval_samples_per_second': 519.612, 'eval_steps_per_second': 65.164, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.39992406964302063, 'eval_precision': 0.4548532731376975, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.45717526942711284, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.565, 'eval_steps_per_second': 65.409, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.39976850152015686, 'eval_precision': 0.44754464285714285, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.45234066553863506, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 3.0039, 'eval_samples_per_second': 509.677, 'eval_steps_per_second': 63.918, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4012371301651001, 'eval_precision': 0.4465065502183406, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4562186279977691, 'eval_accuracy': 0.9454180498726164, 'eval_runtime': 2.9567, 'eval_samples_per_second': 517.798, 'eval_steps_per_second': 64.936, 'epoch': 24.0}
{'train_runtime': 844.4899, 'train_samples_per_second': 245.374, 'train_steps_per_second': 3.837, 'train_loss': 0.04331252126276125, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0433
  train_runtime            = 0:14:04.48
  train_samples            =       8634
  train_samples_per_second =    245.374
  train_steps_per_second   =      3.837
[{'loss': 0.4755, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21008552610874176, 'eval_precision': 0.21895424836601307, 'eval_recall': 0.15279361459521096, 'eval_f1': 0.17998656816655473, 'eval_accuracy': 0.9374662240407627, 'eval_runtime': 2.9932, 'eval_samples_per_second': 511.488, 'eval_steps_per_second': 64.145, 'epoch': 1.0, 'step': 135}, {'loss': 0.2065, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.21023160219192505, 'eval_precision': 0.20246659815005139, 'eval_recall': 0.22462941847206386, 'eval_f1': 0.21297297297297296, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9493, 'eval_samples_per_second': 519.111, 'eval_steps_per_second': 65.101, 'epoch': 2.0, 'step': 270}, {'loss': 0.1238, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.19018524885177612, 'eval_precision': 0.42483660130718953, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.3958587088915956, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 3.0244, 'eval_samples_per_second': 506.214, 'eval_steps_per_second': 63.483, 'epoch': 3.0, 'step': 405}, {'loss': 0.0768, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.24008320271968842, 'eval_precision': 0.4059171597633136, 'eval_recall': 0.39110604332953247, 'eval_f1': 0.39837398373983735, 'eval_accuracy': 0.9417895468231298, 'eval_runtime': 2.9412, 'eval_samples_per_second': 520.537, 'eval_steps_per_second': 65.28, 'epoch': 4.0, 'step': 540}, {'loss': 0.0523, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2558034062385559, 'eval_precision': 0.3956756756756757, 'eval_recall': 0.41733181299885974, 'eval_f1': 0.4062153163152053, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 2.9479, 'eval_samples_per_second': 519.344, 'eval_steps_per_second': 65.13, 'epoch': 5.0, 'step': 675}, {'loss': 0.0331, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.28916847705841064, 'eval_precision': 0.37763713080168776, 'eval_recall': 0.40820980615735464, 'eval_f1': 0.3923287671232877, 'eval_accuracy': 0.9395892843356751, 'eval_runtime': 2.9609, 'eval_samples_per_second': 517.077, 'eval_steps_per_second': 64.846, 'epoch': 6.0, 'step': 810}, {'loss': 0.0232, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2708092927932739, 'eval_precision': 0.4238773274917853, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.4324022346368715, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.9465, 'eval_samples_per_second': 519.598, 'eval_steps_per_second': 65.162, 'epoch': 7.0, 'step': 945}, {'loss': 0.0134, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.30255281925201416, 'eval_precision': 0.4038668098818475, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.41592920353982304, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 2.939, 'eval_samples_per_second': 520.932, 'eval_steps_per_second': 65.329, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0087, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3089081645011902, 'eval_precision': 0.42780172413793105, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.4398891966759003, 'eval_accuracy': 0.9443372191770246, 'eval_runtime': 2.9475, 'eval_samples_per_second': 519.415, 'eval_steps_per_second': 65.139, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0058, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3342864513397217, 'eval_precision': 0.40725806451612906, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.43231674692348854, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 3.0142, 'eval_samples_per_second': 507.922, 'eval_steps_per_second': 63.698, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0044, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3478345274925232, 'eval_precision': 0.42675893886966554, 'eval_recall': 0.4218928164196123, 'eval_f1': 0.4243119266055046, 'eval_accuracy': 0.9425229676522813, 'eval_runtime': 2.9524, 'eval_samples_per_second': 518.56, 'eval_steps_per_second': 65.032, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0034, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3304484486579895, 'eval_precision': 0.4445664105378705, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.45302013422818793, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.9525, 'eval_samples_per_second': 518.539, 'eval_steps_per_second': 65.029, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0026, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3536146879196167, 'eval_precision': 0.4246305418719212, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.45560253699788583, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.9291, 'eval_samples_per_second': 522.691, 'eval_steps_per_second': 65.55, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0018, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.36229392886161804, 'eval_precision': 0.45620022753128553, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.45671981776765375, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.9351, 'eval_samples_per_second': 521.616, 'eval_steps_per_second': 65.415, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0013, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3559821546077728, 'eval_precision': 0.46691176470588236, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.45008860011813345, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.216, 'eval_steps_per_second': 64.989, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3742446005344391, 'eval_precision': 0.47017543859649125, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.46420323325635104, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 2.9358, 'eval_samples_per_second': 521.502, 'eval_steps_per_second': 65.401, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0012, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.37396666407585144, 'eval_precision': 0.45352743561030234, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4576271186440678, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.875, 'eval_steps_per_second': 64.82, 'epoch': 17.0, 'step': 2295}, {'loss': 0.001, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.37639540433883667, 'eval_precision': 0.4727272727272727, 'eval_recall': 0.44469783352337516, 'eval_f1': 0.4582843713278496, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9555, 'eval_samples_per_second': 518.022, 'eval_steps_per_second': 64.964, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0006, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.38191282749176025, 'eval_precision': 0.46306504961411243, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.47085201793721976, 'eval_accuracy': 0.9465374816644793, 'eval_runtime': 2.9591, 'eval_samples_per_second': 517.393, 'eval_steps_per_second': 64.885, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.39586955308914185, 'eval_precision': 0.4525862068965517, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4653739612188365, 'eval_accuracy': 0.9456882575465143, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.311, 'eval_steps_per_second': 65.0, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0005, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4069715738296509, 'eval_precision': 0.4452871072589382, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.4566666666666666, 'eval_accuracy': 0.9447232301397359, 'eval_runtime': 2.9464, 'eval_samples_per_second': 519.612, 'eval_steps_per_second': 65.164, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.39992406964302063, 'eval_precision': 0.4548532731376975, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.45717526942711284, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.565, 'eval_steps_per_second': 65.409, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0004, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.39976850152015686, 'eval_precision': 0.44754464285714285, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.45234066553863506, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 3.0039, 'eval_samples_per_second': 509.677, 'eval_steps_per_second': 63.918, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4012371301651001, 'eval_precision': 0.4465065502183406, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.4562186279977691, 'eval_accuracy': 0.9454180498726164, 'eval_runtime': 2.9567, 'eval_samples_per_second': 517.798, 'eval_steps_per_second': 64.936, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 844.4899, 'train_samples_per_second': 245.374, 'train_steps_per_second': 3.837, 'total_flos': 7641716291195580.0, 'train_loss': 0.04331252126276125, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9431
  predict_f1                 =     0.3651
  predict_loss               =     0.1957
  predict_precision          =     0.4036
  predict_recall             =     0.3333
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    514.547
  predict_steps_per_second   =     64.318
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_36.json completed. F1: 0.3651266766020864
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_18.json
01170939_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5879.98 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6756.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6785.52 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6902.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6979.52 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7109.54 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6317.88 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6647.52 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6732.69 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7367.88 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7025.14 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6969.96 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6790.56 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2096, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.14884532988071442, 'eval_precision': 0.4682981090100111, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4740990990990991, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3756, 'eval_samples_per_second': 644.482, 'eval_steps_per_second': 80.823, 'epoch': 1.0}
{'loss': 0.1261, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.16239100694656372, 'eval_precision': 0.5410628019323671, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.4485981308411215, 'eval_accuracy': 0.950783602254304, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.233, 'eval_steps_per_second': 81.294, 'epoch': 2.0}
{'loss': 0.0739, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.19186809659004211, 'eval_precision': 0.41551724137931034, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4732449680903289, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 2.3668, 'eval_samples_per_second': 646.876, 'eval_steps_per_second': 81.124, 'epoch': 3.0}
{'loss': 0.0425, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.22083327174186707, 'eval_precision': 0.429, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.45711241342567926, 'eval_accuracy': 0.9426001698448236, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.201, 'eval_steps_per_second': 81.164, 'epoch': 4.0}
{'loss': 0.0264, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.2722594439983368, 'eval_precision': 0.4666666666666667, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.47656250000000006, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.476, 'eval_steps_per_second': 81.324, 'epoch': 5.0}
{'loss': 0.0184, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.28975892066955566, 'eval_precision': 0.46304347826086956, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4741235392320534, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.504, 'eval_steps_per_second': 81.328, 'epoch': 6.0}
{'loss': 0.0115, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.32006606459617615, 'eval_precision': 0.48148148148148145, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.47024504084014, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.39, 'eval_steps_per_second': 81.439, 'epoch': 7.0}
{'loss': 0.0115, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.3159288763999939, 'eval_precision': 0.4668094218415418, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4815019326339039, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.832, 'eval_steps_per_second': 81.369, 'epoch': 8.0}
{'loss': 0.0084, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.313002347946167, 'eval_precision': 0.4671857619577308, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.47297297297297297, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.3704, 'eval_samples_per_second': 645.887, 'eval_steps_per_second': 80.999, 'epoch': 9.0}
{'loss': 0.0066, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.35804635286331177, 'eval_precision': 0.45554335894621295, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.46420581655480986, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.3659, 'eval_samples_per_second': 647.114, 'eval_steps_per_second': 81.153, 'epoch': 10.0}
{'loss': 0.0059, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.35993966460227966, 'eval_precision': 0.45387840670859536, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.47296559257236487, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.4538, 'eval_samples_per_second': 623.92, 'eval_steps_per_second': 78.245, 'epoch': 11.0}
{'loss': 0.0043, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.3614708483219147, 'eval_precision': 0.4939467312348668, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47915443335290664, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3705, 'eval_samples_per_second': 645.846, 'eval_steps_per_second': 80.994, 'epoch': 12.0}
{'loss': 0.0031, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.37770751118659973, 'eval_precision': 0.4853503184713376, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.45848375451263534, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3615, 'eval_samples_per_second': 648.327, 'eval_steps_per_second': 81.306, 'epoch': 13.0}
{'loss': 0.003, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.38010016083717346, 'eval_precision': 0.49819059107358266, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4841735052754982, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.74, 'eval_steps_per_second': 81.483, 'epoch': 14.0}
{'loss': 0.0025, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.3945513367652893, 'eval_precision': 0.48412698412698413, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4855031267765776, 'eval_accuracy': 0.9454566509688875, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.448, 'eval_steps_per_second': 81.195, 'epoch': 15.0}
{'loss': 0.002, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3984682857990265, 'eval_precision': 0.444, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4730953649440597, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 2.3774, 'eval_samples_per_second': 643.979, 'eval_steps_per_second': 80.76, 'epoch': 16.0}
{'loss': 0.0015, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.3955078125, 'eval_precision': 0.4392614188532556, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.4742917103882476, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.894, 'eval_steps_per_second': 81.126, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.4151555001735687, 'eval_precision': 0.5006435006435006, 'eval_recall': 0.443557582668187, 'eval_f1': 0.4703748488512696, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 2.3619, 'eval_samples_per_second': 648.218, 'eval_steps_per_second': 81.292, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.4280388057231903, 'eval_precision': 0.4831591173054588, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.47871116225546606, 'eval_accuracy': 0.9466146838570215, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.777, 'eval_steps_per_second': 81.487, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4232933521270752, 'eval_precision': 0.4554865424430642, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.47748236570808467, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.4369, 'eval_samples_per_second': 628.259, 'eval_steps_per_second': 78.789, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.4431658685207367, 'eval_precision': 0.5018541409147095, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.4816132858837485, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.973, 'eval_steps_per_second': 81.387, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.44480180740356445, 'eval_precision': 0.4929078014184397, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4840394660475914, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.529, 'eval_steps_per_second': 81.456, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.4469478130340576, 'eval_precision': 0.5054678007290401, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4894117647058823, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.361, 'eval_samples_per_second': 648.457, 'eval_steps_per_second': 81.322, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4464658200740814, 'eval_precision': 0.501813784764208, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.4870892018779343, 'eval_accuracy': 0.9481587277078669, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.521, 'eval_steps_per_second': 81.33, 'epoch': 24.0}
{'train_runtime': 858.7805, 'train_samples_per_second': 241.291, 'train_steps_per_second': 6.036, 'train_loss': 0.023362782699009977, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0234
  train_runtime            = 0:14:18.78
  train_samples            =       8634
  train_samples_per_second =    241.291
  train_steps_per_second   =      6.036
[{'loss': 0.2096, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.14884532988071442, 'eval_precision': 0.4682981090100111, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4740990990990991, 'eval_accuracy': 0.9492009573071876, 'eval_runtime': 2.3756, 'eval_samples_per_second': 644.482, 'eval_steps_per_second': 80.823, 'epoch': 1.0, 'step': 216}, {'loss': 0.1261, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.16239100694656372, 'eval_precision': 0.5410628019323671, 'eval_recall': 0.3831242873432155, 'eval_f1': 0.4485981308411215, 'eval_accuracy': 0.950783602254304, 'eval_runtime': 2.3618, 'eval_samples_per_second': 648.233, 'eval_steps_per_second': 81.294, 'epoch': 2.0, 'step': 432}, {'loss': 0.0739, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.19186809659004211, 'eval_precision': 0.41551724137931034, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.4732449680903289, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 2.3668, 'eval_samples_per_second': 646.876, 'eval_steps_per_second': 81.124, 'epoch': 3.0, 'step': 648}, {'loss': 0.0425, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.22083327174186707, 'eval_precision': 0.429, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.45711241342567926, 'eval_accuracy': 0.9426001698448236, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.201, 'eval_steps_per_second': 81.164, 'epoch': 4.0, 'step': 864}, {'loss': 0.0264, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2722594439983368, 'eval_precision': 0.4666666666666667, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.47656250000000006, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.476, 'eval_steps_per_second': 81.324, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0184, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.28975892066955566, 'eval_precision': 0.46304347826086956, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4741235392320534, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.504, 'eval_steps_per_second': 81.328, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0115, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.32006606459617615, 'eval_precision': 0.48148148148148145, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.47024504084014, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.39, 'eval_steps_per_second': 81.439, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0115, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3159288763999939, 'eval_precision': 0.4668094218415418, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4815019326339039, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.3596, 'eval_samples_per_second': 648.832, 'eval_steps_per_second': 81.369, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0084, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.313002347946167, 'eval_precision': 0.4671857619577308, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.47297297297297297, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.3704, 'eval_samples_per_second': 645.887, 'eval_steps_per_second': 80.999, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0066, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.35804635286331177, 'eval_precision': 0.45554335894621295, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.46420581655480986, 'eval_accuracy': 0.9439512082143133, 'eval_runtime': 2.3659, 'eval_samples_per_second': 647.114, 'eval_steps_per_second': 81.153, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0059, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.35993966460227966, 'eval_precision': 0.45387840670859536, 'eval_recall': 0.49372862029646525, 'eval_f1': 0.47296559257236487, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.4538, 'eval_samples_per_second': 623.92, 'eval_steps_per_second': 78.245, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0043, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3614708483219147, 'eval_precision': 0.4939467312348668, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47915443335290664, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3705, 'eval_samples_per_second': 645.846, 'eval_steps_per_second': 80.994, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0031, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.37770751118659973, 'eval_precision': 0.4853503184713376, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.45848375451263534, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.3615, 'eval_samples_per_second': 648.327, 'eval_steps_per_second': 81.306, 'epoch': 13.0, 'step': 2808}, {'loss': 0.003, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.38010016083717346, 'eval_precision': 0.49819059107358266, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4841735052754982, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3563, 'eval_samples_per_second': 649.74, 'eval_steps_per_second': 81.483, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0025, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.3945513367652893, 'eval_precision': 0.48412698412698413, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4855031267765776, 'eval_accuracy': 0.9454566509688875, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.448, 'eval_steps_per_second': 81.195, 'epoch': 15.0, 'step': 3240}, {'loss': 0.002, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.3984682857990265, 'eval_precision': 0.444, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4730953649440597, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 2.3774, 'eval_samples_per_second': 643.979, 'eval_steps_per_second': 80.76, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0015, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.3955078125, 'eval_precision': 0.4392614188532556, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.4742917103882476, 'eval_accuracy': 0.9428317764224504, 'eval_runtime': 2.3667, 'eval_samples_per_second': 646.894, 'eval_steps_per_second': 81.126, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0009, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.4151555001735687, 'eval_precision': 0.5006435006435006, 'eval_recall': 0.443557582668187, 'eval_f1': 0.4703748488512696, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 2.3619, 'eval_samples_per_second': 648.218, 'eval_steps_per_second': 81.292, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0007, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.4280388057231903, 'eval_precision': 0.4831591173054588, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.47871116225546606, 'eval_accuracy': 0.9466146838570215, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.777, 'eval_steps_per_second': 81.487, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4232933521270752, 'eval_precision': 0.4554865424430642, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.47748236570808467, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.4369, 'eval_samples_per_second': 628.259, 'eval_steps_per_second': 78.789, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0004, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.4431658685207367, 'eval_precision': 0.5018541409147095, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.4816132858837485, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 2.3591, 'eval_samples_per_second': 648.973, 'eval_steps_per_second': 81.387, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.44480180740356445, 'eval_precision': 0.4929078014184397, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4840394660475914, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.3571, 'eval_samples_per_second': 649.529, 'eval_steps_per_second': 81.456, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.4469478130340576, 'eval_precision': 0.5054678007290401, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4894117647058823, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.361, 'eval_samples_per_second': 648.457, 'eval_steps_per_second': 81.322, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.4464658200740814, 'eval_precision': 0.501813784764208, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.4870892018779343, 'eval_accuracy': 0.9481587277078669, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.521, 'eval_steps_per_second': 81.33, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 858.7805, 'train_samples_per_second': 241.291, 'train_steps_per_second': 6.036, 'total_flos': 8232792011744040.0, 'train_loss': 0.023362782699009977, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9488
  predict_f1                 =     0.4301
  predict_loss               =       0.16
  predict_precision          =     0.4402
  predict_recall             =     0.4204
  predict_runtime            = 0:00:01.97
  predict_samples_per_second =    645.241
  predict_steps_per_second   =     80.655
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_18.json completed. F1: 0.4300626304801671
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_04.json
01170939_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6804.14 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7277.08 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7064.27 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7064.76 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7099.84 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7220.46 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6363.91 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6687.56 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6871.23 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7439.77 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7054.49 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7076.70 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6901.27 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170939_tsa-bin_NB-BERT_base/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01170939_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2151, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.14938731491565704, 'eval_precision': 0.44408251900108575, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.45494994438264735, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3598, 'eval_samples_per_second': 648.78, 'eval_steps_per_second': 81.362, 'epoch': 1.0}
{'loss': 0.1292, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.1471361666917801, 'eval_precision': 0.48026315789473684, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.48965902738960315, 'eval_accuracy': 0.9500887825214236, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.812, 'eval_steps_per_second': 81.743, 'epoch': 2.0}
{'loss': 0.0715, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.17533330619335175, 'eval_precision': 0.5078597339782346, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4929577464788732, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.3556, 'eval_samples_per_second': 649.935, 'eval_steps_per_second': 81.507, 'epoch': 3.0}
{'loss': 0.0409, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.19942706823349, 'eval_precision': 0.4281867145421903, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.47915620291310906, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.3436, 'eval_samples_per_second': 653.28, 'eval_steps_per_second': 81.927, 'epoch': 4.0}
{'loss': 0.0251, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.23275579512119293, 'eval_precision': 0.4748995983935743, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5050720768820074, 'eval_accuracy': 0.9478499189376979, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.428, 'eval_steps_per_second': 81.193, 'epoch': 5.0}
{'loss': 0.0139, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.26475363969802856, 'eval_precision': 0.4834578441835646, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.4994487320837927, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.147, 'eval_steps_per_second': 81.659, 'epoch': 6.0}
{'loss': 0.0109, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.28285542130470276, 'eval_precision': 0.4878854625550661, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4963585434173669, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.41, 'eval_steps_per_second': 81.692, 'epoch': 7.0}
{'loss': 0.0075, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.30801787972450256, 'eval_precision': 0.4494485294117647, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.4977099236641221, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.3443, 'eval_samples_per_second': 653.082, 'eval_steps_per_second': 81.902, 'epoch': 8.0}
{'loss': 0.0063, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.30020686984062195, 'eval_precision': 0.48254620123203285, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5078336034575904, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.728, 'eval_steps_per_second': 81.607, 'epoch': 9.0}
{'loss': 0.0045, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.30441614985466003, 'eval_precision': 0.4824120603015075, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5128205128205129, 'eval_accuracy': 0.9484675364780359, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.466, 'eval_steps_per_second': 81.825, 'epoch': 10.0}
{'loss': 0.0034, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.334747850894928, 'eval_precision': 0.4816414686825054, 'eval_recall': 0.508551881413911, 'eval_f1': 0.49473100388241825, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.4231, 'eval_samples_per_second': 631.831, 'eval_steps_per_second': 79.237, 'epoch': 11.0}
{'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3419419229030609, 'eval_precision': 0.49723145071982283, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5044943820224719, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.048, 'eval_steps_per_second': 81.772, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.35004639625549316, 'eval_precision': 0.509518477043673, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5141242937853108, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.3425, 'eval_samples_per_second': 653.585, 'eval_steps_per_second': 81.965, 'epoch': 13.0}
{'loss': 0.0019, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.34833598136901855, 'eval_precision': 0.49148936170212765, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5085305448541553, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.473, 'eval_steps_per_second': 81.825, 'epoch': 14.0}
{'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.34869763255119324, 'eval_precision': 0.5243179122182681, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.513953488372093, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 2.336, 'eval_samples_per_second': 655.396, 'eval_steps_per_second': 82.192, 'epoch': 15.0}
{'loss': 0.0013, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3711344599723816, 'eval_precision': 0.5141843971631206, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5049332559489264, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.3418, 'eval_samples_per_second': 653.757, 'eval_steps_per_second': 81.987, 'epoch': 16.0}
{'loss': 0.0013, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.35655415058135986, 'eval_precision': 0.5203252032520326, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.515535097813579, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.3467, 'eval_samples_per_second': 652.396, 'eval_steps_per_second': 81.816, 'epoch': 17.0}
{'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.36454400420188904, 'eval_precision': 0.5256257449344458, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.513986013986014, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3421, 'eval_samples_per_second': 653.679, 'eval_steps_per_second': 81.977, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3714393973350525, 'eval_precision': 0.5097402597402597, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5230427540255413, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.3435, 'eval_samples_per_second': 653.283, 'eval_steps_per_second': 81.927, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3804541230201721, 'eval_precision': 0.5143513203214696, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5125858123569794, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.4176, 'eval_samples_per_second': 633.26, 'eval_steps_per_second': 79.416, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3834339678287506, 'eval_precision': 0.5275498241500586, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5202312138728324, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3396, 'eval_samples_per_second': 654.39, 'eval_steps_per_second': 82.066, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.38923490047454834, 'eval_precision': 0.49946865037194477, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5170517051705171, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3466, 'eval_samples_per_second': 652.42, 'eval_steps_per_second': 81.819, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.3881801664829254, 'eval_precision': 0.5177142857142857, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5171232876712327, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3406, 'eval_samples_per_second': 654.096, 'eval_steps_per_second': 82.029, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3885636031627655, 'eval_precision': 0.5117056856187291, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5174746335963922, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.341, 'eval_samples_per_second': 654.0, 'eval_steps_per_second': 82.017, 'epoch': 24.0}
{'train_runtime': 852.9816, 'train_samples_per_second': 242.931, 'train_steps_per_second': 6.078, 'train_loss': 0.022628355963172874, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0226
  train_runtime            = 0:14:12.98
  train_samples            =       8634
  train_samples_per_second =    242.931
  train_steps_per_second   =      6.078
[{'loss': 0.2151, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.14938731491565704, 'eval_precision': 0.44408251900108575, 'eval_recall': 0.4663625997719498, 'eval_f1': 0.45494994438264735, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3598, 'eval_samples_per_second': 648.78, 'eval_steps_per_second': 81.362, 'epoch': 1.0, 'step': 216}, {'loss': 0.1292, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.1471361666917801, 'eval_precision': 0.48026315789473684, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.48965902738960315, 'eval_accuracy': 0.9500887825214236, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.812, 'eval_steps_per_second': 81.743, 'epoch': 2.0, 'step': 432}, {'loss': 0.0715, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.17533330619335175, 'eval_precision': 0.5078597339782346, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4929577464788732, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.3556, 'eval_samples_per_second': 649.935, 'eval_steps_per_second': 81.507, 'epoch': 3.0, 'step': 648}, {'loss': 0.0409, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.19942706823349, 'eval_precision': 0.4281867145421903, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.47915620291310906, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.3436, 'eval_samples_per_second': 653.28, 'eval_steps_per_second': 81.927, 'epoch': 4.0, 'step': 864}, {'loss': 0.0251, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.23275579512119293, 'eval_precision': 0.4748995983935743, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5050720768820074, 'eval_accuracy': 0.9478499189376979, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.428, 'eval_steps_per_second': 81.193, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0139, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.26475363969802856, 'eval_precision': 0.4834578441835646, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.4994487320837927, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3512, 'eval_samples_per_second': 651.147, 'eval_steps_per_second': 81.659, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0109, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.28285542130470276, 'eval_precision': 0.4878854625550661, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4963585434173669, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3503, 'eval_samples_per_second': 651.41, 'eval_steps_per_second': 81.692, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0075, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.30801787972450256, 'eval_precision': 0.4494485294117647, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.4977099236641221, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.3443, 'eval_samples_per_second': 653.082, 'eval_steps_per_second': 81.902, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0063, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.30020686984062195, 'eval_precision': 0.48254620123203285, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5078336034575904, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.728, 'eval_steps_per_second': 81.607, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0045, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.30441614985466003, 'eval_precision': 0.4824120603015075, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5128205128205129, 'eval_accuracy': 0.9484675364780359, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.466, 'eval_steps_per_second': 81.825, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0034, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.334747850894928, 'eval_precision': 0.4816414686825054, 'eval_recall': 0.508551881413911, 'eval_f1': 0.49473100388241825, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.4231, 'eval_samples_per_second': 631.831, 'eval_steps_per_second': 79.237, 'epoch': 11.0, 'step': 2376}, {'loss': 0.003, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3419419229030609, 'eval_precision': 0.49723145071982283, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5044943820224719, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.048, 'eval_steps_per_second': 81.772, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.35004639625549316, 'eval_precision': 0.509518477043673, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5141242937853108, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.3425, 'eval_samples_per_second': 653.585, 'eval_steps_per_second': 81.965, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0019, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.34833598136901855, 'eval_precision': 0.49148936170212765, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5085305448541553, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.473, 'eval_steps_per_second': 81.825, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.34869763255119324, 'eval_precision': 0.5243179122182681, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.513953488372093, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 2.336, 'eval_samples_per_second': 655.396, 'eval_steps_per_second': 82.192, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0013, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.3711344599723816, 'eval_precision': 0.5141843971631206, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.5049332559489264, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.3418, 'eval_samples_per_second': 653.757, 'eval_steps_per_second': 81.987, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0013, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.35655415058135986, 'eval_precision': 0.5203252032520326, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.515535097813579, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.3467, 'eval_samples_per_second': 652.396, 'eval_steps_per_second': 81.816, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0012, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.36454400420188904, 'eval_precision': 0.5256257449344458, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.513986013986014, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3421, 'eval_samples_per_second': 653.679, 'eval_steps_per_second': 81.977, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.3714393973350525, 'eval_precision': 0.5097402597402597, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5230427540255413, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.3435, 'eval_samples_per_second': 653.283, 'eval_steps_per_second': 81.927, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.3804541230201721, 'eval_precision': 0.5143513203214696, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5125858123569794, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 2.4176, 'eval_samples_per_second': 633.26, 'eval_steps_per_second': 79.416, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.3834339678287506, 'eval_precision': 0.5275498241500586, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5202312138728324, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.3396, 'eval_samples_per_second': 654.39, 'eval_steps_per_second': 82.066, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.38923490047454834, 'eval_precision': 0.49946865037194477, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5170517051705171, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3466, 'eval_samples_per_second': 652.42, 'eval_steps_per_second': 81.819, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.3881801664829254, 'eval_precision': 0.5177142857142857, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5171232876712327, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3406, 'eval_samples_per_second': 654.096, 'eval_steps_per_second': 82.029, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3885636031627655, 'eval_precision': 0.5117056856187291, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5174746335963922, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 2.341, 'eval_samples_per_second': 654.0, 'eval_steps_per_second': 82.017, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 852.9816, 'train_samples_per_second': 242.931, 'train_steps_per_second': 6.078, 'total_flos': 8232792011744040.0, 'train_loss': 0.022628355963172874, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9498
  predict_f1                 =      0.476
  predict_loss               =     0.1528
  predict_precision          =     0.4799
  predict_recall             =     0.4721
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    649.957
  predict_steps_per_second   =     81.245
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_04.json completed. F1: 0.47599451303155005
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_24.json
01170939_tsa-bin_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7265.85 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7688.69 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7459.75 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7490.97 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7533.79 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7664.18 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 6698.24 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7069.44 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7268.90 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7836.54 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7468.68 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7509.02 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7310.28 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2201, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.15412171185016632, 'eval_precision': 0.4559789750328515, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.4236874236874237, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2364, 'eval_samples_per_second': 684.568, 'eval_steps_per_second': 85.851, 'epoch': 1.0}
{'loss': 0.1154, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.15803685784339905, 'eval_precision': 0.4428121720881427, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4612021857923498, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2251, 'eval_samples_per_second': 688.053, 'eval_steps_per_second': 86.288, 'epoch': 2.0}
{'loss': 0.0553, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.18452395498752594, 'eval_precision': 0.4360086767895879, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.44691495275152865, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.636, 'eval_steps_per_second': 86.361, 'epoch': 3.0}
{'loss': 0.0272, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2202196717262268, 'eval_precision': 0.44789356984478934, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.45418774592467676, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.646, 'eval_steps_per_second': 86.362, 'epoch': 4.0}
{'loss': 0.0142, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2558686137199402, 'eval_precision': 0.42830188679245285, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.4687661331956634, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.2156, 'eval_samples_per_second': 691.009, 'eval_steps_per_second': 86.658, 'epoch': 5.0}
{'loss': 0.0093, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.26590847969055176, 'eval_precision': 0.45161290322580644, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.4722524483133841, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2077, 'eval_samples_per_second': 693.477, 'eval_steps_per_second': 86.968, 'epoch': 6.0}
{'loss': 0.0054, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3159640431404114, 'eval_precision': 0.43106995884773663, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4532179556517036, 'eval_accuracy': 0.9447618312360071, 'eval_runtime': 2.2119, 'eval_samples_per_second': 692.178, 'eval_steps_per_second': 86.805, 'epoch': 7.0}
{'loss': 0.0038, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.32332658767700195, 'eval_precision': 0.47123893805309736, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4783829309376755, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 2.2148, 'eval_samples_per_second': 691.245, 'eval_steps_per_second': 86.688, 'epoch': 8.0}
{'loss': 0.0032, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3325011432170868, 'eval_precision': 0.48, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4794520547945206, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2173, 'eval_samples_per_second': 690.48, 'eval_steps_per_second': 86.592, 'epoch': 9.0}
{'loss': 0.0022, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.36354660987854004, 'eval_precision': 0.4202626641651032, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4611425630468348, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.292, 'eval_steps_per_second': 86.568, 'epoch': 10.0}
{'loss': 0.0022, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3577619791030884, 'eval_precision': 0.4563106796116505, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.4689578713968957, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.2023, 'eval_samples_per_second': 695.187, 'eval_steps_per_second': 87.182, 'epoch': 11.0}
{'loss': 0.0014, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.36878594756126404, 'eval_precision': 0.4245754245754246, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.45260915867944623, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2043, 'eval_samples_per_second': 694.54, 'eval_steps_per_second': 87.101, 'epoch': 12.0}
{'loss': 0.0011, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.37749040126800537, 'eval_precision': 0.44238683127572015, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.46511627906976744, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.1936, 'eval_samples_per_second': 697.943, 'eval_steps_per_second': 87.528, 'epoch': 13.0}
{'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3825399875640869, 'eval_precision': 0.45484949832775917, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.459977452085682, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.2105, 'eval_samples_per_second': 692.615, 'eval_steps_per_second': 86.86, 'epoch': 14.0}
{'loss': 0.0009, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.38890665769577026, 'eval_precision': 0.4456967213114754, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4695089044792229, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.938, 'eval_steps_per_second': 86.649, 'epoch': 15.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.38943755626678467, 'eval_precision': 0.4824766355140187, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4766301211771494, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.2238, 'eval_samples_per_second': 688.469, 'eval_steps_per_second': 86.34, 'epoch': 16.0}
{'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4060269594192505, 'eval_precision': 0.4216981132075472, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.46153846153846156, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.948, 'eval_steps_per_second': 86.274, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3944569528102875, 'eval_precision': 0.4376899696048632, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.463519313304721, 'eval_accuracy': 0.9446460279471937, 'eval_runtime': 2.2108, 'eval_samples_per_second': 692.508, 'eval_steps_per_second': 86.846, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.39312756061553955, 'eval_precision': 0.475484606613455, 'eval_recall': 0.475484606613455, 'eval_f1': 0.475484606613455, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.2086, 'eval_samples_per_second': 693.197, 'eval_steps_per_second': 86.933, 'epoch': 19.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.40552690625190735, 'eval_precision': 0.4588235294117647, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.47350993377483447, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2144, 'eval_samples_per_second': 691.373, 'eval_steps_per_second': 86.704, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4080158472061157, 'eval_precision': 0.45217391304347826, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4629938786867001, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.2123, 'eval_samples_per_second': 692.027, 'eval_steps_per_second': 86.786, 'epoch': 21.0}
{'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.41153091192245483, 'eval_precision': 0.4512325830653805, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.46519337016574586, 'eval_accuracy': 0.9459584652204123, 'eval_runtime': 2.2147, 'eval_samples_per_second': 691.301, 'eval_steps_per_second': 86.695, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4112465977668762, 'eval_precision': 0.4565916398713826, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4707182320441989, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2149, 'eval_samples_per_second': 691.224, 'eval_steps_per_second': 86.685, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.41167739033699036, 'eval_precision': 0.4598459845984598, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.46808510638297873, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.2121, 'eval_samples_per_second': 692.09, 'eval_steps_per_second': 86.794, 'epoch': 24.0}
{'train_runtime': 715.0346, 'train_samples_per_second': 289.799, 'train_steps_per_second': 4.531, 'train_loss': 0.019430265644059322, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0194
  train_runtime            = 0:11:55.03
  train_samples            =       8634
  train_samples_per_second =    289.799
  train_steps_per_second   =      4.531
[{'loss': 0.2201, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.15412171185016632, 'eval_precision': 0.4559789750328515, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.4236874236874237, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2364, 'eval_samples_per_second': 684.568, 'eval_steps_per_second': 85.851, 'epoch': 1.0, 'step': 135}, {'loss': 0.1154, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.15803685784339905, 'eval_precision': 0.4428121720881427, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4612021857923498, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2251, 'eval_samples_per_second': 688.053, 'eval_steps_per_second': 86.288, 'epoch': 2.0, 'step': 270}, {'loss': 0.0553, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.18452395498752594, 'eval_precision': 0.4360086767895879, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.44691495275152865, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.636, 'eval_steps_per_second': 86.361, 'epoch': 3.0, 'step': 405}, {'loss': 0.0272, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2202196717262268, 'eval_precision': 0.44789356984478934, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.45418774592467676, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.2232, 'eval_samples_per_second': 688.646, 'eval_steps_per_second': 86.362, 'epoch': 4.0, 'step': 540}, {'loss': 0.0142, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2558686137199402, 'eval_precision': 0.42830188679245285, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.4687661331956634, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.2156, 'eval_samples_per_second': 691.009, 'eval_steps_per_second': 86.658, 'epoch': 5.0, 'step': 675}, {'loss': 0.0093, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.26590847969055176, 'eval_precision': 0.45161290322580644, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.4722524483133841, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2077, 'eval_samples_per_second': 693.477, 'eval_steps_per_second': 86.968, 'epoch': 6.0, 'step': 810}, {'loss': 0.0054, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3159640431404114, 'eval_precision': 0.43106995884773663, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4532179556517036, 'eval_accuracy': 0.9447618312360071, 'eval_runtime': 2.2119, 'eval_samples_per_second': 692.178, 'eval_steps_per_second': 86.805, 'epoch': 7.0, 'step': 945}, {'loss': 0.0038, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.32332658767700195, 'eval_precision': 0.47123893805309736, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4783829309376755, 'eval_accuracy': 0.9464988805682082, 'eval_runtime': 2.2148, 'eval_samples_per_second': 691.245, 'eval_steps_per_second': 86.688, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0032, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3325011432170868, 'eval_precision': 0.48, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4794520547945206, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2173, 'eval_samples_per_second': 690.48, 'eval_steps_per_second': 86.592, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0022, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.36354660987854004, 'eval_precision': 0.4202626641651032, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4611425630468348, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 2.2179, 'eval_samples_per_second': 690.292, 'eval_steps_per_second': 86.568, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0022, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.3577619791030884, 'eval_precision': 0.4563106796116505, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.4689578713968957, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.2023, 'eval_samples_per_second': 695.187, 'eval_steps_per_second': 87.182, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0014, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.36878594756126404, 'eval_precision': 0.4245754245754246, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.45260915867944623, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2043, 'eval_samples_per_second': 694.54, 'eval_steps_per_second': 87.101, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0011, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.37749040126800537, 'eval_precision': 0.44238683127572015, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.46511627906976744, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.1936, 'eval_samples_per_second': 697.943, 'eval_steps_per_second': 87.528, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3825399875640869, 'eval_precision': 0.45484949832775917, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.459977452085682, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.2105, 'eval_samples_per_second': 692.615, 'eval_steps_per_second': 86.86, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0009, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.38890665769577026, 'eval_precision': 0.4456967213114754, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4695089044792229, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.938, 'eval_steps_per_second': 86.649, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.38943755626678467, 'eval_precision': 0.4824766355140187, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4766301211771494, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.2238, 'eval_samples_per_second': 688.469, 'eval_steps_per_second': 86.34, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4060269594192505, 'eval_precision': 0.4216981132075472, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.46153846153846156, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 2.2255, 'eval_samples_per_second': 687.948, 'eval_steps_per_second': 86.274, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3944569528102875, 'eval_precision': 0.4376899696048632, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.463519313304721, 'eval_accuracy': 0.9446460279471937, 'eval_runtime': 2.2108, 'eval_samples_per_second': 692.508, 'eval_steps_per_second': 86.846, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.39312756061553955, 'eval_precision': 0.475484606613455, 'eval_recall': 0.475484606613455, 'eval_f1': 0.475484606613455, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.2086, 'eval_samples_per_second': 693.197, 'eval_steps_per_second': 86.933, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0002, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.40552690625190735, 'eval_precision': 0.4588235294117647, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.47350993377483447, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.2144, 'eval_samples_per_second': 691.373, 'eval_steps_per_second': 86.704, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0003, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4080158472061157, 'eval_precision': 0.45217391304347826, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4629938786867001, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.2123, 'eval_samples_per_second': 692.027, 'eval_steps_per_second': 86.786, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0001, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.41153091192245483, 'eval_precision': 0.4512325830653805, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.46519337016574586, 'eval_accuracy': 0.9459584652204123, 'eval_runtime': 2.2147, 'eval_samples_per_second': 691.301, 'eval_steps_per_second': 86.695, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4112465977668762, 'eval_precision': 0.4565916398713826, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.4707182320441989, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2149, 'eval_samples_per_second': 691.224, 'eval_steps_per_second': 86.685, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.41167739033699036, 'eval_precision': 0.4598459845984598, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.46808510638297873, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.2121, 'eval_samples_per_second': 692.09, 'eval_steps_per_second': 86.794, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 715.0346, 'train_samples_per_second': 289.799, 'train_steps_per_second': 4.531, 'total_flos': 7418622311681880.0, 'train_loss': 0.019430265644059322, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9474
  predict_f1                 =     0.3979
  predict_loss               =     0.1636
  predict_precision          =     0.4545
  predict_recall             =     0.3537
  predict_runtime            = 0:00:01.84
  predict_samples_per_second =    688.384
  predict_steps_per_second   =     86.048
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_24.json completed. F1: 0.3978576893649579
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_26.json
01170939_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7047.34 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7424.73 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7161.02 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7214.27 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7259.04 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7355.13 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6446.88 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6797.98 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6996.90 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7592.13 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7198.20 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7213.97 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7031.12 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170939_tsa-bin_NB-BERT_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01170939_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.206, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.13674521446228027, 'eval_precision': 0.4507434944237918, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4966717869943677, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 4.6586, 'eval_samples_per_second': 328.637, 'eval_steps_per_second': 41.214, 'epoch': 1.0}
{'loss': 0.1169, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.1391865611076355, 'eval_precision': 0.447098976109215, 'eval_recall': 0.5974914481185861, 'eval_f1': 0.5114690092728159, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 4.6531, 'eval_samples_per_second': 329.025, 'eval_steps_per_second': 41.262, 'epoch': 2.0}
{'loss': 0.0694, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.1566367745399475, 'eval_precision': 0.562082777036048, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.5178351783517836, 'eval_accuracy': 0.9554543349031113, 'eval_runtime': 4.6463, 'eval_samples_per_second': 329.512, 'eval_steps_per_second': 41.324, 'epoch': 3.0}
{'loss': 0.0373, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.18150080740451813, 'eval_precision': 0.5781865965834428, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5372405372405373, 'eval_accuracy': 0.9569597776576855, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.187, 'eval_steps_per_second': 41.283, 'epoch': 4.0}
{'loss': 0.0208, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.22303402423858643, 'eval_precision': 0.5110619469026548, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5188096574957889, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.565, 'eval_steps_per_second': 41.205, 'epoch': 5.0}
{'loss': 0.0131, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.24124352633953094, 'eval_precision': 0.4882533197139939, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5150862068965517, 'eval_accuracy': 0.9514784219871845, 'eval_runtime': 4.6561, 'eval_samples_per_second': 328.815, 'eval_steps_per_second': 41.236, 'epoch': 6.0}
{'loss': 0.0091, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2494693249464035, 'eval_precision': 0.5021008403361344, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5226899945325314, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.573, 'eval_steps_per_second': 41.331, 'epoch': 7.0}
{'loss': 0.0058, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.26328587532043457, 'eval_precision': 0.48673469387755103, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5137318255250405, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6531, 'eval_samples_per_second': 329.03, 'eval_steps_per_second': 41.263, 'epoch': 8.0}
{'loss': 0.0038, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.2856203019618988, 'eval_precision': 0.48975409836065575, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5159201295196977, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.429, 'eval_steps_per_second': 41.313, 'epoch': 9.0}
{'loss': 0.0038, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.29340770840644836, 'eval_precision': 0.48775510204081635, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5148088314485729, 'eval_accuracy': 0.9529066625492164, 'eval_runtime': 4.6439, 'eval_samples_per_second': 329.677, 'eval_steps_per_second': 41.344, 'epoch': 10.0}
{'loss': 0.0027, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.2951635718345642, 'eval_precision': 0.5263157894736842, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5366126327557295, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.645, 'eval_samples_per_second': 329.599, 'eval_steps_per_second': 41.334, 'epoch': 11.0}
{'loss': 0.0025, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.2966824769973755, 'eval_precision': 0.5345413363533409, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5363636363636364, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.211, 'eval_steps_per_second': 41.286, 'epoch': 12.0}
{'loss': 0.0017, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3173622488975525, 'eval_precision': 0.5597633136094674, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5493612078977932, 'eval_accuracy': 0.9570369798502277, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.731, 'eval_steps_per_second': 41.351, 'epoch': 13.0}
{'loss': 0.0013, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3097435235977173, 'eval_precision': 0.5497630331753555, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5392213829169088, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.642, 'eval_steps_per_second': 41.34, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.346367210149765, 'eval_precision': 0.5613577023498695, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.5234327449786976, 'eval_accuracy': 0.9558403458658226, 'eval_runtime': 4.6481, 'eval_samples_per_second': 329.379, 'eval_steps_per_second': 41.307, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.32312870025634766, 'eval_precision': 0.5332594235033259, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5407532321528948, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.561, 'eval_steps_per_second': 41.204, 'epoch': 16.0}
{'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.33775708079338074, 'eval_precision': 0.5255863539445629, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5432506887052342, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6427, 'eval_samples_per_second': 329.763, 'eval_steps_per_second': 41.355, 'epoch': 17.0}
{'loss': 0.0007, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3448878526687622, 'eval_precision': 0.5070281124497992, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5392418579818473, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.587, 'eval_steps_per_second': 41.333, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3512779474258423, 'eval_precision': 0.5337078651685393, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5376344086021505, 'eval_accuracy': 0.9561105535397205, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.899, 'eval_steps_per_second': 41.372, 'epoch': 19.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3546222448348999, 'eval_precision': 0.5245726495726496, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5416436845008273, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.7103, 'eval_samples_per_second': 325.029, 'eval_steps_per_second': 40.761, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3590998947620392, 'eval_precision': 0.5399113082039911, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5474985947161327, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6413, 'eval_samples_per_second': 329.863, 'eval_steps_per_second': 41.368, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.36475101113319397, 'eval_precision': 0.5533642691415314, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5485911443358253, 'eval_accuracy': 0.956843974368872, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.963, 'eval_steps_per_second': 41.38, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.3628995418548584, 'eval_precision': 0.5422222222222223, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5492402926280248, 'eval_accuracy': 0.956264957924805, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.836, 'eval_steps_per_second': 41.364, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3634118437767029, 'eval_precision': 0.54006586169045, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5503355704697986, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.577, 'eval_steps_per_second': 41.332, 'epoch': 24.0}
{'train_runtime': 2093.3749, 'train_samples_per_second': 98.987, 'train_steps_per_second': 1.548, 'train_loss': 0.020799582998015355, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0208
  train_runtime            = 0:34:53.37
  train_samples            =       8634
  train_samples_per_second =     98.987
  train_steps_per_second   =      1.548
[{'loss': 0.206, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.13674521446228027, 'eval_precision': 0.4507434944237918, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.4966717869943677, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 4.6586, 'eval_samples_per_second': 328.637, 'eval_steps_per_second': 41.214, 'epoch': 1.0, 'step': 135}, {'loss': 0.1169, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.1391865611076355, 'eval_precision': 0.447098976109215, 'eval_recall': 0.5974914481185861, 'eval_f1': 0.5114690092728159, 'eval_accuracy': 0.9502817880027793, 'eval_runtime': 4.6531, 'eval_samples_per_second': 329.025, 'eval_steps_per_second': 41.262, 'epoch': 2.0, 'step': 270}, {'loss': 0.0694, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1566367745399475, 'eval_precision': 0.562082777036048, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.5178351783517836, 'eval_accuracy': 0.9554543349031113, 'eval_runtime': 4.6463, 'eval_samples_per_second': 329.512, 'eval_steps_per_second': 41.324, 'epoch': 3.0, 'step': 405}, {'loss': 0.0373, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.18150080740451813, 'eval_precision': 0.5781865965834428, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5372405372405373, 'eval_accuracy': 0.9569597776576855, 'eval_runtime': 4.6509, 'eval_samples_per_second': 329.187, 'eval_steps_per_second': 41.283, 'epoch': 4.0, 'step': 540}, {'loss': 0.0208, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.22303402423858643, 'eval_precision': 0.5110619469026548, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5188096574957889, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.565, 'eval_steps_per_second': 41.205, 'epoch': 5.0, 'step': 675}, {'loss': 0.0131, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.24124352633953094, 'eval_precision': 0.4882533197139939, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5150862068965517, 'eval_accuracy': 0.9514784219871845, 'eval_runtime': 4.6561, 'eval_samples_per_second': 328.815, 'eval_steps_per_second': 41.236, 'epoch': 6.0, 'step': 810}, {'loss': 0.0091, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2494693249464035, 'eval_precision': 0.5021008403361344, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5226899945325314, 'eval_accuracy': 0.9510152088319308, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.573, 'eval_steps_per_second': 41.331, 'epoch': 7.0, 'step': 945}, {'loss': 0.0058, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.26328587532043457, 'eval_precision': 0.48673469387755103, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5137318255250405, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 4.6531, 'eval_samples_per_second': 329.03, 'eval_steps_per_second': 41.263, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0038, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2856203019618988, 'eval_precision': 0.48975409836065575, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5159201295196977, 'eval_accuracy': 0.952520651586505, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.429, 'eval_steps_per_second': 41.313, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0038, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.29340770840644836, 'eval_precision': 0.48775510204081635, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5148088314485729, 'eval_accuracy': 0.9529066625492164, 'eval_runtime': 4.6439, 'eval_samples_per_second': 329.677, 'eval_steps_per_second': 41.344, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0027, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2951635718345642, 'eval_precision': 0.5263157894736842, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5366126327557295, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.645, 'eval_samples_per_second': 329.599, 'eval_steps_per_second': 41.334, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0025, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2966824769973755, 'eval_precision': 0.5345413363533409, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5363636363636364, 'eval_accuracy': 0.9560333513471783, 'eval_runtime': 4.6505, 'eval_samples_per_second': 329.211, 'eval_steps_per_second': 41.286, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0017, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3173622488975525, 'eval_precision': 0.5597633136094674, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5493612078977932, 'eval_accuracy': 0.9570369798502277, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.731, 'eval_steps_per_second': 41.351, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0013, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3097435235977173, 'eval_precision': 0.5497630331753555, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.5392213829169088, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.642, 'eval_steps_per_second': 41.34, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.346367210149765, 'eval_precision': 0.5613577023498695, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.5234327449786976, 'eval_accuracy': 0.9558403458658226, 'eval_runtime': 4.6481, 'eval_samples_per_second': 329.379, 'eval_steps_per_second': 41.307, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.32312870025634766, 'eval_precision': 0.5332594235033259, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5407532321528948, 'eval_accuracy': 0.9552999305180268, 'eval_runtime': 4.6597, 'eval_samples_per_second': 328.561, 'eval_steps_per_second': 41.204, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0005, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.33775708079338074, 'eval_precision': 0.5255863539445629, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.5432506887052342, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6427, 'eval_samples_per_second': 329.763, 'eval_steps_per_second': 41.355, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0007, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3448878526687622, 'eval_precision': 0.5070281124497992, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5392418579818473, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.587, 'eval_steps_per_second': 41.333, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3512779474258423, 'eval_precision': 0.5337078651685393, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5376344086021505, 'eval_accuracy': 0.9561105535397205, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.899, 'eval_steps_per_second': 41.372, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3546222448348999, 'eval_precision': 0.5245726495726496, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5416436845008273, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.7103, 'eval_samples_per_second': 325.029, 'eval_steps_per_second': 40.761, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0002, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3590998947620392, 'eval_precision': 0.5399113082039911, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5474985947161327, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6413, 'eval_samples_per_second': 329.863, 'eval_steps_per_second': 41.368, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.36475101113319397, 'eval_precision': 0.5533642691415314, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5485911443358253, 'eval_accuracy': 0.956843974368872, 'eval_runtime': 4.6399, 'eval_samples_per_second': 329.963, 'eval_steps_per_second': 41.38, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3628995418548584, 'eval_precision': 0.5422222222222223, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5492402926280248, 'eval_accuracy': 0.956264957924805, 'eval_runtime': 4.6417, 'eval_samples_per_second': 329.836, 'eval_steps_per_second': 41.364, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3634118437767029, 'eval_precision': 0.54006586169045, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5503355704697986, 'eval_accuracy': 0.9561491546359917, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.577, 'eval_steps_per_second': 41.332, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2093.3749, 'train_samples_per_second': 98.987, 'train_steps_per_second': 1.548, 'total_flos': 2.5991352100330236e+16, 'train_loss': 0.020799582998015355, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9508
  predict_f1                 =     0.5041
  predict_loss               =     0.1533
  predict_precision          =     0.4664
  predict_recall             =     0.5483
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.865
  predict_steps_per_second   =     40.608
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_26.json completed. F1: 0.5040650406504066
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_11.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_11.json
01170939_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6366.49 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7001.42 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6910.65 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6955.85 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7005.27 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7137.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6317.10 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6637.34 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6777.56 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7365.60 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6975.73 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6985.55 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6810.19 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2091, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.15287792682647705, 'eval_precision': 0.4504792332268371, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.4658590308370044, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.914, 'eval_steps_per_second': 81.254, 'epoch': 1.0}
{'loss': 0.1266, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.16225017607212067, 'eval_precision': 0.5381026438569206, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.45526315789473676, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 2.3544, 'eval_samples_per_second': 650.267, 'eval_steps_per_second': 81.549, 'epoch': 2.0}
{'loss': 0.0694, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.19686122238636017, 'eval_precision': 0.4032, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.47390691114245415, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.676, 'eval_steps_per_second': 81.6, 'epoch': 3.0}
{'loss': 0.0401, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21257655322551727, 'eval_precision': 0.44891640866873067, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.47128927410617555, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 2.3527, 'eval_samples_per_second': 650.73, 'eval_steps_per_second': 81.607, 'epoch': 4.0}
{'loss': 0.0249, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.25435084104537964, 'eval_precision': 0.4723991507430998, 'eval_recall': 0.507411630558723, 'eval_f1': 0.4892798240791644, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.214, 'eval_steps_per_second': 81.542, 'epoch': 5.0}
{'loss': 0.0159, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2796664834022522, 'eval_precision': 0.4617737003058104, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.48762109795479003, 'eval_accuracy': 0.9441828147919401, 'eval_runtime': 2.3537, 'eval_samples_per_second': 650.468, 'eval_steps_per_second': 81.574, 'epoch': 6.0}
{'loss': 0.0127, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.2939097583293915, 'eval_precision': 0.45071868583162217, 'eval_recall': 0.500570125427594, 'eval_f1': 0.4743381955699622, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.013, 'eval_steps_per_second': 81.642, 'epoch': 7.0}
{'loss': 0.0088, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.29024478793144226, 'eval_precision': 0.47058823529411764, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.48988518316019686, 'eval_accuracy': 0.9450706400061761, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.781, 'eval_steps_per_second': 81.739, 'epoch': 8.0}
{'loss': 0.0073, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.30244243144989014, 'eval_precision': 0.44317096466093603, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4823284823284823, 'eval_accuracy': 0.945302246583803, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.888, 'eval_steps_per_second': 81.627, 'epoch': 9.0}
{'loss': 0.0045, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3479456901550293, 'eval_precision': 0.4811946902654867, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4884896125772038, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.862, 'eval_steps_per_second': 81.623, 'epoch': 10.0}
{'loss': 0.0044, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3370533287525177, 'eval_precision': 0.48766157461809634, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.48032407407407407, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.4371, 'eval_samples_per_second': 628.196, 'eval_steps_per_second': 78.781, 'epoch': 11.0}
{'loss': 0.0031, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.35419896245002747, 'eval_precision': 0.4918032786885246, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.48526863084922006, 'eval_accuracy': 0.9481201266115957, 'eval_runtime': 2.3564, 'eval_samples_per_second': 649.72, 'eval_steps_per_second': 81.48, 'epoch': 12.0}
{'loss': 0.0028, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.34093356132507324, 'eval_precision': 0.5307692307692308, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4996982498491249, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.451, 'eval_steps_per_second': 81.823, 'epoch': 13.0}
{'loss': 0.0028, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.3467305302619934, 'eval_precision': 0.5096852300242131, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.49442160892542575, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.3388, 'eval_samples_per_second': 654.599, 'eval_steps_per_second': 82.092, 'epoch': 14.0}
{'loss': 0.0019, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.364667147397995, 'eval_precision': 0.49815043156596794, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4786729857819905, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.511, 'eval_steps_per_second': 81.705, 'epoch': 15.0}
{'loss': 0.0014, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.38550350069999695, 'eval_precision': 0.5203145478374837, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.4841463414634147, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.979, 'eval_steps_per_second': 81.513, 'epoch': 16.0}
{'loss': 0.0013, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.36699509620666504, 'eval_precision': 0.48562300319488816, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5022026431718062, 'eval_accuracy': 0.9471550992048174, 'eval_runtime': 2.557, 'eval_samples_per_second': 598.746, 'eval_steps_per_second': 75.088, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.38750290870666504, 'eval_precision': 0.4868871151653364, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4868871151653364, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.557, 'eval_steps_per_second': 81.711, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.39964625239372253, 'eval_precision': 0.49763593380614657, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4886825304701103, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.534, 'eval_steps_per_second': 81.708, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.40085190534591675, 'eval_precision': 0.5024096385542168, 'eval_recall': 0.475484606613455, 'eval_f1': 0.48857644991212656, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.4197, 'eval_samples_per_second': 632.726, 'eval_steps_per_second': 79.349, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.4080981910228729, 'eval_precision': 0.5141800246609125, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4940758293838862, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.509, 'eval_steps_per_second': 81.705, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.40754434466362, 'eval_precision': 0.5107398568019093, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4991253644314868, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.959, 'eval_steps_per_second': 81.385, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.41183629631996155, 'eval_precision': 0.5182567726737338, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5098493626882967, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.31, 'eval_steps_per_second': 81.68, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4115028381347656, 'eval_precision': 0.530359355638166, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.508313539192399, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.074, 'eval_steps_per_second': 81.775, 'epoch': 24.0}
{'train_runtime': 854.1654, 'train_samples_per_second': 242.595, 'train_steps_per_second': 6.069, 'train_loss': 0.02249858943087244, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0225
  train_runtime            = 0:14:14.16
  train_samples            =       8634
  train_samples_per_second =    242.595
  train_steps_per_second   =      6.069
[{'loss': 0.2091, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.15287792682647705, 'eval_precision': 0.4504792332268371, 'eval_recall': 0.4823261117445838, 'eval_f1': 0.4658590308370044, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.363, 'eval_samples_per_second': 647.914, 'eval_steps_per_second': 81.254, 'epoch': 1.0, 'step': 216}, {'loss': 0.1266, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.16225017607212067, 'eval_precision': 0.5381026438569206, 'eval_recall': 0.3945267958950969, 'eval_f1': 0.45526315789473676, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 2.3544, 'eval_samples_per_second': 650.267, 'eval_steps_per_second': 81.549, 'epoch': 2.0, 'step': 432}, {'loss': 0.0694, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.19686122238636017, 'eval_precision': 0.4032, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.47390691114245415, 'eval_accuracy': 0.9391260711804216, 'eval_runtime': 2.3529, 'eval_samples_per_second': 650.676, 'eval_steps_per_second': 81.6, 'epoch': 3.0, 'step': 648}, {'loss': 0.0401, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.21257655322551727, 'eval_precision': 0.44891640866873067, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.47128927410617555, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 2.3527, 'eval_samples_per_second': 650.73, 'eval_steps_per_second': 81.607, 'epoch': 4.0, 'step': 864}, {'loss': 0.0249, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.25435084104537964, 'eval_precision': 0.4723991507430998, 'eval_recall': 0.507411630558723, 'eval_f1': 0.4892798240791644, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.3546, 'eval_samples_per_second': 650.214, 'eval_steps_per_second': 81.542, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0159, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.2796664834022522, 'eval_precision': 0.4617737003058104, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.48762109795479003, 'eval_accuracy': 0.9441828147919401, 'eval_runtime': 2.3537, 'eval_samples_per_second': 650.468, 'eval_steps_per_second': 81.574, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0127, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.2939097583293915, 'eval_precision': 0.45071868583162217, 'eval_recall': 0.500570125427594, 'eval_f1': 0.4743381955699622, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.013, 'eval_steps_per_second': 81.642, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0088, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.29024478793144226, 'eval_precision': 0.47058823529411764, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.48988518316019686, 'eval_accuracy': 0.9450706400061761, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.781, 'eval_steps_per_second': 81.739, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0073, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.30244243144989014, 'eval_precision': 0.44317096466093603, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4823284823284823, 'eval_accuracy': 0.945302246583803, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.888, 'eval_steps_per_second': 81.627, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0045, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.3479456901550293, 'eval_precision': 0.4811946902654867, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.4884896125772038, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.862, 'eval_steps_per_second': 81.623, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0044, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3370533287525177, 'eval_precision': 0.48766157461809634, 'eval_recall': 0.4732041049030787, 'eval_f1': 0.48032407407407407, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.4371, 'eval_samples_per_second': 628.196, 'eval_steps_per_second': 78.781, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0031, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.35419896245002747, 'eval_precision': 0.4918032786885246, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.48526863084922006, 'eval_accuracy': 0.9481201266115957, 'eval_runtime': 2.3564, 'eval_samples_per_second': 649.72, 'eval_steps_per_second': 81.48, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0028, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.34093356132507324, 'eval_precision': 0.5307692307692308, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4996982498491249, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 2.3465, 'eval_samples_per_second': 652.451, 'eval_steps_per_second': 81.823, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0028, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.3467305302619934, 'eval_precision': 0.5096852300242131, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.49442160892542575, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.3388, 'eval_samples_per_second': 654.599, 'eval_steps_per_second': 82.092, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0019, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.364667147397995, 'eval_precision': 0.49815043156596794, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4786729857819905, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.511, 'eval_steps_per_second': 81.705, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0014, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.38550350069999695, 'eval_precision': 0.5203145478374837, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.4841463414634147, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.979, 'eval_steps_per_second': 81.513, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0013, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.36699509620666504, 'eval_precision': 0.48562300319488816, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5022026431718062, 'eval_accuracy': 0.9471550992048174, 'eval_runtime': 2.557, 'eval_samples_per_second': 598.746, 'eval_steps_per_second': 75.088, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0008, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.38750290870666504, 'eval_precision': 0.4868871151653364, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4868871151653364, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.557, 'eval_steps_per_second': 81.711, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.39964625239372253, 'eval_precision': 0.49763593380614657, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4886825304701103, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3498, 'eval_samples_per_second': 651.534, 'eval_steps_per_second': 81.708, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0005, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.40085190534591675, 'eval_precision': 0.5024096385542168, 'eval_recall': 0.475484606613455, 'eval_f1': 0.48857644991212656, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.4197, 'eval_samples_per_second': 632.726, 'eval_steps_per_second': 79.349, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.4080981910228729, 'eval_precision': 0.5141800246609125, 'eval_recall': 0.475484606613455, 'eval_f1': 0.4940758293838862, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.509, 'eval_steps_per_second': 81.705, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0004, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.40754434466362, 'eval_precision': 0.5107398568019093, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4991253644314868, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.959, 'eval_steps_per_second': 81.385, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0002, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.41183629631996155, 'eval_precision': 0.5182567726737338, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5098493626882967, 'eval_accuracy': 0.9489693507295607, 'eval_runtime': 2.3506, 'eval_samples_per_second': 651.31, 'eval_steps_per_second': 81.68, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.4115028381347656, 'eval_precision': 0.530359355638166, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.508313539192399, 'eval_accuracy': 0.9495869682698989, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.074, 'eval_steps_per_second': 81.775, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 854.1654, 'train_samples_per_second': 242.595, 'train_steps_per_second': 6.069, 'total_flos': 8232792011744040.0, 'train_loss': 0.02249858943087244, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9476
  predict_f1                 =     0.4214
  predict_loss               =     0.1652
  predict_precision          =     0.4145
  predict_recall             =     0.4286
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    651.566
  predict_steps_per_second   =     81.446
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_base_11.json completed. F1: 0.4214046822742475
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert2 and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_31.json
01170939_tsa-bin_NorBERT_2 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6526.23 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7280.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7189.56 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7254.28 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7335.10 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7463.89 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6533.14 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6898.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7050.30 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7702.47 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7345.92 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7400.53 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7220.77 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170939_tsa-bin_NorBERT_2/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01170939_tsa-bin_NorBERT_2 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2149, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': 0.15321266651153564, 'eval_precision': 0.4207708779443255, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.43401435670900057, 'eval_accuracy': 0.9456496564502432, 'eval_runtime': 2.3062, 'eval_samples_per_second': 663.865, 'eval_steps_per_second': 83.254, 'epoch': 1.0}
{'loss': 0.1096, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1690293550491333, 'eval_precision': 0.4251497005988024, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.45343267695582756, 'eval_accuracy': 0.9442986180807534, 'eval_runtime': 2.2211, 'eval_samples_per_second': 689.293, 'eval_steps_per_second': 86.443, 'epoch': 2.0}
{'loss': 0.0502, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': 0.19508622586727142, 'eval_precision': 0.4380069524913094, 'eval_recall': 0.43101482326111745, 'eval_f1': 0.4344827586206897, 'eval_accuracy': 0.9465374816644793, 'eval_runtime': 2.217, 'eval_samples_per_second': 690.585, 'eval_steps_per_second': 86.605, 'epoch': 3.0}
{'loss': 0.0284, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2535393536090851, 'eval_precision': 0.39697542533081287, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.434108527131783, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 2.232, 'eval_samples_per_second': 685.945, 'eval_steps_per_second': 86.023, 'epoch': 4.0}
{'loss': 0.0154, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2573623061180115, 'eval_precision': 0.460166468489893, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.45052386495925495, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.2325, 'eval_samples_per_second': 685.771, 'eval_steps_per_second': 86.001, 'epoch': 5.0}
{'loss': 0.0085, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.28924936056137085, 'eval_precision': 0.44359255202628695, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4525139664804469, 'eval_accuracy': 0.9448004323322783, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.947, 'eval_steps_per_second': 86.65, 'epoch': 6.0}
{'loss': 0.0054, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': 0.32892853021621704, 'eval_precision': 0.4321608040201005, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.4594017094017094, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.2323, 'eval_samples_per_second': 685.832, 'eval_steps_per_second': 86.009, 'epoch': 7.0}
{'loss': 0.0041, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3440425395965576, 'eval_precision': 0.4395373291272345, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.45733041575492345, 'eval_accuracy': 0.9450706400061761, 'eval_runtime': 2.2249, 'eval_samples_per_second': 688.12, 'eval_steps_per_second': 86.296, 'epoch': 8.0}
{'loss': 0.0039, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': 0.33536234498023987, 'eval_precision': 0.45305164319248825, 'eval_recall': 0.44013683010262256, 'eval_f1': 0.4465008675534991, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.2366, 'eval_samples_per_second': 684.511, 'eval_steps_per_second': 85.843, 'epoch': 9.0}
{'loss': 0.0022, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.355684757232666, 'eval_precision': 0.4180327868852459, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.44036697247706424, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 2.2532, 'eval_samples_per_second': 679.49, 'eval_steps_per_second': 85.214, 'epoch': 10.0}
{'loss': 0.0024, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.37310791015625, 'eval_precision': 0.42006615214994486, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.4271300448430493, 'eval_accuracy': 0.9446460279471937, 'eval_runtime': 2.2461, 'eval_samples_per_second': 681.612, 'eval_steps_per_second': 85.48, 'epoch': 11.0}
{'loss': 0.0022, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': 0.35616937279701233, 'eval_precision': 0.4444444444444444, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.45890788747931605, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 2.2433, 'eval_samples_per_second': 682.48, 'eval_steps_per_second': 85.589, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': 0.3490453064441681, 'eval_precision': 0.43166175024582104, 'eval_recall': 0.500570125427594, 'eval_f1': 0.46356916578669477, 'eval_accuracy': 0.9432563884814329, 'eval_runtime': 2.2371, 'eval_samples_per_second': 684.372, 'eval_steps_per_second': 85.826, 'epoch': 13.0}
{'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': 0.3707679510116577, 'eval_precision': 0.44581005586592176, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4503386004514673, 'eval_accuracy': 0.9452250443912608, 'eval_runtime': 2.2463, 'eval_samples_per_second': 681.569, 'eval_steps_per_second': 85.474, 'epoch': 14.0}
{'loss': 0.0008, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': 0.3914788067340851, 'eval_precision': 0.5, 'eval_recall': 0.43101482326111745, 'eval_f1': 0.46295162278015917, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.2353, 'eval_samples_per_second': 684.933, 'eval_steps_per_second': 85.896, 'epoch': 15.0}
{'loss': 0.0005, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3968145549297333, 'eval_precision': 0.486284289276808, 'eval_recall': 0.44469783352337516, 'eval_f1': 0.4645622394282311, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.2294, 'eval_samples_per_second': 686.738, 'eval_steps_per_second': 86.123, 'epoch': 16.0}
{'loss': 0.0004, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': 0.4118403494358063, 'eval_precision': 0.4426751592356688, 'eval_recall': 0.475484606613455, 'eval_f1': 0.45849367784496975, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.2194, 'eval_samples_per_second': 689.829, 'eval_steps_per_second': 86.51, 'epoch': 17.0}
{'loss': 0.0003, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': 0.41882970929145813, 'eval_precision': 0.4563829787234043, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.47220693450742984, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.2229, 'eval_samples_per_second': 688.753, 'eval_steps_per_second': 86.375, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': 0.4222005009651184, 'eval_precision': 0.429198682766191, 'eval_recall': 0.44583808437856326, 'eval_f1': 0.43736017897091717, 'eval_accuracy': 0.9439126071180421, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.069, 'eval_steps_per_second': 86.666, 'epoch': 19.0}
{'loss': 0.0002, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': 0.42643243074417114, 'eval_precision': 0.4849624060150376, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.46208955223880593, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.165, 'eval_steps_per_second': 86.176, 'epoch': 20.0}
{'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': 0.4269183278083801, 'eval_precision': 0.4544392523364486, 'eval_recall': 0.443557582668187, 'eval_f1': 0.448932487016734, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2217, 'eval_samples_per_second': 689.11, 'eval_steps_per_second': 86.42, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4301638901233673, 'eval_precision': 0.44815668202764974, 'eval_recall': 0.443557582668187, 'eval_f1': 0.4458452722063037, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.2275, 'eval_samples_per_second': 687.308, 'eval_steps_per_second': 86.194, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': 0.4279792010784149, 'eval_precision': 0.4654586636466591, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.46704545454545454, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.072, 'eval_steps_per_second': 86.666, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.429461270570755, 'eval_precision': 0.46449359720605354, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4596774193548387, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 2.2197, 'eval_samples_per_second': 689.723, 'eval_steps_per_second': 86.497, 'epoch': 24.0}
{'train_runtime': 716.2622, 'train_samples_per_second': 289.302, 'train_steps_per_second': 4.523, 'train_loss': 0.018914492294928174, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0189
  train_runtime            = 0:11:56.26
  train_samples            =       8634
  train_samples_per_second =    289.302
  train_steps_per_second   =      4.523
[{'loss': 0.2149, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.15321266651153564, 'eval_precision': 0.4207708779443255, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.43401435670900057, 'eval_accuracy': 0.9456496564502432, 'eval_runtime': 2.3062, 'eval_samples_per_second': 663.865, 'eval_steps_per_second': 83.254, 'epoch': 1.0, 'step': 135}, {'loss': 0.1096, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.1690293550491333, 'eval_precision': 0.4251497005988024, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.45343267695582756, 'eval_accuracy': 0.9442986180807534, 'eval_runtime': 2.2211, 'eval_samples_per_second': 689.293, 'eval_steps_per_second': 86.443, 'epoch': 2.0, 'step': 270}, {'loss': 0.0502, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.19508622586727142, 'eval_precision': 0.4380069524913094, 'eval_recall': 0.43101482326111745, 'eval_f1': 0.4344827586206897, 'eval_accuracy': 0.9465374816644793, 'eval_runtime': 2.217, 'eval_samples_per_second': 690.585, 'eval_steps_per_second': 86.605, 'epoch': 3.0, 'step': 405}, {'loss': 0.0284, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2535393536090851, 'eval_precision': 0.39697542533081287, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.434108527131783, 'eval_accuracy': 0.9404771095499113, 'eval_runtime': 2.232, 'eval_samples_per_second': 685.945, 'eval_steps_per_second': 86.023, 'epoch': 4.0, 'step': 540}, {'loss': 0.0154, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2573623061180115, 'eval_precision': 0.460166468489893, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.45052386495925495, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.2325, 'eval_samples_per_second': 685.771, 'eval_steps_per_second': 86.001, 'epoch': 5.0, 'step': 675}, {'loss': 0.0085, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.28924936056137085, 'eval_precision': 0.44359255202628695, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4525139664804469, 'eval_accuracy': 0.9448004323322783, 'eval_runtime': 2.2158, 'eval_samples_per_second': 690.947, 'eval_steps_per_second': 86.65, 'epoch': 6.0, 'step': 810}, {'loss': 0.0054, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.32892853021621704, 'eval_precision': 0.4321608040201005, 'eval_recall': 0.4903078677309008, 'eval_f1': 0.4594017094017094, 'eval_accuracy': 0.9434107928665174, 'eval_runtime': 2.2323, 'eval_samples_per_second': 685.832, 'eval_steps_per_second': 86.009, 'epoch': 7.0, 'step': 945}, {'loss': 0.0041, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.3440425395965576, 'eval_precision': 0.4395373291272345, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.45733041575492345, 'eval_accuracy': 0.9450706400061761, 'eval_runtime': 2.2249, 'eval_samples_per_second': 688.12, 'eval_steps_per_second': 86.296, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0039, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.33536234498023987, 'eval_precision': 0.45305164319248825, 'eval_recall': 0.44013683010262256, 'eval_f1': 0.4465008675534991, 'eval_accuracy': 0.945611055353972, 'eval_runtime': 2.2366, 'eval_samples_per_second': 684.511, 'eval_steps_per_second': 85.843, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0022, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.355684757232666, 'eval_precision': 0.4180327868852459, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.44036697247706424, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 2.2532, 'eval_samples_per_second': 679.49, 'eval_steps_per_second': 85.214, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0024, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.37310791015625, 'eval_precision': 0.42006615214994486, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.4271300448430493, 'eval_accuracy': 0.9446460279471937, 'eval_runtime': 2.2461, 'eval_samples_per_second': 681.612, 'eval_steps_per_second': 85.48, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0022, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.35616937279701233, 'eval_precision': 0.4444444444444444, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.45890788747931605, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 2.2433, 'eval_samples_per_second': 682.48, 'eval_steps_per_second': 85.589, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0019, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3490453064441681, 'eval_precision': 0.43166175024582104, 'eval_recall': 0.500570125427594, 'eval_f1': 0.46356916578669477, 'eval_accuracy': 0.9432563884814329, 'eval_runtime': 2.2371, 'eval_samples_per_second': 684.372, 'eval_steps_per_second': 85.826, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0016, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3707679510116577, 'eval_precision': 0.44581005586592176, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4503386004514673, 'eval_accuracy': 0.9452250443912608, 'eval_runtime': 2.2463, 'eval_samples_per_second': 681.569, 'eval_steps_per_second': 85.474, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0008, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3914788067340851, 'eval_precision': 0.5, 'eval_recall': 0.43101482326111745, 'eval_f1': 0.46295162278015917, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.2353, 'eval_samples_per_second': 684.933, 'eval_steps_per_second': 85.896, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0005, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3968145549297333, 'eval_precision': 0.486284289276808, 'eval_recall': 0.44469783352337516, 'eval_f1': 0.4645622394282311, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.2294, 'eval_samples_per_second': 686.738, 'eval_steps_per_second': 86.123, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0004, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4118403494358063, 'eval_precision': 0.4426751592356688, 'eval_recall': 0.475484606613455, 'eval_f1': 0.45849367784496975, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.2194, 'eval_samples_per_second': 689.829, 'eval_steps_per_second': 86.51, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0003, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.41882970929145813, 'eval_precision': 0.4563829787234043, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.47220693450742984, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.2229, 'eval_samples_per_second': 688.753, 'eval_steps_per_second': 86.375, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0004, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.4222005009651184, 'eval_precision': 0.429198682766191, 'eval_recall': 0.44583808437856326, 'eval_f1': 0.43736017897091717, 'eval_accuracy': 0.9439126071180421, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.069, 'eval_steps_per_second': 86.666, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0002, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.42643243074417114, 'eval_precision': 0.4849624060150376, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.46208955223880593, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.228, 'eval_samples_per_second': 687.165, 'eval_steps_per_second': 86.176, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0002, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.4269183278083801, 'eval_precision': 0.4544392523364486, 'eval_recall': 0.443557582668187, 'eval_f1': 0.448932487016734, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2217, 'eval_samples_per_second': 689.11, 'eval_steps_per_second': 86.42, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4301638901233673, 'eval_precision': 0.44815668202764974, 'eval_recall': 0.443557582668187, 'eval_f1': 0.4458452722063037, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.2275, 'eval_samples_per_second': 687.308, 'eval_steps_per_second': 86.194, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0001, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4279792010784149, 'eval_precision': 0.4654586636466591, 'eval_recall': 0.46864310148232613, 'eval_f1': 0.46704545454545454, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.2154, 'eval_samples_per_second': 691.072, 'eval_steps_per_second': 86.666, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.429461270570755, 'eval_precision': 0.46449359720605354, 'eval_recall': 0.4549600912200684, 'eval_f1': 0.4596774193548387, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 2.2197, 'eval_samples_per_second': 689.723, 'eval_steps_per_second': 86.497, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 716.2622, 'train_samples_per_second': 289.302, 'train_steps_per_second': 4.523, 'total_flos': 7418622311681880.0, 'train_loss': 0.018914492294928174, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert2
***** predict metrics *****
  predict_accuracy           =     0.9451
  predict_f1                 =     0.4287
  predict_loss               =     0.1647
  predict_precision          =     0.4184
  predict_recall             =     0.4395
  predict_runtime            = 0:00:01.85
  predict_samples_per_second =    684.267
  predict_steps_per_second   =     85.533
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_2_31.json completed. F1: 0.42866622428666223
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_41.json
01170939_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5979.86 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6758.22 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6712.87 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6817.54 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6899.43 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7039.75 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7229.64 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6313.39 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6662.14 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7319.26 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6965.52 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7003.53 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6828.56 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 31568458183.1111, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 7457572352.0, 'eval_precision': 0.19230769230769232, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.19020172910662825, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 5.7925, 'eval_samples_per_second': 264.305, 'eval_steps_per_second': 33.146, 'epoch': 1.0}
{'loss': 16624219052.563, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 7125587456.0, 'eval_precision': 0.169052488070893, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.21160409556313994, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 5.7327, 'eval_samples_per_second': 267.063, 'eval_steps_per_second': 33.492, 'epoch': 2.0}
{'loss': 11995651185.7778, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 12403055616.0, 'eval_precision': 0.16012084592145015, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2093206951026856, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 3.0}
{'loss': 8865236278.9926, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 27881713664.0, 'eval_precision': 0.40553745928338764, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.3340040241448692, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 5.7422, 'eval_samples_per_second': 266.62, 'eval_steps_per_second': 33.436, 'epoch': 4.0}
{'loss': 6558776858.5481, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 16089638912.0, 'eval_precision': 0.2515151515151515, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2667380824852705, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 5.0}
{'loss': 4457228121.1259, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 16239413248.0, 'eval_precision': 0.23585598824393827, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.28686327077747986, 'eval_accuracy': 0.9294371960163669, 'eval_runtime': 5.7528, 'eval_samples_per_second': 266.13, 'eval_steps_per_second': 33.375, 'epoch': 6.0}
{'loss': 3332720655.1704, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 30687733760.0, 'eval_precision': 0.2978540772532189, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.3398628795298727, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 5.7236, 'eval_samples_per_second': 267.488, 'eval_steps_per_second': 33.545, 'epoch': 7.0}
{'loss': 2499312450.3704, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 29922764800.0, 'eval_precision': 0.3123262279888786, 'eval_recall': 0.38426453819840367, 'eval_f1': 0.3445807770961145, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 5.7374, 'eval_samples_per_second': 266.843, 'eval_steps_per_second': 33.464, 'epoch': 8.0}
{'loss': 2075569538.8444, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 37159579648.0, 'eval_precision': 0.3742138364779874, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.3899508465319498, 'eval_accuracy': 0.9293985949200957, 'eval_runtime': 5.8151, 'eval_samples_per_second': 263.281, 'eval_steps_per_second': 33.018, 'epoch': 9.0}
{'loss': 1529257437.8667, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 34946580480.0, 'eval_precision': 0.38854296388542964, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.37142857142857144, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.724, 'eval_samples_per_second': 267.472, 'eval_steps_per_second': 33.543, 'epoch': 10.0}
{'loss': 953377920.9481, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 9281379328.0, 'eval_precision': 0.17672727272727273, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.21580817051509768, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 5.7303, 'eval_samples_per_second': 267.177, 'eval_steps_per_second': 33.506, 'epoch': 11.0}
{'loss': 151141611.1407, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 1166507776.0, 'eval_precision': 0.18555133079847907, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.22262773722627735, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 5.7281, 'eval_samples_per_second': 267.281, 'eval_steps_per_second': 33.519, 'epoch': 12.0}
{'loss': 26869674.6667, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 666119040.0, 'eval_precision': 0.1825633383010432, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.22082018927444794, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 5.7479, 'eval_samples_per_second': 266.36, 'eval_steps_per_second': 33.404, 'epoch': 13.0}
{'loss': 12686032.5926, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 601066048.0, 'eval_precision': 0.2988826815642458, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3290620194771912, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 5.7197, 'eval_samples_per_second': 267.67, 'eval_steps_per_second': 33.568, 'epoch': 14.0}
{'loss': 7849430.2815, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 447010656.0, 'eval_precision': 0.17137592137592136, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.22275449101796407, 'eval_accuracy': 0.9308654365783988, 'eval_runtime': 5.7464, 'eval_samples_per_second': 266.426, 'eval_steps_per_second': 33.412, 'epoch': 15.0}
{'loss': 4724733.6296, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 455333824.0, 'eval_precision': 0.18442622950819673, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2306706535668518, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.742, 'eval_samples_per_second': 266.633, 'eval_steps_per_second': 33.438, 'epoch': 16.0}
{'loss': 2339817.2444, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 469490944.0, 'eval_precision': 0.18433818433818433, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2293103448275862, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 5.7328, 'eval_samples_per_second': 267.058, 'eval_steps_per_second': 33.491, 'epoch': 17.0}
{'loss': 2120511.5259, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 428408352.0, 'eval_precision': 0.18580375782881003, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.23076923076923078, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.8077, 'eval_samples_per_second': 263.615, 'eval_steps_per_second': 33.06, 'epoch': 18.0}
{'loss': 1131288.5333, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 425507392.0, 'eval_precision': 0.1912320483749055, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.22999999999999995, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 5.7025, 'eval_samples_per_second': 268.479, 'eval_steps_per_second': 33.669, 'epoch': 19.0}
{'loss': 611967.8222, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 477124544.0, 'eval_precision': 0.1787375415282392, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2258606213266163, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 5.7243, 'eval_samples_per_second': 267.455, 'eval_steps_per_second': 33.541, 'epoch': 20.0}
{'loss': 250842.0444, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 501672864.0, 'eval_precision': 0.39559164733178653, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.3921794134560092, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 5.7164, 'eval_samples_per_second': 267.828, 'eval_steps_per_second': 33.588, 'epoch': 21.0}
{'loss': 322330.6074, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 673415296.0, 'eval_precision': 0.46094750320102434, 'eval_recall': 0.4104903078677309, 'eval_f1': 0.43425814234016885, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 5.7044, 'eval_samples_per_second': 268.388, 'eval_steps_per_second': 33.658, 'epoch': 22.0}
{'loss': 5780909.5111, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 960833280.0, 'eval_precision': 0.4520725388601036, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.42328684050939963, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 5.6913, 'eval_samples_per_second': 269.006, 'eval_steps_per_second': 33.736, 'epoch': 23.0}
{'loss': 1533360.7111, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 1200668800.0, 'eval_precision': 0.46017699115044247, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.4364508393285371, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 24.0}
{'train_runtime': 2456.2752, 'train_samples_per_second': 84.362, 'train_steps_per_second': 1.319, 'train_loss': 3778215424.734568, 'epoch': 24.0}
***** train metrics *****
  epoch                    =            24.0
  train_loss               = 3778215424.7346
  train_runtime            =      0:40:56.27
  train_samples            =            8634
  train_samples_per_second =          84.362
  train_steps_per_second   =           1.319
[{'loss': 31568458183.1111, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 7457572352.0, 'eval_precision': 0.19230769230769232, 'eval_recall': 0.18814139110604333, 'eval_f1': 0.19020172910662825, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 5.7925, 'eval_samples_per_second': 264.305, 'eval_steps_per_second': 33.146, 'epoch': 1.0, 'step': 135}, {'loss': 16624219052.563, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 7125587456.0, 'eval_precision': 0.169052488070893, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.21160409556313994, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 5.7327, 'eval_samples_per_second': 267.063, 'eval_steps_per_second': 33.492, 'epoch': 2.0, 'step': 270}, {'loss': 11995651185.7778, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 12403055616.0, 'eval_precision': 0.16012084592145015, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2093206951026856, 'eval_accuracy': 0.9293213927275534, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 3.0, 'step': 405}, {'loss': 8865236278.9926, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 27881713664.0, 'eval_precision': 0.40553745928338764, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.3340040241448692, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 5.7422, 'eval_samples_per_second': 266.62, 'eval_steps_per_second': 33.436, 'epoch': 4.0, 'step': 540}, {'loss': 6558776858.5481, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 16089638912.0, 'eval_precision': 0.2515151515151515, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.2667380824852705, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 5.0, 'step': 675}, {'loss': 4457228121.1259, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 16239413248.0, 'eval_precision': 0.23585598824393827, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.28686327077747986, 'eval_accuracy': 0.9294371960163669, 'eval_runtime': 5.7528, 'eval_samples_per_second': 266.13, 'eval_steps_per_second': 33.375, 'epoch': 6.0, 'step': 810}, {'loss': 3332720655.1704, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 30687733760.0, 'eval_precision': 0.2978540772532189, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.3398628795298727, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 5.7236, 'eval_samples_per_second': 267.488, 'eval_steps_per_second': 33.545, 'epoch': 7.0, 'step': 945}, {'loss': 2499312450.3704, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 29922764800.0, 'eval_precision': 0.3123262279888786, 'eval_recall': 0.38426453819840367, 'eval_f1': 0.3445807770961145, 'eval_accuracy': 0.929475797112638, 'eval_runtime': 5.7374, 'eval_samples_per_second': 266.843, 'eval_steps_per_second': 33.464, 'epoch': 8.0, 'step': 1080}, {'loss': 2075569538.8444, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 37159579648.0, 'eval_precision': 0.3742138364779874, 'eval_recall': 0.4070695553021665, 'eval_f1': 0.3899508465319498, 'eval_accuracy': 0.9293985949200957, 'eval_runtime': 5.8151, 'eval_samples_per_second': 263.281, 'eval_steps_per_second': 33.018, 'epoch': 9.0, 'step': 1215}, {'loss': 1529257437.8667, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 34946580480.0, 'eval_precision': 0.38854296388542964, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.37142857142857144, 'eval_accuracy': 0.9351115571682236, 'eval_runtime': 5.724, 'eval_samples_per_second': 267.472, 'eval_steps_per_second': 33.543, 'epoch': 10.0, 'step': 1350}, {'loss': 953377920.9481, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 9281379328.0, 'eval_precision': 0.17672727272727273, 'eval_recall': 0.27708095781071834, 'eval_f1': 0.21580817051509768, 'eval_accuracy': 0.9328340924882267, 'eval_runtime': 5.7303, 'eval_samples_per_second': 267.177, 'eval_steps_per_second': 33.506, 'epoch': 11.0, 'step': 1485}, {'loss': 151141611.1407, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 1166507776.0, 'eval_precision': 0.18555133079847907, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.22262773722627735, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 5.7281, 'eval_samples_per_second': 267.281, 'eval_steps_per_second': 33.519, 'epoch': 12.0, 'step': 1620}, {'loss': 26869674.6667, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 666119040.0, 'eval_precision': 0.1825633383010432, 'eval_recall': 0.27936145952109465, 'eval_f1': 0.22082018927444794, 'eval_accuracy': 0.9354975681309349, 'eval_runtime': 5.7479, 'eval_samples_per_second': 266.36, 'eval_steps_per_second': 33.404, 'epoch': 13.0, 'step': 1755}, {'loss': 12686032.5926, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 601066048.0, 'eval_precision': 0.2988826815642458, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3290620194771912, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 5.7197, 'eval_samples_per_second': 267.67, 'eval_steps_per_second': 33.568, 'epoch': 14.0, 'step': 1890}, {'loss': 7849430.2815, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 447010656.0, 'eval_precision': 0.17137592137592136, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.22275449101796407, 'eval_accuracy': 0.9308654365783988, 'eval_runtime': 5.7464, 'eval_samples_per_second': 266.426, 'eval_steps_per_second': 33.412, 'epoch': 15.0, 'step': 2025}, {'loss': 4724733.6296, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 455333824.0, 'eval_precision': 0.18442622950819673, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2306706535668518, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 5.742, 'eval_samples_per_second': 266.633, 'eval_steps_per_second': 33.438, 'epoch': 16.0, 'step': 2160}, {'loss': 2339817.2444, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 469490944.0, 'eval_precision': 0.18433818433818433, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.2293103448275862, 'eval_accuracy': 0.9348799505905968, 'eval_runtime': 5.7328, 'eval_samples_per_second': 267.058, 'eval_steps_per_second': 33.491, 'epoch': 17.0, 'step': 2295}, {'loss': 2120511.5259, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 428408352.0, 'eval_precision': 0.18580375782881003, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.23076923076923078, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.8077, 'eval_samples_per_second': 263.615, 'eval_steps_per_second': 33.06, 'epoch': 18.0, 'step': 2430}, {'loss': 1131288.5333, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 425507392.0, 'eval_precision': 0.1912320483749055, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.22999999999999995, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 5.7025, 'eval_samples_per_second': 268.479, 'eval_steps_per_second': 33.669, 'epoch': 19.0, 'step': 2565}, {'loss': 611967.8222, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 477124544.0, 'eval_precision': 0.1787375415282392, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2258606213266163, 'eval_accuracy': 0.9340307264726319, 'eval_runtime': 5.7243, 'eval_samples_per_second': 267.455, 'eval_steps_per_second': 33.541, 'epoch': 20.0, 'step': 2700}, {'loss': 250842.0444, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 501672864.0, 'eval_precision': 0.39559164733178653, 'eval_recall': 0.3888255416191562, 'eval_f1': 0.3921794134560092, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 5.7164, 'eval_samples_per_second': 267.828, 'eval_steps_per_second': 33.588, 'epoch': 21.0, 'step': 2835}, {'loss': 322330.6074, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 673415296.0, 'eval_precision': 0.46094750320102434, 'eval_recall': 0.4104903078677309, 'eval_f1': 0.43425814234016885, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 5.7044, 'eval_samples_per_second': 268.388, 'eval_steps_per_second': 33.658, 'epoch': 22.0, 'step': 2970}, {'loss': 5780909.5111, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 960833280.0, 'eval_precision': 0.4520725388601036, 'eval_recall': 0.3979475484606613, 'eval_f1': 0.42328684050939963, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 5.6913, 'eval_samples_per_second': 269.006, 'eval_steps_per_second': 33.736, 'epoch': 23.0, 'step': 3105}, {'loss': 1533360.7111, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 1200668800.0, 'eval_precision': 0.46017699115044247, 'eval_recall': 0.4150513112884835, 'eval_f1': 0.4364508393285371, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2456.2752, 'train_samples_per_second': 84.362, 'train_steps_per_second': 1.319, 'total_flos': 2.705738887944774e+16, 'train_loss': 3778215424.734568, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =      0.9347
  predict_f1                 =      0.1852
  predict_loss               = 397229760.0
  predict_precision          =      0.1509
  predict_recall             =      0.2395
  predict_runtime            =  0:00:04.78
  predict_samples_per_second =       266.0
  predict_steps_per_second   =       33.25
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_41.json completed. F1: 0.18516570226196738
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_29.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_29.json
01170939_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6757.53 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7137.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6914.08 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6928.25 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6962.09 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7082.08 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7241.54 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7306.40 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6765.11 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7311.67 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6950.83 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6966.98 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6807.40 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0361, 'eval_samples_per_second': 504.261, 'eval_steps_per_second': 63.238, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.351, 'eval_steps_per_second': 64.629, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9773, 'eval_samples_per_second': 514.227, 'eval_steps_per_second': 64.488, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.381, 'eval_steps_per_second': 64.508, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.208, 'eval_steps_per_second': 63.859, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9844, 'eval_samples_per_second': 513.008, 'eval_steps_per_second': 64.335, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.329, 'eval_steps_per_second': 64.626, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9792, 'eval_samples_per_second': 513.903, 'eval_steps_per_second': 64.448, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9631, 'eval_samples_per_second': 516.686, 'eval_steps_per_second': 64.797, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.797, 'eval_steps_per_second': 63.18, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9862, 'eval_samples_per_second': 512.685, 'eval_steps_per_second': 64.295, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.914, 'eval_steps_per_second': 64.574, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9736, 'eval_samples_per_second': 514.868, 'eval_steps_per_second': 64.569, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9613, 'eval_samples_per_second': 516.995, 'eval_steps_per_second': 64.835, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.052, 'eval_steps_per_second': 64.466, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.961, 'eval_samples_per_second': 517.06, 'eval_steps_per_second': 64.844, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9693, 'eval_samples_per_second': 515.613, 'eval_steps_per_second': 64.662, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9837, 'eval_samples_per_second': 513.123, 'eval_steps_per_second': 64.35, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.248, 'eval_steps_per_second': 64.742, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.911, 'eval_steps_per_second': 64.574, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0441, 'eval_samples_per_second': 502.934, 'eval_steps_per_second': 63.072, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.948, 'eval_steps_per_second': 64.83, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9598, 'eval_samples_per_second': 517.267, 'eval_steps_per_second': 64.87, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9863, 'eval_samples_per_second': 512.676, 'eval_steps_per_second': 64.294, 'epoch': 24.0}
{'train_runtime': 838.4102, 'train_samples_per_second': 247.153, 'train_steps_per_second': 3.864, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:13:58.41
  train_samples            =       8634
  train_samples_per_second =    247.153
  train_steps_per_second   =      3.864
[{'loss': 0.0, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0361, 'eval_samples_per_second': 504.261, 'eval_steps_per_second': 63.238, 'epoch': 1.0, 'step': 135}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9708, 'eval_samples_per_second': 515.351, 'eval_steps_per_second': 64.629, 'epoch': 2.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9773, 'eval_samples_per_second': 514.227, 'eval_steps_per_second': 64.488, 'epoch': 3.0, 'step': 405}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9764, 'eval_samples_per_second': 514.381, 'eval_steps_per_second': 64.508, 'epoch': 4.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.208, 'eval_steps_per_second': 63.859, 'epoch': 5.0, 'step': 675}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9844, 'eval_samples_per_second': 513.008, 'eval_steps_per_second': 64.335, 'epoch': 6.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.329, 'eval_steps_per_second': 64.626, 'epoch': 7.0, 'step': 945}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9792, 'eval_samples_per_second': 513.903, 'eval_steps_per_second': 64.448, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9631, 'eval_samples_per_second': 516.686, 'eval_steps_per_second': 64.797, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0389, 'eval_samples_per_second': 503.797, 'eval_steps_per_second': 63.18, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9862, 'eval_samples_per_second': 512.685, 'eval_steps_per_second': 64.295, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.914, 'eval_steps_per_second': 64.574, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9736, 'eval_samples_per_second': 514.868, 'eval_steps_per_second': 64.569, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9613, 'eval_samples_per_second': 516.995, 'eval_steps_per_second': 64.835, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.052, 'eval_steps_per_second': 64.466, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.961, 'eval_samples_per_second': 517.06, 'eval_steps_per_second': 64.844, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9693, 'eval_samples_per_second': 515.613, 'eval_steps_per_second': 64.662, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9837, 'eval_samples_per_second': 513.123, 'eval_steps_per_second': 64.35, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.248, 'eval_steps_per_second': 64.742, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9733, 'eval_samples_per_second': 514.911, 'eval_steps_per_second': 64.574, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 2835}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0441, 'eval_samples_per_second': 502.934, 'eval_steps_per_second': 63.072, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9616, 'eval_samples_per_second': 516.948, 'eval_steps_per_second': 64.83, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9598, 'eval_samples_per_second': 517.267, 'eval_steps_per_second': 64.87, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9863, 'eval_samples_per_second': 512.676, 'eval_steps_per_second': 64.294, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 838.4102, 'train_samples_per_second': 247.153, 'train_steps_per_second': 3.864, 'total_flos': 7641716291195580.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.48
  predict_samples_per_second =    511.849
  predict_steps_per_second   =     63.981
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_29.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_05.json
01170939_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7007.85 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7396.67 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7142.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7190.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7239.07 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7338.19 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6410.30 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6760.63 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6972.89 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7527.84 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7142.95 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7226.75 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7047.04 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01170939_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2042, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.135049507021904, 'eval_precision': 0.5258724428399518, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5117096018735363, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.297, 'eval_steps_per_second': 41.171, 'epoch': 1.0}
{'loss': 0.1159, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.1422519087791443, 'eval_precision': 0.5615384615384615, 'eval_recall': 0.4161915621436716, 'eval_f1': 0.47806155861165683, 'eval_accuracy': 0.9542577009187061, 'eval_runtime': 4.6541, 'eval_samples_per_second': 328.957, 'eval_steps_per_second': 41.254, 'epoch': 2.0}
{'loss': 0.0621, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.1651373952627182, 'eval_precision': 0.453537936913896, 'eval_recall': 0.6066134549600912, 'eval_f1': 0.5190243902439023, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 4.6563, 'eval_samples_per_second': 328.804, 'eval_steps_per_second': 41.235, 'epoch': 3.0}
{'loss': 0.0322, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.19477492570877075, 'eval_precision': 0.49700598802395207, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5300691857370942, 'eval_accuracy': 0.9515942252759978, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.054, 'eval_steps_per_second': 41.266, 'epoch': 4.0}
{'loss': 0.0174, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.21661052107810974, 'eval_precision': 0.5326576576576577, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5359773371104817, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.234, 'eval_steps_per_second': 41.289, 'epoch': 5.0}
{'loss': 0.0123, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.25594714283943176, 'eval_precision': 0.561091340450771, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.55, 'eval_accuracy': 0.9564579634061607, 'eval_runtime': 4.6661, 'eval_samples_per_second': 328.11, 'eval_steps_per_second': 41.148, 'epoch': 6.0}
{'loss': 0.0079, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2471221387386322, 'eval_precision': 0.5442583732057417, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5312317571511967, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.145, 'eval_steps_per_second': 41.152, 'epoch': 7.0}
{'loss': 0.0045, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3035476505756378, 'eval_precision': 0.46278026905829595, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5180722891566265, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.84, 'eval_steps_per_second': 41.239, 'epoch': 8.0}
{'loss': 0.0036, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.27924418449401855, 'eval_precision': 0.46291331546023234, 'eval_recall': 0.5906499429874572, 'eval_f1': 0.5190380761523047, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 9.0}
{'loss': 0.0025, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2824852168560028, 'eval_precision': 0.5034550839091807, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5396825396825397, 'eval_accuracy': 0.9537558866671814, 'eval_runtime': 4.6466, 'eval_samples_per_second': 329.487, 'eval_steps_per_second': 41.32, 'epoch': 10.0}
{'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3114489018917084, 'eval_precision': 0.5019011406844106, 'eval_recall': 0.6020524515393386, 'eval_f1': 0.5474339035769828, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.525, 'eval_steps_per_second': 41.325, 'epoch': 11.0}
{'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3032473623752594, 'eval_precision': 0.49178743961352656, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5324267782426778, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.431, 'eval_steps_per_second': 41.313, 'epoch': 12.0}
{'loss': 0.0017, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3087786138057709, 'eval_precision': 0.5303186022610483, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5578378378378378, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.165, 'eval_steps_per_second': 41.28, 'epoch': 13.0}
{'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.34995150566101074, 'eval_precision': 0.5765432098765432, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5536455245998816, 'eval_accuracy': 0.9566895699837875, 'eval_runtime': 4.6532, 'eval_samples_per_second': 329.019, 'eval_steps_per_second': 41.262, 'epoch': 14.0}
{'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.35914865136146545, 'eval_precision': 0.5741857659831122, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5580304806565064, 'eval_accuracy': 0.9568825754651432, 'eval_runtime': 4.6535, 'eval_samples_per_second': 328.998, 'eval_steps_per_second': 41.259, 'epoch': 15.0}
{'loss': 0.0012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.35499370098114014, 'eval_precision': 0.5514018691588785, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5447201384881708, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.247, 'eval_steps_per_second': 41.29, 'epoch': 16.0}
{'loss': 0.0006, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.36207616329193115, 'eval_precision': 0.5408734602463606, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5457627118644068, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6575, 'eval_samples_per_second': 328.714, 'eval_steps_per_second': 41.223, 'epoch': 17.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.37290528416633606, 'eval_precision': 0.5234215885947047, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5529854760623991, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6469, 'eval_samples_per_second': 329.466, 'eval_steps_per_second': 41.318, 'epoch': 18.0}
{'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.38217049837112427, 'eval_precision': 0.5421286031042128, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5497470489038785, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.363, 'eval_steps_per_second': 41.305, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.37996813654899597, 'eval_precision': 0.5482406356413166, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5494880546075085, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6453, 'eval_samples_per_second': 329.583, 'eval_steps_per_second': 41.332, 'epoch': 20.0}
{'loss': 0.0001, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.38354918360710144, 'eval_precision': 0.5456521739130434, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5587089593767389, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6493, 'eval_samples_per_second': 329.295, 'eval_steps_per_second': 41.296, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.38351064920425415, 'eval_precision': 0.5558035714285714, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5617597292724196, 'eval_accuracy': 0.955685941480738, 'eval_runtime': 4.6479, 'eval_samples_per_second': 329.399, 'eval_steps_per_second': 41.309, 'epoch': 22.0}
{'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.3884521424770355, 'eval_precision': 0.5568053993250843, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5605889014722537, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6435, 'eval_samples_per_second': 329.707, 'eval_steps_per_second': 41.348, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3883037865161896, 'eval_precision': 0.5600907029478458, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5616827743035816, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 24.0}
{'train_runtime': 2092.9411, 'train_samples_per_second': 99.007, 'train_steps_per_second': 2.477, 'train_loss': 0.019779334566268472, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0198
  train_runtime            = 0:34:52.94
  train_samples            =       8634
  train_samples_per_second =     99.007
  train_steps_per_second   =      2.477
[{'loss': 0.2042, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.135049507021904, 'eval_precision': 0.5258724428399518, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5117096018735363, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6635, 'eval_samples_per_second': 328.297, 'eval_steps_per_second': 41.171, 'epoch': 1.0, 'step': 216}, {'loss': 0.1159, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.1422519087791443, 'eval_precision': 0.5615384615384615, 'eval_recall': 0.4161915621436716, 'eval_f1': 0.47806155861165683, 'eval_accuracy': 0.9542577009187061, 'eval_runtime': 4.6541, 'eval_samples_per_second': 328.957, 'eval_steps_per_second': 41.254, 'epoch': 2.0, 'step': 432}, {'loss': 0.0621, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.1651373952627182, 'eval_precision': 0.453537936913896, 'eval_recall': 0.6066134549600912, 'eval_f1': 0.5190243902439023, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 4.6563, 'eval_samples_per_second': 328.804, 'eval_steps_per_second': 41.235, 'epoch': 3.0, 'step': 648}, {'loss': 0.0322, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.19477492570877075, 'eval_precision': 0.49700598802395207, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5300691857370942, 'eval_accuracy': 0.9515942252759978, 'eval_runtime': 4.6527, 'eval_samples_per_second': 329.054, 'eval_steps_per_second': 41.266, 'epoch': 4.0, 'step': 864}, {'loss': 0.0174, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.21661052107810974, 'eval_precision': 0.5326576576576577, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5359773371104817, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.6502, 'eval_samples_per_second': 329.234, 'eval_steps_per_second': 41.289, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0123, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.25594714283943176, 'eval_precision': 0.561091340450771, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.55, 'eval_accuracy': 0.9564579634061607, 'eval_runtime': 4.6661, 'eval_samples_per_second': 328.11, 'eval_steps_per_second': 41.148, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0079, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.2471221387386322, 'eval_precision': 0.5442583732057417, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5312317571511967, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6656, 'eval_samples_per_second': 328.145, 'eval_steps_per_second': 41.152, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0045, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.3035476505756378, 'eval_precision': 0.46278026905829595, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5180722891566265, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 4.6558, 'eval_samples_per_second': 328.84, 'eval_steps_per_second': 41.239, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0036, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.27924418449401855, 'eval_precision': 0.46291331546023234, 'eval_recall': 0.5906499429874572, 'eval_f1': 0.5190380761523047, 'eval_accuracy': 0.9504361923878638, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0025, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.2824852168560028, 'eval_precision': 0.5034550839091807, 'eval_recall': 0.5815279361459521, 'eval_f1': 0.5396825396825397, 'eval_accuracy': 0.9537558866671814, 'eval_runtime': 4.6466, 'eval_samples_per_second': 329.487, 'eval_steps_per_second': 41.32, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3114489018917084, 'eval_precision': 0.5019011406844106, 'eval_recall': 0.6020524515393386, 'eval_f1': 0.5474339035769828, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 4.6461, 'eval_samples_per_second': 329.525, 'eval_steps_per_second': 41.325, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3032473623752594, 'eval_precision': 0.49178743961352656, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5324267782426778, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 4.6474, 'eval_samples_per_second': 329.431, 'eval_steps_per_second': 41.313, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0017, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.3087786138057709, 'eval_precision': 0.5303186022610483, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5578378378378378, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.165, 'eval_steps_per_second': 41.28, 'epoch': 13.0, 'step': 2808}, {'loss': 0.001, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.34995150566101074, 'eval_precision': 0.5765432098765432, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5536455245998816, 'eval_accuracy': 0.9566895699837875, 'eval_runtime': 4.6532, 'eval_samples_per_second': 329.019, 'eval_steps_per_second': 41.262, 'epoch': 14.0, 'step': 3024}, {'loss': 0.001, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.35914865136146545, 'eval_precision': 0.5741857659831122, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5580304806565064, 'eval_accuracy': 0.9568825754651432, 'eval_runtime': 4.6535, 'eval_samples_per_second': 328.998, 'eval_steps_per_second': 41.259, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0012, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.35499370098114014, 'eval_precision': 0.5514018691588785, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5447201384881708, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.247, 'eval_steps_per_second': 41.29, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0006, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.36207616329193115, 'eval_precision': 0.5408734602463606, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5457627118644068, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6575, 'eval_samples_per_second': 328.714, 'eval_steps_per_second': 41.223, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.37290528416633606, 'eval_precision': 0.5234215885947047, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5529854760623991, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6469, 'eval_samples_per_second': 329.466, 'eval_steps_per_second': 41.318, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0004, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.38217049837112427, 'eval_precision': 0.5421286031042128, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5497470489038785, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6484, 'eval_samples_per_second': 329.363, 'eval_steps_per_second': 41.305, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.37996813654899597, 'eval_precision': 0.5482406356413166, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5494880546075085, 'eval_accuracy': 0.9556087392881958, 'eval_runtime': 4.6453, 'eval_samples_per_second': 329.583, 'eval_steps_per_second': 41.332, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0001, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.38354918360710144, 'eval_precision': 0.5456521739130434, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5587089593767389, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6493, 'eval_samples_per_second': 329.295, 'eval_steps_per_second': 41.296, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.38351064920425415, 'eval_precision': 0.5558035714285714, 'eval_recall': 0.5678449258836944, 'eval_f1': 0.5617597292724196, 'eval_accuracy': 0.955685941480738, 'eval_runtime': 4.6479, 'eval_samples_per_second': 329.399, 'eval_steps_per_second': 41.309, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0001, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.3884521424770355, 'eval_precision': 0.5568053993250843, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5605889014722537, 'eval_accuracy': 0.9554929359993823, 'eval_runtime': 4.6435, 'eval_samples_per_second': 329.707, 'eval_steps_per_second': 41.348, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3883037865161896, 'eval_precision': 0.5600907029478458, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5616827743035816, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 2092.9411, 'train_samples_per_second': 99.007, 'train_steps_per_second': 2.477, 'total_flos': 2.388271956564535e+16, 'train_loss': 0.019779334566268472, 'epoch': 24.0, 'step': 5184}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9516
  predict_f1                 =     0.4712
  predict_loss               =     0.1488
  predict_precision          =     0.5008
  predict_recall             =     0.4449
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =     325.31
  predict_steps_per_second   =     40.664
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NB-BERT_large_05.json completed. F1: 0.47118155619596536
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_14.json
01170939_tsa-bin_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6769.05 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7176.87 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6962.21 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6933.12 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7004.99 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7129.55 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7308.67 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7385.35 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6816.03 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7391.65 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7010.39 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7024.42 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6875.09 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 287787254.5185, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9806, 'eval_samples_per_second': 513.658, 'eval_steps_per_second': 64.417, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9513, 'eval_samples_per_second': 518.762, 'eval_steps_per_second': 65.057, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.324, 'eval_steps_per_second': 64.626, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9515, 'eval_samples_per_second': 518.717, 'eval_steps_per_second': 65.051, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.62, 'eval_steps_per_second': 64.788, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9559, 'eval_samples_per_second': 517.951, 'eval_steps_per_second': 64.955, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9502, 'eval_samples_per_second': 518.949, 'eval_steps_per_second': 65.08, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9589, 'eval_samples_per_second': 517.427, 'eval_steps_per_second': 64.89, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9509, 'eval_samples_per_second': 518.819, 'eval_steps_per_second': 65.064, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9602, 'eval_samples_per_second': 517.203, 'eval_steps_per_second': 64.862, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0468, 'eval_samples_per_second': 502.49, 'eval_steps_per_second': 63.016, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.949, 'eval_samples_per_second': 519.158, 'eval_steps_per_second': 65.107, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9444, 'eval_samples_per_second': 519.965, 'eval_steps_per_second': 65.208, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.115, 'eval_steps_per_second': 64.976, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9503, 'eval_samples_per_second': 518.922, 'eval_steps_per_second': 65.077, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9807, 'eval_samples_per_second': 513.643, 'eval_steps_per_second': 64.415, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9533, 'eval_samples_per_second': 518.404, 'eval_steps_per_second': 65.012, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.94, 'eval_samples_per_second': 520.753, 'eval_steps_per_second': 65.307, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9506, 'eval_samples_per_second': 518.874, 'eval_steps_per_second': 65.071, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.569, 'eval_steps_per_second': 65.409, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9341, 'eval_samples_per_second': 521.798, 'eval_steps_per_second': 65.438, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9404, 'eval_samples_per_second': 520.677, 'eval_steps_per_second': 65.297, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9516, 'eval_samples_per_second': 518.708, 'eval_steps_per_second': 65.05, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0257, 'eval_samples_per_second': 505.998, 'eval_steps_per_second': 63.456, 'epoch': 24.0}
{'train_runtime': 451.7352, 'train_samples_per_second': 458.711, 'train_steps_per_second': 11.476, 'train_loss': 11991135.604938272, 'epoch': 24.0}
***** train metrics *****
  epoch                    =          24.0
  train_loss               = 11991135.6049
  train_runtime            =    0:07:31.73
  train_samples            =          8634
  train_samples_per_second =       458.711
  train_steps_per_second   =        11.476
[{'loss': 287787254.5185, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9806, 'eval_samples_per_second': 513.658, 'eval_steps_per_second': 64.417, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9513, 'eval_samples_per_second': 518.762, 'eval_steps_per_second': 65.057, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9709, 'eval_samples_per_second': 515.324, 'eval_steps_per_second': 64.626, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9515, 'eval_samples_per_second': 518.717, 'eval_steps_per_second': 65.051, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.62, 'eval_steps_per_second': 64.788, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9559, 'eval_samples_per_second': 517.951, 'eval_steps_per_second': 64.955, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9502, 'eval_samples_per_second': 518.949, 'eval_steps_per_second': 65.08, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9589, 'eval_samples_per_second': 517.427, 'eval_steps_per_second': 64.89, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9509, 'eval_samples_per_second': 518.819, 'eval_steps_per_second': 65.064, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9602, 'eval_samples_per_second': 517.203, 'eval_steps_per_second': 64.862, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0468, 'eval_samples_per_second': 502.49, 'eval_steps_per_second': 63.016, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.949, 'eval_samples_per_second': 519.158, 'eval_steps_per_second': 65.107, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9444, 'eval_samples_per_second': 519.965, 'eval_steps_per_second': 65.208, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.115, 'eval_steps_per_second': 64.976, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9503, 'eval_samples_per_second': 518.922, 'eval_steps_per_second': 65.077, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9807, 'eval_samples_per_second': 513.643, 'eval_steps_per_second': 64.415, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9533, 'eval_samples_per_second': 518.404, 'eval_steps_per_second': 65.012, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.94, 'eval_samples_per_second': 520.753, 'eval_steps_per_second': 65.307, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9506, 'eval_samples_per_second': 518.874, 'eval_steps_per_second': 65.071, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9354, 'eval_samples_per_second': 521.569, 'eval_steps_per_second': 65.409, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9341, 'eval_samples_per_second': 521.798, 'eval_steps_per_second': 65.438, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9404, 'eval_samples_per_second': 520.677, 'eval_steps_per_second': 65.297, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9516, 'eval_samples_per_second': 518.708, 'eval_steps_per_second': 65.05, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0257, 'eval_samples_per_second': 505.998, 'eval_steps_per_second': 63.456, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 451.7352, 'train_samples_per_second': 458.711, 'train_steps_per_second': 11.476, 'total_flos': 1753308428228868.0, 'train_loss': 11991135.604938272, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.43
  predict_samples_per_second =    522.352
  predict_steps_per_second   =     65.294
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_14.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_15.json
01170939_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6259.64 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6853.58 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6799.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6914.12 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7005.92 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7160.35 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7337.07 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7413.99 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6782.36 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7397.04 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7045.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7050.66 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6889.50 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3771, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0}
{'eval_loss': 0.2044718861579895, 'eval_precision': 0.32903225806451614, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.17186183656276327, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 2.9961, 'eval_samples_per_second': 510.996, 'eval_steps_per_second': 64.083, 'epoch': 1.0}
{'loss': 0.1761, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0}
{'eval_loss': 0.17212623357772827, 'eval_precision': 0.4660633484162896, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.4012987012987014, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 3.004, 'eval_samples_per_second': 509.651, 'eval_steps_per_second': 63.914, 'epoch': 2.0}
{'loss': 0.0968, 'learning_rate': 8.75e-05, 'epoch': 3.0}
{'eval_loss': 0.20712020993232727, 'eval_precision': 0.48817802503477054, 'eval_recall': 0.40022805017103763, 'eval_f1': 0.43984962406015043, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.9805, 'eval_samples_per_second': 513.674, 'eval_steps_per_second': 64.419, 'epoch': 3.0}
{'loss': 0.0549, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0}
{'eval_loss': 0.24614065885543823, 'eval_precision': 0.4557416267942584, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.4448336252189142, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.9916, 'eval_samples_per_second': 511.76, 'eval_steps_per_second': 64.179, 'epoch': 4.0}
{'loss': 0.0307, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0}
{'eval_loss': 0.23083986341953278, 'eval_precision': 0.43392070484581496, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.4414565826330532, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 3.1414, 'eval_samples_per_second': 487.368, 'eval_steps_per_second': 61.12, 'epoch': 5.0}
{'loss': 0.0168, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0}
{'eval_loss': 0.2795187830924988, 'eval_precision': 0.45139664804469276, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4559819413092551, 'eval_accuracy': 0.9456882575465143, 'eval_runtime': 2.9869, 'eval_samples_per_second': 512.579, 'eval_steps_per_second': 64.282, 'epoch': 6.0}
{'loss': 0.0098, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0}
{'eval_loss': 0.2868368923664093, 'eval_precision': 0.43290891283055827, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4657534246575342, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.9918, 'eval_samples_per_second': 511.724, 'eval_steps_per_second': 64.174, 'epoch': 7.0}
{'loss': 0.0067, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0}
{'eval_loss': 0.2838580012321472, 'eval_precision': 0.47754654983570644, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4871508379888268, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.775, 'eval_steps_per_second': 64.181, 'epoch': 8.0}
{'loss': 0.0047, 'learning_rate': 6.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3103218376636505, 'eval_precision': 0.47734806629834253, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.48484848484848486, 'eval_accuracy': 0.9471550992048174, 'eval_runtime': 2.969, 'eval_samples_per_second': 515.663, 'eval_steps_per_second': 64.668, 'epoch': 9.0}
{'loss': 0.0032, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0}
{'eval_loss': 0.3260164260864258, 'eval_precision': 0.4718066743383199, 'eval_recall': 0.467502850627138, 'eval_f1': 0.46964490263459335, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.9638, 'eval_samples_per_second': 516.573, 'eval_steps_per_second': 64.783, 'epoch': 10.0}
{'loss': 0.0026, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0}
{'eval_loss': 0.3484839200973511, 'eval_precision': 0.4431578947368421, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4608648056923919, 'eval_accuracy': 0.9435265961553309, 'eval_runtime': 3.0556, 'eval_samples_per_second': 501.053, 'eval_steps_per_second': 62.836, 'epoch': 11.0}
{'loss': 0.002, 'learning_rate': 5e-05, 'epoch': 12.0}
{'eval_loss': 0.3457656800746918, 'eval_precision': 0.47150837988826816, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4762979683972912, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.9687, 'eval_samples_per_second': 515.72, 'eval_steps_per_second': 64.676, 'epoch': 12.0}
{'loss': 0.0029, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0}
{'eval_loss': 0.3383844196796417, 'eval_precision': 0.4546485260770975, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4559408754974418, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.9796, 'eval_samples_per_second': 513.834, 'eval_steps_per_second': 64.439, 'epoch': 13.0}
{'loss': 0.0029, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0}
{'eval_loss': 0.3417314291000366, 'eval_precision': 0.4696261682242991, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.463935372186959, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.9823, 'eval_samples_per_second': 513.355, 'eval_steps_per_second': 64.379, 'epoch': 14.0}
{'loss': 0.0007, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0}
{'eval_loss': 0.37268856167793274, 'eval_precision': 0.4619450317124736, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.4794295117937466, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9675, 'eval_samples_per_second': 515.914, 'eval_steps_per_second': 64.7, 'epoch': 15.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0}
{'eval_loss': 0.3773469626903534, 'eval_precision': 0.5, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.4732732732732733, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.932, 'eval_steps_per_second': 64.577, 'epoch': 16.0}
{'loss': 0.0006, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0}
{'eval_loss': 0.3968777656555176, 'eval_precision': 0.4468980021030494, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4649890590809628, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.9667, 'eval_samples_per_second': 516.066, 'eval_steps_per_second': 64.719, 'epoch': 17.0}
{'loss': 0.0005, 'learning_rate': 2.5e-05, 'epoch': 18.0}
{'eval_loss': 0.39425212144851685, 'eval_precision': 0.4687168610816543, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4857142857142857, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.9794, 'eval_samples_per_second': 513.857, 'eval_steps_per_second': 64.442, 'epoch': 18.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0}
{'eval_loss': 0.4014247953891754, 'eval_precision': 0.4774881516587678, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.4683323649041255, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.612, 'eval_steps_per_second': 64.787, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0}
{'eval_loss': 0.4069540798664093, 'eval_precision': 0.47292817679558014, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4803591470258137, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.9768, 'eval_samples_per_second': 514.308, 'eval_steps_per_second': 64.498, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0}
{'eval_loss': 0.4152679741382599, 'eval_precision': 0.5006180469715699, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4804270462633452, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.77, 'eval_steps_per_second': 64.431, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0}
{'eval_loss': 0.4183002710342407, 'eval_precision': 0.4745011086474501, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4811691961776279, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.9804, 'eval_samples_per_second': 513.687, 'eval_steps_per_second': 64.421, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0}
{'eval_loss': 0.41645172238349915, 'eval_precision': 0.48834498834498835, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4829971181556196, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9825, 'eval_samples_per_second': 513.32, 'eval_steps_per_second': 64.375, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4179731607437134, 'eval_precision': 0.4762979683972912, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.47872943845717525, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 3.0335, 'eval_samples_per_second': 504.702, 'eval_steps_per_second': 63.294, 'epoch': 24.0}
{'train_runtime': 863.7775, 'train_samples_per_second': 239.895, 'train_steps_per_second': 6.002, 'train_loss': 0.03300249896567016, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.033
  train_runtime            = 0:14:23.77
  train_samples            =       8634
  train_samples_per_second =    239.895
  train_steps_per_second   =      6.002
[{'loss': 0.3771, 'learning_rate': 9.583333333333334e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.2044718861579895, 'eval_precision': 0.32903225806451614, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.17186183656276327, 'eval_accuracy': 0.9392804755655061, 'eval_runtime': 2.9961, 'eval_samples_per_second': 510.996, 'eval_steps_per_second': 64.083, 'epoch': 1.0, 'step': 216}, {'loss': 0.1761, 'learning_rate': 9.166666666666667e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.17212623357772827, 'eval_precision': 0.4660633484162896, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.4012987012987014, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 3.004, 'eval_samples_per_second': 509.651, 'eval_steps_per_second': 63.914, 'epoch': 2.0, 'step': 432}, {'loss': 0.0968, 'learning_rate': 8.75e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.20712020993232727, 'eval_precision': 0.48817802503477054, 'eval_recall': 0.40022805017103763, 'eval_f1': 0.43984962406015043, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 2.9805, 'eval_samples_per_second': 513.674, 'eval_steps_per_second': 64.419, 'epoch': 3.0, 'step': 648}, {'loss': 0.0549, 'learning_rate': 8.333333333333334e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.24614065885543823, 'eval_precision': 0.4557416267942584, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.4448336252189142, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.9916, 'eval_samples_per_second': 511.76, 'eval_steps_per_second': 64.179, 'epoch': 4.0, 'step': 864}, {'loss': 0.0307, 'learning_rate': 7.916666666666666e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.23083986341953278, 'eval_precision': 0.43392070484581496, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.4414565826330532, 'eval_accuracy': 0.9441442136956689, 'eval_runtime': 3.1414, 'eval_samples_per_second': 487.368, 'eval_steps_per_second': 61.12, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0168, 'learning_rate': 7.500000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.2795187830924988, 'eval_precision': 0.45139664804469276, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4559819413092551, 'eval_accuracy': 0.9456882575465143, 'eval_runtime': 2.9869, 'eval_samples_per_second': 512.579, 'eval_steps_per_second': 64.282, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0098, 'learning_rate': 7.083333333333334e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.2868368923664093, 'eval_precision': 0.43290891283055827, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4657534246575342, 'eval_accuracy': 0.943294989577704, 'eval_runtime': 2.9918, 'eval_samples_per_second': 511.724, 'eval_steps_per_second': 64.174, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0067, 'learning_rate': 6.666666666666667e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.2838580012321472, 'eval_precision': 0.47754654983570644, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4871508379888268, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.9915, 'eval_samples_per_second': 511.775, 'eval_steps_per_second': 64.181, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0047, 'learning_rate': 6.25e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.3103218376636505, 'eval_precision': 0.47734806629834253, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.48484848484848486, 'eval_accuracy': 0.9471550992048174, 'eval_runtime': 2.969, 'eval_samples_per_second': 515.663, 'eval_steps_per_second': 64.668, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0032, 'learning_rate': 5.833333333333334e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.3260164260864258, 'eval_precision': 0.4718066743383199, 'eval_recall': 0.467502850627138, 'eval_f1': 0.46964490263459335, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.9638, 'eval_samples_per_second': 516.573, 'eval_steps_per_second': 64.783, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0026, 'learning_rate': 5.4166666666666664e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3484839200973511, 'eval_precision': 0.4431578947368421, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4608648056923919, 'eval_accuracy': 0.9435265961553309, 'eval_runtime': 3.0556, 'eval_samples_per_second': 501.053, 'eval_steps_per_second': 62.836, 'epoch': 11.0, 'step': 2376}, {'loss': 0.002, 'learning_rate': 5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.3457656800746918, 'eval_precision': 0.47150837988826816, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.4762979683972912, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.9687, 'eval_samples_per_second': 515.72, 'eval_steps_per_second': 64.676, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0029, 'learning_rate': 4.5833333333333334e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.3383844196796417, 'eval_precision': 0.4546485260770975, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4559408754974418, 'eval_accuracy': 0.9462672739905813, 'eval_runtime': 2.9796, 'eval_samples_per_second': 513.834, 'eval_steps_per_second': 64.439, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0029, 'learning_rate': 4.166666666666667e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.3417314291000366, 'eval_precision': 0.4696261682242991, 'eval_recall': 0.4583808437856328, 'eval_f1': 0.463935372186959, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.9823, 'eval_samples_per_second': 513.355, 'eval_steps_per_second': 64.379, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0007, 'learning_rate': 3.7500000000000003e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.37268856167793274, 'eval_precision': 0.4619450317124736, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.4794295117937466, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9675, 'eval_samples_per_second': 515.914, 'eval_steps_per_second': 64.7, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0007, 'learning_rate': 3.3333333333333335e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.3773469626903534, 'eval_precision': 0.5, 'eval_recall': 0.4492588369441277, 'eval_f1': 0.4732732732732733, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.9732, 'eval_samples_per_second': 514.932, 'eval_steps_per_second': 64.577, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0006, 'learning_rate': 2.916666666666667e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.3968777656555176, 'eval_precision': 0.4468980021030494, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4649890590809628, 'eval_accuracy': 0.9449162356210916, 'eval_runtime': 2.9667, 'eval_samples_per_second': 516.066, 'eval_steps_per_second': 64.719, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0005, 'learning_rate': 2.5e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.39425212144851685, 'eval_precision': 0.4687168610816543, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4857142857142857, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.9794, 'eval_samples_per_second': 513.857, 'eval_steps_per_second': 64.442, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0008, 'learning_rate': 2.0833333333333336e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.4014247953891754, 'eval_precision': 0.4774881516587678, 'eval_recall': 0.45952109464082097, 'eval_f1': 0.4683323649041255, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 2.9635, 'eval_samples_per_second': 516.612, 'eval_steps_per_second': 64.787, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.4069540798664093, 'eval_precision': 0.47292817679558014, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4803591470258137, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.9768, 'eval_samples_per_second': 514.308, 'eval_steps_per_second': 64.498, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.4152679741382599, 'eval_precision': 0.5006180469715699, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4804270462633452, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.9799, 'eval_samples_per_second': 513.77, 'eval_steps_per_second': 64.431, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0003, 'learning_rate': 8.333333333333334e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.4183002710342407, 'eval_precision': 0.4745011086474501, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.4811691961776279, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.9804, 'eval_samples_per_second': 513.687, 'eval_steps_per_second': 64.421, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.41645172238349915, 'eval_precision': 0.48834498834498835, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4829971181556196, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.9825, 'eval_samples_per_second': 513.32, 'eval_steps_per_second': 64.375, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.4179731607437134, 'eval_precision': 0.4762979683972912, 'eval_recall': 0.4811858608893957, 'eval_f1': 0.47872943845717525, 'eval_accuracy': 0.9463444761831236, 'eval_runtime': 3.0335, 'eval_samples_per_second': 504.702, 'eval_steps_per_second': 63.294, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 863.7775, 'train_samples_per_second': 239.895, 'train_steps_per_second': 6.002, 'total_flos': 7004249699478276.0, 'train_loss': 0.03300249896567016, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9466
  predict_f1                 =     0.3728
  predict_loss               =     0.1831
  predict_precision          =     0.4524
  predict_recall             =      0.317
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    513.028
  predict_steps_per_second   =     64.129
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_base_15.json completed. F1: 0.3728
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_07.json
01170939_tsa-bin_NorBERT_3_small Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6392.25 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7028.84 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6939.39 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6943.48 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7008.61 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7150.95 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7318.87 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 7405.73 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6802.97 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7444.38 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7067.72 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7086.66 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6920.60 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01170939_tsa-bin_NorBERT_3_small/checkpoint-216 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_3_small Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.8084, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9756, 'eval_samples_per_second': 514.515, 'eval_steps_per_second': 64.524, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9949, 'eval_samples_per_second': 511.194, 'eval_steps_per_second': 64.108, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0019, 'eval_samples_per_second': 510.011, 'eval_steps_per_second': 63.96, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9402, 'eval_samples_per_second': 520.704, 'eval_steps_per_second': 65.301, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9904, 'eval_samples_per_second': 511.973, 'eval_steps_per_second': 64.206, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9604, 'eval_samples_per_second': 517.159, 'eval_steps_per_second': 64.856, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.963, 'eval_samples_per_second': 516.703, 'eval_steps_per_second': 64.799, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.138, 'eval_steps_per_second': 64.979, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0013, 'eval_samples_per_second': 510.106, 'eval_steps_per_second': 63.972, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.315, 'eval_steps_per_second': 64.123, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0681, 'eval_samples_per_second': 499.007, 'eval_steps_per_second': 62.58, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.992, 'eval_samples_per_second': 511.701, 'eval_steps_per_second': 64.172, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9652, 'eval_samples_per_second': 516.325, 'eval_steps_per_second': 64.751, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9844, 'eval_samples_per_second': 512.993, 'eval_steps_per_second': 64.334, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9558, 'eval_samples_per_second': 517.957, 'eval_steps_per_second': 64.956, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0077, 'eval_samples_per_second': 509.018, 'eval_steps_per_second': 63.835, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9989, 'eval_samples_per_second': 510.526, 'eval_steps_per_second': 64.024, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9637, 'eval_samples_per_second': 516.577, 'eval_steps_per_second': 64.783, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9757, 'eval_samples_per_second': 514.502, 'eval_steps_per_second': 64.523, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9847, 'eval_samples_per_second': 512.941, 'eval_steps_per_second': 64.327, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.326, 'eval_steps_per_second': 64.125, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.955, 'eval_samples_per_second': 518.11, 'eval_steps_per_second': 64.975, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9484, 'eval_samples_per_second': 519.261, 'eval_steps_per_second': 65.12, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0307, 'eval_samples_per_second': 505.17, 'eval_steps_per_second': 63.353, 'epoch': 24.0}
{'train_runtime': 455.4761, 'train_samples_per_second': 454.944, 'train_steps_per_second': 11.381, 'train_loss': 0.03368516027191539, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0337
  train_runtime            = 0:07:35.47
  train_samples            =       8634
  train_samples_per_second =    454.944
  train_steps_per_second   =     11.381
[{'loss': 0.8084, 'learning_rate': 7.666666666666668e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9756, 'eval_samples_per_second': 514.515, 'eval_steps_per_second': 64.524, 'epoch': 1.0, 'step': 216}, {'loss': 0.0, 'learning_rate': 7.333333333333333e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9949, 'eval_samples_per_second': 511.194, 'eval_steps_per_second': 64.108, 'epoch': 2.0, 'step': 432}, {'loss': 0.0, 'learning_rate': 7.000000000000001e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0019, 'eval_samples_per_second': 510.011, 'eval_steps_per_second': 63.96, 'epoch': 3.0, 'step': 648}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9402, 'eval_samples_per_second': 520.704, 'eval_steps_per_second': 65.301, 'epoch': 4.0, 'step': 864}, {'loss': 0.0, 'learning_rate': 6.333333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9904, 'eval_samples_per_second': 511.973, 'eval_steps_per_second': 64.206, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 6.000000000000001e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9604, 'eval_samples_per_second': 517.159, 'eval_steps_per_second': 64.856, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0, 'learning_rate': 5.666666666666668e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.963, 'eval_samples_per_second': 516.703, 'eval_steps_per_second': 64.799, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0, 'learning_rate': 5.333333333333333e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.138, 'eval_steps_per_second': 64.979, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0, 'learning_rate': 5e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0013, 'eval_samples_per_second': 510.106, 'eval_steps_per_second': 63.972, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0, 'learning_rate': 4.666666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.315, 'eval_steps_per_second': 64.123, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.3333333333333334e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0681, 'eval_samples_per_second': 499.007, 'eval_steps_per_second': 62.58, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0, 'learning_rate': 4e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.992, 'eval_samples_per_second': 511.701, 'eval_steps_per_second': 64.172, 'epoch': 12.0, 'step': 2592}, {'loss': 0.0, 'learning_rate': 3.6666666666666666e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9652, 'eval_samples_per_second': 516.325, 'eval_steps_per_second': 64.751, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9844, 'eval_samples_per_second': 512.993, 'eval_steps_per_second': 64.334, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0, 'learning_rate': 3.0000000000000004e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9558, 'eval_samples_per_second': 517.957, 'eval_steps_per_second': 64.956, 'epoch': 15.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 2.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0077, 'eval_samples_per_second': 509.018, 'eval_steps_per_second': 63.835, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0, 'learning_rate': 2.3333333333333336e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9989, 'eval_samples_per_second': 510.526, 'eval_steps_per_second': 64.024, 'epoch': 17.0, 'step': 3672}, {'loss': 0.0, 'learning_rate': 2e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9637, 'eval_samples_per_second': 516.577, 'eval_steps_per_second': 64.783, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9757, 'eval_samples_per_second': 514.502, 'eval_steps_per_second': 64.523, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 20.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9847, 'eval_samples_per_second': 512.941, 'eval_steps_per_second': 64.327, 'epoch': 20.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 21.0, 'step': 4536}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9942, 'eval_samples_per_second': 511.326, 'eval_steps_per_second': 64.125, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.955, 'eval_samples_per_second': 518.11, 'eval_steps_per_second': 64.975, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9484, 'eval_samples_per_second': 519.261, 'eval_steps_per_second': 65.12, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0307, 'eval_samples_per_second': 505.17, 'eval_steps_per_second': 63.353, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 455.4761, 'train_samples_per_second': 454.944, 'train_steps_per_second': 11.381, 'total_flos': 1753308428228868.0, 'train_loss': 0.03368516027191539, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert3-small
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.49
  predict_samples_per_second =    510.382
  predict_steps_per_second   =     63.798
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_small_07.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_02.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at ltg/norbert and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_02.json
01170939_tsa-bin_NorBERT_1 Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6627.15 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7294.95 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7170.70 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7254.74 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7322.22 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7464.21 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6527.90 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6907.83 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7056.67 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7736.61 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7395.96 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7413.40 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7223.29 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01170939_tsa-bin_NorBERT_1 Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2699, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19949428737163544, 'eval_precision': 0.37142857142857144, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.31055076310550767, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.2874, 'eval_samples_per_second': 669.325, 'eval_steps_per_second': 83.939, 'epoch': 1.0}
{'loss': 0.201, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.18707044422626495, 'eval_precision': 0.4788732394366197, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.18715596330275228, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 2.2785, 'eval_samples_per_second': 671.933, 'eval_steps_per_second': 84.266, 'epoch': 2.0}
{'loss': 0.1541, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.16475695371627808, 'eval_precision': 0.48205928237129486, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.40711462450592883, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.2732, 'eval_samples_per_second': 673.495, 'eval_steps_per_second': 84.462, 'epoch': 3.0}
{'loss': 0.1007, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.18919037282466888, 'eval_precision': 0.3916279069767442, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.43135245901639346, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 2.2975, 'eval_samples_per_second': 666.365, 'eval_steps_per_second': 83.568, 'epoch': 4.0}
{'loss': 0.0697, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2073383778333664, 'eval_precision': 0.41676234213547647, 'eval_recall': 0.41391106043329534, 'eval_f1': 0.41533180778032036, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 2.2752, 'eval_samples_per_second': 672.918, 'eval_steps_per_second': 84.389, 'epoch': 5.0}
{'loss': 0.0483, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.22470860183238983, 'eval_precision': 0.4831763122476447, 'eval_recall': 0.40935005701254273, 'eval_f1': 0.44320987654320987, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.278, 'eval_samples_per_second': 672.077, 'eval_steps_per_second': 84.284, 'epoch': 6.0}
{'loss': 0.0341, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.247710719704628, 'eval_precision': 0.4221525600835946, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.440567066521265, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2758, 'eval_samples_per_second': 672.738, 'eval_steps_per_second': 84.367, 'epoch': 7.0}
{'loss': 0.0241, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.26458051800727844, 'eval_precision': 0.38594969644405897, 'eval_recall': 0.507411630558723, 'eval_f1': 0.43842364532019706, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 2.2837, 'eval_samples_per_second': 670.412, 'eval_steps_per_second': 84.075, 'epoch': 8.0}
{'loss': 0.0151, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.2828298509120941, 'eval_precision': 0.4551569506726457, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.45901639344262296, 'eval_accuracy': 0.9449548367173628, 'eval_runtime': 2.2793, 'eval_samples_per_second': 671.702, 'eval_steps_per_second': 84.237, 'epoch': 9.0}
{'loss': 0.0111, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2945699095726013, 'eval_precision': 0.4593908629441624, 'eval_recall': 0.4127708095781072, 'eval_f1': 0.4348348348348348, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2737, 'eval_samples_per_second': 673.349, 'eval_steps_per_second': 84.443, 'epoch': 10.0}
{'loss': 0.0089, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3021617829799652, 'eval_precision': 0.461361014994233, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.45871559633027525, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.3532, 'eval_samples_per_second': 650.609, 'eval_steps_per_second': 81.592, 'epoch': 11.0}
{'loss': 0.0065, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.29624032974243164, 'eval_precision': 0.4164278892072588, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.45322245322245325, 'eval_accuracy': 0.9440670115031267, 'eval_runtime': 2.2783, 'eval_samples_per_second': 671.983, 'eval_steps_per_second': 84.272, 'epoch': 12.0}
{'loss': 0.005, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3194983899593353, 'eval_precision': 0.4934210526315789, 'eval_recall': 0.427594070695553, 'eval_f1': 0.45815516188149047, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.2792, 'eval_samples_per_second': 671.741, 'eval_steps_per_second': 84.242, 'epoch': 13.0}
{'loss': 0.0035, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.33776402473449707, 'eval_precision': 0.472289156626506, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.4592852958406561, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.2722, 'eval_samples_per_second': 673.809, 'eval_steps_per_second': 84.501, 'epoch': 14.0}
{'loss': 0.0037, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.33416369557380676, 'eval_precision': 0.44994617868675996, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4629014396456257, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.2687, 'eval_samples_per_second': 674.84, 'eval_steps_per_second': 84.63, 'epoch': 15.0}
{'loss': 0.003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.34606724977493286, 'eval_precision': 0.4854111405835544, 'eval_recall': 0.41733181299885974, 'eval_f1': 0.4488044144696505, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2882, 'eval_samples_per_second': 669.09, 'eval_steps_per_second': 83.909, 'epoch': 16.0}
{'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.35170120000839233, 'eval_precision': 0.440337909186906, 'eval_recall': 0.475484606613455, 'eval_f1': 0.45723684210526316, 'eval_accuracy': 0.9454566509688875, 'eval_runtime': 2.2761, 'eval_samples_per_second': 672.635, 'eval_steps_per_second': 84.354, 'epoch': 17.0}
{'loss': 0.002, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3515644967556, 'eval_precision': 0.45042194092827004, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4679452054794521, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.4799, 'eval_samples_per_second': 617.368, 'eval_steps_per_second': 77.423, 'epoch': 18.0}
{'loss': 0.0013, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.35360419750213623, 'eval_precision': 0.4623287671232877, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4620650313747861, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.2736, 'eval_samples_per_second': 673.395, 'eval_steps_per_second': 84.449, 'epoch': 19.0}
{'loss': 0.0013, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3528653681278229, 'eval_precision': 0.4519956850053937, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.46452328159645234, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.3514, 'eval_samples_per_second': 651.109, 'eval_steps_per_second': 81.654, 'epoch': 20.0}
{'loss': 0.001, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.36421263217926025, 'eval_precision': 0.4844961240310077, 'eval_recall': 0.427594070695553, 'eval_f1': 0.4542701393095093, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2842, 'eval_samples_per_second': 670.246, 'eval_steps_per_second': 84.054, 'epoch': 21.0}
{'loss': 0.0008, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3631710708141327, 'eval_precision': 0.4645760743321719, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.46029919447640966, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.2761, 'eval_samples_per_second': 672.632, 'eval_steps_per_second': 84.354, 'epoch': 22.0}
{'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.37178415060043335, 'eval_precision': 0.4842370744010088, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.45988023952095813, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.2708, 'eval_samples_per_second': 674.211, 'eval_steps_per_second': 84.552, 'epoch': 23.0}
{'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3685002028942108, 'eval_precision': 0.4694835680751174, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.46269519953730476, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.2782, 'eval_samples_per_second': 672.017, 'eval_steps_per_second': 84.276, 'epoch': 24.0}
{'train_runtime': 780.7516, 'train_samples_per_second': 265.406, 'train_steps_per_second': 6.64, 'train_loss': 0.0403823031394248, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0404
  train_runtime            = 0:13:00.75
  train_samples            =       8634
  train_samples_per_second =    265.406
  train_steps_per_second   =       6.64
[{'loss': 0.2699, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 216}, {'eval_loss': 0.19949428737163544, 'eval_precision': 0.37142857142857144, 'eval_recall': 0.2668187001140251, 'eval_f1': 0.31055076310550767, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 2.2874, 'eval_samples_per_second': 669.325, 'eval_steps_per_second': 83.939, 'epoch': 1.0, 'step': 216}, {'loss': 0.201, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 432}, {'eval_loss': 0.18707044422626495, 'eval_precision': 0.4788732394366197, 'eval_recall': 0.11630558722919042, 'eval_f1': 0.18715596330275228, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 2.2785, 'eval_samples_per_second': 671.933, 'eval_steps_per_second': 84.266, 'epoch': 2.0, 'step': 432}, {'loss': 0.1541, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 648}, {'eval_loss': 0.16475695371627808, 'eval_precision': 0.48205928237129486, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.40711462450592883, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.2732, 'eval_samples_per_second': 673.495, 'eval_steps_per_second': 84.462, 'epoch': 3.0, 'step': 648}, {'loss': 0.1007, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 864}, {'eval_loss': 0.18919037282466888, 'eval_precision': 0.3916279069767442, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.43135245901639346, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 2.2975, 'eval_samples_per_second': 666.365, 'eval_steps_per_second': 83.568, 'epoch': 4.0, 'step': 864}, {'loss': 0.0697, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1080}, {'eval_loss': 0.2073383778333664, 'eval_precision': 0.41676234213547647, 'eval_recall': 0.41391106043329534, 'eval_f1': 0.41533180778032036, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 2.2752, 'eval_samples_per_second': 672.918, 'eval_steps_per_second': 84.389, 'epoch': 5.0, 'step': 1080}, {'loss': 0.0483, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1296}, {'eval_loss': 0.22470860183238983, 'eval_precision': 0.4831763122476447, 'eval_recall': 0.40935005701254273, 'eval_f1': 0.44320987654320987, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.278, 'eval_samples_per_second': 672.077, 'eval_steps_per_second': 84.284, 'epoch': 6.0, 'step': 1296}, {'loss': 0.0341, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1512}, {'eval_loss': 0.247710719704628, 'eval_precision': 0.4221525600835946, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.440567066521265, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 2.2758, 'eval_samples_per_second': 672.738, 'eval_steps_per_second': 84.367, 'epoch': 7.0, 'step': 1512}, {'loss': 0.0241, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1728}, {'eval_loss': 0.26458051800727844, 'eval_precision': 0.38594969644405897, 'eval_recall': 0.507411630558723, 'eval_f1': 0.43842364532019706, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 2.2837, 'eval_samples_per_second': 670.412, 'eval_steps_per_second': 84.075, 'epoch': 8.0, 'step': 1728}, {'loss': 0.0151, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1944}, {'eval_loss': 0.2828298509120941, 'eval_precision': 0.4551569506726457, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.45901639344262296, 'eval_accuracy': 0.9449548367173628, 'eval_runtime': 2.2793, 'eval_samples_per_second': 671.702, 'eval_steps_per_second': 84.237, 'epoch': 9.0, 'step': 1944}, {'loss': 0.0111, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2160}, {'eval_loss': 0.2945699095726013, 'eval_precision': 0.4593908629441624, 'eval_recall': 0.4127708095781072, 'eval_f1': 0.4348348348348348, 'eval_accuracy': 0.9458040608353278, 'eval_runtime': 2.2737, 'eval_samples_per_second': 673.349, 'eval_steps_per_second': 84.443, 'epoch': 10.0, 'step': 2160}, {'loss': 0.0089, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2376}, {'eval_loss': 0.3021617829799652, 'eval_precision': 0.461361014994233, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.45871559633027525, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.3532, 'eval_samples_per_second': 650.609, 'eval_steps_per_second': 81.592, 'epoch': 11.0, 'step': 2376}, {'loss': 0.0065, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 2592}, {'eval_loss': 0.29624032974243164, 'eval_precision': 0.4164278892072588, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.45322245322245325, 'eval_accuracy': 0.9440670115031267, 'eval_runtime': 2.2783, 'eval_samples_per_second': 671.983, 'eval_steps_per_second': 84.272, 'epoch': 12.0, 'step': 2592}, {'loss': 0.005, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 2808}, {'eval_loss': 0.3194983899593353, 'eval_precision': 0.4934210526315789, 'eval_recall': 0.427594070695553, 'eval_f1': 0.45815516188149047, 'eval_accuracy': 0.9485833397668494, 'eval_runtime': 2.2792, 'eval_samples_per_second': 671.741, 'eval_steps_per_second': 84.242, 'epoch': 13.0, 'step': 2808}, {'loss': 0.0035, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3024}, {'eval_loss': 0.33776402473449707, 'eval_precision': 0.472289156626506, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.4592852958406561, 'eval_accuracy': 0.9473867057824442, 'eval_runtime': 2.2722, 'eval_samples_per_second': 673.809, 'eval_steps_per_second': 84.501, 'epoch': 14.0, 'step': 3024}, {'loss': 0.0037, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 3240}, {'eval_loss': 0.33416369557380676, 'eval_precision': 0.44994617868675996, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4629014396456257, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.2687, 'eval_samples_per_second': 674.84, 'eval_steps_per_second': 84.63, 'epoch': 15.0, 'step': 3240}, {'loss': 0.003, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 3456}, {'eval_loss': 0.34606724977493286, 'eval_precision': 0.4854111405835544, 'eval_recall': 0.41733181299885974, 'eval_f1': 0.4488044144696505, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2882, 'eval_samples_per_second': 669.09, 'eval_steps_per_second': 83.909, 'epoch': 16.0, 'step': 3456}, {'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 3672}, {'eval_loss': 0.35170120000839233, 'eval_precision': 0.440337909186906, 'eval_recall': 0.475484606613455, 'eval_f1': 0.45723684210526316, 'eval_accuracy': 0.9454566509688875, 'eval_runtime': 2.2761, 'eval_samples_per_second': 672.635, 'eval_steps_per_second': 84.354, 'epoch': 17.0, 'step': 3672}, {'loss': 0.002, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 3888}, {'eval_loss': 0.3515644967556, 'eval_precision': 0.45042194092827004, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.4679452054794521, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.4799, 'eval_samples_per_second': 617.368, 'eval_steps_per_second': 77.423, 'epoch': 18.0, 'step': 3888}, {'loss': 0.0013, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 4104}, {'eval_loss': 0.35360419750213623, 'eval_precision': 0.4623287671232877, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4620650313747861, 'eval_accuracy': 0.9469234926271907, 'eval_runtime': 2.2736, 'eval_samples_per_second': 673.395, 'eval_steps_per_second': 84.449, 'epoch': 19.0, 'step': 4104}, {'loss': 0.0013, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 4320}, {'eval_loss': 0.3528653681278229, 'eval_precision': 0.4519956850053937, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.46452328159645234, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.3514, 'eval_samples_per_second': 651.109, 'eval_steps_per_second': 81.654, 'epoch': 20.0, 'step': 4320}, {'loss': 0.001, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 4536}, {'eval_loss': 0.36421263217926025, 'eval_precision': 0.4844961240310077, 'eval_recall': 0.427594070695553, 'eval_f1': 0.4542701393095093, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.2842, 'eval_samples_per_second': 670.246, 'eval_steps_per_second': 84.054, 'epoch': 21.0, 'step': 4536}, {'loss': 0.0008, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 4752}, {'eval_loss': 0.3631710708141327, 'eval_precision': 0.4645760743321719, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.46029919447640966, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.2761, 'eval_samples_per_second': 672.632, 'eval_steps_per_second': 84.354, 'epoch': 22.0, 'step': 4752}, {'loss': 0.0008, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 4968}, {'eval_loss': 0.37178415060043335, 'eval_precision': 0.4842370744010088, 'eval_recall': 0.4378563283922463, 'eval_f1': 0.45988023952095813, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.2708, 'eval_samples_per_second': 674.211, 'eval_steps_per_second': 84.552, 'epoch': 23.0, 'step': 4968}, {'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 5184}, {'eval_loss': 0.3685002028942108, 'eval_precision': 0.4694835680751174, 'eval_recall': 0.45610034207525657, 'eval_f1': 0.46269519953730476, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.2782, 'eval_samples_per_second': 672.017, 'eval_steps_per_second': 84.276, 'epoch': 24.0, 'step': 5184}, {'train_runtime': 780.7516, 'train_samples_per_second': 265.406, 'train_steps_per_second': 6.64, 'total_flos': 7390962891524160.0, 'train_loss': 0.0403823031394248, 'epoch': 24.0, 'step': 5184}]

Evaluation, ltg/norbert
***** predict metrics *****
  predict_accuracy           =     0.9483
  predict_f1                 =     0.4028
  predict_loss               =     0.1667
  predict_precision          =     0.4802
  predict_recall             =     0.3469
  predict_runtime            = 0:00:01.90
  predict_samples_per_second =    666.209
  predict_steps_per_second   =     83.276
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_1_02.json completed. F1: 0.4028436018957346
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01170939_tsa-bin_NorBERT_3_large_34.json
01170939_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6403.78 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6948.84 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6827.97 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6854.51 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6916.16 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7040.77 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7214.03 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6301.07 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6698.22 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7267.78 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6910.19 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6940.55 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6780.41 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
slurmstepd: error: *** JOB 409574 ON gpu-7 CANCELLED AT 2024-01-17T19:13:43 DUE TO TIME LIMIT ***

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
409574       tsa_norbe+          1                                             09:00:06      0:0 
409574.batch      batch          1        1   08:49:42          0   08:49:42   09:00:07     0:15 
409574.exte+     extern          1        1   00:00:00          0   00:00:00   09:00:06      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
409574                                                                           
409574.batch   4304864K          0   4304864K        0              0          0 
409574.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
409574                                                                                                
409574.batch    14302.38M               0      14302.38M  1399811.30M                0    1399811.30M 
409574.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 409574 completed at Wed Jan 17 19:13:45 CET 2024
