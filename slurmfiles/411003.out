Starting job 411003 on gpu-8 at Sat Jan 20 15:53:36 CET 2024

/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_14.json
01191518_tsa-bin_NB-BERT_base_14.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_45.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_45.json
01191518_tsa-intensity_NorBERT_3_large_45.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_06.json
01191518_tsa-bin_NB-BERT_base_06.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_39.json
01191518_tsa-intensity_NB-BERT_large_39.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_34.json
01191518_tsa-intensity_NB-BERT_base_34.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_00.json
01191518_tsa-bin_NorBERT_3_base_00.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_20.json
01191518_tsa-intensity_NorBERT_3_base_20.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_24.json
01191518_tsa-bin_NorBERT_3_base_24.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_29.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_29.json
01191518_tsa-intensity_NorBERT_3_large_29.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_25.json
01191518_tsa-intensity_NorBERT_3_large_25.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_41.json
01191518_tsa-bin_NorBERT_3_large_41.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_26.json
01191518_tsa-bin_NB-BERT_base_26.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_45.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_45.json
01191518_tsa-bin_NorBERT_3_large_45.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_26.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_26.json
01191518_tsa-intensity_NB-BERT_base_26.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_24.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_24.json
01191518_tsa-intensity_NorBERT_3_base_24.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_31.json
01191518_tsa-bin_NB-BERT_large_31.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_35.json
01191518_tsa-intensity_NB-BERT_large_35.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_20.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_20.json
01191518_tsa-bin_NorBERT_3_base_20.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_09.json
01191518_tsa-intensity_NorBERT_3_large_09.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_40.json
01191518_tsa-intensity_NorBERT_3_base_40.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_43.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_43.json
01191518_tsa-intensity_NB-BERT_large_43.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_32.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_32.json
01191518_tsa-intensity_NorBERT_3_base_32.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_23.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_23.json
01191518_tsa-intensity_NB-BERT_large_23.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_18.json
01191518_tsa-intensity_NB-BERT_base_18.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_13.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_13.json
01191518_tsa-bin_NorBERT_3_large_13.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_18.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_18.json
01191518_tsa-bin_NB-BERT_base_18.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_36.json
01191518_tsa-bin_NorBERT_3_base_36.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_04.json
01191518_tsa-intensity_NorBERT_3_base_04.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_19.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_19.json
01191518_tsa-bin_NB-BERT_large_19.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_07.json
01191518_tsa-bin_NB-BERT_large_07.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_44.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_44.json
01191518_tsa-bin_NorBERT_3_base_44.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_30.json
01191518_tsa-intensity_NB-BERT_base_30.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_07.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_07.json
01191518_tsa-intensity_NB-BERT_large_07.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_03.json
01191518_tsa-bin_NB-BERT_large_03.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_46.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_46.json
01191518_tsa-bin_NB-BERT_base_46.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_17.json
01191518_tsa-intensity_NorBERT_3_large_17.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_36.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_36.json
01191518_tsa-intensity_NorBERT_3_base_36.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_35.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_35.json
01191518_tsa-bin_NB-BERT_large_35.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_22.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_22.json
01191518_tsa-intensity_NB-BERT_base_22.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_39.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_39.json
01191518_tsa-bin_NB-BERT_large_39.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_37.json
01191518_tsa-intensity_NorBERT_3_large_37.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_33.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_33.json
01191518_tsa-intensity_NorBERT_3_large_33.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_01.json
01191518_tsa-bin_NorBERT_3_large_01.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_08.json
01191518_tsa-intensity_NorBERT_3_base_08.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_42.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_42.json
01191518_tsa-bin_NB-BERT_base_42.json seems to be completed. Exiting
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_41.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_41.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5454.97 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6475.73 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6609.27 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6808.72 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6936.02 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7088.93 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7272.65 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6373.57 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6639.00 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7311.11 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6986.67 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7083.37 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6888.39 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NorBERT_3_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.1521, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.36508703231811523, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7444, 'eval_samples_per_second': 266.52, 'eval_steps_per_second': 33.424, 'epoch': 1.0}
{'loss': 0.2989, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.25177329778671265, 'eval_precision': 0.1, 'eval_recall': 0.07297605473204105, 'eval_f1': 0.08437705998681609, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 5.7017, 'eval_samples_per_second': 268.517, 'eval_steps_per_second': 33.674, 'epoch': 2.0}
{'loss': 0.2357, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.24211151897907257, 'eval_precision': 0.13636363636363635, 'eval_recall': 0.11288483466362599, 'eval_f1': 0.12351840299438553, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 5.7069, 'eval_samples_per_second': 268.271, 'eval_steps_per_second': 33.643, 'epoch': 3.0}
{'loss': 0.1706, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2469778060913086, 'eval_precision': 0.169392523364486, 'eval_recall': 0.1653363740022805, 'eval_f1': 0.1673398730525101, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 5.6989, 'eval_samples_per_second': 268.648, 'eval_steps_per_second': 33.691, 'epoch': 4.0}
{'loss': 0.1269, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.24137064814567566, 'eval_precision': 0.2348008385744235, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2446750409612234, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.212, 'eval_steps_per_second': 33.761, 'epoch': 5.0}
{'loss': 0.0981, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2603031396865845, 'eval_precision': 0.2641509433962264, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2752594210813763, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 5.6879, 'eval_samples_per_second': 269.166, 'eval_steps_per_second': 33.756, 'epoch': 6.0}
{'loss': 0.08, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2521844804286957, 'eval_precision': 0.2915766738660907, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.29950083194675536, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 5.6924, 'eval_samples_per_second': 268.955, 'eval_steps_per_second': 33.729, 'epoch': 7.0}
{'loss': 0.0649, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2861781120300293, 'eval_precision': 0.2938034188034188, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.30336458907887476, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 5.6946, 'eval_samples_per_second': 268.849, 'eval_steps_per_second': 33.716, 'epoch': 8.0}
{'loss': 0.0517, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.2872024476528168, 'eval_precision': 0.28446601941747574, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3072889355007866, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 5.8019, 'eval_samples_per_second': 263.878, 'eval_steps_per_second': 33.092, 'epoch': 9.0}
{'loss': 0.0398, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3022644817829132, 'eval_precision': 0.3084886128364389, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.32338578404774826, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 5.7136, 'eval_samples_per_second': 267.956, 'eval_steps_per_second': 33.604, 'epoch': 10.0}
{'loss': 0.0337, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.310432106256485, 'eval_precision': 0.3200419727177335, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33333333333333337, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.6912, 'eval_samples_per_second': 269.01, 'eval_steps_per_second': 33.736, 'epoch': 11.0}
{'loss': 0.0279, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.31940758228302, 'eval_precision': 0.29429735234215887, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31091984938138784, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 5.7133, 'eval_samples_per_second': 267.971, 'eval_steps_per_second': 33.606, 'epoch': 12.0}
{'loss': 0.0239, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.32966238260269165, 'eval_precision': 0.31354166666666666, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3277082199237888, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.945, 'eval_steps_per_second': 33.603, 'epoch': 13.0}
{'loss': 0.0212, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.340069979429245, 'eval_precision': 0.31702344546381245, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.33476856835306784, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 5.7028, 'eval_samples_per_second': 268.465, 'eval_steps_per_second': 33.668, 'epoch': 14.0}
{'loss': 0.0192, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3419956564903259, 'eval_precision': 0.33476856835306784, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.34440753045404204, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 5.6933, 'eval_samples_per_second': 268.913, 'eval_steps_per_second': 33.724, 'epoch': 15.0}
{'loss': 0.0175, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.3551599383354187, 'eval_precision': 0.3121852970795569, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3315508021390374, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.6791, 'eval_samples_per_second': 269.586, 'eval_steps_per_second': 33.808, 'epoch': 16.0}
{'loss': 0.0162, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.35831984877586365, 'eval_precision': 0.3176229508196721, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3345925526173772, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 5.7077, 'eval_samples_per_second': 268.235, 'eval_steps_per_second': 33.639, 'epoch': 17.0}
{'loss': 0.0149, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.3657222092151642, 'eval_precision': 0.3090909090909091, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.33610822060353795, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 5.7806, 'eval_samples_per_second': 264.849, 'eval_steps_per_second': 33.214, 'epoch': 18.0}
{'loss': 0.0138, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.36569347977638245, 'eval_precision': 0.31086519114688127, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.330304649919829, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.698, 'eval_steps_per_second': 33.572, 'epoch': 19.0}
{'loss': 0.0133, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.366441935300827, 'eval_precision': 0.33623503808487487, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.344097995545657, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 20.0}
{'loss': 0.0125, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.3687310516834259, 'eval_precision': 0.3266171792152704, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3384615384615384, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 21.0}
{'loss': 0.0121, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.37332937121391296, 'eval_precision': 0.32191069574247144, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.33695652173913043, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.209, 'eval_steps_per_second': 33.761, 'epoch': 22.0}
{'loss': 0.0116, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.37360355257987976, 'eval_precision': 0.329073482428115, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34030837004405284, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 5.7057, 'eval_samples_per_second': 268.329, 'eval_steps_per_second': 33.651, 'epoch': 23.0}
{'loss': 0.0114, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.37390926480293274, 'eval_precision': 0.3252375923970433, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.33771929824561403, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 5.7016, 'eval_samples_per_second': 268.519, 'eval_steps_per_second': 33.675, 'epoch': 24.0}
{'train_runtime': 2452.9928, 'train_samples_per_second': 84.475, 'train_steps_per_second': 1.321, 'train_loss': 0.10699137773042844, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.107
  train_runtime            = 0:40:52.99
  train_samples            =       8634
  train_samples_per_second =     84.475
  train_steps_per_second   =      1.321
[{'loss': 1.1521, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.36508703231811523, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7444, 'eval_samples_per_second': 266.52, 'eval_steps_per_second': 33.424, 'epoch': 1.0, 'step': 135}, {'loss': 0.2989, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.25177329778671265, 'eval_precision': 0.1, 'eval_recall': 0.07297605473204105, 'eval_f1': 0.08437705998681609, 'eval_accuracy': 0.9357291747085618, 'eval_runtime': 5.7017, 'eval_samples_per_second': 268.517, 'eval_steps_per_second': 33.674, 'epoch': 2.0, 'step': 270}, {'loss': 0.2357, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.24211151897907257, 'eval_precision': 0.13636363636363635, 'eval_recall': 0.11288483466362599, 'eval_f1': 0.12351840299438553, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 5.7069, 'eval_samples_per_second': 268.271, 'eval_steps_per_second': 33.643, 'epoch': 3.0, 'step': 405}, {'loss': 0.1706, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2469778060913086, 'eval_precision': 0.169392523364486, 'eval_recall': 0.1653363740022805, 'eval_f1': 0.1673398730525101, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 5.6989, 'eval_samples_per_second': 268.648, 'eval_steps_per_second': 33.691, 'epoch': 4.0, 'step': 540}, {'loss': 0.1269, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.24137064814567566, 'eval_precision': 0.2348008385744235, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2446750409612234, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.212, 'eval_steps_per_second': 33.761, 'epoch': 5.0, 'step': 675}, {'loss': 0.0981, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2603031396865845, 'eval_precision': 0.2641509433962264, 'eval_recall': 0.28734321550741165, 'eval_f1': 0.2752594210813763, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 5.6879, 'eval_samples_per_second': 269.166, 'eval_steps_per_second': 33.756, 'epoch': 6.0, 'step': 810}, {'loss': 0.08, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2521844804286957, 'eval_precision': 0.2915766738660907, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.29950083194675536, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 5.6924, 'eval_samples_per_second': 268.955, 'eval_steps_per_second': 33.729, 'epoch': 7.0, 'step': 945}, {'loss': 0.0649, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2861781120300293, 'eval_precision': 0.2938034188034188, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.30336458907887476, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 5.6946, 'eval_samples_per_second': 268.849, 'eval_steps_per_second': 33.716, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0517, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2872024476528168, 'eval_precision': 0.28446601941747574, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3072889355007866, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 5.8019, 'eval_samples_per_second': 263.878, 'eval_steps_per_second': 33.092, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0398, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.3022644817829132, 'eval_precision': 0.3084886128364389, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.32338578404774826, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 5.7136, 'eval_samples_per_second': 267.956, 'eval_steps_per_second': 33.604, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0337, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.310432106256485, 'eval_precision': 0.3200419727177335, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33333333333333337, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.6912, 'eval_samples_per_second': 269.01, 'eval_steps_per_second': 33.736, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0279, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.31940758228302, 'eval_precision': 0.29429735234215887, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.31091984938138784, 'eval_accuracy': 0.9383154481587277, 'eval_runtime': 5.7133, 'eval_samples_per_second': 267.971, 'eval_steps_per_second': 33.606, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0239, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.32966238260269165, 'eval_precision': 0.31354166666666666, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3277082199237888, 'eval_accuracy': 0.9398980931058442, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.945, 'eval_steps_per_second': 33.603, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0212, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.340069979429245, 'eval_precision': 0.31702344546381245, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.33476856835306784, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 5.7028, 'eval_samples_per_second': 268.465, 'eval_steps_per_second': 33.668, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0192, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3419956564903259, 'eval_precision': 0.33476856835306784, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.34440753045404204, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 5.6933, 'eval_samples_per_second': 268.913, 'eval_steps_per_second': 33.724, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0175, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3551599383354187, 'eval_precision': 0.3121852970795569, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3315508021390374, 'eval_accuracy': 0.9386628580251679, 'eval_runtime': 5.6791, 'eval_samples_per_second': 269.586, 'eval_steps_per_second': 33.808, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0162, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.35831984877586365, 'eval_precision': 0.3176229508196721, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.3345925526173772, 'eval_accuracy': 0.9388944646027947, 'eval_runtime': 5.7077, 'eval_samples_per_second': 268.235, 'eval_steps_per_second': 33.639, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0149, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3657222092151642, 'eval_precision': 0.3090909090909091, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.33610822060353795, 'eval_accuracy': 0.9376206284258473, 'eval_runtime': 5.7806, 'eval_samples_per_second': 264.849, 'eval_steps_per_second': 33.214, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0138, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.36569347977638245, 'eval_precision': 0.31086519114688127, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.330304649919829, 'eval_accuracy': 0.9387400602177102, 'eval_runtime': 5.7191, 'eval_samples_per_second': 267.698, 'eval_steps_per_second': 33.572, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0133, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.366441935300827, 'eval_precision': 0.33623503808487487, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.344097995545657, 'eval_accuracy': 0.941557940245503, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0125, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3687310516834259, 'eval_precision': 0.3266171792152704, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3384615384615384, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0121, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.37332937121391296, 'eval_precision': 0.32191069574247144, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.33695652173913043, 'eval_accuracy': 0.9400138963946576, 'eval_runtime': 5.687, 'eval_samples_per_second': 269.209, 'eval_steps_per_second': 33.761, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0116, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.37360355257987976, 'eval_precision': 0.329073482428115, 'eval_recall': 0.3523375142531357, 'eval_f1': 0.34030837004405284, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 5.7057, 'eval_samples_per_second': 268.329, 'eval_steps_per_second': 33.651, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0114, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.37390926480293274, 'eval_precision': 0.3252375923970433, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.33771929824561403, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 5.7016, 'eval_samples_per_second': 268.519, 'eval_steps_per_second': 33.675, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2452.9928, 'train_samples_per_second': 84.475, 'train_steps_per_second': 1.321, 'total_flos': 2.705812061973174e+16, 'train_loss': 0.10699137773042844, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =      0.939
  predict_f1                 =     0.2451
  predict_loss               =     0.2541
  predict_precision          =     0.2353
  predict_recall             =     0.2558
  predict_runtime            = 0:00:04.79
  predict_samples_per_second =     265.29
  predict_steps_per_second   =     33.161
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_41.json completed. F1: 0.24511082138200782
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_12.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6887.85 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7158.40 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6938.97 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6990.26 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7031.02 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7161.45 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7260.37 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6362.62 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6810.76 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7404.19 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6996.70 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7096.79 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6907.65 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.2848, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9277, 'eval_samples_per_second': 522.933, 'eval_steps_per_second': 65.58, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.321, 'eval_steps_per_second': 65.002, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9265, 'eval_samples_per_second': 523.156, 'eval_steps_per_second': 65.608, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.921, 'eval_samples_per_second': 524.127, 'eval_steps_per_second': 65.73, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8884, 'eval_samples_per_second': 530.044, 'eval_steps_per_second': 66.472, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9306, 'eval_samples_per_second': 522.426, 'eval_steps_per_second': 65.517, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.918, 'eval_samples_per_second': 524.671, 'eval_steps_per_second': 65.798, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9345, 'eval_samples_per_second': 521.716, 'eval_steps_per_second': 65.427, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9255, 'eval_samples_per_second': 523.336, 'eval_steps_per_second': 65.631, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0209, 'eval_samples_per_second': 506.804, 'eval_steps_per_second': 63.557, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.117, 'eval_steps_per_second': 65.102, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.903, 'eval_samples_per_second': 527.387, 'eval_steps_per_second': 66.139, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9021, 'eval_samples_per_second': 527.544, 'eval_steps_per_second': 66.158, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9157, 'eval_samples_per_second': 525.096, 'eval_steps_per_second': 65.851, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9398, 'eval_samples_per_second': 520.784, 'eval_steps_per_second': 65.311, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9099, 'eval_samples_per_second': 526.128, 'eval_steps_per_second': 65.981, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9515, 'eval_samples_per_second': 518.72, 'eval_steps_per_second': 65.052, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9067, 'eval_samples_per_second': 526.72, 'eval_steps_per_second': 66.055, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.14, 'eval_steps_per_second': 64.979, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9523, 'eval_samples_per_second': 518.573, 'eval_steps_per_second': 65.033, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9096, 'eval_samples_per_second': 526.186, 'eval_steps_per_second': 65.988, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9787, 'eval_samples_per_second': 513.987, 'eval_steps_per_second': 64.458, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9159, 'eval_samples_per_second': 525.045, 'eval_steps_per_second': 65.845, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9125, 'eval_samples_per_second': 525.67, 'eval_steps_per_second': 65.923, 'epoch': 24.0}
{'train_runtime': 993.3969, 'train_samples_per_second': 208.593, 'train_steps_per_second': 13.046, 'train_loss': 0.05353528246467496, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0535
  train_runtime            = 0:16:33.39
  train_samples            =       8634
  train_samples_per_second =    208.593
  train_steps_per_second   =     13.046
[{'loss': 1.2848, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9277, 'eval_samples_per_second': 522.933, 'eval_steps_per_second': 65.58, 'epoch': 1.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9538, 'eval_samples_per_second': 518.321, 'eval_steps_per_second': 65.002, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9265, 'eval_samples_per_second': 523.156, 'eval_steps_per_second': 65.608, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.921, 'eval_samples_per_second': 524.127, 'eval_steps_per_second': 65.73, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8884, 'eval_samples_per_second': 530.044, 'eval_steps_per_second': 66.472, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9306, 'eval_samples_per_second': 522.426, 'eval_steps_per_second': 65.517, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.918, 'eval_samples_per_second': 524.671, 'eval_steps_per_second': 65.798, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9345, 'eval_samples_per_second': 521.716, 'eval_steps_per_second': 65.427, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9255, 'eval_samples_per_second': 523.336, 'eval_steps_per_second': 65.631, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0209, 'eval_samples_per_second': 506.804, 'eval_steps_per_second': 63.557, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9492, 'eval_samples_per_second': 519.117, 'eval_steps_per_second': 65.102, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.903, 'eval_samples_per_second': 527.387, 'eval_steps_per_second': 66.139, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9021, 'eval_samples_per_second': 527.544, 'eval_steps_per_second': 66.158, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9157, 'eval_samples_per_second': 525.096, 'eval_steps_per_second': 65.851, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9398, 'eval_samples_per_second': 520.784, 'eval_steps_per_second': 65.311, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9099, 'eval_samples_per_second': 526.128, 'eval_steps_per_second': 65.981, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9515, 'eval_samples_per_second': 518.72, 'eval_steps_per_second': 65.052, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9067, 'eval_samples_per_second': 526.72, 'eval_steps_per_second': 66.055, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9548, 'eval_samples_per_second': 518.14, 'eval_steps_per_second': 64.979, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9523, 'eval_samples_per_second': 518.573, 'eval_steps_per_second': 65.033, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9096, 'eval_samples_per_second': 526.186, 'eval_steps_per_second': 65.988, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9787, 'eval_samples_per_second': 513.987, 'eval_steps_per_second': 64.458, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9159, 'eval_samples_per_second': 525.045, 'eval_steps_per_second': 65.845, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9125, 'eval_samples_per_second': 525.67, 'eval_steps_per_second': 65.923, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 993.3969, 'train_samples_per_second': 208.593, 'train_steps_per_second': 13.046, 'total_flos': 5804249700899820.0, 'train_loss': 0.05353528246467496, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.44
  predict_samples_per_second =    520.851
  predict_steps_per_second   =     65.106
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_12.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_44.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_44.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6000.14 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6855.69 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6844.55 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6926.64 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7020.33 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7164.61 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7348.41 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6407.05 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6776.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7453.10 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7106.38 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7068.54 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6895.82 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.9664, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.30823883414268494, 'eval_precision': 0.07835820895522388, 'eval_recall': 0.02394526795895097, 'eval_f1': 0.036681222707423584, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.901, 'eval_steps_per_second': 64.949, 'epoch': 1.0}
{'loss': 0.2816, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.24102015793323517, 'eval_precision': 0.1723076923076923, 'eval_recall': 0.12770809578107184, 'eval_f1': 0.14669286182056318, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 2.9212, 'eval_samples_per_second': 524.101, 'eval_steps_per_second': 65.727, 'epoch': 2.0}
{'loss': 0.1944, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.2250947803258896, 'eval_precision': 0.1990521327014218, 'eval_recall': 0.14367160775370583, 'eval_f1': 0.16688741721854305, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 2.9181, 'eval_samples_per_second': 524.659, 'eval_steps_per_second': 65.797, 'epoch': 3.0}
{'loss': 0.1327, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.22802987694740295, 'eval_precision': 0.2757158006362672, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28571428571428564, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.13, 'eval_steps_per_second': 64.978, 'epoch': 4.0}
{'loss': 0.0977, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2573283314704895, 'eval_precision': 0.267005076142132, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.28249194414607953, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.9499, 'eval_samples_per_second': 519.005, 'eval_steps_per_second': 65.087, 'epoch': 5.0}
{'loss': 0.0742, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2658348083496094, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.298474945533769, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.8955, 'eval_samples_per_second': 528.751, 'eval_steps_per_second': 66.31, 'epoch': 6.0}
{'loss': 0.0568, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.29164817929267883, 'eval_precision': 0.26702033598585323, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.30079681274900394, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.931, 'eval_samples_per_second': 522.354, 'eval_steps_per_second': 65.507, 'epoch': 7.0}
{'loss': 0.0427, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.31895530223846436, 'eval_precision': 0.2690166975881262, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2966751918158568, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.891, 'eval_samples_per_second': 529.58, 'eval_steps_per_second': 66.414, 'epoch': 8.0}
{'loss': 0.0323, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.32631492614746094, 'eval_precision': 0.28175026680896476, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2910694597574421, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.9014, 'eval_samples_per_second': 527.668, 'eval_steps_per_second': 66.174, 'epoch': 9.0}
{'loss': 0.0245, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.34502652287483215, 'eval_precision': 0.28170377541142305, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3047120418848167, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 3.0184, 'eval_samples_per_second': 507.231, 'eval_steps_per_second': 63.611, 'epoch': 10.0}
{'loss': 0.0182, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.37017855048179626, 'eval_precision': 0.27052238805970147, 'eval_recall': 0.330672748004561, 'eval_f1': 0.297588506926629, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.9058, 'eval_samples_per_second': 526.883, 'eval_steps_per_second': 66.076, 'epoch': 11.0}
{'loss': 0.0151, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3709079623222351, 'eval_precision': 0.27137176938369784, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.28996282527881045, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9532, 'eval_samples_per_second': 518.422, 'eval_steps_per_second': 65.014, 'epoch': 12.0}
{'loss': 0.0122, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3710802495479584, 'eval_precision': 0.29014989293361887, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2992821645499724, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 2.8971, 'eval_samples_per_second': 528.467, 'eval_steps_per_second': 66.274, 'epoch': 13.0}
{'loss': 0.0106, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.38071003556251526, 'eval_precision': 0.2917547568710359, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3027975863960505, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.765, 'eval_steps_per_second': 65.434, 'epoch': 14.0}
{'loss': 0.0094, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.38523438572883606, 'eval_precision': 0.28336755646817247, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29821717990275526, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.9189, 'eval_samples_per_second': 524.52, 'eval_steps_per_second': 65.779, 'epoch': 15.0}
{'loss': 0.0081, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3927747309207916, 'eval_precision': 0.2842430484037075, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2987012987012987, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9159, 'eval_samples_per_second': 525.056, 'eval_steps_per_second': 65.846, 'epoch': 16.0}
{'loss': 0.007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4004165232181549, 'eval_precision': 0.2757281553398058, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2978500262191925, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.9194, 'eval_samples_per_second': 524.423, 'eval_steps_per_second': 65.767, 'epoch': 17.0}
{'loss': 0.0064, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.39757853746414185, 'eval_precision': 0.278415015641293, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2908496732026144, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.64, 'eval_steps_per_second': 65.293, 'epoch': 18.0}
{'loss': 0.0057, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.40265151858329773, 'eval_precision': 0.29578947368421055, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3076081007115489, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.8805, 'eval_samples_per_second': 531.506, 'eval_steps_per_second': 66.655, 'epoch': 19.0}
{'loss': 0.005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.40723055601119995, 'eval_precision': 0.2975027144408252, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3047830923248053, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9147, 'eval_samples_per_second': 525.275, 'eval_steps_per_second': 65.874, 'epoch': 20.0}
{'loss': 0.0045, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.41057059168815613, 'eval_precision': 0.28852119958634953, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30260303687635576, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.8719, 'eval_samples_per_second': 533.093, 'eval_steps_per_second': 66.854, 'epoch': 21.0}
{'loss': 0.0041, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.40972962975502014, 'eval_precision': 0.3023255813953488, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3137685134393856, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.9335, 'eval_samples_per_second': 521.896, 'eval_steps_per_second': 65.45, 'epoch': 22.0}
{'loss': 0.0039, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.41015002131462097, 'eval_precision': 0.2995689655172414, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3080332409972299, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.215, 'eval_steps_per_second': 63.86, 'epoch': 23.0}
{'loss': 0.0038, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.41099315881729126, 'eval_precision': 0.2976694915254237, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3086216364634816, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.908, 'eval_samples_per_second': 526.478, 'eval_steps_per_second': 66.025, 'epoch': 24.0}
{'train_runtime': 838.7791, 'train_samples_per_second': 247.045, 'train_steps_per_second': 3.863, 'train_loss': 0.08405093771440011, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0841
  train_runtime            = 0:13:58.77
  train_samples            =       8634
  train_samples_per_second =    247.045
  train_steps_per_second   =      3.863
[{'loss': 0.9664, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.30823883414268494, 'eval_precision': 0.07835820895522388, 'eval_recall': 0.02394526795895097, 'eval_f1': 0.036681222707423584, 'eval_accuracy': 0.9332587045472092, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.901, 'eval_steps_per_second': 64.949, 'epoch': 1.0, 'step': 135}, {'loss': 0.2816, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.24102015793323517, 'eval_precision': 0.1723076923076923, 'eval_recall': 0.12770809578107184, 'eval_f1': 0.14669286182056318, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 2.9212, 'eval_samples_per_second': 524.101, 'eval_steps_per_second': 65.727, 'epoch': 2.0, 'step': 270}, {'loss': 0.1944, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2250947803258896, 'eval_precision': 0.1990521327014218, 'eval_recall': 0.14367160775370583, 'eval_f1': 0.16688741721854305, 'eval_accuracy': 0.9381610437736432, 'eval_runtime': 2.9181, 'eval_samples_per_second': 524.659, 'eval_steps_per_second': 65.797, 'epoch': 3.0, 'step': 405}, {'loss': 0.1327, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.22802987694740295, 'eval_precision': 0.2757158006362672, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.28571428571428564, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.13, 'eval_steps_per_second': 64.978, 'epoch': 4.0, 'step': 540}, {'loss': 0.0977, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.2573283314704895, 'eval_precision': 0.267005076142132, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.28249194414607953, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.9499, 'eval_samples_per_second': 519.005, 'eval_steps_per_second': 65.087, 'epoch': 5.0, 'step': 675}, {'loss': 0.0742, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2658348083496094, 'eval_precision': 0.2857142857142857, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.298474945533769, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.8955, 'eval_samples_per_second': 528.751, 'eval_steps_per_second': 66.31, 'epoch': 6.0, 'step': 810}, {'loss': 0.0568, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.29164817929267883, 'eval_precision': 0.26702033598585323, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.30079681274900394, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.931, 'eval_samples_per_second': 522.354, 'eval_steps_per_second': 65.507, 'epoch': 7.0, 'step': 945}, {'loss': 0.0427, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.31895530223846436, 'eval_precision': 0.2690166975881262, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2966751918158568, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.891, 'eval_samples_per_second': 529.58, 'eval_steps_per_second': 66.414, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0323, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.32631492614746094, 'eval_precision': 0.28175026680896476, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.2910694597574421, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.9014, 'eval_samples_per_second': 527.668, 'eval_steps_per_second': 66.174, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0245, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.34502652287483215, 'eval_precision': 0.28170377541142305, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3047120418848167, 'eval_accuracy': 0.9346869451092411, 'eval_runtime': 3.0184, 'eval_samples_per_second': 507.231, 'eval_steps_per_second': 63.611, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0182, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.37017855048179626, 'eval_precision': 0.27052238805970147, 'eval_recall': 0.330672748004561, 'eval_f1': 0.297588506926629, 'eval_accuracy': 0.932641087006871, 'eval_runtime': 2.9058, 'eval_samples_per_second': 526.883, 'eval_steps_per_second': 66.076, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0151, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.3709079623222351, 'eval_precision': 0.27137176938369784, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.28996282527881045, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9532, 'eval_samples_per_second': 518.422, 'eval_steps_per_second': 65.014, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0122, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3710802495479584, 'eval_precision': 0.29014989293361887, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.2992821645499724, 'eval_accuracy': 0.9356519725160195, 'eval_runtime': 2.8971, 'eval_samples_per_second': 528.467, 'eval_steps_per_second': 66.274, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0106, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.38071003556251526, 'eval_precision': 0.2917547568710359, 'eval_recall': 0.314709236031927, 'eval_f1': 0.3027975863960505, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.765, 'eval_steps_per_second': 65.434, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0094, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.38523438572883606, 'eval_precision': 0.28336755646817247, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29821717990275526, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.9189, 'eval_samples_per_second': 524.52, 'eval_steps_per_second': 65.779, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0081, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3927747309207916, 'eval_precision': 0.2842430484037075, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2987012987012987, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.9159, 'eval_samples_per_second': 525.056, 'eval_steps_per_second': 65.846, 'epoch': 16.0, 'step': 2160}, {'loss': 0.007, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4004165232181549, 'eval_precision': 0.2757281553398058, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.2978500262191925, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.9194, 'eval_samples_per_second': 524.423, 'eval_steps_per_second': 65.767, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0064, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.39757853746414185, 'eval_precision': 0.278415015641293, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2908496732026144, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.9406, 'eval_samples_per_second': 520.64, 'eval_steps_per_second': 65.293, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0057, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.40265151858329773, 'eval_precision': 0.29578947368421055, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3076081007115489, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.8805, 'eval_samples_per_second': 531.506, 'eval_steps_per_second': 66.655, 'epoch': 19.0, 'step': 2565}, {'loss': 0.005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.40723055601119995, 'eval_precision': 0.2975027144408252, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3047830923248053, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.9147, 'eval_samples_per_second': 525.275, 'eval_steps_per_second': 65.874, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0045, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.41057059168815613, 'eval_precision': 0.28852119958634953, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30260303687635576, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 2.8719, 'eval_samples_per_second': 533.093, 'eval_steps_per_second': 66.854, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0041, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.40972962975502014, 'eval_precision': 0.3023255813953488, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3137685134393856, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.9335, 'eval_samples_per_second': 521.896, 'eval_steps_per_second': 65.45, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0039, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.41015002131462097, 'eval_precision': 0.2995689655172414, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3080332409972299, 'eval_accuracy': 0.9370416119817803, 'eval_runtime': 3.0066, 'eval_samples_per_second': 509.215, 'eval_steps_per_second': 63.86, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0038, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.41099315881729126, 'eval_precision': 0.2976694915254237, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3086216364634816, 'eval_accuracy': 0.936964409789238, 'eval_runtime': 2.908, 'eval_samples_per_second': 526.478, 'eval_steps_per_second': 66.025, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 838.7791, 'train_samples_per_second': 247.045, 'train_steps_per_second': 3.863, 'total_flos': 7642265274881820.0, 'train_loss': 0.08405093771440011, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9376
  predict_f1                 =     0.1483
  predict_loss               =     0.2358
  predict_precision          =      0.185
  predict_recall             =     0.1238
  predict_runtime            = 0:00:02.44
  predict_samples_per_second =    519.871
  predict_steps_per_second   =     64.984
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_44.json completed. F1: 0.14832925835370825
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_04.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_04.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5943.10 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6748.04 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6788.15 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6897.83 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7010.45 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7153.17 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7324.78 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6406.40 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6744.95 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7405.00 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7061.26 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7069.28 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6894.53 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.295, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.17307692766189575, 'eval_precision': 0.4698972099853157, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.410783055198973, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.9751, 'eval_samples_per_second': 514.6, 'eval_steps_per_second': 64.535, 'epoch': 1.0}
{'loss': 0.1418, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1614416241645813, 'eval_precision': 0.5321229050279329, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.47834274952919015, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 2.931, 'eval_samples_per_second': 522.353, 'eval_steps_per_second': 65.507, 'epoch': 2.0}
{'loss': 0.0818, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.17702320218086243, 'eval_precision': 0.4579870729455217, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5061224489795919, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.26, 'eval_steps_per_second': 64.743, 'epoch': 3.0}
{'loss': 0.0456, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.21489585936069489, 'eval_precision': 0.5138248847926268, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5111747851002867, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.057, 'eval_steps_per_second': 64.467, 'epoch': 4.0}
{'loss': 0.0274, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.24980980157852173, 'eval_precision': 0.5039281705948373, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5079185520361992, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 2.9674, 'eval_samples_per_second': 515.943, 'eval_steps_per_second': 64.703, 'epoch': 5.0}
{'loss': 0.0143, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.29775217175483704, 'eval_precision': 0.48621041879468846, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5129310344827587, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.9527, 'eval_samples_per_second': 518.516, 'eval_steps_per_second': 65.026, 'epoch': 6.0}
{'loss': 0.0098, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.30715975165367126, 'eval_precision': 0.4740740740740741, 'eval_recall': 0.5838084378563284, 'eval_f1': 0.5232498722534492, 'eval_accuracy': 0.9500115803288813, 'eval_runtime': 2.9182, 'eval_samples_per_second': 524.632, 'eval_steps_per_second': 65.793, 'epoch': 7.0}
{'loss': 0.0064, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.33792856335639954, 'eval_precision': 0.5283893395133256, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5241379310344828, 'eval_accuracy': 0.95167142746854, 'eval_runtime': 2.9196, 'eval_samples_per_second': 524.384, 'eval_steps_per_second': 65.762, 'epoch': 8.0}
{'loss': 0.0055, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.37017983198165894, 'eval_precision': 0.4994475138121547, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5072951739618405, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 3.0403, 'eval_samples_per_second': 503.562, 'eval_steps_per_second': 63.151, 'epoch': 9.0}
{'loss': 0.0032, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3849007785320282, 'eval_precision': 0.5330073349633252, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5144542772861358, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 2.9362, 'eval_samples_per_second': 521.426, 'eval_steps_per_second': 65.391, 'epoch': 10.0}
{'loss': 0.0028, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.388762503862381, 'eval_precision': 0.5152542372881356, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5175936435868331, 'eval_accuracy': 0.9518644329498958, 'eval_runtime': 2.9369, 'eval_samples_per_second': 521.304, 'eval_steps_per_second': 65.376, 'epoch': 11.0}
{'loss': 0.0034, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.3945233225822449, 'eval_precision': 0.49852216748768474, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5348837209302325, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.9273, 'eval_samples_per_second': 523.015, 'eval_steps_per_second': 65.59, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.40471282601356506, 'eval_precision': 0.557356608478803, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.532459797498511, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.9663, 'eval_samples_per_second': 516.129, 'eval_steps_per_second': 64.727, 'epoch': 13.0}
{'loss': 0.0019, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.4097966253757477, 'eval_precision': 0.5521844660194175, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5349794238683128, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.806, 'eval_steps_per_second': 64.686, 'epoch': 14.0}
{'loss': 0.0017, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.4131260812282562, 'eval_precision': 0.5214446952595937, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5241066364152014, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 2.918, 'eval_samples_per_second': 524.668, 'eval_steps_per_second': 65.798, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.4262271821498871, 'eval_precision': 0.5537383177570093, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5470282746682054, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.929, 'eval_samples_per_second': 522.709, 'eval_steps_per_second': 65.552, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.4285070598125458, 'eval_precision': 0.550761421319797, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.5213213213213214, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.865, 'eval_steps_per_second': 65.572, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.435651570558548, 'eval_precision': 0.5353535353535354, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5395927601809956, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 2.9716, 'eval_samples_per_second': 515.213, 'eval_steps_per_second': 64.612, 'epoch': 18.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.4477999210357666, 'eval_precision': 0.5203969128996693, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5291479820627804, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 2.9295, 'eval_samples_per_second': 522.616, 'eval_steps_per_second': 65.54, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.44794589281082153, 'eval_precision': 0.5272331154684096, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.539275766016713, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 2.9183, 'eval_samples_per_second': 524.627, 'eval_steps_per_second': 65.793, 'epoch': 20.0}
{'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.45528510212898254, 'eval_precision': 0.5255972696245734, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5261958997722096, 'eval_accuracy': 0.9518644329498958, 'eval_runtime': 2.9177, 'eval_samples_per_second': 524.724, 'eval_steps_per_second': 65.805, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.45325958728790283, 'eval_precision': 0.5403508771929825, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5334872979214782, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.9165, 'eval_samples_per_second': 524.947, 'eval_steps_per_second': 65.833, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.45774197578430176, 'eval_precision': 0.534965034965035, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5291066282420749, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.208, 'eval_steps_per_second': 64.988, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.45885950326919556, 'eval_precision': 0.5367561260210035, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.530565167243368, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 2.9353, 'eval_samples_per_second': 521.576, 'eval_steps_per_second': 65.41, 'epoch': 24.0}
{'train_runtime': 1476.431, 'train_samples_per_second': 140.349, 'train_steps_per_second': 17.556, 'train_loss': 0.027010392025113107, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.027
  train_runtime            = 0:24:36.43
  train_samples            =       8634
  train_samples_per_second =    140.349
  train_steps_per_second   =     17.556
[{'loss': 0.295, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.17307692766189575, 'eval_precision': 0.4698972099853157, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.410783055198973, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.9751, 'eval_samples_per_second': 514.6, 'eval_steps_per_second': 64.535, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1418, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.1614416241645813, 'eval_precision': 0.5321229050279329, 'eval_recall': 0.43443557582668185, 'eval_f1': 0.47834274952919015, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 2.931, 'eval_samples_per_second': 522.353, 'eval_steps_per_second': 65.507, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0818, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.17702320218086243, 'eval_precision': 0.4579870729455217, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5061224489795919, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.9656, 'eval_samples_per_second': 516.26, 'eval_steps_per_second': 64.743, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0456, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.21489585936069489, 'eval_precision': 0.5138248847926268, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5111747851002867, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 2.9783, 'eval_samples_per_second': 514.057, 'eval_steps_per_second': 64.467, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0274, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.24980980157852173, 'eval_precision': 0.5039281705948373, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5079185520361992, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 2.9674, 'eval_samples_per_second': 515.943, 'eval_steps_per_second': 64.703, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0143, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.29775217175483704, 'eval_precision': 0.48621041879468846, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5129310344827587, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.9527, 'eval_samples_per_second': 518.516, 'eval_steps_per_second': 65.026, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0098, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.30715975165367126, 'eval_precision': 0.4740740740740741, 'eval_recall': 0.5838084378563284, 'eval_f1': 0.5232498722534492, 'eval_accuracy': 0.9500115803288813, 'eval_runtime': 2.9182, 'eval_samples_per_second': 524.632, 'eval_steps_per_second': 65.793, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0064, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.33792856335639954, 'eval_precision': 0.5283893395133256, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5241379310344828, 'eval_accuracy': 0.95167142746854, 'eval_runtime': 2.9196, 'eval_samples_per_second': 524.384, 'eval_steps_per_second': 65.762, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0055, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.37017983198165894, 'eval_precision': 0.4994475138121547, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5072951739618405, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 3.0403, 'eval_samples_per_second': 503.562, 'eval_steps_per_second': 63.151, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0032, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.3849007785320282, 'eval_precision': 0.5330073349633252, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5144542772861358, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 2.9362, 'eval_samples_per_second': 521.426, 'eval_steps_per_second': 65.391, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0028, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.388762503862381, 'eval_precision': 0.5152542372881356, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5175936435868331, 'eval_accuracy': 0.9518644329498958, 'eval_runtime': 2.9369, 'eval_samples_per_second': 521.304, 'eval_steps_per_second': 65.376, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0034, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.3945233225822449, 'eval_precision': 0.49852216748768474, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5348837209302325, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.9273, 'eval_samples_per_second': 523.015, 'eval_steps_per_second': 65.59, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0019, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.40471282601356506, 'eval_precision': 0.557356608478803, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.532459797498511, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.9663, 'eval_samples_per_second': 516.129, 'eval_steps_per_second': 64.727, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0019, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.4097966253757477, 'eval_precision': 0.5521844660194175, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5349794238683128, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 2.9682, 'eval_samples_per_second': 515.806, 'eval_steps_per_second': 64.686, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0017, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.4131260812282562, 'eval_precision': 0.5214446952595937, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5241066364152014, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 2.918, 'eval_samples_per_second': 524.668, 'eval_steps_per_second': 65.798, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0011, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.4262271821498871, 'eval_precision': 0.5537383177570093, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5470282746682054, 'eval_accuracy': 0.9531382691268432, 'eval_runtime': 2.929, 'eval_samples_per_second': 522.709, 'eval_steps_per_second': 65.552, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0014, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.4285070598125458, 'eval_precision': 0.550761421319797, 'eval_recall': 0.49486887115165334, 'eval_f1': 0.5213213213213214, 'eval_accuracy': 0.9536400833783679, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.865, 'eval_steps_per_second': 65.572, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0009, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.435651570558548, 'eval_precision': 0.5353535353535354, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5395927601809956, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 2.9716, 'eval_samples_per_second': 515.213, 'eval_steps_per_second': 64.612, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.4477999210357666, 'eval_precision': 0.5203969128996693, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5291479820627804, 'eval_accuracy': 0.951941635142438, 'eval_runtime': 2.9295, 'eval_samples_per_second': 522.616, 'eval_steps_per_second': 65.54, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0005, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.44794589281082153, 'eval_precision': 0.5272331154684096, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.539275766016713, 'eval_accuracy': 0.9524048482976917, 'eval_runtime': 2.9183, 'eval_samples_per_second': 524.627, 'eval_steps_per_second': 65.793, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0003, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.45528510212898254, 'eval_precision': 0.5255972696245734, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5261958997722096, 'eval_accuracy': 0.9518644329498958, 'eval_runtime': 2.9177, 'eval_samples_per_second': 524.724, 'eval_steps_per_second': 65.805, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.45325958728790283, 'eval_precision': 0.5403508771929825, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5334872979214782, 'eval_accuracy': 0.9529838647417587, 'eval_runtime': 2.9165, 'eval_samples_per_second': 524.947, 'eval_steps_per_second': 65.833, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0002, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.45774197578430176, 'eval_precision': 0.534965034965035, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5291066282420749, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 2.9544, 'eval_samples_per_second': 518.208, 'eval_steps_per_second': 64.988, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.45885950326919556, 'eval_precision': 0.5367561260210035, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.530565167243368, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 2.9353, 'eval_samples_per_second': 521.576, 'eval_steps_per_second': 65.41, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1476.431, 'train_samples_per_second': 140.349, 'train_steps_per_second': 17.556, 'total_flos': 4945283721637740.0, 'train_loss': 0.027010392025113107, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9559
  predict_f1                 =     0.4726
  predict_loss               =     0.1662
  predict_precision          =     0.5562
  predict_recall             =     0.4109
  predict_runtime            = 0:00:02.46
  predict_samples_per_second =    516.774
  predict_steps_per_second   =     64.597
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_04.json completed. F1: 0.4726134585289515
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_03.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_03.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6444.15 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7131.71 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7060.58 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7146.51 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7211.27 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7372.62 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7543.11 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6561.56 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6968.56 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7699.22 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7299.17 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7299.89 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7092.65 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NB-BERT_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2682, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.19810956716537476, 'eval_precision': 0.26521739130434785, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27156371730662215, 'eval_accuracy': 0.9402841040685556, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.574, 'eval_steps_per_second': 41.206, 'epoch': 1.0}
{'loss': 0.1804, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.20307660102844238, 'eval_precision': 0.34933774834437087, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.2849426063470628, 'eval_accuracy': 0.9452636454875318, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.727, 'eval_steps_per_second': 41.35, 'epoch': 2.0}
{'loss': 0.1315, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.2051805853843689, 'eval_precision': 0.29901960784313725, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.32156035846072745, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.641, 'eval_steps_per_second': 41.34, 'epoch': 3.0}
{'loss': 0.0898, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.2516170144081116, 'eval_precision': 0.31613611416026344, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3221476510067114, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.143, 'eval_steps_per_second': 41.277, 'epoch': 4.0}
{'loss': 0.0643, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.2843291759490967, 'eval_precision': 0.2791783380018674, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3069815195071869, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.125, 'eval_steps_per_second': 41.275, 'epoch': 5.0}
{'loss': 0.0435, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.3357603847980499, 'eval_precision': 0.3321256038647343, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3225806451612903, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6395, 'eval_samples_per_second': 329.995, 'eval_steps_per_second': 41.384, 'epoch': 6.0}
{'loss': 0.0309, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.3680274784564972, 'eval_precision': 0.3157894736842105, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3284072249589491, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.575, 'eval_steps_per_second': 41.206, 'epoch': 7.0}
{'loss': 0.0205, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.39533159136772156, 'eval_precision': 0.32335329341317365, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31542056074766356, 'eval_accuracy': 0.9426001698448236, 'eval_runtime': 4.7223, 'eval_samples_per_second': 324.206, 'eval_steps_per_second': 40.658, 'epoch': 8.0}
{'loss': 0.0177, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.41474947333335876, 'eval_precision': 0.3005893909626719, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.32295514511873347, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.262, 'eval_steps_per_second': 41.292, 'epoch': 9.0}
{'loss': 0.0107, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.4423735737800598, 'eval_precision': 0.3220338983050847, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3234960272417707, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.169, 'eval_steps_per_second': 41.281, 'epoch': 10.0}
{'loss': 0.0089, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.46811914443969727, 'eval_precision': 0.31573389651531153, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3278508771929825, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 11.0}
{'loss': 0.0065, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.49133092164993286, 'eval_precision': 0.3129411764705882, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3080486392588303, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.904, 'eval_steps_per_second': 41.373, 'epoch': 12.0}
{'loss': 0.0055, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.5222545862197876, 'eval_precision': 0.30743243243243246, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.30934844192634564, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.6411, 'eval_samples_per_second': 329.881, 'eval_steps_per_second': 41.37, 'epoch': 13.0}
{'loss': 0.0042, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.5195133686065674, 'eval_precision': 0.31788079470198677, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3230510375771173, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.6352, 'eval_samples_per_second': 330.302, 'eval_steps_per_second': 41.423, 'epoch': 14.0}
{'loss': 0.0032, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.5628080368041992, 'eval_precision': 0.29277942631058357, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31355932203389825, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6353, 'eval_samples_per_second': 330.289, 'eval_steps_per_second': 41.421, 'epoch': 15.0}
{'loss': 0.0022, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.5487587451934814, 'eval_precision': 0.3198247535596933, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.32625698324022345, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.6403, 'eval_samples_per_second': 329.939, 'eval_steps_per_second': 41.377, 'epoch': 16.0}
{'loss': 0.0022, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.5704980492591858, 'eval_precision': 0.31877729257641924, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3257110987172337, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6366, 'eval_samples_per_second': 330.2, 'eval_steps_per_second': 41.41, 'epoch': 17.0}
{'loss': 0.0017, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.5793799161911011, 'eval_precision': 0.3091451292246521, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.330323951141795, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6398, 'eval_samples_per_second': 329.974, 'eval_steps_per_second': 41.381, 'epoch': 18.0}
{'loss': 0.0016, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.5842401385307312, 'eval_precision': 0.3238822246455834, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3311036789297659, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.898, 'eval_steps_per_second': 41.372, 'epoch': 19.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.5857490301132202, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.34418091560948705, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.729, 'eval_steps_per_second': 41.351, 'epoch': 20.0}
{'loss': 0.0007, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.60456782579422, 'eval_precision': 0.3340683572216097, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3396860986547085, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6362, 'eval_samples_per_second': 330.227, 'eval_steps_per_second': 41.413, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.6027959585189819, 'eval_precision': 0.32486772486772486, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33699231613611413, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.6395, 'eval_samples_per_second': 329.993, 'eval_steps_per_second': 41.384, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.6071544885635376, 'eval_precision': 0.3256325632563256, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3314669652855543, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6431, 'eval_samples_per_second': 329.737, 'eval_steps_per_second': 41.352, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.607988715171814, 'eval_precision': 0.31837606837606836, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3287369001654716, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6373, 'eval_samples_per_second': 330.151, 'eval_steps_per_second': 41.404, 'epoch': 24.0}
{'train_runtime': 3107.8552, 'train_samples_per_second': 66.675, 'train_steps_per_second': 8.34, 'train_loss': 0.037338378080339345, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0373
  train_runtime            = 0:51:47.85
  train_samples            =       8634
  train_samples_per_second =     66.675
  train_steps_per_second   =       8.34
[{'loss': 0.2682, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.19810956716537476, 'eval_precision': 0.26521739130434785, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27156371730662215, 'eval_accuracy': 0.9402841040685556, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.574, 'eval_steps_per_second': 41.206, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1804, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.20307660102844238, 'eval_precision': 0.34933774834437087, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.2849426063470628, 'eval_accuracy': 0.9452636454875318, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.727, 'eval_steps_per_second': 41.35, 'epoch': 2.0, 'step': 2160}, {'loss': 0.1315, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.2051805853843689, 'eval_precision': 0.29901960784313725, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.32156035846072745, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.641, 'eval_steps_per_second': 41.34, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0898, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.2516170144081116, 'eval_precision': 0.31613611416026344, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3221476510067114, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.143, 'eval_steps_per_second': 41.277, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0643, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.2843291759490967, 'eval_precision': 0.2791783380018674, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3069815195071869, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.125, 'eval_steps_per_second': 41.275, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0435, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.3357603847980499, 'eval_precision': 0.3321256038647343, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3225806451612903, 'eval_accuracy': 0.9420597544970277, 'eval_runtime': 4.6395, 'eval_samples_per_second': 329.995, 'eval_steps_per_second': 41.384, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0309, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.3680274784564972, 'eval_precision': 0.3157894736842105, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3284072249589491, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6595, 'eval_samples_per_second': 328.575, 'eval_steps_per_second': 41.206, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0205, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.39533159136772156, 'eval_precision': 0.32335329341317365, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.31542056074766356, 'eval_accuracy': 0.9426001698448236, 'eval_runtime': 4.7223, 'eval_samples_per_second': 324.206, 'eval_steps_per_second': 40.658, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0177, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.41474947333335876, 'eval_precision': 0.3005893909626719, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.32295514511873347, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.262, 'eval_steps_per_second': 41.292, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0107, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.4423735737800598, 'eval_precision': 0.3220338983050847, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3234960272417707, 'eval_accuracy': 0.9421755577858412, 'eval_runtime': 4.6511, 'eval_samples_per_second': 329.169, 'eval_steps_per_second': 41.281, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0089, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.46811914443969727, 'eval_precision': 0.31573389651531153, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3278508771929825, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.146, 'eval_steps_per_second': 41.278, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0065, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.49133092164993286, 'eval_precision': 0.3129411764705882, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.3080486392588303, 'eval_accuracy': 0.9414035358604185, 'eval_runtime': 4.6407, 'eval_samples_per_second': 329.904, 'eval_steps_per_second': 41.373, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0055, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.5222545862197876, 'eval_precision': 0.30743243243243246, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.30934844192634564, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.6411, 'eval_samples_per_second': 329.881, 'eval_steps_per_second': 41.37, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0042, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.5195133686065674, 'eval_precision': 0.31788079470198677, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3230510375771173, 'eval_accuracy': 0.9415193391492318, 'eval_runtime': 4.6352, 'eval_samples_per_second': 330.302, 'eval_steps_per_second': 41.423, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0032, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.5628080368041992, 'eval_precision': 0.29277942631058357, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.31355932203389825, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 4.6353, 'eval_samples_per_second': 330.289, 'eval_steps_per_second': 41.421, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0022, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.5487587451934814, 'eval_precision': 0.3198247535596933, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.32625698324022345, 'eval_accuracy': 0.9402455029722844, 'eval_runtime': 4.6403, 'eval_samples_per_second': 329.939, 'eval_steps_per_second': 41.377, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0022, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.5704980492591858, 'eval_precision': 0.31877729257641924, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.3257110987172337, 'eval_accuracy': 0.940708716127538, 'eval_runtime': 4.6366, 'eval_samples_per_second': 330.2, 'eval_steps_per_second': 41.41, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0017, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.5793799161911011, 'eval_precision': 0.3091451292246521, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.330323951141795, 'eval_accuracy': 0.9394348799505906, 'eval_runtime': 4.6398, 'eval_samples_per_second': 329.974, 'eval_steps_per_second': 41.381, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0016, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.5842401385307312, 'eval_precision': 0.3238822246455834, 'eval_recall': 0.338654503990878, 'eval_f1': 0.3311036789297659, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 4.6408, 'eval_samples_per_second': 329.898, 'eval_steps_per_second': 41.372, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.5857490301132202, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.34418091560948705, 'eval_accuracy': 0.9415965413417741, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.729, 'eval_steps_per_second': 41.351, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0007, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.60456782579422, 'eval_precision': 0.3340683572216097, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3396860986547085, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6362, 'eval_samples_per_second': 330.227, 'eval_steps_per_second': 41.413, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.6027959585189819, 'eval_precision': 0.32486772486772486, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.33699231613611413, 'eval_accuracy': 0.9405157106461823, 'eval_runtime': 4.6395, 'eval_samples_per_second': 329.993, 'eval_steps_per_second': 41.384, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0004, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.6071544885635376, 'eval_precision': 0.3256325632563256, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3314669652855543, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6431, 'eval_samples_per_second': 329.737, 'eval_steps_per_second': 41.352, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.607988715171814, 'eval_precision': 0.31837606837606836, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3287369001654716, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6373, 'eval_samples_per_second': 330.151, 'eval_steps_per_second': 41.404, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3107.8552, 'train_samples_per_second': 66.675, 'train_steps_per_second': 8.34, 'total_flos': 1.693700034384246e+16, 'train_loss': 0.037338378080339345, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =      0.939
  predict_f1                 =     0.2488
  predict_loss               =       0.21
  predict_precision          =     0.2435
  predict_recall             =     0.2544
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.859
  predict_steps_per_second   =     40.607
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_03.json completed. F1: 0.2488356620093147
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_37.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_37.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6812.04 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7199.88 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6992.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7037.62 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7067.70 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7204.23 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7382.98 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6427.48 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6856.05 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7361.90 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7011.41 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7101.31 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6932.00 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.9441, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.44880473613739014, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7808, 'eval_samples_per_second': 264.844, 'eval_steps_per_second': 33.214, 'epoch': 1.0}
{'loss': 0.3165, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.22678562998771667, 'eval_precision': 0.18778280542986425, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.18852924474730268, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.481, 'eval_steps_per_second': 33.544, 'epoch': 2.0}
{'loss': 0.2087, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.196017786860466, 'eval_precision': 0.18786692759295498, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.20221169036334913, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.7154, 'eval_samples_per_second': 267.871, 'eval_steps_per_second': 33.593, 'epoch': 3.0}
{'loss': 0.1687, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.1999845802783966, 'eval_precision': 0.4221954161640531, 'eval_recall': 0.3990877993158495, 'eval_f1': 0.41031652989449, 'eval_accuracy': 0.9463058750868525, 'eval_runtime': 5.7331, 'eval_samples_per_second': 267.048, 'eval_steps_per_second': 33.49, 'epoch': 4.0}
{'loss': 0.1211, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.1955263763666153, 'eval_precision': 0.44835965978128794, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.4341176470588235, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 5.7255, 'eval_samples_per_second': 267.399, 'eval_steps_per_second': 33.534, 'epoch': 5.0}
{'loss': 0.0905, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.195033460855484, 'eval_precision': 0.4376321353065539, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4541963795940757, 'eval_accuracy': 0.9472709024936308, 'eval_runtime': 5.7424, 'eval_samples_per_second': 266.613, 'eval_steps_per_second': 33.435, 'epoch': 6.0}
{'loss': 0.0674, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.1857641041278839, 'eval_precision': 0.5060240963855421, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5381740523224773, 'eval_accuracy': 0.9526750559715896, 'eval_runtime': 5.7378, 'eval_samples_per_second': 266.826, 'eval_steps_per_second': 33.462, 'epoch': 7.0}
{'loss': 0.0505, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.19729991257190704, 'eval_precision': 0.5489721886336155, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5328638497652582, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 5.7308, 'eval_samples_per_second': 267.152, 'eval_steps_per_second': 33.503, 'epoch': 8.0}
{'loss': 0.0384, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.19860967993736267, 'eval_precision': 0.5312169312169313, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5510428100987925, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.7886, 'eval_samples_per_second': 264.483, 'eval_steps_per_second': 33.168, 'epoch': 9.0}
{'loss': 0.0298, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.2115486115217209, 'eval_precision': 0.5361842105263158, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5466741196198994, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 5.7282, 'eval_samples_per_second': 267.276, 'eval_steps_per_second': 33.519, 'epoch': 10.0}
{'loss': 0.0239, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.2142745405435562, 'eval_precision': 0.5437837837837838, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.55826859045505, 'eval_accuracy': 0.9549911217478576, 'eval_runtime': 5.7257, 'eval_samples_per_second': 267.389, 'eval_steps_per_second': 33.533, 'epoch': 11.0}
{'loss': 0.0196, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.21708111464977264, 'eval_precision': 0.5299145299145299, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5471594043022615, 'eval_accuracy': 0.9536786844746391, 'eval_runtime': 5.7242, 'eval_samples_per_second': 267.461, 'eval_steps_per_second': 33.542, 'epoch': 12.0}
{'loss': 0.0158, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.22853049635887146, 'eval_precision': 0.5375275938189845, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5462703309029725, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 5.7442, 'eval_samples_per_second': 266.53, 'eval_steps_per_second': 33.425, 'epoch': 13.0}
{'loss': 0.0133, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.2349490523338318, 'eval_precision': 0.5695121951219512, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5503830288744843, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.241, 'eval_steps_per_second': 33.514, 'epoch': 14.0}
{'loss': 0.0113, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.23771554231643677, 'eval_precision': 0.5380549682875264, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5584201865057598, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.48, 'eval_steps_per_second': 33.419, 'epoch': 15.0}
{'loss': 0.0099, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.24381031095981598, 'eval_precision': 0.5508196721311476, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5625, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 5.722, 'eval_samples_per_second': 267.563, 'eval_steps_per_second': 33.555, 'epoch': 16.0}
{'loss': 0.0087, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.24536465108394623, 'eval_precision': 0.5441340782122905, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5496613995485328, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 5.7288, 'eval_samples_per_second': 267.246, 'eval_steps_per_second': 33.515, 'epoch': 17.0}
{'loss': 0.0077, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.24709303677082062, 'eval_precision': 0.5316718587746625, 'eval_recall': 0.5838084378563284, 'eval_f1': 0.5565217391304348, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 5.8071, 'eval_samples_per_second': 263.641, 'eval_steps_per_second': 33.063, 'epoch': 18.0}
{'loss': 0.0073, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.2495572417974472, 'eval_precision': 0.5401069518716578, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5573951434878588, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 5.7247, 'eval_samples_per_second': 267.436, 'eval_steps_per_second': 33.539, 'epoch': 19.0}
{'loss': 0.0066, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.24859701097011566, 'eval_precision': 0.5610599078341014, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5581661891117479, 'eval_accuracy': 0.954798116266502, 'eval_runtime': 5.7066, 'eval_samples_per_second': 268.287, 'eval_steps_per_second': 33.645, 'epoch': 20.0}
{'loss': 0.0064, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.2531830668449402, 'eval_precision': 0.5658042744656918, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5696489241223103, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 5.7093, 'eval_samples_per_second': 268.159, 'eval_steps_per_second': 33.629, 'epoch': 21.0}
{'loss': 0.0061, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.250850647687912, 'eval_precision': 0.55995599559956, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5699888017917133, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 5.7375, 'eval_samples_per_second': 266.842, 'eval_steps_per_second': 33.464, 'epoch': 22.0}
{'loss': 0.0057, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.2539845407009125, 'eval_precision': 0.5668571428571428, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5662100456621004, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 5.7251, 'eval_samples_per_second': 267.421, 'eval_steps_per_second': 33.537, 'epoch': 23.0}
{'loss': 0.0052, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.25449562072753906, 'eval_precision': 0.5637583892617449, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5691699604743083, 'eval_accuracy': 0.9548753184590443, 'eval_runtime': 5.7325, 'eval_samples_per_second': 267.075, 'eval_steps_per_second': 33.493, 'epoch': 24.0}
{'train_runtime': 2458.0098, 'train_samples_per_second': 84.302, 'train_steps_per_second': 1.318, 'train_loss': 0.09096899459391465, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.091
  train_runtime            = 0:40:58.00
  train_samples            =       8634
  train_samples_per_second =     84.302
  train_steps_per_second   =      1.318
[{'loss': 0.9441, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.44880473613739014, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7808, 'eval_samples_per_second': 264.844, 'eval_steps_per_second': 33.214, 'epoch': 1.0, 'step': 135}, {'loss': 0.3165, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.22678562998771667, 'eval_precision': 0.18778280542986425, 'eval_recall': 0.18928164196123148, 'eval_f1': 0.18852924474730268, 'eval_accuracy': 0.9356133714197483, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.481, 'eval_steps_per_second': 33.544, 'epoch': 2.0, 'step': 270}, {'loss': 0.2087, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.196017786860466, 'eval_precision': 0.18786692759295498, 'eval_recall': 0.21892816419612315, 'eval_f1': 0.20221169036334913, 'eval_accuracy': 0.9387014591214391, 'eval_runtime': 5.7154, 'eval_samples_per_second': 267.871, 'eval_steps_per_second': 33.593, 'epoch': 3.0, 'step': 405}, {'loss': 0.1687, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.1999845802783966, 'eval_precision': 0.4221954161640531, 'eval_recall': 0.3990877993158495, 'eval_f1': 0.41031652989449, 'eval_accuracy': 0.9463058750868525, 'eval_runtime': 5.7331, 'eval_samples_per_second': 267.048, 'eval_steps_per_second': 33.49, 'epoch': 4.0, 'step': 540}, {'loss': 0.1211, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.1955263763666153, 'eval_precision': 0.44835965978128794, 'eval_recall': 0.4207525655644242, 'eval_f1': 0.4341176470588235, 'eval_accuracy': 0.9476955145526132, 'eval_runtime': 5.7255, 'eval_samples_per_second': 267.399, 'eval_steps_per_second': 33.534, 'epoch': 5.0, 'step': 675}, {'loss': 0.0905, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.195033460855484, 'eval_precision': 0.4376321353065539, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.4541963795940757, 'eval_accuracy': 0.9472709024936308, 'eval_runtime': 5.7424, 'eval_samples_per_second': 266.613, 'eval_steps_per_second': 33.435, 'epoch': 6.0, 'step': 810}, {'loss': 0.0674, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.1857641041278839, 'eval_precision': 0.5060240963855421, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5381740523224773, 'eval_accuracy': 0.9526750559715896, 'eval_runtime': 5.7378, 'eval_samples_per_second': 266.826, 'eval_steps_per_second': 33.462, 'epoch': 7.0, 'step': 945}, {'loss': 0.0505, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.19729991257190704, 'eval_precision': 0.5489721886336155, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5328638497652582, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 5.7308, 'eval_samples_per_second': 267.152, 'eval_steps_per_second': 33.503, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0384, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.19860967993736267, 'eval_precision': 0.5312169312169313, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5510428100987925, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.7886, 'eval_samples_per_second': 264.483, 'eval_steps_per_second': 33.168, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0298, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2115486115217209, 'eval_precision': 0.5361842105263158, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.5466741196198994, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 5.7282, 'eval_samples_per_second': 267.276, 'eval_steps_per_second': 33.519, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0239, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2142745405435562, 'eval_precision': 0.5437837837837838, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.55826859045505, 'eval_accuracy': 0.9549911217478576, 'eval_runtime': 5.7257, 'eval_samples_per_second': 267.389, 'eval_steps_per_second': 33.533, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0196, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.21708111464977264, 'eval_precision': 0.5299145299145299, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5471594043022615, 'eval_accuracy': 0.9536786844746391, 'eval_runtime': 5.7242, 'eval_samples_per_second': 267.461, 'eval_steps_per_second': 33.542, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0158, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.22853049635887146, 'eval_precision': 0.5375275938189845, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5462703309029725, 'eval_accuracy': 0.9534856789932834, 'eval_runtime': 5.7442, 'eval_samples_per_second': 266.53, 'eval_steps_per_second': 33.425, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0133, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.2349490523338318, 'eval_precision': 0.5695121951219512, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5503830288744843, 'eval_accuracy': 0.9547209140739596, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.241, 'eval_steps_per_second': 33.514, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0113, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.23771554231643677, 'eval_precision': 0.5380549682875264, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5584201865057598, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.48, 'eval_steps_per_second': 33.419, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0099, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.24381031095981598, 'eval_precision': 0.5508196721311476, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5625, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 5.722, 'eval_samples_per_second': 267.563, 'eval_steps_per_second': 33.555, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0087, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.24536465108394623, 'eval_precision': 0.5441340782122905, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5496613995485328, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 5.7288, 'eval_samples_per_second': 267.246, 'eval_steps_per_second': 33.515, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0077, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.24709303677082062, 'eval_precision': 0.5316718587746625, 'eval_recall': 0.5838084378563284, 'eval_f1': 0.5565217391304348, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 5.8071, 'eval_samples_per_second': 263.641, 'eval_steps_per_second': 33.063, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0073, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2495572417974472, 'eval_precision': 0.5401069518716578, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5573951434878588, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 5.7247, 'eval_samples_per_second': 267.436, 'eval_steps_per_second': 33.539, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0066, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.24859701097011566, 'eval_precision': 0.5610599078341014, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5581661891117479, 'eval_accuracy': 0.954798116266502, 'eval_runtime': 5.7066, 'eval_samples_per_second': 268.287, 'eval_steps_per_second': 33.645, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0064, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.2531830668449402, 'eval_precision': 0.5658042744656918, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5696489241223103, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 5.7093, 'eval_samples_per_second': 268.159, 'eval_steps_per_second': 33.629, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0061, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.250850647687912, 'eval_precision': 0.55995599559956, 'eval_recall': 0.580387685290764, 'eval_f1': 0.5699888017917133, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 5.7375, 'eval_samples_per_second': 266.842, 'eval_steps_per_second': 33.464, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0057, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.2539845407009125, 'eval_precision': 0.5668571428571428, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.5662100456621004, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 5.7251, 'eval_samples_per_second': 267.421, 'eval_steps_per_second': 33.537, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0052, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.25449562072753906, 'eval_precision': 0.5637583892617449, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5691699604743083, 'eval_accuracy': 0.9548753184590443, 'eval_runtime': 5.7325, 'eval_samples_per_second': 267.075, 'eval_steps_per_second': 33.493, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2458.0098, 'train_samples_per_second': 84.302, 'train_steps_per_second': 1.318, 'total_flos': 2.705738887944774e+16, 'train_loss': 0.09096899459391465, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9519
  predict_f1                 =      0.524
  predict_loss               =      0.198
  predict_precision          =     0.5063
  predict_recall             =     0.5429
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =     265.67
  predict_steps_per_second   =     33.209
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_37.json completed. F1: 0.5239658568614576
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_25.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_25.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6762.19 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7164.13 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6945.03 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6983.43 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7045.11 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7186.12 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7354.97 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6412.66 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6837.65 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7400.42 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7049.92 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7144.93 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6966.04 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.6094, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8107, 'eval_samples_per_second': 263.481, 'eval_steps_per_second': 33.043, 'epoch': 1.0}
{'loss': 1.6094, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7267, 'eval_samples_per_second': 267.345, 'eval_steps_per_second': 33.527, 'epoch': 2.0}
{'loss': 1.6094, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7027, 'eval_samples_per_second': 268.471, 'eval_steps_per_second': 33.668, 'epoch': 3.0}
{'loss': 1.6094, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7104, 'eval_samples_per_second': 268.106, 'eval_steps_per_second': 33.623, 'epoch': 4.0}
{'loss': 1.6094, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 5.0}
{'loss': 1.6094, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.241, 'eval_steps_per_second': 33.514, 'epoch': 6.0}
{'loss': 1.6094, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7317, 'eval_samples_per_second': 267.11, 'eval_steps_per_second': 33.498, 'epoch': 7.0}
{'loss': 1.6094, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7326, 'eval_samples_per_second': 267.07, 'eval_steps_per_second': 33.493, 'epoch': 8.0}
{'loss': 1.6094, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.724, 'eval_samples_per_second': 267.471, 'eval_steps_per_second': 33.543, 'epoch': 9.0}
{'loss': 1.6094, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.914, 'eval_steps_per_second': 33.473, 'epoch': 10.0}
{'loss': 1.6094, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7394, 'eval_samples_per_second': 266.751, 'eval_steps_per_second': 33.453, 'epoch': 11.0}
{'loss': 1.6094, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7911, 'eval_samples_per_second': 264.37, 'eval_steps_per_second': 33.154, 'epoch': 12.0}
{'loss': 1.6094, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7033, 'eval_samples_per_second': 268.442, 'eval_steps_per_second': 33.665, 'epoch': 13.0}
{'loss': 1.6094, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.482, 'eval_steps_per_second': 33.544, 'epoch': 14.0}
{'loss': 1.6094, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7225, 'eval_samples_per_second': 267.539, 'eval_steps_per_second': 33.552, 'epoch': 15.0}
{'loss': 1.6094, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7173, 'eval_samples_per_second': 267.782, 'eval_steps_per_second': 33.582, 'epoch': 16.0}
{'loss': 1.6094, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8008, 'eval_samples_per_second': 263.93, 'eval_steps_per_second': 33.099, 'epoch': 17.0}
{'loss': 1.6094, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7101, 'eval_samples_per_second': 268.121, 'eval_steps_per_second': 33.625, 'epoch': 18.0}
{'loss': 1.6094, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7284, 'eval_samples_per_second': 267.266, 'eval_steps_per_second': 33.517, 'epoch': 19.0}
{'loss': 1.6094, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7138, 'eval_samples_per_second': 267.949, 'eval_steps_per_second': 33.603, 'epoch': 20.0}
{'loss': 1.6094, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7215, 'eval_samples_per_second': 267.588, 'eval_steps_per_second': 33.558, 'epoch': 21.0}
{'loss': 1.6094, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7004, 'eval_samples_per_second': 268.58, 'eval_steps_per_second': 33.682, 'epoch': 22.0}
{'loss': 1.6094, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.716, 'eval_samples_per_second': 267.844, 'eval_steps_per_second': 33.59, 'epoch': 23.0}
{'loss': 1.6094, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9459, 'eval_samples_per_second': 257.487, 'eval_steps_per_second': 32.291, 'epoch': 24.0}
{'train_runtime': 2447.2402, 'train_samples_per_second': 84.673, 'train_steps_per_second': 2.648, 'train_loss': 1.6094363648214458, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     1.6094
  train_runtime            = 0:40:47.24
  train_samples            =       8634
  train_samples_per_second =     84.673
  train_steps_per_second   =      2.648
[{'loss': 1.6094, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8107, 'eval_samples_per_second': 263.481, 'eval_steps_per_second': 33.043, 'epoch': 1.0, 'step': 270}, {'loss': 1.6094, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7267, 'eval_samples_per_second': 267.345, 'eval_steps_per_second': 33.527, 'epoch': 2.0, 'step': 540}, {'loss': 1.6094, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7027, 'eval_samples_per_second': 268.471, 'eval_steps_per_second': 33.668, 'epoch': 3.0, 'step': 810}, {'loss': 1.6094, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7104, 'eval_samples_per_second': 268.106, 'eval_steps_per_second': 33.623, 'epoch': 4.0, 'step': 1080}, {'loss': 1.6094, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7111, 'eval_samples_per_second': 268.075, 'eval_steps_per_second': 33.619, 'epoch': 5.0, 'step': 1350}, {'loss': 1.6094, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7289, 'eval_samples_per_second': 267.241, 'eval_steps_per_second': 33.514, 'epoch': 6.0, 'step': 1620}, {'loss': 1.6094, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7317, 'eval_samples_per_second': 267.11, 'eval_steps_per_second': 33.498, 'epoch': 7.0, 'step': 1890}, {'loss': 1.6094, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7326, 'eval_samples_per_second': 267.07, 'eval_steps_per_second': 33.493, 'epoch': 8.0, 'step': 2160}, {'loss': 1.6094, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.724, 'eval_samples_per_second': 267.471, 'eval_steps_per_second': 33.543, 'epoch': 9.0, 'step': 2430}, {'loss': 1.6094, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.914, 'eval_steps_per_second': 33.473, 'epoch': 10.0, 'step': 2700}, {'loss': 1.6094, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7394, 'eval_samples_per_second': 266.751, 'eval_steps_per_second': 33.453, 'epoch': 11.0, 'step': 2970}, {'loss': 1.6094, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7911, 'eval_samples_per_second': 264.37, 'eval_steps_per_second': 33.154, 'epoch': 12.0, 'step': 3240}, {'loss': 1.6094, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7033, 'eval_samples_per_second': 268.442, 'eval_steps_per_second': 33.665, 'epoch': 13.0, 'step': 3510}, {'loss': 1.6094, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.482, 'eval_steps_per_second': 33.544, 'epoch': 14.0, 'step': 3780}, {'loss': 1.6094, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7225, 'eval_samples_per_second': 267.539, 'eval_steps_per_second': 33.552, 'epoch': 15.0, 'step': 4050}, {'loss': 1.6094, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7173, 'eval_samples_per_second': 267.782, 'eval_steps_per_second': 33.582, 'epoch': 16.0, 'step': 4320}, {'loss': 1.6094, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8008, 'eval_samples_per_second': 263.93, 'eval_steps_per_second': 33.099, 'epoch': 17.0, 'step': 4590}, {'loss': 1.6094, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7101, 'eval_samples_per_second': 268.121, 'eval_steps_per_second': 33.625, 'epoch': 18.0, 'step': 4860}, {'loss': 1.6094, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7284, 'eval_samples_per_second': 267.266, 'eval_steps_per_second': 33.517, 'epoch': 19.0, 'step': 5130}, {'loss': 1.6094, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7138, 'eval_samples_per_second': 267.949, 'eval_steps_per_second': 33.603, 'epoch': 20.0, 'step': 5400}, {'loss': 1.6094, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7215, 'eval_samples_per_second': 267.588, 'eval_steps_per_second': 33.558, 'epoch': 21.0, 'step': 5670}, {'loss': 1.6094, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7004, 'eval_samples_per_second': 268.58, 'eval_steps_per_second': 33.682, 'epoch': 22.0, 'step': 5940}, {'loss': 1.6094, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.716, 'eval_samples_per_second': 267.844, 'eval_steps_per_second': 33.59, 'epoch': 23.0, 'step': 6210}, {'loss': 1.6094, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9459, 'eval_samples_per_second': 257.487, 'eval_steps_per_second': 32.291, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2447.2402, 'train_samples_per_second': 84.673, 'train_steps_per_second': 2.648, 'total_flos': 2.3711735486578776e+16, 'train_loss': 1.6094363648214458, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     1.6094
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.96
  predict_samples_per_second =     256.42
  predict_steps_per_second   =     32.052
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_25.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_31.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_31.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6116.63 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6804.36 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6690.76 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6715.16 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6817.29 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6942.59 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7130.48 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6189.93 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6584.05 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7086.89 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6714.57 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6840.93 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6658.51 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2931, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1998109668493271, 'eval_precision': 0.2904820766378245, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2787663107947806, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.8544, 'eval_samples_per_second': 315.384, 'eval_steps_per_second': 39.552, 'epoch': 1.0}
{'loss': 0.1831, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.19421328604221344, 'eval_precision': 0.3034571062740077, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2858866103739445, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 4.8078, 'eval_samples_per_second': 318.444, 'eval_steps_per_second': 39.935, 'epoch': 2.0}
{'loss': 0.1319, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.2039540708065033, 'eval_precision': 0.2822085889570552, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29757412398921834, 'eval_accuracy': 0.9393576777580483, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.13, 'eval_steps_per_second': 41.15, 'epoch': 3.0}
{'loss': 0.0943, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.22770150005817413, 'eval_precision': 0.2754158964879852, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30423685553854, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6568, 'eval_samples_per_second': 328.765, 'eval_steps_per_second': 41.23, 'epoch': 4.0}
{'loss': 0.0646, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2600214183330536, 'eval_precision': 0.289010989010989, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29434806939003916, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6767, 'eval_samples_per_second': 327.369, 'eval_steps_per_second': 41.055, 'epoch': 5.0}
{'loss': 0.0449, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2866218388080597, 'eval_precision': 0.29429133858267714, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3159006867406233, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 4.8142, 'eval_samples_per_second': 318.021, 'eval_steps_per_second': 39.882, 'epoch': 6.0}
{'loss': 0.0326, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3055683970451355, 'eval_precision': 0.3041431261770245, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.33316142341413096, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 4.8971, 'eval_samples_per_second': 312.634, 'eval_steps_per_second': 39.207, 'epoch': 7.0}
{'loss': 0.0223, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3336568772792816, 'eval_precision': 0.303125, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31682090364725096, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 4.807, 'eval_samples_per_second': 318.492, 'eval_steps_per_second': 39.942, 'epoch': 8.0}
{'loss': 0.0143, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3717665374279022, 'eval_precision': 0.2616136919315403, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3051330798479087, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 4.7255, 'eval_samples_per_second': 323.986, 'eval_steps_per_second': 40.631, 'epoch': 9.0}
{'loss': 0.0108, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3795000910758972, 'eval_precision': 0.30564102564102563, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3218142548596112, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.717, 'eval_samples_per_second': 324.568, 'eval_steps_per_second': 40.704, 'epoch': 10.0}
{'loss': 0.0073, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.3992208242416382, 'eval_precision': 0.2875243664717349, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31003678402522333, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.8325, 'eval_samples_per_second': 316.815, 'eval_steps_per_second': 39.731, 'epoch': 11.0}
{'loss': 0.0052, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.4013296365737915, 'eval_precision': 0.3019571295433364, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3323076923076923, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6891, 'eval_samples_per_second': 326.499, 'eval_steps_per_second': 40.946, 'epoch': 12.0}
{'loss': 0.0046, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.4257535934448242, 'eval_precision': 0.3282937365010799, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3372157515252357, 'eval_accuracy': 0.9435651972516019, 'eval_runtime': 4.8064, 'eval_samples_per_second': 318.533, 'eval_steps_per_second': 39.947, 'epoch': 13.0}
{'loss': 0.0034, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.42212679982185364, 'eval_precision': 0.30606060606060603, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.32458489555436526, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.8936, 'eval_samples_per_second': 312.86, 'eval_steps_per_second': 39.235, 'epoch': 14.0}
{'loss': 0.0027, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.45264795422554016, 'eval_precision': 0.3162217659137577, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.33279308481901676, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.8451, 'eval_samples_per_second': 315.987, 'eval_steps_per_second': 39.627, 'epoch': 15.0}
{'loss': 0.0027, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.44758614897727966, 'eval_precision': 0.3220892274211099, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.32962138084632514, 'eval_accuracy': 0.9427545742299082, 'eval_runtime': 4.6878, 'eval_samples_per_second': 326.593, 'eval_steps_per_second': 40.957, 'epoch': 16.0}
{'loss': 0.0016, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.46048396825790405, 'eval_precision': 0.3276595744680851, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3390203632361034, 'eval_accuracy': 0.9423685632671968, 'eval_runtime': 4.7041, 'eval_samples_per_second': 325.462, 'eval_steps_per_second': 40.816, 'epoch': 17.0}
{'loss': 0.0013, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.4718649983406067, 'eval_precision': 0.32915717539863326, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.32934472934472936, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.8266, 'eval_samples_per_second': 317.201, 'eval_steps_per_second': 39.78, 'epoch': 18.0}
{'loss': 0.0015, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.4729621708393097, 'eval_precision': 0.31917098445595854, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3344191096634093, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.103, 'eval_steps_per_second': 41.272, 'epoch': 19.0}
{'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.4770236015319824, 'eval_precision': 0.32468879668049794, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3400325909831613, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.729, 'eval_samples_per_second': 323.747, 'eval_steps_per_second': 40.601, 'epoch': 20.0}
{'loss': 0.0007, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.4896498918533325, 'eval_precision': 0.32887402452619846, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.33258173618940245, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.657, 'eval_samples_per_second': 328.749, 'eval_steps_per_second': 41.228, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.48989659547805786, 'eval_precision': 0.33111111111111113, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3353967360720315, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 4.6864, 'eval_samples_per_second': 326.693, 'eval_steps_per_second': 40.97, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.49229538440704346, 'eval_precision': 0.3218514531754575, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.33111849390919157, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.983, 'eval_steps_per_second': 41.257, 'epoch': 23.0}
{'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4922887682914734, 'eval_precision': 0.3228602383531961, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3311111111111111, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.868, 'eval_samples_per_second': 314.501, 'eval_steps_per_second': 39.441, 'epoch': 24.0}
{'train_runtime': 2130.8065, 'train_samples_per_second': 97.248, 'train_steps_per_second': 3.041, 'train_loss': 0.038574472548049174, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0386
  train_runtime            = 0:35:30.80
  train_samples            =       8634
  train_samples_per_second =     97.248
  train_steps_per_second   =      3.041
[{'loss': 0.2931, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.1998109668493271, 'eval_precision': 0.2904820766378245, 'eval_recall': 0.26795895096921324, 'eval_f1': 0.2787663107947806, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.8544, 'eval_samples_per_second': 315.384, 'eval_steps_per_second': 39.552, 'epoch': 1.0, 'step': 270}, {'loss': 0.1831, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.19421328604221344, 'eval_precision': 0.3034571062740077, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2858866103739445, 'eval_accuracy': 0.9432177873851617, 'eval_runtime': 4.8078, 'eval_samples_per_second': 318.444, 'eval_steps_per_second': 39.935, 'epoch': 2.0, 'step': 540}, {'loss': 0.1319, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.2039540708065033, 'eval_precision': 0.2822085889570552, 'eval_recall': 0.314709236031927, 'eval_f1': 0.29757412398921834, 'eval_accuracy': 0.9393576777580483, 'eval_runtime': 4.6658, 'eval_samples_per_second': 328.13, 'eval_steps_per_second': 41.15, 'epoch': 3.0, 'step': 810}, {'loss': 0.0943, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.22770150005817413, 'eval_precision': 0.2754158964879852, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30423685553854, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.6568, 'eval_samples_per_second': 328.765, 'eval_steps_per_second': 41.23, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0646, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.2600214183330536, 'eval_precision': 0.289010989010989, 'eval_recall': 0.2998859749144812, 'eval_f1': 0.29434806939003916, 'eval_accuracy': 0.9388558635065236, 'eval_runtime': 4.6767, 'eval_samples_per_second': 327.369, 'eval_steps_per_second': 41.055, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0449, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.2866218388080597, 'eval_precision': 0.29429133858267714, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3159006867406233, 'eval_accuracy': 0.9374276229444917, 'eval_runtime': 4.8142, 'eval_samples_per_second': 318.021, 'eval_steps_per_second': 39.882, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0326, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.3055683970451355, 'eval_precision': 0.3041431261770245, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.33316142341413096, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 4.8971, 'eval_samples_per_second': 312.634, 'eval_steps_per_second': 39.207, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0223, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.3336568772792816, 'eval_precision': 0.303125, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31682090364725096, 'eval_accuracy': 0.9395120821431329, 'eval_runtime': 4.807, 'eval_samples_per_second': 318.492, 'eval_steps_per_second': 39.942, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0143, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3717665374279022, 'eval_precision': 0.2616136919315403, 'eval_recall': 0.3660205245153934, 'eval_f1': 0.3051330798479087, 'eval_accuracy': 0.9333745078360225, 'eval_runtime': 4.7255, 'eval_samples_per_second': 323.986, 'eval_steps_per_second': 40.631, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0108, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3795000910758972, 'eval_precision': 0.30564102564102563, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3218142548596112, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.717, 'eval_samples_per_second': 324.568, 'eval_steps_per_second': 40.704, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0073, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.3992208242416382, 'eval_precision': 0.2875243664717349, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31003678402522333, 'eval_accuracy': 0.9393190766617772, 'eval_runtime': 4.8325, 'eval_samples_per_second': 316.815, 'eval_steps_per_second': 39.731, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0052, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.4013296365737915, 'eval_precision': 0.3019571295433364, 'eval_recall': 0.3694412770809578, 'eval_f1': 0.3323076923076923, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6891, 'eval_samples_per_second': 326.499, 'eval_steps_per_second': 40.946, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0046, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.4257535934448242, 'eval_precision': 0.3282937365010799, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3372157515252357, 'eval_accuracy': 0.9435651972516019, 'eval_runtime': 4.8064, 'eval_samples_per_second': 318.533, 'eval_steps_per_second': 39.947, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0034, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.42212679982185364, 'eval_precision': 0.30606060606060603, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.32458489555436526, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.8936, 'eval_samples_per_second': 312.86, 'eval_steps_per_second': 39.235, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0027, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.45264795422554016, 'eval_precision': 0.3162217659137577, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.33279308481901676, 'eval_accuracy': 0.9410947270902493, 'eval_runtime': 4.8451, 'eval_samples_per_second': 315.987, 'eval_steps_per_second': 39.627, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0027, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.44758614897727966, 'eval_precision': 0.3220892274211099, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.32962138084632514, 'eval_accuracy': 0.9427545742299082, 'eval_runtime': 4.6878, 'eval_samples_per_second': 326.593, 'eval_steps_per_second': 40.957, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0016, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.46048396825790405, 'eval_precision': 0.3276595744680851, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3390203632361034, 'eval_accuracy': 0.9423685632671968, 'eval_runtime': 4.7041, 'eval_samples_per_second': 325.462, 'eval_steps_per_second': 40.816, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0013, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.4718649983406067, 'eval_precision': 0.32915717539863326, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.32934472934472936, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.8266, 'eval_samples_per_second': 317.201, 'eval_steps_per_second': 39.78, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0015, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.4729621708393097, 'eval_precision': 0.31917098445595854, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3344191096634093, 'eval_accuracy': 0.9409403227051648, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.103, 'eval_steps_per_second': 41.272, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.4770236015319824, 'eval_precision': 0.32468879668049794, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3400325909831613, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.729, 'eval_samples_per_second': 323.747, 'eval_steps_per_second': 40.601, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0007, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.4896498918533325, 'eval_precision': 0.32887402452619846, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.33258173618940245, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.657, 'eval_samples_per_second': 328.749, 'eval_steps_per_second': 41.228, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0006, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.48989659547805786, 'eval_precision': 0.33111111111111113, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3353967360720315, 'eval_accuracy': 0.9430633830000772, 'eval_runtime': 4.6864, 'eval_samples_per_second': 326.693, 'eval_steps_per_second': 40.97, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.49229538440704346, 'eval_precision': 0.3218514531754575, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.33111849390919157, 'eval_accuracy': 0.9425615687485525, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.983, 'eval_steps_per_second': 41.257, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0005, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.4922887682914734, 'eval_precision': 0.3228602383531961, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.3311111111111111, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.868, 'eval_samples_per_second': 314.501, 'eval_steps_per_second': 39.441, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2130.8065, 'train_samples_per_second': 97.248, 'train_steps_per_second': 3.041, 'total_flos': 2.2848926950165572e+16, 'train_loss': 0.038574472548049174, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9438
  predict_f1                 =      0.282
  predict_loss               =     0.1995
  predict_precision          =     0.3027
  predict_recall             =     0.2639
  predict_runtime            = 0:00:04.17
  predict_samples_per_second =    304.857
  predict_steps_per_second   =     38.107
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_31.json completed. F1: 0.28197674418604657
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_46.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_46.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5794.09 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6496.12 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6408.18 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6493.75 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6540.92 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6679.71 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5743.25 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6083.65 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6246.37 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6808.27 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6394.86 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6530.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6347.66 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3133, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21890859305858612, 'eval_precision': 0.23573200992555832, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22578728461081404, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.8075, 'eval_samples_per_second': 545.315, 'eval_steps_per_second': 68.387, 'epoch': 1.0}
{'loss': 0.1967, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.20501571893692017, 'eval_precision': 0.25466666666666665, 'eval_recall': 0.217787913340935, 'eval_f1': 0.23478795328826058, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.5811, 'eval_samples_per_second': 593.154, 'eval_steps_per_second': 74.386, 'epoch': 2.0}
{'loss': 0.1365, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.22383299469947815, 'eval_precision': 0.28624078624078625, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.2755765819041987, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 2.5756, 'eval_samples_per_second': 594.434, 'eval_steps_per_second': 74.547, 'epoch': 3.0}
{'loss': 0.1033, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2580781877040863, 'eval_precision': 0.2511091393078971, 'eval_recall': 0.322690992018244, 'eval_f1': 0.28243512974051893, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.5305, 'eval_samples_per_second': 605.011, 'eval_steps_per_second': 75.873, 'epoch': 4.0}
{'loss': 0.0716, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.27284422516822815, 'eval_precision': 0.256989247311828, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2645268400664085, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 2.5427, 'eval_samples_per_second': 602.114, 'eval_steps_per_second': 75.51, 'epoch': 5.0}
{'loss': 0.0524, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3060281276702881, 'eval_precision': 0.2695356738391846, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.27045454545454545, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.5376, 'eval_samples_per_second': 603.328, 'eval_steps_per_second': 75.662, 'epoch': 6.0}
{'loss': 0.0372, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3326434791088104, 'eval_precision': 0.27836134453781514, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2897758337889558, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.4793, 'eval_samples_per_second': 617.514, 'eval_steps_per_second': 77.441, 'epoch': 7.0}
{'loss': 0.0269, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.34435832500457764, 'eval_precision': 0.28104575163398693, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2874651810584958, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 2.5052, 'eval_samples_per_second': 611.124, 'eval_steps_per_second': 76.64, 'epoch': 8.0}
{'loss': 0.0179, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.38387027382850647, 'eval_precision': 0.2546218487394958, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.2931785195936139, 'eval_accuracy': 0.928626572994673, 'eval_runtime': 2.607, 'eval_samples_per_second': 587.266, 'eval_steps_per_second': 73.648, 'epoch': 9.0}
{'loss': 0.0141, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.375943660736084, 'eval_precision': 0.26908752327746743, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.2962583290620195, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.5543, 'eval_samples_per_second': 599.376, 'eval_steps_per_second': 75.167, 'epoch': 10.0}
{'loss': 0.01, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.39680397510528564, 'eval_precision': 0.26973684210526316, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.29572385368366816, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3648, 'eval_samples_per_second': 647.399, 'eval_steps_per_second': 81.189, 'epoch': 11.0}
{'loss': 0.0073, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4417189061641693, 'eval_precision': 0.25786713286713286, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.29193468579910936, 'eval_accuracy': 0.9292827916312824, 'eval_runtime': 2.4814, 'eval_samples_per_second': 616.985, 'eval_steps_per_second': 77.375, 'epoch': 12.0}
{'loss': 0.0064, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.41267213225364685, 'eval_precision': 0.29375, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3070223189983669, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.587, 'eval_samples_per_second': 591.8, 'eval_steps_per_second': 74.217, 'epoch': 13.0}
{'loss': 0.0052, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.42689406871795654, 'eval_precision': 0.2909090909090909, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.30022075055187636, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.4676, 'eval_samples_per_second': 620.435, 'eval_steps_per_second': 77.808, 'epoch': 14.0}
{'loss': 0.0033, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4353412389755249, 'eval_precision': 0.2889125799573561, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.29862258953168047, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.4517, 'eval_samples_per_second': 624.476, 'eval_steps_per_second': 78.314, 'epoch': 15.0}
{'loss': 0.0029, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4433515667915344, 'eval_precision': 0.2908704883227176, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3012644310060473, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.4717, 'eval_samples_per_second': 619.414, 'eval_steps_per_second': 77.68, 'epoch': 16.0}
{'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4448796212673187, 'eval_precision': 0.2830188679245283, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2949208083014746, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.5518, 'eval_samples_per_second': 599.966, 'eval_steps_per_second': 75.241, 'epoch': 17.0}
{'loss': 0.002, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.45502161979675293, 'eval_precision': 0.2727272727272727, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28617886178861784, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.4658, 'eval_samples_per_second': 620.902, 'eval_steps_per_second': 77.866, 'epoch': 18.0}
{'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.455937922000885, 'eval_precision': 0.29547844374342797, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3074398249452954, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.469, 'eval_samples_per_second': 620.084, 'eval_steps_per_second': 77.764, 'epoch': 19.0}
{'loss': 0.0018, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.45759591460227966, 'eval_precision': 0.29520697167755994, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.30194986072423396, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.4784, 'eval_samples_per_second': 617.748, 'eval_steps_per_second': 77.471, 'epoch': 20.0}
{'loss': 0.0014, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.46802881360054016, 'eval_precision': 0.2849686847599165, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2975476839237057, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.4541, 'eval_samples_per_second': 623.848, 'eval_steps_per_second': 78.236, 'epoch': 21.0}
{'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.463335245847702, 'eval_precision': 0.30570505920344454, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3145071982281285, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.4711, 'eval_samples_per_second': 619.57, 'eval_steps_per_second': 77.699, 'epoch': 22.0}
{'loss': 0.0011, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4675721526145935, 'eval_precision': 0.30204962243797195, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31042128603104213, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.5055, 'eval_samples_per_second': 611.053, 'eval_steps_per_second': 76.631, 'epoch': 23.0}
{'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.4675109088420868, 'eval_precision': 0.30273224043715846, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.30915178571428575, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.4658, 'eval_samples_per_second': 620.895, 'eval_steps_per_second': 77.865, 'epoch': 24.0}
{'train_runtime': 848.4253, 'train_samples_per_second': 244.236, 'train_steps_per_second': 3.819, 'train_loss': 0.042401340514145514, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0424
  train_runtime            = 0:14:08.42
  train_samples            =       8634
  train_samples_per_second =    244.236
  train_steps_per_second   =      3.819
[{'loss': 0.3133, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.21890859305858612, 'eval_precision': 0.23573200992555832, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.22578728461081404, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.8075, 'eval_samples_per_second': 545.315, 'eval_steps_per_second': 68.387, 'epoch': 1.0, 'step': 135}, {'loss': 0.1967, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20501571893692017, 'eval_precision': 0.25466666666666665, 'eval_recall': 0.217787913340935, 'eval_f1': 0.23478795328826058, 'eval_accuracy': 0.9367714043078823, 'eval_runtime': 2.5811, 'eval_samples_per_second': 593.154, 'eval_steps_per_second': 74.386, 'epoch': 2.0, 'step': 270}, {'loss': 0.1365, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.22383299469947815, 'eval_precision': 0.28624078624078625, 'eval_recall': 0.26567844925883694, 'eval_f1': 0.2755765819041987, 'eval_accuracy': 0.9398594920095731, 'eval_runtime': 2.5756, 'eval_samples_per_second': 594.434, 'eval_steps_per_second': 74.547, 'epoch': 3.0, 'step': 405}, {'loss': 0.1033, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2580781877040863, 'eval_precision': 0.2511091393078971, 'eval_recall': 0.322690992018244, 'eval_f1': 0.28243512974051893, 'eval_accuracy': 0.9327568902956844, 'eval_runtime': 2.5305, 'eval_samples_per_second': 605.011, 'eval_steps_per_second': 75.873, 'epoch': 4.0, 'step': 540}, {'loss': 0.0716, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.27284422516822815, 'eval_precision': 0.256989247311828, 'eval_recall': 0.2725199543899658, 'eval_f1': 0.2645268400664085, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 2.5427, 'eval_samples_per_second': 602.114, 'eval_steps_per_second': 75.51, 'epoch': 5.0, 'step': 675}, {'loss': 0.0524, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.3060281276702881, 'eval_precision': 0.2695356738391846, 'eval_recall': 0.27137970353477764, 'eval_f1': 0.27045454545454545, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.5376, 'eval_samples_per_second': 603.328, 'eval_steps_per_second': 75.662, 'epoch': 6.0, 'step': 810}, {'loss': 0.0372, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3326434791088104, 'eval_precision': 0.27836134453781514, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2897758337889558, 'eval_accuracy': 0.935227360457037, 'eval_runtime': 2.4793, 'eval_samples_per_second': 617.514, 'eval_steps_per_second': 77.441, 'epoch': 7.0, 'step': 945}, {'loss': 0.0269, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.34435832500457764, 'eval_precision': 0.28104575163398693, 'eval_recall': 0.29418472063854045, 'eval_f1': 0.2874651810584958, 'eval_accuracy': 0.9368486065004246, 'eval_runtime': 2.5052, 'eval_samples_per_second': 611.124, 'eval_steps_per_second': 76.64, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0179, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.38387027382850647, 'eval_precision': 0.2546218487394958, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.2931785195936139, 'eval_accuracy': 0.928626572994673, 'eval_runtime': 2.607, 'eval_samples_per_second': 587.266, 'eval_steps_per_second': 73.648, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0141, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.375943660736084, 'eval_precision': 0.26908752327746743, 'eval_recall': 0.3295324971493729, 'eval_f1': 0.2962583290620195, 'eval_accuracy': 0.9330656990658535, 'eval_runtime': 2.5543, 'eval_samples_per_second': 599.376, 'eval_steps_per_second': 75.167, 'epoch': 10.0, 'step': 1350}, {'loss': 0.01, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.39680397510528564, 'eval_precision': 0.26973684210526316, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.29572385368366816, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.3648, 'eval_samples_per_second': 647.399, 'eval_steps_per_second': 81.189, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0073, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4417189061641693, 'eval_precision': 0.25786713286713286, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.29193468579910936, 'eval_accuracy': 0.9292827916312824, 'eval_runtime': 2.4814, 'eval_samples_per_second': 616.985, 'eval_steps_per_second': 77.375, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0064, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.41267213225364685, 'eval_precision': 0.29375, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.3070223189983669, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.587, 'eval_samples_per_second': 591.8, 'eval_steps_per_second': 74.217, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0052, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.42689406871795654, 'eval_precision': 0.2909090909090909, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.30022075055187636, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.4676, 'eval_samples_per_second': 620.435, 'eval_steps_per_second': 77.808, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0033, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4353412389755249, 'eval_precision': 0.2889125799573561, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.29862258953168047, 'eval_accuracy': 0.9364625955377133, 'eval_runtime': 2.4517, 'eval_samples_per_second': 624.476, 'eval_steps_per_second': 78.314, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0029, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4433515667915344, 'eval_precision': 0.2908704883227176, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.3012644310060473, 'eval_accuracy': 0.937234617463136, 'eval_runtime': 2.4717, 'eval_samples_per_second': 619.414, 'eval_steps_per_second': 77.68, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4448796212673187, 'eval_precision': 0.2830188679245283, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.2949208083014746, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.5518, 'eval_samples_per_second': 599.966, 'eval_steps_per_second': 75.241, 'epoch': 17.0, 'step': 2295}, {'loss': 0.002, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.45502161979675293, 'eval_precision': 0.2727272727272727, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.28617886178861784, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 2.4658, 'eval_samples_per_second': 620.902, 'eval_steps_per_second': 77.866, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0018, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.455937922000885, 'eval_precision': 0.29547844374342797, 'eval_recall': 0.3204104903078677, 'eval_f1': 0.3074398249452954, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.469, 'eval_samples_per_second': 620.084, 'eval_steps_per_second': 77.764, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0018, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.45759591460227966, 'eval_precision': 0.29520697167755994, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.30194986072423396, 'eval_accuracy': 0.9373504207519494, 'eval_runtime': 2.4784, 'eval_samples_per_second': 617.748, 'eval_steps_per_second': 77.471, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0014, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.46802881360054016, 'eval_precision': 0.2849686847599165, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.2975476839237057, 'eval_accuracy': 0.9352659615533081, 'eval_runtime': 2.4541, 'eval_samples_per_second': 623.848, 'eval_steps_per_second': 78.236, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.463335245847702, 'eval_precision': 0.30570505920344454, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3145071982281285, 'eval_accuracy': 0.9371960163668648, 'eval_runtime': 2.4711, 'eval_samples_per_second': 619.57, 'eval_steps_per_second': 77.699, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0011, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.4675721526145935, 'eval_precision': 0.30204962243797195, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.31042128603104213, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.5055, 'eval_samples_per_second': 611.053, 'eval_steps_per_second': 76.631, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0009, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.4675109088420868, 'eval_precision': 0.30273224043715846, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.30915178571428575, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.4658, 'eval_samples_per_second': 620.895, 'eval_steps_per_second': 77.865, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 848.4253, 'train_samples_per_second': 244.236, 'train_steps_per_second': 3.819, 'total_flos': 8936969334926268.0, 'train_loss': 0.042401340514145514, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9387
  predict_f1                 =     0.2515
  predict_loss               =     0.2139
  predict_precision          =     0.2736
  predict_recall             =     0.2327
  predict_runtime            = 0:00:02.05
  predict_samples_per_second =    618.586
  predict_steps_per_second   =     77.323
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_46.json completed. F1: 0.2514705882352941
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_12.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_12.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5792.69 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6415.57 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6341.23 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6413.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6492.24 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6590.05 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6773.16 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 5886.90 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6256.51 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6913.64 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6558.91 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6571.69 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6325.76 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.5479, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.21934233605861664, 'eval_precision': 0.2140221402214022, 'eval_recall': 0.1322690992018244, 'eval_f1': 0.16349541930937278, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 3.3643, 'eval_samples_per_second': 455.075, 'eval_steps_per_second': 57.07, 'epoch': 1.0}
{'loss': 0.2067, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.17851650714874268, 'eval_precision': 0.49355432780847147, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.3774647887323944, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 3.317, 'eval_samples_per_second': 461.56, 'eval_steps_per_second': 57.883, 'epoch': 2.0}
{'loss': 0.1474, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.1640142947435379, 'eval_precision': 0.4726810673443456, 'eval_recall': 0.4241733181299886, 'eval_f1': 0.4471153846153846, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 3.3279, 'eval_samples_per_second': 460.051, 'eval_steps_per_second': 57.694, 'epoch': 3.0}
{'loss': 0.105, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.1750948578119278, 'eval_precision': 0.49948186528497407, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.523344191096634, 'eval_accuracy': 0.9514784219871845, 'eval_runtime': 3.236, 'eval_samples_per_second': 473.118, 'eval_steps_per_second': 59.333, 'epoch': 4.0}
{'loss': 0.0726, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.18106256425380707, 'eval_precision': 0.5136911281489595, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.524022346368715, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 3.32, 'eval_samples_per_second': 461.144, 'eval_steps_per_second': 57.831, 'epoch': 5.0}
{'loss': 0.0503, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.19909663498401642, 'eval_precision': 0.5186522262334536, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5046838407494144, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 3.2282, 'eval_samples_per_second': 474.262, 'eval_steps_per_second': 59.476, 'epoch': 6.0}
{'loss': 0.0365, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.22135260701179504, 'eval_precision': 0.48601036269430054, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5092290988056462, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 3.1628, 'eval_samples_per_second': 484.057, 'eval_steps_per_second': 60.705, 'epoch': 7.0}
{'loss': 0.0264, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.23530685901641846, 'eval_precision': 0.5035971223021583, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5297297297297296, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 3.4603, 'eval_samples_per_second': 442.448, 'eval_steps_per_second': 55.487, 'epoch': 8.0}
{'loss': 0.0193, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.25829145312309265, 'eval_precision': 0.4763779527559055, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5113576333861595, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 3.5803, 'eval_samples_per_second': 427.612, 'eval_steps_per_second': 53.626, 'epoch': 9.0}
{'loss': 0.0135, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.26251718401908875, 'eval_precision': 0.5077262693156733, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5159842961301179, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 3.0234, 'eval_samples_per_second': 506.381, 'eval_steps_per_second': 63.504, 'epoch': 10.0}
{'loss': 0.0101, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.2787734270095825, 'eval_precision': 0.518348623853211, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5168667810177244, 'eval_accuracy': 0.9525978537790474, 'eval_runtime': 3.2878, 'eval_samples_per_second': 465.663, 'eval_steps_per_second': 58.398, 'epoch': 11.0}
{'loss': 0.0077, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.28837814927101135, 'eval_precision': 0.5111856823266219, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5160926030491247, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 3.2774, 'eval_samples_per_second': 467.145, 'eval_steps_per_second': 58.584, 'epoch': 12.0}
{'loss': 0.0057, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.29782047867774963, 'eval_precision': 0.5255813953488372, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5204375359815774, 'eval_accuracy': 0.9529452636454875, 'eval_runtime': 3.2522, 'eval_samples_per_second': 470.76, 'eval_steps_per_second': 59.037, 'epoch': 13.0}
{'loss': 0.0058, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.3050678074359894, 'eval_precision': 0.5209251101321586, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5299719887955182, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 3.26, 'eval_samples_per_second': 469.632, 'eval_steps_per_second': 58.896, 'epoch': 14.0}
{'loss': 0.0038, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.3153640925884247, 'eval_precision': 0.5270425776754891, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5246277205040092, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 3.19, 'eval_samples_per_second': 479.943, 'eval_steps_per_second': 60.189, 'epoch': 15.0}
{'loss': 0.0036, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.31790992617607117, 'eval_precision': 0.519650655021834, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5309537088678193, 'eval_accuracy': 0.9521346406237937, 'eval_runtime': 3.2847, 'eval_samples_per_second': 466.107, 'eval_steps_per_second': 58.454, 'epoch': 16.0}
{'loss': 0.0027, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.3260740637779236, 'eval_precision': 0.5261363636363636, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.527034718269778, 'eval_accuracy': 0.952790859260403, 'eval_runtime': 3.227, 'eval_samples_per_second': 474.438, 'eval_steps_per_second': 59.498, 'epoch': 17.0}
{'loss': 0.0023, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.3344581425189972, 'eval_precision': 0.5070883315158125, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5183946488294314, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 3.2721, 'eval_samples_per_second': 467.891, 'eval_steps_per_second': 58.677, 'epoch': 18.0}
{'loss': 0.0019, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3403554856777191, 'eval_precision': 0.5169769989047097, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5273743016759777, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 3.2212, 'eval_samples_per_second': 475.294, 'eval_steps_per_second': 59.606, 'epoch': 19.0}
{'loss': 0.0016, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.34009280800819397, 'eval_precision': 0.5107066381156317, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5267807840971839, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 3.3203, 'eval_samples_per_second': 461.108, 'eval_steps_per_second': 57.827, 'epoch': 20.0}
{'loss': 0.0019, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3395768105983734, 'eval_precision': 0.5212053571428571, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5267907501410041, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 3.0044, 'eval_samples_per_second': 509.588, 'eval_steps_per_second': 63.906, 'epoch': 21.0}
{'loss': 0.0018, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3432542383670807, 'eval_precision': 0.5345413363533409, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5363636363636364, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 3.0922, 'eval_samples_per_second': 495.119, 'eval_steps_per_second': 62.092, 'epoch': 22.0}
{'loss': 0.0009, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.34735023975372314, 'eval_precision': 0.532871972318339, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5298165137614679, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 3.2909, 'eval_samples_per_second': 465.222, 'eval_steps_per_second': 58.343, 'epoch': 23.0}
{'loss': 0.0011, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.34845900535583496, 'eval_precision': 0.5282167042889391, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5309132161089053, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 3.258, 'eval_samples_per_second': 469.926, 'eval_steps_per_second': 58.933, 'epoch': 24.0}
{'train_runtime': 1057.6151, 'train_samples_per_second': 195.928, 'train_steps_per_second': 12.254, 'train_loss': 0.053191853190461796, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0532
  train_runtime            = 0:17:37.61
  train_samples            =       8634
  train_samples_per_second =    195.928
  train_steps_per_second   =     12.254
[{'loss': 0.5479, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.21934233605861664, 'eval_precision': 0.2140221402214022, 'eval_recall': 0.1322690992018244, 'eval_f1': 0.16349541930937278, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 3.3643, 'eval_samples_per_second': 455.075, 'eval_steps_per_second': 57.07, 'epoch': 1.0, 'step': 540}, {'loss': 0.2067, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.17851650714874268, 'eval_precision': 0.49355432780847147, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.3774647887323944, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 3.317, 'eval_samples_per_second': 461.56, 'eval_steps_per_second': 57.883, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1474, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.1640142947435379, 'eval_precision': 0.4726810673443456, 'eval_recall': 0.4241733181299886, 'eval_f1': 0.4471153846153846, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 3.3279, 'eval_samples_per_second': 460.051, 'eval_steps_per_second': 57.694, 'epoch': 3.0, 'step': 1620}, {'loss': 0.105, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.1750948578119278, 'eval_precision': 0.49948186528497407, 'eval_recall': 0.5496009122006842, 'eval_f1': 0.523344191096634, 'eval_accuracy': 0.9514784219871845, 'eval_runtime': 3.236, 'eval_samples_per_second': 473.118, 'eval_steps_per_second': 59.333, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0726, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.18106256425380707, 'eval_precision': 0.5136911281489595, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.524022346368715, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 3.32, 'eval_samples_per_second': 461.144, 'eval_steps_per_second': 57.831, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0503, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.19909663498401642, 'eval_precision': 0.5186522262334536, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5046838407494144, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 3.2282, 'eval_samples_per_second': 474.262, 'eval_steps_per_second': 59.476, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0365, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.22135260701179504, 'eval_precision': 0.48601036269430054, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5092290988056462, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 3.1628, 'eval_samples_per_second': 484.057, 'eval_steps_per_second': 60.705, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0264, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.23530685901641846, 'eval_precision': 0.5035971223021583, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5297297297297296, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 3.4603, 'eval_samples_per_second': 442.448, 'eval_steps_per_second': 55.487, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0193, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.25829145312309265, 'eval_precision': 0.4763779527559055, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5113576333861595, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 3.5803, 'eval_samples_per_second': 427.612, 'eval_steps_per_second': 53.626, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0135, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.26251718401908875, 'eval_precision': 0.5077262693156733, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5159842961301179, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 3.0234, 'eval_samples_per_second': 506.381, 'eval_steps_per_second': 63.504, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0101, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.2787734270095825, 'eval_precision': 0.518348623853211, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5168667810177244, 'eval_accuracy': 0.9525978537790474, 'eval_runtime': 3.2878, 'eval_samples_per_second': 465.663, 'eval_steps_per_second': 58.398, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0077, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.28837814927101135, 'eval_precision': 0.5111856823266219, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5160926030491247, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 3.2774, 'eval_samples_per_second': 467.145, 'eval_steps_per_second': 58.584, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0057, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.29782047867774963, 'eval_precision': 0.5255813953488372, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5204375359815774, 'eval_accuracy': 0.9529452636454875, 'eval_runtime': 3.2522, 'eval_samples_per_second': 470.76, 'eval_steps_per_second': 59.037, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0058, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.3050678074359894, 'eval_precision': 0.5209251101321586, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5299719887955182, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 3.26, 'eval_samples_per_second': 469.632, 'eval_steps_per_second': 58.896, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0038, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3153640925884247, 'eval_precision': 0.5270425776754891, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5246277205040092, 'eval_accuracy': 0.9531768702231144, 'eval_runtime': 3.19, 'eval_samples_per_second': 479.943, 'eval_steps_per_second': 60.189, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0036, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.31790992617607117, 'eval_precision': 0.519650655021834, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5309537088678193, 'eval_accuracy': 0.9521346406237937, 'eval_runtime': 3.2847, 'eval_samples_per_second': 466.107, 'eval_steps_per_second': 58.454, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0027, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.3260740637779236, 'eval_precision': 0.5261363636363636, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.527034718269778, 'eval_accuracy': 0.952790859260403, 'eval_runtime': 3.227, 'eval_samples_per_second': 474.438, 'eval_steps_per_second': 59.498, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0023, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.3344581425189972, 'eval_precision': 0.5070883315158125, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5183946488294314, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 3.2721, 'eval_samples_per_second': 467.891, 'eval_steps_per_second': 58.677, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0019, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.3403554856777191, 'eval_precision': 0.5169769989047097, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5273743016759777, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 3.2212, 'eval_samples_per_second': 475.294, 'eval_steps_per_second': 59.606, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0016, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.34009280800819397, 'eval_precision': 0.5107066381156317, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5267807840971839, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 3.3203, 'eval_samples_per_second': 461.108, 'eval_steps_per_second': 57.827, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0019, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.3395768105983734, 'eval_precision': 0.5212053571428571, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5267907501410041, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 3.0044, 'eval_samples_per_second': 509.588, 'eval_steps_per_second': 63.906, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0018, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.3432542383670807, 'eval_precision': 0.5345413363533409, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5363636363636364, 'eval_accuracy': 0.9534084768007411, 'eval_runtime': 3.0922, 'eval_samples_per_second': 495.119, 'eval_steps_per_second': 62.092, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0009, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.34735023975372314, 'eval_precision': 0.532871972318339, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5298165137614679, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 3.2909, 'eval_samples_per_second': 465.222, 'eval_steps_per_second': 58.343, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0011, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.34845900535583496, 'eval_precision': 0.5282167042889391, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5309132161089053, 'eval_accuracy': 0.9530996680305721, 'eval_runtime': 3.258, 'eval_samples_per_second': 469.926, 'eval_steps_per_second': 58.933, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1057.6151, 'train_samples_per_second': 195.928, 'train_steps_per_second': 12.254, 'total_flos': 5803832751437580.0, 'train_loss': 0.053191853190461796, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9511
  predict_f1                 =     0.4211
  predict_loss               =      0.168
  predict_precision          =     0.4729
  predict_recall             =     0.3796
  predict_runtime            = 0:00:02.77
  predict_samples_per_second =    458.964
  predict_steps_per_second   =      57.37
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_12.json completed. F1: 0.4211320754716981
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_02.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_02.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6484.69 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6821.05 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6591.57 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6614.64 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6656.39 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6750.30 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5794.82 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6179.57 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6376.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6992.56 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6613.44 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6686.07 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6400.68 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2883, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.21962231397628784, 'eval_precision': 0.23521320495185694, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.21321695760598502, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.6192, 'eval_samples_per_second': 584.527, 'eval_steps_per_second': 73.304, 'epoch': 1.0}
{'loss': 0.1994, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.21331888437271118, 'eval_precision': 0.2778675282714055, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.2299465240641711, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 2.5665, 'eval_samples_per_second': 596.542, 'eval_steps_per_second': 74.811, 'epoch': 2.0}
{'loss': 0.1548, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.22189976274967194, 'eval_precision': 0.2649656526005888, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.28481012658227844, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.5608, 'eval_samples_per_second': 597.853, 'eval_steps_per_second': 74.976, 'epoch': 3.0}
{'loss': 0.1177, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.2590027153491974, 'eval_precision': 0.2839248434237996, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.296457765667575, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.4871, 'eval_samples_per_second': 615.581, 'eval_steps_per_second': 77.199, 'epoch': 4.0}
{'loss': 0.0914, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.28564372658729553, 'eval_precision': 0.2674066599394551, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2837259100642398, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.6158, 'eval_samples_per_second': 585.293, 'eval_steps_per_second': 73.401, 'epoch': 5.0}
{'loss': 0.07, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.30566155910491943, 'eval_precision': 0.2917570498915401, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29905503057254024, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.11, 'eval_steps_per_second': 80.902, 'epoch': 6.0}
{'loss': 0.0496, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.3558318018913269, 'eval_precision': 0.2770970782280867, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.303405572755418, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.6673, 'eval_samples_per_second': 573.985, 'eval_steps_per_second': 71.982, 'epoch': 7.0}
{'loss': 0.0423, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.3606089651584625, 'eval_precision': 0.2843551797040169, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29511793746571585, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.5515, 'eval_samples_per_second': 600.049, 'eval_steps_per_second': 75.251, 'epoch': 8.0}
{'loss': 0.0324, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.39075416326522827, 'eval_precision': 0.2604355716878403, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.2900454775138959, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4688, 'eval_samples_per_second': 620.13, 'eval_steps_per_second': 77.769, 'epoch': 9.0}
{'loss': 0.0253, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.4081477224826813, 'eval_precision': 0.30359085963003263, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31069042316258355, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.5095, 'eval_samples_per_second': 610.071, 'eval_steps_per_second': 76.508, 'epoch': 10.0}
{'loss': 0.0209, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.4304707646369934, 'eval_precision': 0.2912524850894632, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3112055231014339, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.4639, 'eval_samples_per_second': 621.371, 'eval_steps_per_second': 77.925, 'epoch': 11.0}
{'loss': 0.0154, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.4585320055484772, 'eval_precision': 0.29822834645669294, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3201267828843106, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.4911, 'eval_samples_per_second': 614.587, 'eval_steps_per_second': 77.074, 'epoch': 12.0}
{'loss': 0.0116, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.47274476289749146, 'eval_precision': 0.32386363636363635, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.32441661923733633, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.5839, 'eval_samples_per_second': 592.506, 'eval_steps_per_second': 74.305, 'epoch': 13.0}
{'loss': 0.0099, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.5004755854606628, 'eval_precision': 0.2767354596622889, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3036541430777148, 'eval_accuracy': 0.9300934146529761, 'eval_runtime': 2.5874, 'eval_samples_per_second': 591.72, 'eval_steps_per_second': 74.207, 'epoch': 14.0}
{'loss': 0.0083, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.49614089727401733, 'eval_precision': 0.296, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3153969099627064, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.5233, 'eval_samples_per_second': 606.749, 'eval_steps_per_second': 76.091, 'epoch': 15.0}
{'loss': 0.007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.5055251717567444, 'eval_precision': 0.2987927565392354, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31747728487439875, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.5604, 'eval_samples_per_second': 597.955, 'eval_steps_per_second': 74.988, 'epoch': 16.0}
{'loss': 0.0059, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.5147714018821716, 'eval_precision': 0.31135135135135134, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3196448390677025, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.531, 'eval_samples_per_second': 604.889, 'eval_steps_per_second': 75.858, 'epoch': 17.0}
{'loss': 0.005, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.5212956666946411, 'eval_precision': 0.293488824101069, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.31689401888772295, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.528, 'eval_samples_per_second': 605.625, 'eval_steps_per_second': 75.95, 'epoch': 18.0}
{'loss': 0.0038, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.5318501591682434, 'eval_precision': 0.30153846153846153, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3174946004319654, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.5466, 'eval_samples_per_second': 601.2, 'eval_steps_per_second': 75.395, 'epoch': 19.0}
{'loss': 0.003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.5303449034690857, 'eval_precision': 0.30328738069989397, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31428571428571433, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.4674, 'eval_samples_per_second': 620.48, 'eval_steps_per_second': 77.813, 'epoch': 20.0}
{'loss': 0.0034, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5437899827957153, 'eval_precision': 0.3067608476286579, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32548179871520344, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.5581, 'eval_samples_per_second': 598.502, 'eval_steps_per_second': 75.057, 'epoch': 21.0}
{'loss': 0.0021, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.5432209372520447, 'eval_precision': 0.3124346917450366, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3260632497273719, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.5236, 'eval_samples_per_second': 606.671, 'eval_steps_per_second': 76.082, 'epoch': 22.0}
{'loss': 0.0021, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.5509302616119385, 'eval_precision': 0.31390593047034765, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3309973045822102, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.4576, 'eval_samples_per_second': 622.96, 'eval_steps_per_second': 78.124, 'epoch': 23.0}
{'loss': 0.0023, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5526800155639648, 'eval_precision': 0.30561122244488975, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.32533333333333336, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.6036, 'eval_samples_per_second': 588.028, 'eval_steps_per_second': 73.743, 'epoch': 24.0}
{'train_runtime': 1558.9412, 'train_samples_per_second': 132.921, 'train_steps_per_second': 16.627, 'train_loss': 0.04882231221338849, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0488
  train_runtime            = 0:25:58.94
  train_samples            =       8634
  train_samples_per_second =    132.921
  train_steps_per_second   =     16.627
[{'loss': 0.2883, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.21962231397628784, 'eval_precision': 0.23521320495185694, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.21321695760598502, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.6192, 'eval_samples_per_second': 584.527, 'eval_steps_per_second': 73.304, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1994, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.21331888437271118, 'eval_precision': 0.2778675282714055, 'eval_recall': 0.1961231470923603, 'eval_f1': 0.2299465240641711, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 2.5665, 'eval_samples_per_second': 596.542, 'eval_steps_per_second': 74.811, 'epoch': 2.0, 'step': 2160}, {'loss': 0.1548, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.22189976274967194, 'eval_precision': 0.2649656526005888, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.28481012658227844, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 2.5608, 'eval_samples_per_second': 597.853, 'eval_steps_per_second': 74.976, 'epoch': 3.0, 'step': 3240}, {'loss': 0.1177, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.2590027153491974, 'eval_precision': 0.2839248434237996, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.296457765667575, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.4871, 'eval_samples_per_second': 615.581, 'eval_steps_per_second': 77.199, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0914, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.28564372658729553, 'eval_precision': 0.2674066599394551, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2837259100642398, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.6158, 'eval_samples_per_second': 585.293, 'eval_steps_per_second': 73.401, 'epoch': 5.0, 'step': 5400}, {'loss': 0.07, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.30566155910491943, 'eval_precision': 0.2917570498915401, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29905503057254024, 'eval_accuracy': 0.9351887593607658, 'eval_runtime': 2.3732, 'eval_samples_per_second': 645.11, 'eval_steps_per_second': 80.902, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0496, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.3558318018913269, 'eval_precision': 0.2770970782280867, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.303405572755418, 'eval_accuracy': 0.9310970431560256, 'eval_runtime': 2.6673, 'eval_samples_per_second': 573.985, 'eval_steps_per_second': 71.982, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0423, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.3606089651584625, 'eval_precision': 0.2843551797040169, 'eval_recall': 0.30672748004561, 'eval_f1': 0.29511793746571585, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 2.5515, 'eval_samples_per_second': 600.049, 'eval_steps_per_second': 75.251, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0324, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.39075416326522827, 'eval_precision': 0.2604355716878403, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.2900454775138959, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4688, 'eval_samples_per_second': 620.13, 'eval_steps_per_second': 77.769, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0253, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.4081477224826813, 'eval_precision': 0.30359085963003263, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.31069042316258355, 'eval_accuracy': 0.9349571527831391, 'eval_runtime': 2.5095, 'eval_samples_per_second': 610.071, 'eval_steps_per_second': 76.508, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0209, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.4304707646369934, 'eval_precision': 0.2912524850894632, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3112055231014339, 'eval_accuracy': 0.9341079286651741, 'eval_runtime': 2.4639, 'eval_samples_per_second': 621.371, 'eval_steps_per_second': 77.925, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0154, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.4585320055484772, 'eval_precision': 0.29822834645669294, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3201267828843106, 'eval_accuracy': 0.9334517100285649, 'eval_runtime': 2.4911, 'eval_samples_per_second': 614.587, 'eval_steps_per_second': 77.074, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0116, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.47274476289749146, 'eval_precision': 0.32386363636363635, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.32441661923733633, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 2.5839, 'eval_samples_per_second': 592.506, 'eval_steps_per_second': 74.305, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0099, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.5004755854606628, 'eval_precision': 0.2767354596622889, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3036541430777148, 'eval_accuracy': 0.9300934146529761, 'eval_runtime': 2.5874, 'eval_samples_per_second': 591.72, 'eval_steps_per_second': 74.207, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0083, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.49614089727401733, 'eval_precision': 0.296, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.3153969099627064, 'eval_accuracy': 0.9354203659383926, 'eval_runtime': 2.5233, 'eval_samples_per_second': 606.749, 'eval_steps_per_second': 76.091, 'epoch': 15.0, 'step': 16200}, {'loss': 0.007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.5055251717567444, 'eval_precision': 0.2987927565392354, 'eval_recall': 0.338654503990878, 'eval_f1': 0.31747728487439875, 'eval_accuracy': 0.9349185516868679, 'eval_runtime': 2.5604, 'eval_samples_per_second': 597.955, 'eval_steps_per_second': 74.988, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0059, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.5147714018821716, 'eval_precision': 0.31135135135135134, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.3196448390677025, 'eval_accuracy': 0.9370030108855092, 'eval_runtime': 2.531, 'eval_samples_per_second': 604.889, 'eval_steps_per_second': 75.858, 'epoch': 17.0, 'step': 18360}, {'loss': 0.005, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.5212956666946411, 'eval_precision': 0.293488824101069, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.31689401888772295, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.528, 'eval_samples_per_second': 605.625, 'eval_steps_per_second': 75.95, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0038, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.5318501591682434, 'eval_precision': 0.30153846153846153, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3174946004319654, 'eval_accuracy': 0.9335289122211071, 'eval_runtime': 2.5466, 'eval_samples_per_second': 601.2, 'eval_steps_per_second': 75.395, 'epoch': 19.0, 'step': 20520}, {'loss': 0.003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.5303449034690857, 'eval_precision': 0.30328738069989397, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.31428571428571433, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 2.4674, 'eval_samples_per_second': 620.48, 'eval_steps_per_second': 77.813, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0034, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.5437899827957153, 'eval_precision': 0.3067608476286579, 'eval_recall': 0.346636259977195, 'eval_f1': 0.32548179871520344, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.5581, 'eval_samples_per_second': 598.502, 'eval_steps_per_second': 75.057, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0021, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.5432209372520447, 'eval_precision': 0.3124346917450366, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3260632497273719, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.5236, 'eval_samples_per_second': 606.671, 'eval_steps_per_second': 76.082, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0021, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.5509302616119385, 'eval_precision': 0.31390593047034765, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3309973045822102, 'eval_accuracy': 0.9339535242800896, 'eval_runtime': 2.4576, 'eval_samples_per_second': 622.96, 'eval_steps_per_second': 78.124, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0023, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.5526800155639648, 'eval_precision': 0.30561122244488975, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.32533333333333336, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.6036, 'eval_samples_per_second': 588.028, 'eval_steps_per_second': 73.743, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1558.9412, 'train_samples_per_second': 132.921, 'train_steps_per_second': 16.627, 'total_flos': 5909182978626408.0, 'train_loss': 0.04882231221338849, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9423
  predict_f1                 =     0.2562
  predict_loss               =     0.2204
  predict_precision          =     0.3142
  predict_recall             =     0.2163
  predict_runtime            = 0:00:02.18
  predict_samples_per_second =    582.421
  predict_steps_per_second   =     72.803
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_02.json completed. F1: 0.25624496373892025
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_14.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_14.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6463.40 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6861.65 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6559.74 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6577.78 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6631.30 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6718.85 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5823.01 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6153.29 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6350.69 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6993.36 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6544.66 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6607.74 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6346.61 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3177, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.23121009767055511, 'eval_precision': 0.20804195804195805, 'eval_recall': 0.13568985176738882, 'eval_f1': 0.1642512077294686, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.6408, 'eval_samples_per_second': 579.752, 'eval_steps_per_second': 72.706, 'epoch': 1.0}
{'loss': 0.2173, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.21016934514045715, 'eval_precision': 0.2733446519524618, 'eval_recall': 0.18358038768529075, 'eval_f1': 0.21964529331514324, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 2.4501, 'eval_samples_per_second': 624.87, 'eval_steps_per_second': 78.364, 'epoch': 2.0}
{'loss': 0.175, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.21338535845279694, 'eval_precision': 0.2651006711409396, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2676453980801807, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 2.4448, 'eval_samples_per_second': 626.221, 'eval_steps_per_second': 78.533, 'epoch': 3.0}
{'loss': 0.1379, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.23692169785499573, 'eval_precision': 0.27657378740970073, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.2903575297941495, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.4326, 'eval_samples_per_second': 629.363, 'eval_steps_per_second': 78.927, 'epoch': 4.0}
{'loss': 0.1123, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.25566741824150085, 'eval_precision': 0.29924242424242425, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2840023966446974, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 2.34, 'eval_samples_per_second': 654.285, 'eval_steps_per_second': 82.053, 'epoch': 5.0}
{'loss': 0.0901, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.2658095359802246, 'eval_precision': 0.2776548672566372, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2818641212801797, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.4563, 'eval_samples_per_second': 623.29, 'eval_steps_per_second': 78.166, 'epoch': 6.0}
{'loss': 0.0737, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.30172908306121826, 'eval_precision': 0.26465364120781526, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.29755366949575635, 'eval_accuracy': 0.9299390102678916, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.774, 'eval_steps_per_second': 81.487, 'epoch': 7.0}
{'loss': 0.0595, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.31851619482040405, 'eval_precision': 0.2677543186180422, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.29077644606565917, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.6506, 'eval_samples_per_second': 577.603, 'eval_steps_per_second': 72.436, 'epoch': 8.0}
{'loss': 0.0489, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.33845585584640503, 'eval_precision': 0.23697478991596638, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2728592162554427, 'eval_accuracy': 0.9263491083146761, 'eval_runtime': 2.533, 'eval_samples_per_second': 604.417, 'eval_steps_per_second': 75.799, 'epoch': 9.0}
{'loss': 0.0432, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.3496570587158203, 'eval_precision': 0.27236580516898606, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29102496016994156, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.5605, 'eval_samples_per_second': 597.932, 'eval_steps_per_second': 74.986, 'epoch': 10.0}
{'loss': 0.0343, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.37620809674263, 'eval_precision': 0.27174975562072334, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2926315789473684, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.558, 'eval_samples_per_second': 598.519, 'eval_steps_per_second': 75.059, 'epoch': 11.0}
{'loss': 0.0297, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.37558943033218384, 'eval_precision': 0.27505112474437626, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2900269541778976, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.5746, 'eval_samples_per_second': 594.645, 'eval_steps_per_second': 74.573, 'epoch': 12.0}
{'loss': 0.025, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.40392324328422546, 'eval_precision': 0.27403846153846156, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.297339593114241, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 2.5345, 'eval_samples_per_second': 604.063, 'eval_steps_per_second': 75.754, 'epoch': 13.0}
{'loss': 0.0228, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.39949890971183777, 'eval_precision': 0.27840327533265097, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29341963322545844, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.584, 'eval_samples_per_second': 592.499, 'eval_steps_per_second': 74.304, 'epoch': 14.0}
{'loss': 0.0185, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.420427143573761, 'eval_precision': 0.27192118226600986, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2917547568710359, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.6173, 'eval_samples_per_second': 584.948, 'eval_steps_per_second': 73.357, 'epoch': 15.0}
{'loss': 0.0156, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.4187167286872864, 'eval_precision': 0.2759315206445116, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29304812834224603, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.5424, 'eval_samples_per_second': 602.186, 'eval_steps_per_second': 75.519, 'epoch': 16.0}
{'loss': 0.0143, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.43604224920272827, 'eval_precision': 0.2762271414821944, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.29958246346555323, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 2.6467, 'eval_samples_per_second': 578.449, 'eval_steps_per_second': 72.542, 'epoch': 17.0}
{'loss': 0.0124, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.4431544542312622, 'eval_precision': 0.27051397655545534, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3021148036253776, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 2.7432, 'eval_samples_per_second': 558.117, 'eval_steps_per_second': 69.992, 'epoch': 18.0}
{'loss': 0.0103, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.45113927125930786, 'eval_precision': 0.2664233576642336, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.2959959452610238, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 2.4496, 'eval_samples_per_second': 624.989, 'eval_steps_per_second': 78.379, 'epoch': 19.0}
{'loss': 0.0097, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.45034217834472656, 'eval_precision': 0.26703499079189685, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2954661232806928, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.5081, 'eval_samples_per_second': 610.426, 'eval_steps_per_second': 76.552, 'epoch': 20.0}
{'loss': 0.008, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4602638781070709, 'eval_precision': 0.26556776556776557, 'eval_recall': 0.330672748004561, 'eval_f1': 0.29456576942610463, 'eval_accuracy': 0.9313286497336525, 'eval_runtime': 2.5581, 'eval_samples_per_second': 598.494, 'eval_steps_per_second': 75.056, 'epoch': 21.0}
{'loss': 0.0075, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.45401158928871155, 'eval_precision': 0.2787878787878788, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2956614890198179, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.5108, 'eval_samples_per_second': 609.765, 'eval_steps_per_second': 76.47, 'epoch': 22.0}
{'loss': 0.0068, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.46502411365509033, 'eval_precision': 0.2653985507246377, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.29581019687026755, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4866, 'eval_samples_per_second': 615.699, 'eval_steps_per_second': 77.214, 'epoch': 23.0}
{'loss': 0.0068, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.46261271834373474, 'eval_precision': 0.2752808988764045, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3023136246786633, 'eval_accuracy': 0.931483054118737, 'eval_runtime': 2.4756, 'eval_samples_per_second': 618.439, 'eval_steps_per_second': 77.557, 'epoch': 24.0}
{'train_runtime': 1074.6986, 'train_samples_per_second': 192.813, 'train_steps_per_second': 12.059, 'train_loss': 0.06237658584191475, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0624
  train_runtime            = 0:17:54.69
  train_samples            =       8634
  train_samples_per_second =    192.813
  train_steps_per_second   =     12.059
[{'loss': 0.3177, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.23121009767055511, 'eval_precision': 0.20804195804195805, 'eval_recall': 0.13568985176738882, 'eval_f1': 0.1642512077294686, 'eval_accuracy': 0.9375048251370339, 'eval_runtime': 2.6408, 'eval_samples_per_second': 579.752, 'eval_steps_per_second': 72.706, 'epoch': 1.0, 'step': 540}, {'loss': 0.2173, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.21016934514045715, 'eval_precision': 0.2733446519524618, 'eval_recall': 0.18358038768529075, 'eval_f1': 0.21964529331514324, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 2.4501, 'eval_samples_per_second': 624.87, 'eval_steps_per_second': 78.364, 'epoch': 2.0, 'step': 1080}, {'loss': 0.175, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.21338535845279694, 'eval_precision': 0.2651006711409396, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2676453980801807, 'eval_accuracy': 0.9365397977302555, 'eval_runtime': 2.4448, 'eval_samples_per_second': 626.221, 'eval_steps_per_second': 78.533, 'epoch': 3.0, 'step': 1620}, {'loss': 0.1379, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.23692169785499573, 'eval_precision': 0.27657378740970073, 'eval_recall': 0.3055872291904219, 'eval_f1': 0.2903575297941495, 'eval_accuracy': 0.9330270979695824, 'eval_runtime': 2.4326, 'eval_samples_per_second': 629.363, 'eval_steps_per_second': 78.927, 'epoch': 4.0, 'step': 2160}, {'loss': 0.1123, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.25566741824150085, 'eval_precision': 0.29924242424242425, 'eval_recall': 0.2702394526795895, 'eval_f1': 0.2840023966446974, 'eval_accuracy': 0.9389330656990659, 'eval_runtime': 2.34, 'eval_samples_per_second': 654.285, 'eval_steps_per_second': 82.053, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0901, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.2658095359802246, 'eval_precision': 0.2776548672566372, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2818641212801797, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.4563, 'eval_samples_per_second': 623.29, 'eval_steps_per_second': 78.166, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0737, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.30172908306121826, 'eval_precision': 0.26465364120781526, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.29755366949575635, 'eval_accuracy': 0.9299390102678916, 'eval_runtime': 2.3562, 'eval_samples_per_second': 649.774, 'eval_steps_per_second': 81.487, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0595, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.31851619482040405, 'eval_precision': 0.2677543186180422, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.29077644606565917, 'eval_accuracy': 0.9309426387709411, 'eval_runtime': 2.6506, 'eval_samples_per_second': 577.603, 'eval_steps_per_second': 72.436, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0489, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.33845585584640503, 'eval_precision': 0.23697478991596638, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2728592162554427, 'eval_accuracy': 0.9263491083146761, 'eval_runtime': 2.533, 'eval_samples_per_second': 604.417, 'eval_steps_per_second': 75.799, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0432, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3496570587158203, 'eval_precision': 0.27236580516898606, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29102496016994156, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.5605, 'eval_samples_per_second': 597.932, 'eval_steps_per_second': 74.986, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0343, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.37620809674263, 'eval_precision': 0.27174975562072334, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2926315789473684, 'eval_accuracy': 0.9331429012583957, 'eval_runtime': 2.558, 'eval_samples_per_second': 598.519, 'eval_steps_per_second': 75.059, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0297, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.37558943033218384, 'eval_precision': 0.27505112474437626, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2900269541778976, 'eval_accuracy': 0.9332973056434802, 'eval_runtime': 2.5746, 'eval_samples_per_second': 594.645, 'eval_steps_per_second': 74.573, 'epoch': 12.0, 'step': 6480}, {'loss': 0.025, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.40392324328422546, 'eval_precision': 0.27403846153846156, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.297339593114241, 'eval_accuracy': 0.9321006716590751, 'eval_runtime': 2.5345, 'eval_samples_per_second': 604.063, 'eval_steps_per_second': 75.754, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0228, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.39949890971183777, 'eval_precision': 0.27840327533265097, 'eval_recall': 0.31014823261117447, 'eval_f1': 0.29341963322545844, 'eval_accuracy': 0.9336447155099205, 'eval_runtime': 2.584, 'eval_samples_per_second': 592.499, 'eval_steps_per_second': 74.304, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0185, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.420427143573761, 'eval_precision': 0.27192118226600986, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2917547568710359, 'eval_accuracy': 0.9319462672739905, 'eval_runtime': 2.6173, 'eval_samples_per_second': 584.948, 'eval_steps_per_second': 73.357, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0156, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.4187167286872864, 'eval_precision': 0.2759315206445116, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.29304812834224603, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.5424, 'eval_samples_per_second': 602.186, 'eval_steps_per_second': 75.519, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0143, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.43604224920272827, 'eval_precision': 0.2762271414821944, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.29958246346555323, 'eval_accuracy': 0.9318690650814483, 'eval_runtime': 2.6467, 'eval_samples_per_second': 578.449, 'eval_steps_per_second': 72.542, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0124, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.4431544542312622, 'eval_precision': 0.27051397655545534, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3021148036253776, 'eval_accuracy': 0.9301320157492473, 'eval_runtime': 2.7432, 'eval_samples_per_second': 558.117, 'eval_steps_per_second': 69.992, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0103, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.45113927125930786, 'eval_precision': 0.2664233576642336, 'eval_recall': 0.3329532497149373, 'eval_f1': 0.2959959452610238, 'eval_accuracy': 0.93090403767467, 'eval_runtime': 2.4496, 'eval_samples_per_second': 624.989, 'eval_steps_per_second': 78.379, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0097, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.45034217834472656, 'eval_precision': 0.26703499079189685, 'eval_recall': 0.330672748004561, 'eval_f1': 0.2954661232806928, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.5081, 'eval_samples_per_second': 610.426, 'eval_steps_per_second': 76.552, 'epoch': 20.0, 'step': 10800}, {'loss': 0.008, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.4602638781070709, 'eval_precision': 0.26556776556776557, 'eval_recall': 0.330672748004561, 'eval_f1': 0.29456576942610463, 'eval_accuracy': 0.9313286497336525, 'eval_runtime': 2.5581, 'eval_samples_per_second': 598.494, 'eval_steps_per_second': 75.056, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0075, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.45401158928871155, 'eval_precision': 0.2787878787878788, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2956614890198179, 'eval_accuracy': 0.9329112946807689, 'eval_runtime': 2.5108, 'eval_samples_per_second': 609.765, 'eval_steps_per_second': 76.47, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0068, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.46502411365509033, 'eval_precision': 0.2653985507246377, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.29581019687026755, 'eval_accuracy': 0.9299004091716204, 'eval_runtime': 2.4866, 'eval_samples_per_second': 615.699, 'eval_steps_per_second': 77.214, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0068, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.46261271834373474, 'eval_precision': 0.2752808988764045, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3023136246786633, 'eval_accuracy': 0.931483054118737, 'eval_runtime': 2.4756, 'eval_samples_per_second': 618.439, 'eval_steps_per_second': 77.557, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1074.6986, 'train_samples_per_second': 192.813, 'train_steps_per_second': 12.059, 'total_flos': 6897940449212160.0, 'train_loss': 0.06237658584191475, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9415
  predict_f1                 =     0.2209
  predict_loss               =     0.2131
  predict_precision          =      0.287
  predict_recall             =     0.1796
  predict_runtime            = 0:00:02.05
  predict_samples_per_second =    618.442
  predict_steps_per_second   =     77.305
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_14.json completed. F1: 0.2209205020920502
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_16.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6588.82 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6927.02 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6735.65 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6739.05 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6761.49 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6865.34 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7044.77 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6137.09 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6563.89 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7132.77 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6684.87 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6774.46 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6548.42 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3808, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19835971295833588, 'eval_precision': 0.23563218390804597, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.20851875397329941, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 3.1768, 'eval_samples_per_second': 481.93, 'eval_steps_per_second': 60.438, 'epoch': 1.0}
{'loss': 0.1708, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.1638171523809433, 'eval_precision': 0.47041420118343197, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.4095299420476497, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 3.2533, 'eval_samples_per_second': 470.597, 'eval_steps_per_second': 59.017, 'epoch': 2.0}
{'loss': 0.1059, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.16918669641017914, 'eval_precision': 0.4461538461538462, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.49747729566094856, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 3.1542, 'eval_samples_per_second': 485.383, 'eval_steps_per_second': 60.871, 'epoch': 3.0}
{'loss': 0.0633, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.19451361894607544, 'eval_precision': 0.523756906077348, 'eval_recall': 0.540478905359179, 'eval_f1': 0.531986531986532, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.586, 'eval_steps_per_second': 64.408, 'epoch': 4.0}
{'loss': 0.0363, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.21594209969043732, 'eval_precision': 0.503919372900336, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5084745762711865, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 3.0872, 'eval_samples_per_second': 495.913, 'eval_steps_per_second': 62.192, 'epoch': 5.0}
{'loss': 0.0225, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.24610769748687744, 'eval_precision': 0.5327669902912622, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5161669606114051, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 3.1819, 'eval_samples_per_second': 481.154, 'eval_steps_per_second': 60.341, 'epoch': 6.0}
{'loss': 0.0148, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.27687060832977295, 'eval_precision': 0.5409429280397022, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5181224004753416, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 3.0872, 'eval_samples_per_second': 495.917, 'eval_steps_per_second': 62.192, 'epoch': 7.0}
{'loss': 0.0107, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2894560694694519, 'eval_precision': 0.5077658303464755, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.49591598599766623, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 3.1448, 'eval_samples_per_second': 486.829, 'eval_steps_per_second': 61.052, 'epoch': 8.0}
{'loss': 0.0077, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.29218584299087524, 'eval_precision': 0.5092378752886836, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5060240963855421, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 3.0483, 'eval_samples_per_second': 502.241, 'eval_steps_per_second': 62.985, 'epoch': 9.0}
{'loss': 0.005, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.3131107985973358, 'eval_precision': 0.5174418604651163, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5123776626367301, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 3.2763, 'eval_samples_per_second': 467.292, 'eval_steps_per_second': 58.602, 'epoch': 10.0}
{'loss': 0.0033, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.34608033299446106, 'eval_precision': 0.4868282402528978, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5060240963855421, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 3.0988, 'eval_samples_per_second': 494.059, 'eval_steps_per_second': 61.959, 'epoch': 11.0}
{'loss': 0.0026, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.3511990010738373, 'eval_precision': 0.5388409371146733, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5177725118483413, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 2.9358, 'eval_samples_per_second': 521.488, 'eval_steps_per_second': 65.399, 'epoch': 12.0}
{'loss': 0.0022, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.3354087173938751, 'eval_precision': 0.5358851674641149, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5230589608873322, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 3.255, 'eval_samples_per_second': 470.347, 'eval_steps_per_second': 58.985, 'epoch': 13.0}
{'loss': 0.0023, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.3583749830722809, 'eval_precision': 0.5133876600698487, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5080645161290323, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 3.2601, 'eval_samples_per_second': 469.618, 'eval_steps_per_second': 58.894, 'epoch': 14.0}
{'loss': 0.0018, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3845932185649872, 'eval_precision': 0.5632183908045977, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.49841068022886204, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 3.2741, 'eval_samples_per_second': 467.605, 'eval_steps_per_second': 58.641, 'epoch': 15.0}
{'loss': 0.0018, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.380602091550827, 'eval_precision': 0.5251196172248804, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5125510799766492, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 3.152, 'eval_samples_per_second': 485.724, 'eval_steps_per_second': 60.914, 'epoch': 16.0}
{'loss': 0.0012, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.3818126916885376, 'eval_precision': 0.5297691373025516, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5129411764705882, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 3.0255, 'eval_samples_per_second': 506.027, 'eval_steps_per_second': 63.46, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.3881610035896301, 'eval_precision': 0.519298245614035, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5127020785219399, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 3.0157, 'eval_samples_per_second': 507.678, 'eval_steps_per_second': 63.667, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.3975691795349121, 'eval_precision': 0.4951560818083961, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5094130675526024, 'eval_accuracy': 0.9486605419593916, 'eval_runtime': 3.0048, 'eval_samples_per_second': 509.513, 'eval_steps_per_second': 63.897, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.40000537037849426, 'eval_precision': 0.5148842337375965, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.523542600896861, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9402, 'eval_samples_per_second': 520.706, 'eval_steps_per_second': 65.301, 'epoch': 20.0}
{'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.40182963013648987, 'eval_precision': 0.5399284862932062, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5279720279720279, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.303, 'eval_steps_per_second': 65.25, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.40851089358329773, 'eval_precision': 0.5423122765196663, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5303030303030303, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 3.1114, 'eval_samples_per_second': 492.057, 'eval_steps_per_second': 61.708, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.41366949677467346, 'eval_precision': 0.5366146458583433, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5228070175438596, 'eval_accuracy': 0.9517486296610824, 'eval_runtime': 2.9737, 'eval_samples_per_second': 514.844, 'eval_steps_per_second': 64.566, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.41283103823661804, 'eval_precision': 0.531322505800464, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5267395054629097, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 3.101, 'eval_samples_per_second': 493.707, 'eval_steps_per_second': 61.915, 'epoch': 24.0}
{'train_runtime': 1040.6634, 'train_samples_per_second': 199.119, 'train_steps_per_second': 12.454, 'train_loss': 0.03489807234318168, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0349
  train_runtime            = 0:17:20.66
  train_samples            =       8634
  train_samples_per_second =    199.119
  train_steps_per_second   =     12.454
[{'loss': 0.3808, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.19835971295833588, 'eval_precision': 0.23563218390804597, 'eval_recall': 0.18700114025085518, 'eval_f1': 0.20851875397329941, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 3.1768, 'eval_samples_per_second': 481.93, 'eval_steps_per_second': 60.438, 'epoch': 1.0, 'step': 540}, {'loss': 0.1708, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.1638171523809433, 'eval_precision': 0.47041420118343197, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.4095299420476497, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 3.2533, 'eval_samples_per_second': 470.597, 'eval_steps_per_second': 59.017, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1059, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.16918669641017914, 'eval_precision': 0.4461538461538462, 'eval_recall': 0.5621436716077537, 'eval_f1': 0.49747729566094856, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 3.1542, 'eval_samples_per_second': 485.383, 'eval_steps_per_second': 60.871, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0633, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.19451361894607544, 'eval_precision': 0.523756906077348, 'eval_recall': 0.540478905359179, 'eval_f1': 0.531986531986532, 'eval_accuracy': 0.951362618698371, 'eval_runtime': 2.981, 'eval_samples_per_second': 513.586, 'eval_steps_per_second': 64.408, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0363, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.21594209969043732, 'eval_precision': 0.503919372900336, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5084745762711865, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 3.0872, 'eval_samples_per_second': 495.913, 'eval_steps_per_second': 62.192, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0225, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.24610769748687744, 'eval_precision': 0.5327669902912622, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5161669606114051, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 3.1819, 'eval_samples_per_second': 481.154, 'eval_steps_per_second': 60.341, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0148, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.27687060832977295, 'eval_precision': 0.5409429280397022, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5181224004753416, 'eval_accuracy': 0.9523662472014205, 'eval_runtime': 3.0872, 'eval_samples_per_second': 495.917, 'eval_steps_per_second': 62.192, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0107, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.2894560694694519, 'eval_precision': 0.5077658303464755, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.49591598599766623, 'eval_accuracy': 0.9499729792326103, 'eval_runtime': 3.1448, 'eval_samples_per_second': 486.829, 'eval_steps_per_second': 61.052, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0077, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.29218584299087524, 'eval_precision': 0.5092378752886836, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5060240963855421, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 3.0483, 'eval_samples_per_second': 502.241, 'eval_steps_per_second': 62.985, 'epoch': 9.0, 'step': 4860}, {'loss': 0.005, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3131107985973358, 'eval_precision': 0.5174418604651163, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5123776626367301, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 3.2763, 'eval_samples_per_second': 467.292, 'eval_steps_per_second': 58.602, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0033, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.34608033299446106, 'eval_precision': 0.4868282402528978, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5060240963855421, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 3.0988, 'eval_samples_per_second': 494.059, 'eval_steps_per_second': 61.959, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0026, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.3511990010738373, 'eval_precision': 0.5388409371146733, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.5177725118483413, 'eval_accuracy': 0.9512854165058288, 'eval_runtime': 2.9358, 'eval_samples_per_second': 521.488, 'eval_steps_per_second': 65.399, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0022, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.3354087173938751, 'eval_precision': 0.5358851674641149, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5230589608873322, 'eval_accuracy': 0.9519030340461669, 'eval_runtime': 3.255, 'eval_samples_per_second': 470.347, 'eval_steps_per_second': 58.985, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0023, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.3583749830722809, 'eval_precision': 0.5133876600698487, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5080645161290323, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 3.2601, 'eval_samples_per_second': 469.618, 'eval_steps_per_second': 58.894, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0018, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.3845932185649872, 'eval_precision': 0.5632183908045977, 'eval_recall': 0.4469783352337514, 'eval_f1': 0.49841068022886204, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 3.2741, 'eval_samples_per_second': 467.605, 'eval_steps_per_second': 58.641, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0018, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.380602091550827, 'eval_precision': 0.5251196172248804, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5125510799766492, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 3.152, 'eval_samples_per_second': 485.724, 'eval_steps_per_second': 60.914, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0012, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.3818126916885376, 'eval_precision': 0.5297691373025516, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5129411764705882, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 3.0255, 'eval_samples_per_second': 506.027, 'eval_steps_per_second': 63.46, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0008, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.3881610035896301, 'eval_precision': 0.519298245614035, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5127020785219399, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 3.0157, 'eval_samples_per_second': 507.678, 'eval_steps_per_second': 63.667, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.3975691795349121, 'eval_precision': 0.4951560818083961, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5094130675526024, 'eval_accuracy': 0.9486605419593916, 'eval_runtime': 3.0048, 'eval_samples_per_second': 509.513, 'eval_steps_per_second': 63.897, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.40000537037849426, 'eval_precision': 0.5148842337375965, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.523542600896861, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9402, 'eval_samples_per_second': 520.706, 'eval_steps_per_second': 65.301, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0008, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.40182963013648987, 'eval_precision': 0.5399284862932062, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5279720279720279, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 2.9425, 'eval_samples_per_second': 520.303, 'eval_steps_per_second': 65.25, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.40851089358329773, 'eval_precision': 0.5423122765196663, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5303030303030303, 'eval_accuracy': 0.9520574384312515, 'eval_runtime': 3.1114, 'eval_samples_per_second': 492.057, 'eval_steps_per_second': 61.708, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.41366949677467346, 'eval_precision': 0.5366146458583433, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5228070175438596, 'eval_accuracy': 0.9517486296610824, 'eval_runtime': 2.9737, 'eval_samples_per_second': 514.844, 'eval_steps_per_second': 64.566, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.41283103823661804, 'eval_precision': 0.531322505800464, 'eval_recall': 0.5222348916761688, 'eval_f1': 0.5267395054629097, 'eval_accuracy': 0.9511310121207442, 'eval_runtime': 3.101, 'eval_samples_per_second': 493.707, 'eval_steps_per_second': 61.915, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1040.6634, 'train_samples_per_second': 199.119, 'train_steps_per_second': 12.454, 'total_flos': 5803832751437580.0, 'train_loss': 0.03489807234318168, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9522
  predict_f1                 =     0.3968
  predict_loss               =     0.1694
  predict_precision          =     0.4816
  predict_recall             =     0.3374
  predict_runtime            = 0:00:02.55
  predict_samples_per_second =    498.144
  predict_steps_per_second   =     62.268
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_16.json completed. F1: 0.39679999999999993
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_16.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_16.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5334.00 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6366.03 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6529.01 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6694.17 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6827.55 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6984.64 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7181.98 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6274.93 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6550.82 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7280.39 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6892.32 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7032.49 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6818.31 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1356, 'eval_samples_per_second': 488.262, 'eval_steps_per_second': 61.232, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0108, 'eval_samples_per_second': 508.5, 'eval_steps_per_second': 63.77, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.611, 'eval_steps_per_second': 65.038, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2109, 'eval_samples_per_second': 476.808, 'eval_steps_per_second': 59.796, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1293, 'eval_samples_per_second': 489.247, 'eval_steps_per_second': 61.356, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1211, 'eval_samples_per_second': 490.527, 'eval_steps_per_second': 61.516, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1285, 'eval_samples_per_second': 489.378, 'eval_steps_per_second': 61.372, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.108, 'eval_samples_per_second': 492.6, 'eval_steps_per_second': 61.776, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0826, 'eval_samples_per_second': 496.665, 'eval_steps_per_second': 62.286, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1837, 'eval_samples_per_second': 480.892, 'eval_steps_per_second': 60.308, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2162, 'eval_samples_per_second': 476.031, 'eval_steps_per_second': 59.698, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2028, 'eval_samples_per_second': 478.012, 'eval_steps_per_second': 59.947, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2695, 'eval_samples_per_second': 468.265, 'eval_steps_per_second': 58.724, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1343, 'eval_samples_per_second': 488.474, 'eval_steps_per_second': 61.259, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2062, 'eval_samples_per_second': 477.505, 'eval_steps_per_second': 59.883, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1855, 'eval_samples_per_second': 480.617, 'eval_steps_per_second': 60.273, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2455, 'eval_samples_per_second': 471.737, 'eval_steps_per_second': 59.16, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2547, 'eval_samples_per_second': 470.392, 'eval_steps_per_second': 58.991, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1867, 'eval_samples_per_second': 480.44, 'eval_steps_per_second': 60.251, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2124, 'eval_samples_per_second': 476.588, 'eval_steps_per_second': 59.768, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2623, 'eval_samples_per_second': 469.299, 'eval_steps_per_second': 58.854, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1614, 'eval_samples_per_second': 484.286, 'eval_steps_per_second': 60.733, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0647, 'eval_samples_per_second': 499.553, 'eval_steps_per_second': 62.648, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2377, 'eval_samples_per_second': 472.867, 'eval_steps_per_second': 59.301, 'epoch': 24.0}
{'train_runtime': 1040.42, 'train_samples_per_second': 199.166, 'train_steps_per_second': 12.457, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:17:20.42
  train_samples            =       8634
  train_samples_per_second =    199.166
  train_steps_per_second   =     12.457
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1356, 'eval_samples_per_second': 488.262, 'eval_steps_per_second': 61.232, 'epoch': 1.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0108, 'eval_samples_per_second': 508.5, 'eval_steps_per_second': 63.77, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.611, 'eval_steps_per_second': 65.038, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2109, 'eval_samples_per_second': 476.808, 'eval_steps_per_second': 59.796, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1293, 'eval_samples_per_second': 489.247, 'eval_steps_per_second': 61.356, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1211, 'eval_samples_per_second': 490.527, 'eval_steps_per_second': 61.516, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1285, 'eval_samples_per_second': 489.378, 'eval_steps_per_second': 61.372, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.108, 'eval_samples_per_second': 492.6, 'eval_steps_per_second': 61.776, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0826, 'eval_samples_per_second': 496.665, 'eval_steps_per_second': 62.286, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1837, 'eval_samples_per_second': 480.892, 'eval_steps_per_second': 60.308, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2162, 'eval_samples_per_second': 476.031, 'eval_steps_per_second': 59.698, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2028, 'eval_samples_per_second': 478.012, 'eval_steps_per_second': 59.947, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2695, 'eval_samples_per_second': 468.265, 'eval_steps_per_second': 58.724, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1343, 'eval_samples_per_second': 488.474, 'eval_steps_per_second': 61.259, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2062, 'eval_samples_per_second': 477.505, 'eval_steps_per_second': 59.883, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1855, 'eval_samples_per_second': 480.617, 'eval_steps_per_second': 60.273, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2455, 'eval_samples_per_second': 471.737, 'eval_steps_per_second': 59.16, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2547, 'eval_samples_per_second': 470.392, 'eval_steps_per_second': 58.991, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1867, 'eval_samples_per_second': 480.44, 'eval_steps_per_second': 60.251, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2124, 'eval_samples_per_second': 476.588, 'eval_steps_per_second': 59.768, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2623, 'eval_samples_per_second': 469.299, 'eval_steps_per_second': 58.854, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1614, 'eval_samples_per_second': 484.286, 'eval_steps_per_second': 60.733, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0647, 'eval_samples_per_second': 499.553, 'eval_steps_per_second': 62.648, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2377, 'eval_samples_per_second': 472.867, 'eval_steps_per_second': 59.301, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1040.42, 'train_samples_per_second': 199.166, 'train_steps_per_second': 12.457, 'total_flos': 5804249700899820.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.66
  predict_samples_per_second =    477.779
  predict_steps_per_second   =     59.722
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_16.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_01.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_01.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6693.60 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6984.02 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6744.20 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6783.83 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6815.76 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6860.05 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7025.96 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 5981.46 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6504.63 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7009.34 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6626.36 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6787.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6573.08 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0653, 'eval_samples_per_second': 252.418, 'eval_steps_per_second': 31.655, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0689, 'eval_samples_per_second': 252.268, 'eval_steps_per_second': 31.636, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.18, 'eval_samples_per_second': 247.736, 'eval_steps_per_second': 31.068, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.3115, 'eval_samples_per_second': 242.575, 'eval_steps_per_second': 30.421, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9701, 'eval_samples_per_second': 256.446, 'eval_steps_per_second': 32.16, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.031, 'eval_samples_per_second': 253.855, 'eval_steps_per_second': 31.835, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.499, 'eval_steps_per_second': 33.547, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.007, 'eval_samples_per_second': 254.871, 'eval_steps_per_second': 31.963, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9991, 'eval_samples_per_second': 255.206, 'eval_steps_per_second': 32.005, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.054, 'eval_samples_per_second': 252.889, 'eval_steps_per_second': 31.714, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9577, 'eval_samples_per_second': 256.98, 'eval_steps_per_second': 32.227, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9285, 'eval_samples_per_second': 258.246, 'eval_steps_per_second': 32.386, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.929, 'eval_samples_per_second': 258.223, 'eval_steps_per_second': 32.383, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0431, 'eval_samples_per_second': 253.345, 'eval_steps_per_second': 31.772, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7075, 'eval_samples_per_second': 268.244, 'eval_steps_per_second': 33.64, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7938, 'eval_samples_per_second': 264.25, 'eval_steps_per_second': 33.139, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8539, 'eval_samples_per_second': 261.534, 'eval_steps_per_second': 32.798, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8952, 'eval_samples_per_second': 259.702, 'eval_steps_per_second': 32.569, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0432, 'eval_samples_per_second': 253.343, 'eval_steps_per_second': 31.771, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9812, 'eval_samples_per_second': 255.968, 'eval_steps_per_second': 32.101, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0471, 'eval_samples_per_second': 253.18, 'eval_steps_per_second': 31.751, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8345, 'eval_samples_per_second': 262.405, 'eval_steps_per_second': 32.908, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.685, 'eval_samples_per_second': 269.304, 'eval_steps_per_second': 33.773, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7948, 'eval_samples_per_second': 264.202, 'eval_steps_per_second': 33.133, 'epoch': 24.0}
{'train_runtime': 3462.0043, 'train_samples_per_second': 59.854, 'train_steps_per_second': 7.487, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:57:42.00
  train_samples            =       8634
  train_samples_per_second =     59.854
  train_steps_per_second   =      7.487
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0653, 'eval_samples_per_second': 252.418, 'eval_steps_per_second': 31.655, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0689, 'eval_samples_per_second': 252.268, 'eval_steps_per_second': 31.636, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.18, 'eval_samples_per_second': 247.736, 'eval_steps_per_second': 31.068, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.3115, 'eval_samples_per_second': 242.575, 'eval_steps_per_second': 30.421, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9701, 'eval_samples_per_second': 256.446, 'eval_steps_per_second': 32.16, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.031, 'eval_samples_per_second': 253.855, 'eval_steps_per_second': 31.835, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.499, 'eval_steps_per_second': 33.547, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.007, 'eval_samples_per_second': 254.871, 'eval_steps_per_second': 31.963, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9991, 'eval_samples_per_second': 255.206, 'eval_steps_per_second': 32.005, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.054, 'eval_samples_per_second': 252.889, 'eval_steps_per_second': 31.714, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9577, 'eval_samples_per_second': 256.98, 'eval_steps_per_second': 32.227, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9285, 'eval_samples_per_second': 258.246, 'eval_steps_per_second': 32.386, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.929, 'eval_samples_per_second': 258.223, 'eval_steps_per_second': 32.383, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0431, 'eval_samples_per_second': 253.345, 'eval_steps_per_second': 31.772, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7075, 'eval_samples_per_second': 268.244, 'eval_steps_per_second': 33.64, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7938, 'eval_samples_per_second': 264.25, 'eval_steps_per_second': 33.139, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8539, 'eval_samples_per_second': 261.534, 'eval_steps_per_second': 32.798, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8952, 'eval_samples_per_second': 259.702, 'eval_steps_per_second': 32.569, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0432, 'eval_samples_per_second': 253.343, 'eval_steps_per_second': 31.771, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9812, 'eval_samples_per_second': 255.968, 'eval_steps_per_second': 32.101, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0471, 'eval_samples_per_second': 253.18, 'eval_steps_per_second': 31.751, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8345, 'eval_samples_per_second': 262.405, 'eval_steps_per_second': 32.908, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.685, 'eval_samples_per_second': 269.304, 'eval_steps_per_second': 33.773, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7948, 'eval_samples_per_second': 264.202, 'eval_steps_per_second': 33.133, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3462.0043, 'train_samples_per_second': 59.854, 'train_steps_per_second': 7.487, 'total_flos': 1.751047517859822e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:05.02
  predict_samples_per_second =    253.209
  predict_steps_per_second   =     31.651
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_01.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_22.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_22.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6277.99 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6787.34 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6614.80 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6611.12 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6699.59 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6808.39 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5897.47 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6209.49 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6406.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7044.03 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6653.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6752.50 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6473.19 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.198, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1503143608570099, 'eval_precision': 0.494910941475827, 'eval_recall': 0.443557582668187, 'eval_f1': 0.46782922429344553, 'eval_accuracy': 0.94962556936617, 'eval_runtime': 2.5733, 'eval_samples_per_second': 594.961, 'eval_steps_per_second': 74.613, 'epoch': 1.0}
{'loss': 0.1186, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.15858684480190277, 'eval_precision': 0.5056320400500626, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4821002386634845, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.5365, 'eval_samples_per_second': 603.594, 'eval_steps_per_second': 75.696, 'epoch': 2.0}
{'loss': 0.0681, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.19489233195781708, 'eval_precision': 0.4626121635094716, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4936170212765958, 'eval_accuracy': 0.9427545742299082, 'eval_runtime': 2.5386, 'eval_samples_per_second': 603.085, 'eval_steps_per_second': 75.632, 'epoch': 3.0}
{'loss': 0.0394, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.22447580099105835, 'eval_precision': 0.47471620227038186, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.49837486457204777, 'eval_accuracy': 0.9486605419593916, 'eval_runtime': 2.5409, 'eval_samples_per_second': 602.545, 'eval_steps_per_second': 75.564, 'epoch': 4.0}
{'loss': 0.0233, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2766438126564026, 'eval_precision': 0.48607888631090485, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4818861414606095, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.4554, 'eval_samples_per_second': 623.533, 'eval_steps_per_second': 78.196, 'epoch': 5.0}
{'loss': 0.017, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2892506420612335, 'eval_precision': 0.5285524568393094, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.48834355828220855, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.298, 'eval_steps_per_second': 81.302, 'epoch': 6.0}
{'loss': 0.0114, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2945025861263275, 'eval_precision': 0.4797219003476246, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.47586206896551725, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.5558, 'eval_samples_per_second': 599.022, 'eval_steps_per_second': 75.122, 'epoch': 7.0}
{'loss': 0.009, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.34002411365509033, 'eval_precision': 0.4447821681864235, 'eval_recall': 0.500570125427594, 'eval_f1': 0.47103004291845496, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.5577, 'eval_samples_per_second': 598.576, 'eval_steps_per_second': 75.066, 'epoch': 8.0}
{'loss': 0.0072, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.36812180280685425, 'eval_precision': 0.49334945586457074, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47887323943661975, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.383, 'eval_samples_per_second': 642.477, 'eval_steps_per_second': 80.572, 'epoch': 9.0}
{'loss': 0.0054, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3692786395549774, 'eval_precision': 0.47216035634743875, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.4777464788732394, 'eval_accuracy': 0.9451864432949896, 'eval_runtime': 2.3704, 'eval_samples_per_second': 645.894, 'eval_steps_per_second': 81.0, 'epoch': 10.0}
{'loss': 0.0045, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3817099630832672, 'eval_precision': 0.42218080149114634, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.46461538461538465, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 2.4322, 'eval_samples_per_second': 629.465, 'eval_steps_per_second': 78.94, 'epoch': 11.0}
{'loss': 0.0048, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3877931833267212, 'eval_precision': 0.4926289926289926, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4742755765819042, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.4538, 'eval_samples_per_second': 623.923, 'eval_steps_per_second': 78.245, 'epoch': 12.0}
{'loss': 0.0031, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3777851462364197, 'eval_precision': 0.5082872928176796, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5162738496071829, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.799, 'eval_steps_per_second': 81.365, 'epoch': 13.0}
{'loss': 0.0025, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4171353876590729, 'eval_precision': 0.47295864262990456, 'eval_recall': 0.508551881413911, 'eval_f1': 0.49010989010989015, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.3951, 'eval_samples_per_second': 639.234, 'eval_steps_per_second': 80.165, 'epoch': 14.0}
{'loss': 0.0027, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.42197877168655396, 'eval_precision': 0.48881789137380194, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5055066079295154, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.194, 'eval_steps_per_second': 81.163, 'epoch': 15.0}
{'loss': 0.0019, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4246366024017334, 'eval_precision': 0.5063437139561707, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5034403669724771, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.3462, 'eval_samples_per_second': 652.554, 'eval_steps_per_second': 81.836, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.42446866631507874, 'eval_precision': 0.5198973042362003, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.48913043478260876, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 2.3448, 'eval_samples_per_second': 652.925, 'eval_steps_per_second': 81.882, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4383542239665985, 'eval_precision': 0.5080645161290323, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5054441260744986, 'eval_accuracy': 0.9478499189376979, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.217, 'eval_steps_per_second': 81.417, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4525226652622223, 'eval_precision': 0.49336283185840707, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5008422234699608, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.4507, 'eval_samples_per_second': 624.73, 'eval_steps_per_second': 78.346, 'epoch': 19.0}
{'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.46085482835769653, 'eval_precision': 0.4950603732162459, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5044742729306488, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.8307, 'eval_samples_per_second': 540.859, 'eval_steps_per_second': 67.828, 'epoch': 20.0}
{'loss': 0.0009, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.44845977425575256, 'eval_precision': 0.529482551143201, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5152224824355972, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.6575, 'eval_samples_per_second': 576.116, 'eval_steps_per_second': 72.25, 'epoch': 21.0}
{'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4419064223766327, 'eval_precision': 0.5199034981905911, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5052754982415006, 'eval_accuracy': 0.9497413726549834, 'eval_runtime': 2.5548, 'eval_samples_per_second': 599.258, 'eval_steps_per_second': 75.152, 'epoch': 22.0}
{'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.4434148371219635, 'eval_precision': 0.5175233644859814, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5112521638776689, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.5288, 'eval_samples_per_second': 605.414, 'eval_steps_per_second': 75.924, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.44904637336730957, 'eval_precision': 0.5245098039215687, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.505611340815121, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.5773, 'eval_samples_per_second': 594.034, 'eval_steps_per_second': 74.497, 'epoch': 24.0}
{'train_runtime': 1065.3849, 'train_samples_per_second': 194.499, 'train_steps_per_second': 12.165, 'train_loss': 0.021781115900771118, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0218
  train_runtime            = 0:17:45.38
  train_samples            =       8634
  train_samples_per_second =    194.499
  train_steps_per_second   =     12.165
[{'loss': 0.198, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.1503143608570099, 'eval_precision': 0.494910941475827, 'eval_recall': 0.443557582668187, 'eval_f1': 0.46782922429344553, 'eval_accuracy': 0.94962556936617, 'eval_runtime': 2.5733, 'eval_samples_per_second': 594.961, 'eval_steps_per_second': 74.613, 'epoch': 1.0, 'step': 540}, {'loss': 0.1186, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.15858684480190277, 'eval_precision': 0.5056320400500626, 'eval_recall': 0.4606613454960091, 'eval_f1': 0.4821002386634845, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.5365, 'eval_samples_per_second': 603.594, 'eval_steps_per_second': 75.696, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0681, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.19489233195781708, 'eval_precision': 0.4626121635094716, 'eval_recall': 0.5290763968072976, 'eval_f1': 0.4936170212765958, 'eval_accuracy': 0.9427545742299082, 'eval_runtime': 2.5386, 'eval_samples_per_second': 603.085, 'eval_steps_per_second': 75.632, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0394, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.22447580099105835, 'eval_precision': 0.47471620227038186, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.49837486457204777, 'eval_accuracy': 0.9486605419593916, 'eval_runtime': 2.5409, 'eval_samples_per_second': 602.545, 'eval_steps_per_second': 75.564, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0233, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.2766438126564026, 'eval_precision': 0.48607888631090485, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.4818861414606095, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.4554, 'eval_samples_per_second': 623.533, 'eval_steps_per_second': 78.196, 'epoch': 5.0, 'step': 2700}, {'loss': 0.017, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.2892506420612335, 'eval_precision': 0.5285524568393094, 'eval_recall': 0.45381984036488027, 'eval_f1': 0.48834355828220855, 'eval_accuracy': 0.9521732417200649, 'eval_runtime': 2.3616, 'eval_samples_per_second': 648.298, 'eval_steps_per_second': 81.302, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0114, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.2945025861263275, 'eval_precision': 0.4797219003476246, 'eval_recall': 0.47206385404789053, 'eval_f1': 0.47586206896551725, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.5558, 'eval_samples_per_second': 599.022, 'eval_steps_per_second': 75.122, 'epoch': 7.0, 'step': 3780}, {'loss': 0.009, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.34002411365509033, 'eval_precision': 0.4447821681864235, 'eval_recall': 0.500570125427594, 'eval_f1': 0.47103004291845496, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.5577, 'eval_samples_per_second': 598.576, 'eval_steps_per_second': 75.066, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0072, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.36812180280685425, 'eval_precision': 0.49334945586457074, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47887323943661975, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.383, 'eval_samples_per_second': 642.477, 'eval_steps_per_second': 80.572, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0054, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3692786395549774, 'eval_precision': 0.47216035634743875, 'eval_recall': 0.48346636259977194, 'eval_f1': 0.4777464788732394, 'eval_accuracy': 0.9451864432949896, 'eval_runtime': 2.3704, 'eval_samples_per_second': 645.894, 'eval_steps_per_second': 81.0, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0045, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.3817099630832672, 'eval_precision': 0.42218080149114634, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.46461538461538465, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 2.4322, 'eval_samples_per_second': 629.465, 'eval_steps_per_second': 78.94, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0048, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.3877931833267212, 'eval_precision': 0.4926289926289926, 'eval_recall': 0.4572405929304447, 'eval_f1': 0.4742755765819042, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.4538, 'eval_samples_per_second': 623.923, 'eval_steps_per_second': 78.245, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0031, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.3777851462364197, 'eval_precision': 0.5082872928176796, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5162738496071829, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.799, 'eval_steps_per_second': 81.365, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0025, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.4171353876590729, 'eval_precision': 0.47295864262990456, 'eval_recall': 0.508551881413911, 'eval_f1': 0.49010989010989015, 'eval_accuracy': 0.9451478421987184, 'eval_runtime': 2.3951, 'eval_samples_per_second': 639.234, 'eval_steps_per_second': 80.165, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0027, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.42197877168655396, 'eval_precision': 0.48881789137380194, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5055066079295154, 'eval_accuracy': 0.9463830772793947, 'eval_runtime': 2.3656, 'eval_samples_per_second': 647.194, 'eval_steps_per_second': 81.163, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0019, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.4246366024017334, 'eval_precision': 0.5063437139561707, 'eval_recall': 0.500570125427594, 'eval_f1': 0.5034403669724771, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 2.3462, 'eval_samples_per_second': 652.554, 'eval_steps_per_second': 81.836, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0014, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.42446866631507874, 'eval_precision': 0.5198973042362003, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.48913043478260876, 'eval_accuracy': 0.9503203890990504, 'eval_runtime': 2.3448, 'eval_samples_per_second': 652.925, 'eval_steps_per_second': 81.882, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.4383542239665985, 'eval_precision': 0.5080645161290323, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5054441260744986, 'eval_accuracy': 0.9478499189376979, 'eval_runtime': 2.3582, 'eval_samples_per_second': 649.217, 'eval_steps_per_second': 81.417, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.4525226652622223, 'eval_precision': 0.49336283185840707, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5008422234699608, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.4507, 'eval_samples_per_second': 624.73, 'eval_steps_per_second': 78.346, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0009, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.46085482835769653, 'eval_precision': 0.4950603732162459, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.5044742729306488, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.8307, 'eval_samples_per_second': 540.859, 'eval_steps_per_second': 67.828, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0009, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.44845977425575256, 'eval_precision': 0.529482551143201, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5152224824355972, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.6575, 'eval_samples_per_second': 576.116, 'eval_steps_per_second': 72.25, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0006, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.4419064223766327, 'eval_precision': 0.5199034981905911, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5052754982415006, 'eval_accuracy': 0.9497413726549834, 'eval_runtime': 2.5548, 'eval_samples_per_second': 599.258, 'eval_steps_per_second': 75.152, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0002, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.4434148371219635, 'eval_precision': 0.5175233644859814, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5112521638776689, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.5288, 'eval_samples_per_second': 605.414, 'eval_steps_per_second': 75.924, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.44904637336730957, 'eval_precision': 0.5245098039215687, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.505611340815121, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.5773, 'eval_samples_per_second': 594.034, 'eval_steps_per_second': 74.497, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 1065.3849, 'train_samples_per_second': 194.499, 'train_steps_per_second': 12.165, 'total_flos': 6897441587961600.0, 'train_loss': 0.021781115900771118, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9496
  predict_f1                 =     0.4125
  predict_loss               =     0.1564
  predict_precision          =     0.4556
  predict_recall             =     0.3769
  predict_runtime            = 0:00:02.14
  predict_samples_per_second =    592.864
  predict_steps_per_second   =     74.108
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_22.json completed. F1: 0.41250930752047654
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_38.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_38.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6502.31 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6794.66 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6638.64 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6649.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6635.12 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6780.80 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 5746.31 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6108.59 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6359.13 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 6882.32 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6485.56 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6619.47 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6340.16 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3112, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.1927962303161621, 'eval_precision': 0.35403726708074534, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.29980276134122286, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 2.6161, 'eval_samples_per_second': 585.227, 'eval_steps_per_second': 73.392, 'epoch': 1.0}
{'loss': 0.1828, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.17322462797164917, 'eval_precision': 0.43204577968526464, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.383248730964467, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.6178, 'eval_samples_per_second': 584.85, 'eval_steps_per_second': 73.345, 'epoch': 2.0}
{'loss': 0.1512, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.16180568933486938, 'eval_precision': 0.4612634088200238, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.45104895104895104, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.5527, 'eval_samples_per_second': 599.768, 'eval_steps_per_second': 75.216, 'epoch': 3.0}
{'loss': 0.1243, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.16718249022960663, 'eval_precision': 0.4578896418199419, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.4952879581151833, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.5596, 'eval_samples_per_second': 598.151, 'eval_steps_per_second': 75.013, 'epoch': 4.0}
{'loss': 0.1029, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.1728452444076538, 'eval_precision': 0.4300184162062615, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.47580234335201227, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 2.5659, 'eval_samples_per_second': 596.662, 'eval_steps_per_second': 74.826, 'epoch': 5.0}
{'loss': 0.0847, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.18087366223335266, 'eval_precision': 0.4637223974763407, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4824945295404814, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.5659, 'eval_samples_per_second': 596.665, 'eval_steps_per_second': 74.827, 'epoch': 6.0}
{'loss': 0.0726, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.19013260304927826, 'eval_precision': 0.47412882787750793, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.4923245614035087, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.51, 'eval_steps_per_second': 81.329, 'epoch': 7.0}
{'loss': 0.0627, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.19909755885601044, 'eval_precision': 0.48549946294307195, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.4649, 'eval_samples_per_second': 621.108, 'eval_steps_per_second': 77.892, 'epoch': 8.0}
{'loss': 0.0524, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.20557832717895508, 'eval_precision': 0.4431924882629108, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.4860968074150361, 'eval_accuracy': 0.9455724542577009, 'eval_runtime': 2.4631, 'eval_samples_per_second': 621.586, 'eval_steps_per_second': 77.952, 'epoch': 9.0}
{'loss': 0.0456, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.2149900645017624, 'eval_precision': 0.4511494252873563, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.49036959916710043, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.4605, 'eval_samples_per_second': 622.24, 'eval_steps_per_second': 78.034, 'epoch': 10.0}
{'loss': 0.0396, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.22563385963439941, 'eval_precision': 0.42247386759581884, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.47901234567901235, 'eval_accuracy': 0.9438740060217711, 'eval_runtime': 2.65, 'eval_samples_per_second': 577.739, 'eval_steps_per_second': 72.453, 'epoch': 11.0}
{'loss': 0.0351, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.23293523490428925, 'eval_precision': 0.44300278035217794, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.48875255623721886, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.6424, 'eval_samples_per_second': 579.388, 'eval_steps_per_second': 72.66, 'epoch': 12.0}
{'loss': 0.0307, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.24357567727565765, 'eval_precision': 0.46707193515704154, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.4946351931330472, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.6381, 'eval_samples_per_second': 580.347, 'eval_steps_per_second': 72.78, 'epoch': 13.0}
{'loss': 0.0282, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.25215455889701843, 'eval_precision': 0.47195767195767196, 'eval_recall': 0.508551881413911, 'eval_f1': 0.4895718990120746, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.4552, 'eval_samples_per_second': 623.58, 'eval_steps_per_second': 78.202, 'epoch': 14.0}
{'loss': 0.0257, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.2569440007209778, 'eval_precision': 0.43761467889908257, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.4850025419420438, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.4632, 'eval_samples_per_second': 621.558, 'eval_steps_per_second': 77.949, 'epoch': 15.0}
{'loss': 0.023, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.26745229959487915, 'eval_precision': 0.4715969989281886, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4861878453038674, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.057, 'eval_steps_per_second': 81.648, 'epoch': 16.0}
{'loss': 0.0217, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.2652653753757477, 'eval_precision': 0.4479465138490926, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.4875259875259875, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.4352, 'eval_samples_per_second': 628.704, 'eval_steps_per_second': 78.845, 'epoch': 17.0}
{'loss': 0.0202, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.27153071761131287, 'eval_precision': 0.44361602982292636, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.4882051282051282, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.5642, 'eval_samples_per_second': 597.064, 'eval_steps_per_second': 74.877, 'epoch': 18.0}
{'loss': 0.0186, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.273869127035141, 'eval_precision': 0.4380165289256198, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.48524923702950157, 'eval_accuracy': 0.9447618312360071, 'eval_runtime': 2.5845, 'eval_samples_per_second': 592.367, 'eval_steps_per_second': 74.288, 'epoch': 19.0}
{'loss': 0.0176, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.2786519527435303, 'eval_precision': 0.44254510921177587, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.482901554404145, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.5752, 'eval_samples_per_second': 594.525, 'eval_steps_per_second': 74.558, 'epoch': 20.0}
{'loss': 0.0161, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.2812426686286926, 'eval_precision': 0.4480769230769231, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.48617631716223264, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.5666, 'eval_samples_per_second': 596.512, 'eval_steps_per_second': 74.807, 'epoch': 21.0}
{'loss': 0.0159, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.2819911241531372, 'eval_precision': 0.44660194174757284, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.4824331410592554, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.494, 'eval_steps_per_second': 80.825, 'epoch': 22.0}
{'loss': 0.0147, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.284575492143631, 'eval_precision': 0.43909348441926344, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.48037190082644626, 'eval_accuracy': 0.9451864432949896, 'eval_runtime': 2.4631, 'eval_samples_per_second': 621.568, 'eval_steps_per_second': 77.95, 'epoch': 23.0}
{'loss': 0.0145, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.284916490316391, 'eval_precision': 0.4523107177974435, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.48574445617740236, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.295, 'eval_steps_per_second': 81.176, 'epoch': 24.0}
{'train_runtime': 849.9998, 'train_samples_per_second': 243.784, 'train_steps_per_second': 3.812, 'train_loss': 0.06299828419714798, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.063
  train_runtime            = 0:14:09.99
  train_samples            =       8634
  train_samples_per_second =    243.784
  train_steps_per_second   =      3.812
[{'loss': 0.3112, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.1927962303161621, 'eval_precision': 0.35403726708074534, 'eval_recall': 0.25997719498289623, 'eval_f1': 0.29980276134122286, 'eval_accuracy': 0.9400524974909288, 'eval_runtime': 2.6161, 'eval_samples_per_second': 585.227, 'eval_steps_per_second': 73.392, 'epoch': 1.0, 'step': 135}, {'loss': 0.1828, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.17322462797164917, 'eval_precision': 0.43204577968526464, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.383248730964467, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.6178, 'eval_samples_per_second': 584.85, 'eval_steps_per_second': 73.345, 'epoch': 2.0, 'step': 270}, {'loss': 0.1512, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.16180568933486938, 'eval_precision': 0.4612634088200238, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.45104895104895104, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.5527, 'eval_samples_per_second': 599.768, 'eval_steps_per_second': 75.216, 'epoch': 3.0, 'step': 405}, {'loss': 0.1243, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.16718249022960663, 'eval_precision': 0.4578896418199419, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.4952879581151833, 'eval_accuracy': 0.946151470701768, 'eval_runtime': 2.5596, 'eval_samples_per_second': 598.151, 'eval_steps_per_second': 75.013, 'epoch': 4.0, 'step': 540}, {'loss': 0.1029, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.1728452444076538, 'eval_precision': 0.4300184162062615, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.47580234335201227, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 2.5659, 'eval_samples_per_second': 596.662, 'eval_steps_per_second': 74.826, 'epoch': 5.0, 'step': 675}, {'loss': 0.0847, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.18087366223335266, 'eval_precision': 0.4637223974763407, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.4824945295404814, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 2.5659, 'eval_samples_per_second': 596.665, 'eval_steps_per_second': 74.827, 'epoch': 6.0, 'step': 810}, {'loss': 0.0726, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.19013260304927826, 'eval_precision': 0.47412882787750793, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.4923245614035087, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.51, 'eval_steps_per_second': 81.329, 'epoch': 7.0, 'step': 945}, {'loss': 0.0627, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.19909755885601044, 'eval_precision': 0.48549946294307195, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.4649, 'eval_samples_per_second': 621.108, 'eval_steps_per_second': 77.892, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0524, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.20557832717895508, 'eval_precision': 0.4431924882629108, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.4860968074150361, 'eval_accuracy': 0.9455724542577009, 'eval_runtime': 2.4631, 'eval_samples_per_second': 621.586, 'eval_steps_per_second': 77.952, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0456, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2149900645017624, 'eval_precision': 0.4511494252873563, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.49036959916710043, 'eval_accuracy': 0.94588126302787, 'eval_runtime': 2.4605, 'eval_samples_per_second': 622.24, 'eval_steps_per_second': 78.034, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0396, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.22563385963439941, 'eval_precision': 0.42247386759581884, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.47901234567901235, 'eval_accuracy': 0.9438740060217711, 'eval_runtime': 2.65, 'eval_samples_per_second': 577.739, 'eval_steps_per_second': 72.453, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0351, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.23293523490428925, 'eval_precision': 0.44300278035217794, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.48875255623721886, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.6424, 'eval_samples_per_second': 579.388, 'eval_steps_per_second': 72.66, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0307, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.24357567727565765, 'eval_precision': 0.46707193515704154, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.4946351931330472, 'eval_accuracy': 0.9468076893383772, 'eval_runtime': 2.6381, 'eval_samples_per_second': 580.347, 'eval_steps_per_second': 72.78, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0282, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.25215455889701843, 'eval_precision': 0.47195767195767196, 'eval_recall': 0.508551881413911, 'eval_f1': 0.4895718990120746, 'eval_accuracy': 0.9471164981085463, 'eval_runtime': 2.4552, 'eval_samples_per_second': 623.58, 'eval_steps_per_second': 78.202, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0257, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.2569440007209778, 'eval_precision': 0.43761467889908257, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.4850025419420438, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 2.4632, 'eval_samples_per_second': 621.558, 'eval_steps_per_second': 77.949, 'epoch': 15.0, 'step': 2025}, {'loss': 0.023, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.26745229959487915, 'eval_precision': 0.4715969989281886, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.4861878453038674, 'eval_accuracy': 0.9462286728943102, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.057, 'eval_steps_per_second': 81.648, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0217, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.2652653753757477, 'eval_precision': 0.4479465138490926, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.4875259875259875, 'eval_accuracy': 0.9460742685092257, 'eval_runtime': 2.4352, 'eval_samples_per_second': 628.704, 'eval_steps_per_second': 78.845, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0202, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.27153071761131287, 'eval_precision': 0.44361602982292636, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.4882051282051282, 'eval_accuracy': 0.9457268586427855, 'eval_runtime': 2.5642, 'eval_samples_per_second': 597.064, 'eval_steps_per_second': 74.877, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0186, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.273869127035141, 'eval_precision': 0.4380165289256198, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.48524923702950157, 'eval_accuracy': 0.9447618312360071, 'eval_runtime': 2.5845, 'eval_samples_per_second': 592.367, 'eval_steps_per_second': 74.288, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0176, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.2786519527435303, 'eval_precision': 0.44254510921177587, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.482901554404145, 'eval_accuracy': 0.9453794487763453, 'eval_runtime': 2.5752, 'eval_samples_per_second': 594.525, 'eval_steps_per_second': 74.558, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0161, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.2812426686286926, 'eval_precision': 0.4480769230769231, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.48617631716223264, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.5666, 'eval_samples_per_second': 596.512, 'eval_steps_per_second': 74.807, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0159, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.2819911241531372, 'eval_precision': 0.44660194174757284, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.4824331410592554, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.3755, 'eval_samples_per_second': 644.494, 'eval_steps_per_second': 80.825, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0147, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.284575492143631, 'eval_precision': 0.43909348441926344, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.48037190082644626, 'eval_accuracy': 0.9451864432949896, 'eval_runtime': 2.4631, 'eval_samples_per_second': 621.568, 'eval_steps_per_second': 77.95, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0145, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.284916490316391, 'eval_precision': 0.4523107177974435, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.48574445617740236, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.3652, 'eval_samples_per_second': 647.295, 'eval_steps_per_second': 81.176, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 849.9998, 'train_samples_per_second': 243.784, 'train_steps_per_second': 3.812, 'total_flos': 8936323010457180.0, 'train_loss': 0.06299828419714798, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9468
  predict_f1                 =     0.4373
  predict_loss               =     0.1639
  predict_precision          =     0.4479
  predict_recall             =     0.4272
  predict_runtime            = 0:00:02.03
  predict_samples_per_second =    626.282
  predict_steps_per_second   =     78.285
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_38.json completed. F1: 0.4373259052924791
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_28.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_28.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5847.20 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6651.50 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6631.07 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6749.17 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6836.53 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6953.78 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7118.99 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6234.47 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6584.19 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7273.73 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6930.39 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6994.87 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6807.65 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 11229.5676, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 1102.8837890625, 'eval_precision': 0.035344357623114664, 'eval_recall': 0.443557582668187, 'eval_f1': 0.06547168223512581, 'eval_accuracy': 0.5973519647958002, 'eval_runtime': 3.2632, 'eval_samples_per_second': 469.178, 'eval_steps_per_second': 58.839, 'epoch': 1.0}
{'loss': 552.859, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 178.900146484375, 'eval_precision': 0.06711888611210282, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.11606729433554559, 'eval_accuracy': 0.8020149772253532, 'eval_runtime': 3.1118, 'eval_samples_per_second': 491.996, 'eval_steps_per_second': 61.7, 'epoch': 2.0}
{'loss': 170.8345, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 157.9846649169922, 'eval_precision': 0.08196721311475409, 'eval_recall': 0.4161915621436716, 'eval_f1': 0.13696060037523453, 'eval_accuracy': 0.8436269590056358, 'eval_runtime': 3.0649, 'eval_samples_per_second': 499.529, 'eval_steps_per_second': 62.645, 'epoch': 3.0}
{'loss': 281.3284, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 173.13894653320312, 'eval_precision': 0.2482758620689655, 'eval_recall': 0.04104903078677309, 'eval_f1': 0.07045009784735813, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 3.1302, 'eval_samples_per_second': 489.105, 'eval_steps_per_second': 61.338, 'epoch': 4.0}
{'loss': 218.1407, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 75.95140838623047, 'eval_precision': 0.1168091168091168, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.16493462956754945, 'eval_accuracy': 0.9147301783370648, 'eval_runtime': 3.1236, 'eval_samples_per_second': 490.133, 'eval_steps_per_second': 61.467, 'epoch': 5.0}
{'loss': 104.0682, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 131.0354766845703, 'eval_precision': 0.08710545632493272, 'eval_recall': 0.40592930444697833, 'eval_f1': 0.1434327155519742, 'eval_accuracy': 0.8567127306415502, 'eval_runtime': 3.1347, 'eval_samples_per_second': 488.398, 'eval_steps_per_second': 61.249, 'epoch': 6.0}
{'loss': 89.7995, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 93.34607696533203, 'eval_precision': 0.1264591439688716, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.09345794392523364, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 3.0454, 'eval_samples_per_second': 502.728, 'eval_steps_per_second': 63.046, 'epoch': 7.0}
{'loss': 78.484, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 97.31950378417969, 'eval_precision': 0.5252525252525253, 'eval_recall': 0.17787913340935005, 'eval_f1': 0.26575809199318573, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 3.2142, 'eval_samples_per_second': 476.331, 'eval_steps_per_second': 59.736, 'epoch': 8.0}
{'loss': 48.0955, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 151.53375244140625, 'eval_precision': 0.067654409139593, 'eval_recall': 0.4321550741163056, 'eval_f1': 0.11699336317332922, 'eval_accuracy': 0.8017833706477264, 'eval_runtime': 3.1355, 'eval_samples_per_second': 488.284, 'eval_steps_per_second': 61.235, 'epoch': 9.0}
{'loss': 44.3563, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 56.62226486206055, 'eval_precision': 0.4628482972136223, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.39264609323703215, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 3.2617, 'eval_samples_per_second': 469.385, 'eval_steps_per_second': 58.865, 'epoch': 10.0}
{'loss': 31.1493, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 74.56475830078125, 'eval_precision': 0.19365895458440446, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.22113502935420742, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 3.2998, 'eval_samples_per_second': 463.972, 'eval_steps_per_second': 58.186, 'epoch': 11.0}
{'loss': 25.2886, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 159.3103790283203, 'eval_precision': 0.16865079365079366, 'eval_recall': 0.09692132269099202, 'eval_f1': 0.12309920347574221, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.293, 'eval_samples_per_second': 464.926, 'eval_steps_per_second': 58.305, 'epoch': 12.0}
{'loss': 14.6081, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 131.78143310546875, 'eval_precision': 0.11379310344827587, 'eval_recall': 0.037628278221208664, 'eval_f1': 0.05655526992287917, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 3.2077, 'eval_samples_per_second': 477.295, 'eval_steps_per_second': 59.857, 'epoch': 13.0}
{'loss': 10.1383, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 53.2968864440918, 'eval_precision': 0.17950635751682872, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.21680216802168023, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.647, 'eval_steps_per_second': 63.162, 'epoch': 14.0}
{'loss': 12.4445, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 112.22534942626953, 'eval_precision': 0.17543859649122806, 'eval_recall': 0.13683010262257697, 'eval_f1': 0.15374759769378601, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 3.2532, 'eval_samples_per_second': 470.608, 'eval_steps_per_second': 59.018, 'epoch': 15.0}
{'loss': 8.7187, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 79.60120391845703, 'eval_precision': 0.187015503875969, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.20220010476689365, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 3.1578, 'eval_samples_per_second': 484.832, 'eval_steps_per_second': 60.802, 'epoch': 16.0}
{'loss': 6.5263, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 105.78639221191406, 'eval_precision': 0.17257318952234207, 'eval_recall': 0.12770809578107184, 'eval_f1': 0.14678899082568808, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 3.2549, 'eval_samples_per_second': 470.366, 'eval_steps_per_second': 58.988, 'epoch': 17.0}
{'loss': 5.7439, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 99.11772155761719, 'eval_precision': 0.2214941022280472, 'eval_recall': 0.19270239452679588, 'eval_f1': 0.20609756097560977, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 3.1204, 'eval_samples_per_second': 490.646, 'eval_steps_per_second': 61.531, 'epoch': 18.0}
{'loss': 3.9243, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 76.87834930419922, 'eval_precision': 0.18562329390354868, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.20647773279352225, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 3.6707, 'eval_samples_per_second': 417.091, 'eval_steps_per_second': 52.307, 'epoch': 19.0}
{'loss': 3.9739, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 70.0699691772461, 'eval_precision': 0.1800711743772242, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.22173531989482909, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 3.4829, 'eval_samples_per_second': 439.571, 'eval_steps_per_second': 55.126, 'epoch': 20.0}
{'loss': 2.9216, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 68.99911499023438, 'eval_precision': 0.17823908375089478, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.21899736147757257, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.399, 'eval_samples_per_second': 450.428, 'eval_steps_per_second': 56.487, 'epoch': 21.0}
{'loss': 1.9709, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 63.64887237548828, 'eval_precision': 0.17870439314966494, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.21621621621621623, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.9666, 'eval_samples_per_second': 516.078, 'eval_steps_per_second': 64.72, 'epoch': 22.0}
{'loss': 1.4383, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 67.20843505859375, 'eval_precision': 0.18729096989966554, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2161119150988905, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 3.0731, 'eval_samples_per_second': 498.192, 'eval_steps_per_second': 62.477, 'epoch': 23.0}
{'loss': 0.7603, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 68.43103790283203, 'eval_precision': 0.18617021276595744, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.20947630922693264, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 3.0664, 'eval_samples_per_second': 499.277, 'eval_steps_per_second': 62.613, 'epoch': 24.0}
{'train_runtime': 910.0004, 'train_samples_per_second': 227.71, 'train_steps_per_second': 7.121, 'train_loss': 539.4641935795913, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =   539.4642
  train_runtime            = 0:15:10.00
  train_samples            =       8634
  train_samples_per_second =     227.71
  train_steps_per_second   =      7.121
[{'loss': 11229.5676, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 1102.8837890625, 'eval_precision': 0.035344357623114664, 'eval_recall': 0.443557582668187, 'eval_f1': 0.06547168223512581, 'eval_accuracy': 0.5973519647958002, 'eval_runtime': 3.2632, 'eval_samples_per_second': 469.178, 'eval_steps_per_second': 58.839, 'epoch': 1.0, 'step': 270}, {'loss': 552.859, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 178.900146484375, 'eval_precision': 0.06711888611210282, 'eval_recall': 0.42873432155074115, 'eval_f1': 0.11606729433554559, 'eval_accuracy': 0.8020149772253532, 'eval_runtime': 3.1118, 'eval_samples_per_second': 491.996, 'eval_steps_per_second': 61.7, 'epoch': 2.0, 'step': 540}, {'loss': 170.8345, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 157.9846649169922, 'eval_precision': 0.08196721311475409, 'eval_recall': 0.4161915621436716, 'eval_f1': 0.13696060037523453, 'eval_accuracy': 0.8436269590056358, 'eval_runtime': 3.0649, 'eval_samples_per_second': 499.529, 'eval_steps_per_second': 62.645, 'epoch': 3.0, 'step': 810}, {'loss': 281.3284, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 173.13894653320312, 'eval_precision': 0.2482758620689655, 'eval_recall': 0.04104903078677309, 'eval_f1': 0.07045009784735813, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 3.1302, 'eval_samples_per_second': 489.105, 'eval_steps_per_second': 61.338, 'epoch': 4.0, 'step': 1080}, {'loss': 218.1407, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 75.95140838623047, 'eval_precision': 0.1168091168091168, 'eval_recall': 0.2805017103762828, 'eval_f1': 0.16493462956754945, 'eval_accuracy': 0.9147301783370648, 'eval_runtime': 3.1236, 'eval_samples_per_second': 490.133, 'eval_steps_per_second': 61.467, 'epoch': 5.0, 'step': 1350}, {'loss': 104.0682, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 131.0354766845703, 'eval_precision': 0.08710545632493272, 'eval_recall': 0.40592930444697833, 'eval_f1': 0.1434327155519742, 'eval_accuracy': 0.8567127306415502, 'eval_runtime': 3.1347, 'eval_samples_per_second': 488.398, 'eval_steps_per_second': 61.249, 'epoch': 6.0, 'step': 1620}, {'loss': 89.7995, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 93.34607696533203, 'eval_precision': 0.1264591439688716, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.09345794392523364, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 3.0454, 'eval_samples_per_second': 502.728, 'eval_steps_per_second': 63.046, 'epoch': 7.0, 'step': 1890}, {'loss': 78.484, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 97.31950378417969, 'eval_precision': 0.5252525252525253, 'eval_recall': 0.17787913340935005, 'eval_f1': 0.26575809199318573, 'eval_accuracy': 0.9397050876244886, 'eval_runtime': 3.2142, 'eval_samples_per_second': 476.331, 'eval_steps_per_second': 59.736, 'epoch': 8.0, 'step': 2160}, {'loss': 48.0955, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 151.53375244140625, 'eval_precision': 0.067654409139593, 'eval_recall': 0.4321550741163056, 'eval_f1': 0.11699336317332922, 'eval_accuracy': 0.8017833706477264, 'eval_runtime': 3.1355, 'eval_samples_per_second': 488.284, 'eval_steps_per_second': 61.235, 'epoch': 9.0, 'step': 2430}, {'loss': 44.3563, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 56.62226486206055, 'eval_precision': 0.4628482972136223, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.39264609323703215, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 3.2617, 'eval_samples_per_second': 469.385, 'eval_steps_per_second': 58.865, 'epoch': 10.0, 'step': 2700}, {'loss': 31.1493, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 74.56475830078125, 'eval_precision': 0.19365895458440446, 'eval_recall': 0.2576966932725199, 'eval_f1': 0.22113502935420742, 'eval_accuracy': 0.9382382459661854, 'eval_runtime': 3.2998, 'eval_samples_per_second': 463.972, 'eval_steps_per_second': 58.186, 'epoch': 11.0, 'step': 2970}, {'loss': 25.2886, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 159.3103790283203, 'eval_precision': 0.16865079365079366, 'eval_recall': 0.09692132269099202, 'eval_f1': 0.12309920347574221, 'eval_accuracy': 0.9382768470624566, 'eval_runtime': 3.293, 'eval_samples_per_second': 464.926, 'eval_steps_per_second': 58.305, 'epoch': 12.0, 'step': 3240}, {'loss': 14.6081, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 131.78143310546875, 'eval_precision': 0.11379310344827587, 'eval_recall': 0.037628278221208664, 'eval_f1': 0.05655526992287917, 'eval_accuracy': 0.9359607812861885, 'eval_runtime': 3.2077, 'eval_samples_per_second': 477.295, 'eval_steps_per_second': 59.857, 'epoch': 13.0, 'step': 3510}, {'loss': 10.1383, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 53.2968864440918, 'eval_precision': 0.17950635751682872, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.21680216802168023, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 3.0398, 'eval_samples_per_second': 503.647, 'eval_steps_per_second': 63.162, 'epoch': 14.0, 'step': 3780}, {'loss': 12.4445, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 112.22534942626953, 'eval_precision': 0.17543859649122806, 'eval_recall': 0.13683010262257697, 'eval_f1': 0.15374759769378601, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 3.2532, 'eval_samples_per_second': 470.608, 'eval_steps_per_second': 59.018, 'epoch': 15.0, 'step': 4050}, {'loss': 8.7187, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 79.60120391845703, 'eval_precision': 0.187015503875969, 'eval_recall': 0.22006841505131128, 'eval_f1': 0.20220010476689365, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 3.1578, 'eval_samples_per_second': 484.832, 'eval_steps_per_second': 60.802, 'epoch': 16.0, 'step': 4320}, {'loss': 6.5263, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 105.78639221191406, 'eval_precision': 0.17257318952234207, 'eval_recall': 0.12770809578107184, 'eval_f1': 0.14678899082568808, 'eval_accuracy': 0.9390874700841504, 'eval_runtime': 3.2549, 'eval_samples_per_second': 470.366, 'eval_steps_per_second': 58.988, 'epoch': 17.0, 'step': 4590}, {'loss': 5.7439, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 99.11772155761719, 'eval_precision': 0.2214941022280472, 'eval_recall': 0.19270239452679588, 'eval_f1': 0.20609756097560977, 'eval_accuracy': 0.940399907357369, 'eval_runtime': 3.1204, 'eval_samples_per_second': 490.646, 'eval_steps_per_second': 61.531, 'epoch': 18.0, 'step': 4860}, {'loss': 3.9243, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 76.87834930419922, 'eval_precision': 0.18562329390354868, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.20647773279352225, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 3.6707, 'eval_samples_per_second': 417.091, 'eval_steps_per_second': 52.307, 'epoch': 19.0, 'step': 5130}, {'loss': 3.9739, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 70.0699691772461, 'eval_precision': 0.1800711743772242, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.22173531989482909, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 3.4829, 'eval_samples_per_second': 439.571, 'eval_steps_per_second': 55.126, 'epoch': 20.0, 'step': 5400}, {'loss': 2.9216, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 68.99911499023438, 'eval_precision': 0.17823908375089478, 'eval_recall': 0.2839224629418472, 'eval_f1': 0.21899736147757257, 'eval_accuracy': 0.9339921253763607, 'eval_runtime': 3.399, 'eval_samples_per_second': 450.428, 'eval_steps_per_second': 56.487, 'epoch': 21.0, 'step': 5670}, {'loss': 1.9709, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 63.64887237548828, 'eval_precision': 0.17870439314966494, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.21621621621621623, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.9666, 'eval_samples_per_second': 516.078, 'eval_steps_per_second': 64.72, 'epoch': 22.0, 'step': 5940}, {'loss': 1.4383, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 67.20843505859375, 'eval_precision': 0.18729096989966554, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2161119150988905, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 3.0731, 'eval_samples_per_second': 498.192, 'eval_steps_per_second': 62.477, 'epoch': 23.0, 'step': 6210}, {'loss': 0.7603, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 68.43103790283203, 'eval_precision': 0.18617021276595744, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.20947630922693264, 'eval_accuracy': 0.937813633907203, 'eval_runtime': 3.0664, 'eval_samples_per_second': 499.277, 'eval_steps_per_second': 62.613, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 910.0004, 'train_samples_per_second': 227.71, 'train_steps_per_second': 7.121, 'total_flos': 6696816021960792.0, 'train_loss': 539.4641935795913, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9351
  predict_f1                 =     0.1957
  predict_loss               =    52.6648
  predict_precision          =     0.1623
  predict_recall             =     0.2463
  predict_runtime            = 0:00:02.60
  predict_samples_per_second =    488.524
  predict_steps_per_second   =     61.065
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_28.json completed. F1: 0.19567567567567565
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_00.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_00.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6123.55 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6680.22 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6538.16 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6594.31 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6628.55 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6734.71 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6867.41 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 5933.82 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6372.24 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7039.37 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6627.89 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6632.38 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6431.76 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3339, 'eval_samples_per_second': 459.216, 'eval_steps_per_second': 57.589, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2193, 'eval_samples_per_second': 475.566, 'eval_steps_per_second': 59.64, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2681, 'eval_samples_per_second': 468.461, 'eval_steps_per_second': 58.749, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1882, 'eval_samples_per_second': 480.207, 'eval_steps_per_second': 60.222, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2515, 'eval_samples_per_second': 470.866, 'eval_steps_per_second': 59.05, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1433, 'eval_samples_per_second': 487.07, 'eval_steps_per_second': 61.083, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1362, 'eval_samples_per_second': 488.17, 'eval_steps_per_second': 61.221, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.4176, 'eval_samples_per_second': 447.979, 'eval_steps_per_second': 56.18, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2169, 'eval_samples_per_second': 475.919, 'eval_steps_per_second': 59.684, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1674, 'eval_samples_per_second': 483.355, 'eval_steps_per_second': 60.617, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0577, 'eval_samples_per_second': 500.703, 'eval_steps_per_second': 62.792, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0551, 'eval_samples_per_second': 501.129, 'eval_steps_per_second': 62.846, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1453, 'eval_samples_per_second': 486.751, 'eval_steps_per_second': 61.043, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1152, 'eval_samples_per_second': 491.462, 'eval_steps_per_second': 61.633, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1606, 'eval_samples_per_second': 484.401, 'eval_steps_per_second': 60.748, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1245, 'eval_samples_per_second': 490.004, 'eval_steps_per_second': 61.451, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.193, 'eval_samples_per_second': 479.48, 'eval_steps_per_second': 60.131, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1915, 'eval_samples_per_second': 479.709, 'eval_steps_per_second': 60.159, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2067, 'eval_samples_per_second': 477.436, 'eval_steps_per_second': 59.874, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3481, 'eval_samples_per_second': 457.277, 'eval_steps_per_second': 57.346, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0818, 'eval_samples_per_second': 496.794, 'eval_steps_per_second': 62.302, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1671, 'eval_samples_per_second': 483.406, 'eval_steps_per_second': 60.623, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2576, 'eval_samples_per_second': 469.983, 'eval_steps_per_second': 58.94, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2691, 'eval_samples_per_second': 468.33, 'eval_steps_per_second': 58.732, 'epoch': 24.0}
{'train_runtime': 1604.2424, 'train_samples_per_second': 129.168, 'train_steps_per_second': 16.157, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:26:44.24
  train_samples            =       8634
  train_samples_per_second =    129.168
  train_steps_per_second   =     16.157
[{'loss': 0.0, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3339, 'eval_samples_per_second': 459.216, 'eval_steps_per_second': 57.589, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2193, 'eval_samples_per_second': 475.566, 'eval_steps_per_second': 59.64, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2681, 'eval_samples_per_second': 468.461, 'eval_steps_per_second': 58.749, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1882, 'eval_samples_per_second': 480.207, 'eval_steps_per_second': 60.222, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2515, 'eval_samples_per_second': 470.866, 'eval_steps_per_second': 59.05, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1433, 'eval_samples_per_second': 487.07, 'eval_steps_per_second': 61.083, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1362, 'eval_samples_per_second': 488.17, 'eval_steps_per_second': 61.221, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.4176, 'eval_samples_per_second': 447.979, 'eval_steps_per_second': 56.18, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2169, 'eval_samples_per_second': 475.919, 'eval_steps_per_second': 59.684, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1674, 'eval_samples_per_second': 483.355, 'eval_steps_per_second': 60.617, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0577, 'eval_samples_per_second': 500.703, 'eval_steps_per_second': 62.792, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0551, 'eval_samples_per_second': 501.129, 'eval_steps_per_second': 62.846, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1453, 'eval_samples_per_second': 486.751, 'eval_steps_per_second': 61.043, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1152, 'eval_samples_per_second': 491.462, 'eval_steps_per_second': 61.633, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1606, 'eval_samples_per_second': 484.401, 'eval_steps_per_second': 60.748, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1245, 'eval_samples_per_second': 490.004, 'eval_steps_per_second': 61.451, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.193, 'eval_samples_per_second': 479.48, 'eval_steps_per_second': 60.131, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1915, 'eval_samples_per_second': 479.709, 'eval_steps_per_second': 60.159, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2067, 'eval_samples_per_second': 477.436, 'eval_steps_per_second': 59.874, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.3481, 'eval_samples_per_second': 457.277, 'eval_steps_per_second': 57.346, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0818, 'eval_samples_per_second': 496.794, 'eval_steps_per_second': 62.302, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.1671, 'eval_samples_per_second': 483.406, 'eval_steps_per_second': 60.623, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2576, 'eval_samples_per_second': 469.983, 'eval_steps_per_second': 58.94, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.2691, 'eval_samples_per_second': 468.33, 'eval_steps_per_second': 58.732, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1604.2424, 'train_samples_per_second': 129.168, 'train_steps_per_second': 16.157, 'total_flos': 4945638992624460.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.62
  predict_samples_per_second =    485.004
  predict_steps_per_second   =     60.625
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_00.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_27.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_27.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6586.55 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7048.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6830.81 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6866.19 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6899.18 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6975.03 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7093.73 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6062.97 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6573.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7172.99 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6660.91 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 6855.38 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6654.20 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2388, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.14977407455444336, 'eval_precision': 0.42030360531309297, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.45882962195753496, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 4.7977, 'eval_samples_per_second': 319.112, 'eval_steps_per_second': 40.019, 'epoch': 1.0}
{'loss': 0.1415, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.13708336651325226, 'eval_precision': 0.504950495049505, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5139977603583427, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 4.8773, 'eval_samples_per_second': 313.905, 'eval_steps_per_second': 39.366, 'epoch': 2.0}
{'loss': 0.1029, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.1402958780527115, 'eval_precision': 0.5109947643979058, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5327510917030568, 'eval_accuracy': 0.9544507064000618, 'eval_runtime': 4.8072, 'eval_samples_per_second': 318.484, 'eval_steps_per_second': 39.94, 'epoch': 3.0}
{'loss': 0.0721, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.1578979343175888, 'eval_precision': 0.45675902602854745, 'eval_recall': 0.6202964652223489, 'eval_f1': 0.5261121856866537, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 4.7972, 'eval_samples_per_second': 319.145, 'eval_steps_per_second': 40.023, 'epoch': 4.0}
{'loss': 0.0516, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.17335247993469238, 'eval_precision': 0.5369928400954654, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5247813411078718, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.9703, 'eval_samples_per_second': 308.029, 'eval_steps_per_second': 38.629, 'epoch': 5.0}
{'loss': 0.0366, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.197541743516922, 'eval_precision': 0.5279642058165548, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5330321852060982, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 5.029, 'eval_samples_per_second': 304.434, 'eval_steps_per_second': 38.179, 'epoch': 6.0}
{'loss': 0.0263, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.21419544517993927, 'eval_precision': 0.5192719486081371, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5356156819436775, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.968, 'eval_samples_per_second': 308.173, 'eval_steps_per_second': 38.647, 'epoch': 7.0}
{'loss': 0.0199, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.2278050035238266, 'eval_precision': 0.48003629764065336, 'eval_recall': 0.6031927023945268, 'eval_f1': 0.5346134411318848, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 4.9443, 'eval_samples_per_second': 309.649, 'eval_steps_per_second': 38.833, 'epoch': 8.0}
{'loss': 0.0149, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.2393796294927597, 'eval_precision': 0.5248677248677248, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.544456641053787, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.8841, 'eval_samples_per_second': 313.468, 'eval_steps_per_second': 39.312, 'epoch': 9.0}
{'loss': 0.0108, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.25323259830474854, 'eval_precision': 0.5196182396606575, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5384615384615384, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.8678, 'eval_samples_per_second': 314.517, 'eval_steps_per_second': 39.443, 'epoch': 10.0}
{'loss': 0.0086, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.2640693783760071, 'eval_precision': 0.5227963525835866, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5536480686695278, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 4.8803, 'eval_samples_per_second': 313.711, 'eval_steps_per_second': 39.342, 'epoch': 11.0}
{'loss': 0.0065, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.27916669845581055, 'eval_precision': 0.5045135406218656, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5368196371398078, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.7325, 'eval_samples_per_second': 323.509, 'eval_steps_per_second': 40.571, 'epoch': 12.0}
{'loss': 0.0051, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.29082947969436646, 'eval_precision': 0.5303197353914002, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5392376681614349, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.455, 'eval_steps_per_second': 41.191, 'epoch': 13.0}
{'loss': 0.0043, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.29598531126976013, 'eval_precision': 0.5163853028798411, 'eval_recall': 0.5929304446978335, 'eval_f1': 0.5520169851380043, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.7843, 'eval_samples_per_second': 320.004, 'eval_steps_per_second': 40.131, 'epoch': 14.0}
{'loss': 0.0035, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.3109825849533081, 'eval_precision': 0.5229645093945721, 'eval_recall': 0.5712656784492588, 'eval_f1': 0.546049046321526, 'eval_accuracy': 0.9554543349031113, 'eval_runtime': 4.8368, 'eval_samples_per_second': 316.532, 'eval_steps_per_second': 39.696, 'epoch': 15.0}
{'loss': 0.003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.3284378945827484, 'eval_precision': 0.5499412455934195, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5416666666666666, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.8394, 'eval_samples_per_second': 316.36, 'eval_steps_per_second': 39.674, 'epoch': 16.0}
{'loss': 0.0027, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.33658310770988464, 'eval_precision': 0.5449029126213593, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5279247501469725, 'eval_accuracy': 0.9567667721763298, 'eval_runtime': 4.6225, 'eval_samples_per_second': 331.207, 'eval_steps_per_second': 41.536, 'epoch': 17.0}
{'loss': 0.0022, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.33451032638549805, 'eval_precision': 0.5411111111111111, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5481148002250985, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.7034, 'eval_samples_per_second': 325.508, 'eval_steps_per_second': 40.821, 'epoch': 18.0}
{'loss': 0.0017, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3363353908061981, 'eval_precision': 0.5200845665961945, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5397696105320899, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.7803, 'eval_samples_per_second': 320.271, 'eval_steps_per_second': 40.165, 'epoch': 19.0}
{'loss': 0.0014, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.3451416492462158, 'eval_precision': 0.5299785867237687, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5466593042517945, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.8393, 'eval_samples_per_second': 316.371, 'eval_steps_per_second': 39.675, 'epoch': 20.0}
{'loss': 0.0014, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.35452204942703247, 'eval_precision': 0.5506402793946449, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5449308755760369, 'eval_accuracy': 0.9563035590210762, 'eval_runtime': 4.8786, 'eval_samples_per_second': 313.817, 'eval_steps_per_second': 39.355, 'epoch': 21.0}
{'loss': 0.0014, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3553514778614044, 'eval_precision': 0.5327510917030568, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5443390964863358, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.799, 'eval_samples_per_second': 319.025, 'eval_steps_per_second': 40.008, 'epoch': 22.0}
{'loss': 0.0011, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.35656091570854187, 'eval_precision': 0.5345016429353778, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5452513966480447, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.7955, 'eval_samples_per_second': 319.257, 'eval_steps_per_second': 40.037, 'epoch': 23.0}
{'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3540022373199463, 'eval_precision': 0.5317545748116254, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5470653377630121, 'eval_accuracy': 0.9558789469620937, 'eval_runtime': 4.6421, 'eval_samples_per_second': 329.806, 'eval_steps_per_second': 41.36, 'epoch': 24.0}
{'train_runtime': 2140.9412, 'train_samples_per_second': 96.787, 'train_steps_per_second': 3.027, 'train_loss': 0.03164092619661932, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0316
  train_runtime            = 0:35:40.94
  train_samples            =       8634
  train_samples_per_second =     96.787
  train_steps_per_second   =      3.027
[{'loss': 0.2388, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.14977407455444336, 'eval_precision': 0.42030360531309297, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.45882962195753496, 'eval_accuracy': 0.9483903342854937, 'eval_runtime': 4.7977, 'eval_samples_per_second': 319.112, 'eval_steps_per_second': 40.019, 'epoch': 1.0, 'step': 270}, {'loss': 0.1415, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.13708336651325226, 'eval_precision': 0.504950495049505, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.5139977603583427, 'eval_accuracy': 0.9536014822820968, 'eval_runtime': 4.8773, 'eval_samples_per_second': 313.905, 'eval_steps_per_second': 39.366, 'epoch': 2.0, 'step': 540}, {'loss': 0.1029, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.1402958780527115, 'eval_precision': 0.5109947643979058, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5327510917030568, 'eval_accuracy': 0.9544507064000618, 'eval_runtime': 4.8072, 'eval_samples_per_second': 318.484, 'eval_steps_per_second': 39.94, 'epoch': 3.0, 'step': 810}, {'loss': 0.0721, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.1578979343175888, 'eval_precision': 0.45675902602854745, 'eval_recall': 0.6202964652223489, 'eval_f1': 0.5261121856866537, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 4.7972, 'eval_samples_per_second': 319.145, 'eval_steps_per_second': 40.023, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0516, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.17335247993469238, 'eval_precision': 0.5369928400954654, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5247813411078718, 'eval_accuracy': 0.9546823129776886, 'eval_runtime': 4.9703, 'eval_samples_per_second': 308.029, 'eval_steps_per_second': 38.629, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0366, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.197541743516922, 'eval_precision': 0.5279642058165548, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5330321852060982, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 5.029, 'eval_samples_per_second': 304.434, 'eval_steps_per_second': 38.179, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0263, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.21419544517993927, 'eval_precision': 0.5192719486081371, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5356156819436775, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.968, 'eval_samples_per_second': 308.173, 'eval_steps_per_second': 38.647, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0199, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.2278050035238266, 'eval_precision': 0.48003629764065336, 'eval_recall': 0.6031927023945268, 'eval_f1': 0.5346134411318848, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 4.9443, 'eval_samples_per_second': 309.649, 'eval_steps_per_second': 38.833, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0149, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.2393796294927597, 'eval_precision': 0.5248677248677248, 'eval_recall': 0.5655644241733181, 'eval_f1': 0.544456641053787, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.8841, 'eval_samples_per_second': 313.468, 'eval_steps_per_second': 39.312, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0108, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.25323259830474854, 'eval_precision': 0.5196182396606575, 'eval_recall': 0.5587229190421893, 'eval_f1': 0.5384615384615384, 'eval_accuracy': 0.9553385316142978, 'eval_runtime': 4.8678, 'eval_samples_per_second': 314.517, 'eval_steps_per_second': 39.443, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0086, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.2640693783760071, 'eval_precision': 0.5227963525835866, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5536480686695278, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 4.8803, 'eval_samples_per_second': 313.711, 'eval_steps_per_second': 39.342, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0065, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.27916669845581055, 'eval_precision': 0.5045135406218656, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5368196371398078, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.7325, 'eval_samples_per_second': 323.509, 'eval_steps_per_second': 40.571, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0051, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.29082947969436646, 'eval_precision': 0.5303197353914002, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5392376681614349, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.6612, 'eval_samples_per_second': 328.455, 'eval_steps_per_second': 41.191, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0043, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.29598531126976013, 'eval_precision': 0.5163853028798411, 'eval_recall': 0.5929304446978335, 'eval_f1': 0.5520169851380043, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.7843, 'eval_samples_per_second': 320.004, 'eval_steps_per_second': 40.131, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0035, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.3109825849533081, 'eval_precision': 0.5229645093945721, 'eval_recall': 0.5712656784492588, 'eval_f1': 0.546049046321526, 'eval_accuracy': 0.9554543349031113, 'eval_runtime': 4.8368, 'eval_samples_per_second': 316.532, 'eval_steps_per_second': 39.696, 'epoch': 15.0, 'step': 4050}, {'loss': 0.003, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.3284378945827484, 'eval_precision': 0.5499412455934195, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5416666666666666, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.8394, 'eval_samples_per_second': 316.36, 'eval_steps_per_second': 39.674, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0027, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.33658310770988464, 'eval_precision': 0.5449029126213593, 'eval_recall': 0.5119726339794755, 'eval_f1': 0.5279247501469725, 'eval_accuracy': 0.9567667721763298, 'eval_runtime': 4.6225, 'eval_samples_per_second': 331.207, 'eval_steps_per_second': 41.536, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0022, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.33451032638549805, 'eval_precision': 0.5411111111111111, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5481148002250985, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.7034, 'eval_samples_per_second': 325.508, 'eval_steps_per_second': 40.821, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0017, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.3363353908061981, 'eval_precision': 0.5200845665961945, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5397696105320899, 'eval_accuracy': 0.9552227283254845, 'eval_runtime': 4.7803, 'eval_samples_per_second': 320.271, 'eval_steps_per_second': 40.165, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0014, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.3451416492462158, 'eval_precision': 0.5299785867237687, 'eval_recall': 0.56442417331813, 'eval_f1': 0.5466593042517945, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.8393, 'eval_samples_per_second': 316.371, 'eval_steps_per_second': 39.675, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0014, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.35452204942703247, 'eval_precision': 0.5506402793946449, 'eval_recall': 0.5393386545039909, 'eval_f1': 0.5449308755760369, 'eval_accuracy': 0.9563035590210762, 'eval_runtime': 4.8786, 'eval_samples_per_second': 313.817, 'eval_steps_per_second': 39.355, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0014, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.3553514778614044, 'eval_precision': 0.5327510917030568, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5443390964863358, 'eval_accuracy': 0.9554157338068401, 'eval_runtime': 4.799, 'eval_samples_per_second': 319.025, 'eval_steps_per_second': 40.008, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0011, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.35656091570854187, 'eval_precision': 0.5345016429353778, 'eval_recall': 0.556442417331813, 'eval_f1': 0.5452513966480447, 'eval_accuracy': 0.9563807612136185, 'eval_runtime': 4.7955, 'eval_samples_per_second': 319.257, 'eval_steps_per_second': 40.037, 'epoch': 23.0, 'step': 6210}, {'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.3540022373199463, 'eval_precision': 0.5317545748116254, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5470653377630121, 'eval_accuracy': 0.9558789469620937, 'eval_runtime': 4.6421, 'eval_samples_per_second': 329.806, 'eval_steps_per_second': 41.36, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2140.9412, 'train_samples_per_second': 96.787, 'train_steps_per_second': 3.027, 'total_flos': 2.2848307215255972e+16, 'train_loss': 0.03164092619661932, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9535
  predict_f1                 =     0.4966
  predict_loss               =     0.1468
  predict_precision          =     0.4979
  predict_recall             =     0.4952
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.751
  predict_steps_per_second   =     40.594
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_27.json completed. F1: 0.49658935879945426
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_05.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6672.95 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7083.16 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6894.45 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6926.24 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6941.81 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7058.34 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7215.33 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6309.67 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6737.72 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7253.86 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6923.85 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7041.05 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6843.46 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NorBERT_3_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 29856198711098.785, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0491, 'eval_samples_per_second': 253.094, 'eval_steps_per_second': 31.74, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.858, 'eval_samples_per_second': 261.35, 'eval_steps_per_second': 32.776, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7476, 'eval_samples_per_second': 266.37, 'eval_steps_per_second': 33.405, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8934, 'eval_samples_per_second': 259.781, 'eval_steps_per_second': 32.579, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6963, 'eval_samples_per_second': 268.769, 'eval_steps_per_second': 33.706, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7236, 'eval_samples_per_second': 267.487, 'eval_steps_per_second': 33.545, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6871, 'eval_samples_per_second': 269.206, 'eval_steps_per_second': 33.761, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0269, 'eval_samples_per_second': 254.027, 'eval_steps_per_second': 31.857, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0829, 'eval_samples_per_second': 251.689, 'eval_steps_per_second': 31.564, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0311, 'eval_samples_per_second': 253.851, 'eval_steps_per_second': 31.835, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.478, 'eval_steps_per_second': 33.544, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9161, 'eval_samples_per_second': 258.787, 'eval_steps_per_second': 32.454, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8996, 'eval_samples_per_second': 259.509, 'eval_steps_per_second': 32.545, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0367, 'eval_samples_per_second': 253.616, 'eval_steps_per_second': 31.806, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.748, 'eval_samples_per_second': 266.352, 'eval_steps_per_second': 33.403, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.371, 'eval_steps_per_second': 33.656, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7143, 'eval_samples_per_second': 267.925, 'eval_steps_per_second': 33.6, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7287, 'eval_samples_per_second': 267.253, 'eval_steps_per_second': 33.516, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.744, 'eval_samples_per_second': 266.541, 'eval_steps_per_second': 33.426, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7708, 'eval_samples_per_second': 265.303, 'eval_steps_per_second': 33.271, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.739, 'eval_samples_per_second': 266.772, 'eval_steps_per_second': 33.455, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7377, 'eval_samples_per_second': 266.831, 'eval_steps_per_second': 33.463, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7344, 'eval_samples_per_second': 266.985, 'eval_steps_per_second': 33.482, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.095, 'eval_steps_per_second': 33.621, 'epoch': 24.0}
{'train_runtime': 3419.207, 'train_samples_per_second': 60.604, 'train_steps_per_second': 7.581, 'train_loss': 1244008279629.116, 'epoch': 24.0}
***** train metrics *****
  epoch                    =              24.0
  train_loss               = 1244008279629.116
  train_runtime            =        0:56:59.20
  train_samples            =              8634
  train_samples_per_second =            60.604
  train_steps_per_second   =             7.581
[{'loss': 29856198711098.785, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0491, 'eval_samples_per_second': 253.094, 'eval_steps_per_second': 31.74, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.858, 'eval_samples_per_second': 261.35, 'eval_steps_per_second': 32.776, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7476, 'eval_samples_per_second': 266.37, 'eval_steps_per_second': 33.405, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8934, 'eval_samples_per_second': 259.781, 'eval_steps_per_second': 32.579, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6963, 'eval_samples_per_second': 268.769, 'eval_steps_per_second': 33.706, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7236, 'eval_samples_per_second': 267.487, 'eval_steps_per_second': 33.545, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6871, 'eval_samples_per_second': 269.206, 'eval_steps_per_second': 33.761, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0269, 'eval_samples_per_second': 254.027, 'eval_steps_per_second': 31.857, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0829, 'eval_samples_per_second': 251.689, 'eval_steps_per_second': 31.564, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0311, 'eval_samples_per_second': 253.851, 'eval_steps_per_second': 31.835, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7238, 'eval_samples_per_second': 267.478, 'eval_steps_per_second': 33.544, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.9161, 'eval_samples_per_second': 258.787, 'eval_steps_per_second': 32.454, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.8996, 'eval_samples_per_second': 259.509, 'eval_steps_per_second': 32.545, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 6.0367, 'eval_samples_per_second': 253.616, 'eval_steps_per_second': 31.806, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.748, 'eval_samples_per_second': 266.352, 'eval_steps_per_second': 33.403, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.371, 'eval_steps_per_second': 33.656, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7143, 'eval_samples_per_second': 267.925, 'eval_steps_per_second': 33.6, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7287, 'eval_samples_per_second': 267.253, 'eval_steps_per_second': 33.516, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.744, 'eval_samples_per_second': 266.541, 'eval_steps_per_second': 33.426, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7708, 'eval_samples_per_second': 265.303, 'eval_steps_per_second': 33.271, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.739, 'eval_samples_per_second': 266.772, 'eval_steps_per_second': 33.455, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7377, 'eval_samples_per_second': 266.831, 'eval_steps_per_second': 33.463, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7344, 'eval_samples_per_second': 266.985, 'eval_steps_per_second': 33.482, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.095, 'eval_steps_per_second': 33.621, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3419.207, 'train_samples_per_second': 60.604, 'train_steps_per_second': 7.581, 'total_flos': 1.751047517859822e+16, 'train_loss': 1244008279629.116, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.80
  predict_samples_per_second =    264.762
  predict_steps_per_second   =     33.095
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_05.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_10.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_10.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5882.37 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6773.36 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6769.11 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6865.85 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6980.13 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7143.63 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6306.17 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6645.24 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6729.02 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7362.52 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6931.73 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7042.74 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6879.80 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.1983, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.15700763463974, 'eval_precision': 0.45711060948081267, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.45944412932501416, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.3763, 'eval_samples_per_second': 644.292, 'eval_steps_per_second': 80.799, 'epoch': 1.0}
{'loss': 0.1215, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.18035553395748138, 'eval_precision': 0.5274888558692422, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.45806451612903226, 'eval_accuracy': 0.9503589901953216, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.19, 'eval_steps_per_second': 81.79, 'epoch': 2.0}
{'loss': 0.0712, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.19947952032089233, 'eval_precision': 0.44072657743785854, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.4794591783671347, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.3543, 'eval_samples_per_second': 650.294, 'eval_steps_per_second': 81.552, 'epoch': 3.0}
{'loss': 0.0455, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2620101571083069, 'eval_precision': 0.41214351425942963, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4562118126272912, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.954, 'eval_steps_per_second': 81.384, 'epoch': 4.0}
{'loss': 0.0282, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2959306836128235, 'eval_precision': 0.494148244473342, 'eval_recall': 0.43329532497149376, 'eval_f1': 0.4617253948967193, 'eval_accuracy': 0.9472709024936308, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.009, 'eval_steps_per_second': 81.391, 'epoch': 5.0}
{'loss': 0.0208, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.3086794912815094, 'eval_precision': 0.45222929936305734, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.46838922484881806, 'eval_accuracy': 0.9436037983478731, 'eval_runtime': 2.3668, 'eval_samples_per_second': 646.866, 'eval_steps_per_second': 81.122, 'epoch': 6.0}
{'loss': 0.0161, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3353886902332306, 'eval_precision': 0.4645426515930113, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.48864864864864865, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.658, 'eval_steps_per_second': 81.472, 'epoch': 7.0}
{'loss': 0.0147, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.3444685935974121, 'eval_precision': 0.47674418604651164, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.4947888096544158, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 2.4328, 'eval_samples_per_second': 629.314, 'eval_steps_per_second': 78.921, 'epoch': 8.0}
{'loss': 0.011, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.346620112657547, 'eval_precision': 0.45509586276488395, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.48286937901498933, 'eval_accuracy': 0.9439898093105844, 'eval_runtime': 2.3551, 'eval_samples_per_second': 650.074, 'eval_steps_per_second': 81.525, 'epoch': 9.0}
{'loss': 0.0096, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3740551769733429, 'eval_precision': 0.4827175208581645, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4720279720279721, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.433, 'eval_steps_per_second': 81.193, 'epoch': 10.0}
{'loss': 0.0086, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.3990233242511749, 'eval_precision': 0.5017921146953405, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4900816802800466, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.174, 'eval_steps_per_second': 81.286, 'epoch': 11.0}
{'loss': 0.0059, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.41087204217910767, 'eval_precision': 0.5029868578255675, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4912485414235706, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3589, 'eval_samples_per_second': 649.032, 'eval_steps_per_second': 81.394, 'epoch': 12.0}
{'loss': 0.0055, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4089249074459076, 'eval_precision': 0.5282758620689655, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.4781523096129838, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.801, 'eval_steps_per_second': 81.49, 'epoch': 13.0}
{'loss': 0.0043, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4440864026546478, 'eval_precision': 0.4574358974358974, 'eval_recall': 0.508551881413911, 'eval_f1': 0.4816414686825054, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.436, 'eval_steps_per_second': 81.445, 'epoch': 14.0}
{'loss': 0.0034, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4307197630405426, 'eval_precision': 0.5184696569920845, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.4807339449541285, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.791, 'eval_steps_per_second': 81.489, 'epoch': 15.0}
{'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4162149131298065, 'eval_precision': 0.4950276243093923, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5028058361391695, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.434, 'eval_steps_per_second': 81.444, 'epoch': 16.0}
{'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4606775641441345, 'eval_precision': 0.49334945586457074, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47887323943661975, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.031, 'eval_steps_per_second': 81.77, 'epoch': 17.0}
{'loss': 0.0016, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4819640815258026, 'eval_precision': 0.525, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.5008944543828264, 'eval_accuracy': 0.9490851540183741, 'eval_runtime': 2.3586, 'eval_samples_per_second': 649.124, 'eval_steps_per_second': 81.405, 'epoch': 18.0}
{'loss': 0.0017, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.4744741916656494, 'eval_precision': 0.5355263157894737, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.4972510690287111, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.873, 'eval_steps_per_second': 81.625, 'epoch': 19.0}
{'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.47640278935432434, 'eval_precision': 0.49273743016759775, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.49774266365688485, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.889, 'eval_steps_per_second': 81.627, 'epoch': 20.0}
{'loss': 0.001, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4906748831272125, 'eval_precision': 0.5244667503136763, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.49940262843488653, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.802, 'eval_steps_per_second': 81.49, 'epoch': 21.0}
{'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5026705265045166, 'eval_precision': 0.5136741973840666, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.5029103608847497, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.714, 'eval_steps_per_second': 81.354, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.5100983381271362, 'eval_precision': 0.52, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.5041128084606346, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.491, 'eval_steps_per_second': 81.326, 'epoch': 23.0}
{'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5117067694664001, 'eval_precision': 0.5150421179302046, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.5011709601873536, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3474, 'eval_samples_per_second': 652.218, 'eval_steps_per_second': 81.793, 'epoch': 24.0}
{'train_runtime': 1440.3134, 'train_samples_per_second': 143.869, 'train_steps_per_second': 17.996, 'train_loss': 0.02409754290509923, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0241
  train_runtime            = 0:24:00.31
  train_samples            =       8634
  train_samples_per_second =    143.869
  train_steps_per_second   =     17.996
[{'loss': 0.1983, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.15700763463974, 'eval_precision': 0.45711060948081267, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.45944412932501416, 'eval_accuracy': 0.947888520033969, 'eval_runtime': 2.3763, 'eval_samples_per_second': 644.292, 'eval_steps_per_second': 80.799, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1215, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.18035553395748138, 'eval_precision': 0.5274888558692422, 'eval_recall': 0.4047890535917902, 'eval_f1': 0.45806451612903226, 'eval_accuracy': 0.9503589901953216, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.19, 'eval_steps_per_second': 81.79, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0712, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.19947952032089233, 'eval_precision': 0.44072657743785854, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.4794591783671347, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.3543, 'eval_samples_per_second': 650.294, 'eval_steps_per_second': 81.552, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0455, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.2620101571083069, 'eval_precision': 0.41214351425942963, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4562118126272912, 'eval_accuracy': 0.9405929128387246, 'eval_runtime': 2.3592, 'eval_samples_per_second': 648.954, 'eval_steps_per_second': 81.384, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0282, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.2959306836128235, 'eval_precision': 0.494148244473342, 'eval_recall': 0.43329532497149376, 'eval_f1': 0.4617253948967193, 'eval_accuracy': 0.9472709024936308, 'eval_runtime': 2.359, 'eval_samples_per_second': 649.009, 'eval_steps_per_second': 81.391, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0208, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.3086794912815094, 'eval_precision': 0.45222929936305734, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.46838922484881806, 'eval_accuracy': 0.9436037983478731, 'eval_runtime': 2.3668, 'eval_samples_per_second': 646.866, 'eval_steps_per_second': 81.122, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0161, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.3353886902332306, 'eval_precision': 0.4645426515930113, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.48864864864864865, 'eval_accuracy': 0.946190071798039, 'eval_runtime': 2.3566, 'eval_samples_per_second': 649.658, 'eval_steps_per_second': 81.472, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0147, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.3444685935974121, 'eval_precision': 0.47674418604651164, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.4947888096544158, 'eval_accuracy': 0.9464216783756658, 'eval_runtime': 2.4328, 'eval_samples_per_second': 629.314, 'eval_steps_per_second': 78.921, 'epoch': 8.0, 'step': 8640}, {'loss': 0.011, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.346620112657547, 'eval_precision': 0.45509586276488395, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.48286937901498933, 'eval_accuracy': 0.9439898093105844, 'eval_runtime': 2.3551, 'eval_samples_per_second': 650.074, 'eval_steps_per_second': 81.525, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0096, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.3740551769733429, 'eval_precision': 0.4827175208581645, 'eval_recall': 0.4618015963511973, 'eval_f1': 0.4720279720279721, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3647, 'eval_samples_per_second': 647.433, 'eval_steps_per_second': 81.193, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0086, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.3990233242511749, 'eval_precision': 0.5017921146953405, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.4900816802800466, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.362, 'eval_samples_per_second': 648.174, 'eval_steps_per_second': 81.286, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0059, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.41087204217910767, 'eval_precision': 0.5029868578255675, 'eval_recall': 0.48004561003420754, 'eval_f1': 0.4912485414235706, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3589, 'eval_samples_per_second': 649.032, 'eval_steps_per_second': 81.394, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0055, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.4089249074459076, 'eval_precision': 0.5282758620689655, 'eval_recall': 0.43671607753705816, 'eval_f1': 0.4781523096129838, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.801, 'eval_steps_per_second': 81.49, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0043, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.4440864026546478, 'eval_precision': 0.4574358974358974, 'eval_recall': 0.508551881413911, 'eval_f1': 0.4816414686825054, 'eval_accuracy': 0.9444916235621091, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.436, 'eval_steps_per_second': 81.445, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0034, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.4307197630405426, 'eval_precision': 0.5184696569920845, 'eval_recall': 0.44811858608893956, 'eval_f1': 0.4807339449541285, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.791, 'eval_steps_per_second': 81.489, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0035, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.4162149131298065, 'eval_precision': 0.4950276243093923, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5028058361391695, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.434, 'eval_steps_per_second': 81.444, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0026, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.4606775641441345, 'eval_precision': 0.49334945586457074, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.47887323943661975, 'eval_accuracy': 0.9455338531614298, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.031, 'eval_steps_per_second': 81.77, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0016, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.4819640815258026, 'eval_precision': 0.525, 'eval_recall': 0.4789053591790194, 'eval_f1': 0.5008944543828264, 'eval_accuracy': 0.9490851540183741, 'eval_runtime': 2.3586, 'eval_samples_per_second': 649.124, 'eval_steps_per_second': 81.405, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0017, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.4744741916656494, 'eval_precision': 0.5355263157894737, 'eval_recall': 0.4640820980615735, 'eval_f1': 0.4972510690287111, 'eval_accuracy': 0.9490465529221029, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.873, 'eval_steps_per_second': 81.625, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0015, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.47640278935432434, 'eval_precision': 0.49273743016759775, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.49774266365688485, 'eval_accuracy': 0.9472323013973597, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.889, 'eval_steps_per_second': 81.627, 'epoch': 20.0, 'step': 21600}, {'loss': 0.001, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.4906748831272125, 'eval_precision': 0.5244667503136763, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.49940262843488653, 'eval_accuracy': 0.9487377441519339, 'eval_runtime': 2.3561, 'eval_samples_per_second': 649.802, 'eval_steps_per_second': 81.49, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.5026705265045166, 'eval_precision': 0.5136741973840666, 'eval_recall': 0.4925883694412771, 'eval_f1': 0.5029103608847497, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.714, 'eval_steps_per_second': 81.354, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.5100983381271362, 'eval_precision': 0.52, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.5041128084606346, 'eval_accuracy': 0.9475411101675287, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.491, 'eval_steps_per_second': 81.326, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.5117067694664001, 'eval_precision': 0.5150421179302046, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.5011709601873536, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.3474, 'eval_samples_per_second': 652.218, 'eval_steps_per_second': 81.793, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1440.3134, 'train_samples_per_second': 143.869, 'train_steps_per_second': 17.996, 'total_flos': 5908755624631080.0, 'train_loss': 0.02409754290509923, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9489
  predict_f1                 =       0.44
  predict_loss               =     0.1646
  predict_precision          =     0.4599
  predict_recall             =     0.4218
  predict_runtime            = 0:00:01.98
  predict_samples_per_second =    639.238
  predict_steps_per_second   =     79.905
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_10.json completed. F1: 0.44002838892831797
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_30.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_30.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6494.51 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7119.17 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7006.09 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7061.76 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7127.52 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7263.91 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6382.43 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6716.80 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6869.88 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7384.29 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7063.25 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7118.97 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6929.48 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.224, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.16189871728420258, 'eval_precision': 0.456353591160221, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4635241301907968, 'eval_accuracy': 0.9477727167451555, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.521, 'eval_steps_per_second': 81.204, 'epoch': 1.0}
{'loss': 0.1423, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.14753413200378418, 'eval_precision': 0.4722838137472284, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.47892074198988194, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3461, 'eval_samples_per_second': 652.583, 'eval_steps_per_second': 81.839, 'epoch': 2.0}
{'loss': 0.0992, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1581604778766632, 'eval_precision': 0.4831804281345566, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5102260495156081, 'eval_accuracy': 0.9495483671736278, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.035, 'eval_steps_per_second': 81.771, 'epoch': 3.0}
{'loss': 0.0655, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.1883198618888855, 'eval_precision': 0.4694501018329939, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.49596557288864984, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.204, 'eval_steps_per_second': 81.666, 'epoch': 4.0}
{'loss': 0.0452, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2130585014820099, 'eval_precision': 0.49384098544232924, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.49830508474576274, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3439, 'eval_samples_per_second': 653.177, 'eval_steps_per_second': 81.914, 'epoch': 5.0}
{'loss': 0.0315, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.22722628712654114, 'eval_precision': 0.49891540130151846, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5113952195664258, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3447, 'eval_samples_per_second': 652.971, 'eval_steps_per_second': 81.888, 'epoch': 6.0}
{'loss': 0.0228, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.24992816150188446, 'eval_precision': 0.47689075630252103, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.49644614543466375, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.976, 'eval_steps_per_second': 81.512, 'epoch': 7.0}
{'loss': 0.0165, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.2675054669380188, 'eval_precision': 0.4746588693957115, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.511823436678928, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.3365, 'eval_samples_per_second': 655.258, 'eval_steps_per_second': 82.175, 'epoch': 8.0}
{'loss': 0.0118, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.2784842550754547, 'eval_precision': 0.4670380687093779, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5148413510747185, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 2.4236, 'eval_samples_per_second': 631.711, 'eval_steps_per_second': 79.222, 'epoch': 9.0}
{'loss': 0.0086, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.29998403787612915, 'eval_precision': 0.5048648648648648, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5183129855715871, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.795, 'eval_steps_per_second': 81.74, 'epoch': 10.0}
{'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.31936901807785034, 'eval_precision': 0.5196662693682956, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5081585081585082, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.769, 'eval_steps_per_second': 81.737, 'epoch': 11.0}
{'loss': 0.0049, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.33028730750083923, 'eval_precision': 0.49427679500520294, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5168661588683351, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.638, 'eval_steps_per_second': 81.721, 'epoch': 12.0}
{'loss': 0.0045, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.33846843242645264, 'eval_precision': 0.5027624309392266, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.510662177328844, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3398, 'eval_samples_per_second': 654.334, 'eval_steps_per_second': 82.059, 'epoch': 13.0}
{'loss': 0.0041, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.3382980525493622, 'eval_precision': 0.49171270718232046, 'eval_recall': 0.507411630558723, 'eval_f1': 0.4994388327721661, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.019, 'eval_steps_per_second': 81.643, 'epoch': 14.0}
{'loss': 0.0032, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3515460789203644, 'eval_precision': 0.4842639593908629, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5123523093447906, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3404, 'eval_samples_per_second': 654.162, 'eval_steps_per_second': 82.037, 'epoch': 15.0}
{'loss': 0.0028, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.35269227623939514, 'eval_precision': 0.5150462962962963, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5112004595060311, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.164, 'eval_steps_per_second': 81.787, 'epoch': 16.0}
{'loss': 0.0021, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.36466872692108154, 'eval_precision': 0.507531865585168, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.5034482758620691, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.4201, 'eval_samples_per_second': 632.628, 'eval_steps_per_second': 79.337, 'epoch': 17.0}
{'loss': 0.0021, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.36826291680336, 'eval_precision': 0.5079006772009029, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5104934770277936, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.3524, 'eval_samples_per_second': 650.824, 'eval_steps_per_second': 81.619, 'epoch': 18.0}
{'loss': 0.0016, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.36491551995277405, 'eval_precision': 0.515358361774744, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5159453302961277, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 2.3416, 'eval_samples_per_second': 653.831, 'eval_steps_per_second': 81.996, 'epoch': 19.0}
{'loss': 0.0015, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.37852826714515686, 'eval_precision': 0.4824016563146998, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5056972327726533, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.074, 'eval_steps_per_second': 81.775, 'epoch': 20.0}
{'loss': 0.0011, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.38241878151893616, 'eval_precision': 0.5137931034482759, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5117344018317115, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.346, 'eval_samples_per_second': 652.597, 'eval_steps_per_second': 81.841, 'epoch': 21.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.3846258521080017, 'eval_precision': 0.5071350164654226, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5167785234899328, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.165, 'eval_steps_per_second': 81.787, 'epoch': 22.0}
{'loss': 0.0007, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.3874993622303009, 'eval_precision': 0.4913978494623656, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5058107360265633, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.848, 'eval_steps_per_second': 81.747, 'epoch': 23.0}
{'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3877584636211395, 'eval_precision': 0.49780701754385964, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5075461151481274, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3437, 'eval_samples_per_second': 653.236, 'eval_steps_per_second': 81.921, 'epoch': 24.0}
{'train_runtime': 858.6379, 'train_samples_per_second': 241.331, 'train_steps_per_second': 7.547, 'train_loss': 0.029307707842945317, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0293
  train_runtime            = 0:14:18.63
  train_samples            =       8634
  train_samples_per_second =    241.331
  train_steps_per_second   =      7.547
[{'loss': 0.224, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.16189871728420258, 'eval_precision': 0.456353591160221, 'eval_recall': 0.4709236031927024, 'eval_f1': 0.4635241301907968, 'eval_accuracy': 0.9477727167451555, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.521, 'eval_steps_per_second': 81.204, 'epoch': 1.0, 'step': 270}, {'loss': 0.1423, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.14753413200378418, 'eval_precision': 0.4722838137472284, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.47892074198988194, 'eval_accuracy': 0.9497799737512546, 'eval_runtime': 2.3461, 'eval_samples_per_second': 652.583, 'eval_steps_per_second': 81.839, 'epoch': 2.0, 'step': 540}, {'loss': 0.0992, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.1581604778766632, 'eval_precision': 0.4831804281345566, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5102260495156081, 'eval_accuracy': 0.9495483671736278, 'eval_runtime': 2.348, 'eval_samples_per_second': 652.035, 'eval_steps_per_second': 81.771, 'epoch': 3.0, 'step': 810}, {'loss': 0.0655, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.1883198618888855, 'eval_precision': 0.4694501018329939, 'eval_recall': 0.5256556442417332, 'eval_f1': 0.49596557288864984, 'eval_accuracy': 0.9458426619315988, 'eval_runtime': 2.351, 'eval_samples_per_second': 651.204, 'eval_steps_per_second': 81.666, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0452, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.2130585014820099, 'eval_precision': 0.49384098544232924, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.49830508474576274, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3439, 'eval_samples_per_second': 653.177, 'eval_steps_per_second': 81.914, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0315, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.22722628712654114, 'eval_precision': 0.49891540130151846, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5113952195664258, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.3447, 'eval_samples_per_second': 652.971, 'eval_steps_per_second': 81.888, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0228, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.24992816150188446, 'eval_precision': 0.47689075630252103, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.49644614543466375, 'eval_accuracy': 0.9473481046861731, 'eval_runtime': 2.3555, 'eval_samples_per_second': 649.976, 'eval_steps_per_second': 81.512, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0165, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.2675054669380188, 'eval_precision': 0.4746588693957115, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.511823436678928, 'eval_accuracy': 0.9466532849532927, 'eval_runtime': 2.3365, 'eval_samples_per_second': 655.258, 'eval_steps_per_second': 82.175, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0118, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.2784842550754547, 'eval_precision': 0.4670380687093779, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5148413510747185, 'eval_accuracy': 0.9468462904346483, 'eval_runtime': 2.4236, 'eval_samples_per_second': 631.711, 'eval_steps_per_second': 79.222, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0086, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.29998403787612915, 'eval_precision': 0.5048648648648648, 'eval_recall': 0.5324971493728621, 'eval_f1': 0.5183129855715871, 'eval_accuracy': 0.9483131320929514, 'eval_runtime': 2.3489, 'eval_samples_per_second': 651.795, 'eval_steps_per_second': 81.74, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.31936901807785034, 'eval_precision': 0.5196662693682956, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5081585081585082, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.349, 'eval_samples_per_second': 651.769, 'eval_steps_per_second': 81.737, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0049, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.33028730750083923, 'eval_precision': 0.49427679500520294, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5168661588683351, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3495, 'eval_samples_per_second': 651.638, 'eval_steps_per_second': 81.721, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0045, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.33846843242645264, 'eval_precision': 0.5027624309392266, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.510662177328844, 'eval_accuracy': 0.9492781594997298, 'eval_runtime': 2.3398, 'eval_samples_per_second': 654.334, 'eval_steps_per_second': 82.059, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0041, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.3382980525493622, 'eval_precision': 0.49171270718232046, 'eval_recall': 0.507411630558723, 'eval_f1': 0.4994388327721661, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.019, 'eval_steps_per_second': 81.643, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0032, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.3515460789203644, 'eval_precision': 0.4842639593908629, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5123523093447906, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.3404, 'eval_samples_per_second': 654.162, 'eval_steps_per_second': 82.037, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0028, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.35269227623939514, 'eval_precision': 0.5150462962962963, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5112004595060311, 'eval_accuracy': 0.9498571759437968, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.164, 'eval_steps_per_second': 81.787, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0021, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.36466872692108154, 'eval_precision': 0.507531865585168, 'eval_recall': 0.49942987457240595, 'eval_f1': 0.5034482758620691, 'eval_accuracy': 0.9492395584034586, 'eval_runtime': 2.4201, 'eval_samples_per_second': 632.628, 'eval_steps_per_second': 79.337, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0021, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.36826291680336, 'eval_precision': 0.5079006772009029, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5104934770277936, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.3524, 'eval_samples_per_second': 650.824, 'eval_steps_per_second': 81.619, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0016, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.36491551995277405, 'eval_precision': 0.515358361774744, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5159453302961277, 'eval_accuracy': 0.9494711649810854, 'eval_runtime': 2.3416, 'eval_samples_per_second': 653.831, 'eval_steps_per_second': 81.996, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0015, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.37852826714515686, 'eval_precision': 0.4824016563146998, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5056972327726533, 'eval_accuracy': 0.9470778970122752, 'eval_runtime': 2.3479, 'eval_samples_per_second': 652.074, 'eval_steps_per_second': 81.775, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0011, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.38241878151893616, 'eval_precision': 0.5137931034482759, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5117344018317115, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.346, 'eval_samples_per_second': 652.597, 'eval_steps_per_second': 81.841, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.3846258521080017, 'eval_precision': 0.5071350164654226, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5167785234899328, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.3476, 'eval_samples_per_second': 652.165, 'eval_steps_per_second': 81.787, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0007, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.3874993622303009, 'eval_precision': 0.4913978494623656, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5058107360265633, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.3487, 'eval_samples_per_second': 651.848, 'eval_steps_per_second': 81.747, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0006, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.3877584636211395, 'eval_precision': 0.49780701754385964, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5075461151481274, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.3437, 'eval_samples_per_second': 653.236, 'eval_steps_per_second': 81.921, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 858.6379, 'train_samples_per_second': 241.331, 'train_steps_per_second': 7.547, 'total_flos': 7895714136063000.0, 'train_loss': 0.029307707842945317, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9526
  predict_f1                 =     0.4952
  predict_loss               =     0.1463
  predict_precision          =     0.5021
  predict_recall             =     0.4884
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    650.328
  predict_steps_per_second   =     81.291
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_30.json completed. F1: 0.49517241379310345
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_32.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_32.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5850.63 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6708.84 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6719.95 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6837.88 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6934.30 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7098.77 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7282.33 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6360.43 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6696.71 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7365.11 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6968.90 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7024.86 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6847.31 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.3832, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19593317806720734, 'eval_precision': 0.21045392022008252, 'eval_recall': 0.17445838084378562, 'eval_f1': 0.19077306733167082, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 2.9545, 'eval_samples_per_second': 518.196, 'eval_steps_per_second': 64.986, 'epoch': 1.0}
{'loss': 0.1781, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.16722381114959717, 'eval_precision': 0.4670255720053836, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.42839506172839503, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.565, 'eval_steps_per_second': 64.907, 'epoch': 2.0}
{'loss': 0.1, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.18213830888271332, 'eval_precision': 0.4567307692307692, 'eval_recall': 0.43329532497149376, 'eval_f1': 0.44470450555880636, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.9158, 'eval_samples_per_second': 525.073, 'eval_steps_per_second': 65.848, 'epoch': 3.0}
{'loss': 0.06, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.20811277627944946, 'eval_precision': 0.5071258907363421, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.49680046538685285, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.9379, 'eval_samples_per_second': 521.112, 'eval_steps_per_second': 65.352, 'epoch': 4.0}
{'loss': 0.0347, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.22470122575759888, 'eval_precision': 0.48401323042998895, 'eval_recall': 0.500570125427594, 'eval_f1': 0.49215246636771304, 'eval_accuracy': 0.9493167605960009, 'eval_runtime': 2.9259, 'eval_samples_per_second': 523.262, 'eval_steps_per_second': 65.621, 'epoch': 5.0}
{'loss': 0.0193, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.2583106458187103, 'eval_precision': 0.4884233737596472, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4966367713004485, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.9274, 'eval_samples_per_second': 522.999, 'eval_steps_per_second': 65.588, 'epoch': 6.0}
{'loss': 0.0121, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2733571529388428, 'eval_precision': 0.4977168949771689, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4974329720479178, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.864, 'eval_steps_per_second': 65.571, 'epoch': 7.0}
{'loss': 0.0061, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.30712467432022095, 'eval_precision': 0.4656810982048574, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.48355263157894735, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.9499, 'eval_samples_per_second': 519.006, 'eval_steps_per_second': 65.088, 'epoch': 8.0}
{'loss': 0.0054, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.304593950510025, 'eval_precision': 0.49837486457204766, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5111111111111111, 'eval_accuracy': 0.9495483671736278, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.965, 'eval_steps_per_second': 65.333, 'epoch': 9.0}
{'loss': 0.0035, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3144848048686981, 'eval_precision': 0.4743718592964824, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5042735042735041, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 3.0214, 'eval_samples_per_second': 506.723, 'eval_steps_per_second': 63.547, 'epoch': 10.0}
{'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.33999449014663696, 'eval_precision': 0.5023980815347722, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.48977206312098187, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.558, 'eval_steps_per_second': 64.906, 'epoch': 11.0}
{'loss': 0.0022, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3351232707500458, 'eval_precision': 0.47310647639956094, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.482102908277405, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.952, 'eval_samples_per_second': 518.639, 'eval_steps_per_second': 65.042, 'epoch': 12.0}
{'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3489789366722107, 'eval_precision': 0.5138387484957883, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.5, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.9651, 'eval_samples_per_second': 516.34, 'eval_steps_per_second': 64.753, 'epoch': 13.0}
{'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3711698651313782, 'eval_precision': 0.4868421052631579, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4963666852990497, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.9466, 'eval_samples_per_second': 519.582, 'eval_steps_per_second': 65.16, 'epoch': 14.0}
{'loss': 0.0017, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3559931218624115, 'eval_precision': 0.5060639470782801, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.51457399103139, 'eval_accuracy': 0.9511696132170153, 'eval_runtime': 2.9291, 'eval_samples_per_second': 522.689, 'eval_steps_per_second': 65.55, 'epoch': 15.0}
{'loss': 0.0014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.3665522336959839, 'eval_precision': 0.5213776722090261, 'eval_recall': 0.500570125427594, 'eval_f1': 0.510762070971495, 'eval_accuracy': 0.9509766077356597, 'eval_runtime': 2.8956, 'eval_samples_per_second': 528.726, 'eval_steps_per_second': 66.307, 'epoch': 16.0}
{'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3693469762802124, 'eval_precision': 0.5213776722090261, 'eval_recall': 0.500570125427594, 'eval_f1': 0.510762070971495, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.521, 'eval_steps_per_second': 65.278, 'epoch': 17.0}
{'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.3726196587085724, 'eval_precision': 0.5027746947835738, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5095613048368954, 'eval_accuracy': 0.9503975912915927, 'eval_runtime': 2.9541, 'eval_samples_per_second': 518.27, 'eval_steps_per_second': 64.995, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.37712132930755615, 'eval_precision': 0.5104166666666666, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5066053991958644, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.9279, 'eval_samples_per_second': 522.898, 'eval_steps_per_second': 65.576, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.381894052028656, 'eval_precision': 0.52954808806489, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5252873563218391, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 2.9434, 'eval_samples_per_second': 520.155, 'eval_steps_per_second': 65.232, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3869619071483612, 'eval_precision': 0.5217917675544794, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5061655901350558, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9537, 'eval_samples_per_second': 518.325, 'eval_steps_per_second': 65.002, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.39172255992889404, 'eval_precision': 0.5107832009080591, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5119453924914675, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.893, 'eval_steps_per_second': 63.694, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.39568570256233215, 'eval_precision': 0.5234093637454982, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5099415204678364, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9134, 'eval_samples_per_second': 525.5, 'eval_steps_per_second': 65.902, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.39373257756233215, 'eval_precision': 0.5155350978135789, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5131729667812143, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 2.954, 'eval_samples_per_second': 518.283, 'eval_steps_per_second': 64.997, 'epoch': 24.0}
{'train_runtime': 878.4069, 'train_samples_per_second': 235.9, 'train_steps_per_second': 7.377, 'train_loss': 0.034086302402831704, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0341
  train_runtime            = 0:14:38.40
  train_samples            =       8634
  train_samples_per_second =      235.9
  train_steps_per_second   =      7.377
[{'loss': 0.3832, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.19593317806720734, 'eval_precision': 0.21045392022008252, 'eval_recall': 0.17445838084378562, 'eval_f1': 0.19077306733167082, 'eval_accuracy': 0.9398208909133019, 'eval_runtime': 2.9545, 'eval_samples_per_second': 518.196, 'eval_steps_per_second': 64.986, 'epoch': 1.0, 'step': 270}, {'loss': 0.1781, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.16722381114959717, 'eval_precision': 0.4670255720053836, 'eval_recall': 0.3956670467502851, 'eval_f1': 0.42839506172839503, 'eval_accuracy': 0.9488149463444762, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.565, 'eval_steps_per_second': 64.907, 'epoch': 2.0, 'step': 540}, {'loss': 0.1, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.18213830888271332, 'eval_precision': 0.4567307692307692, 'eval_recall': 0.43329532497149376, 'eval_f1': 0.44470450555880636, 'eval_accuracy': 0.9478113178414267, 'eval_runtime': 2.9158, 'eval_samples_per_second': 525.073, 'eval_steps_per_second': 65.848, 'epoch': 3.0, 'step': 810}, {'loss': 0.06, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.20811277627944946, 'eval_precision': 0.5071258907363421, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.49680046538685285, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.9379, 'eval_samples_per_second': 521.112, 'eval_steps_per_second': 65.352, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0347, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.22470122575759888, 'eval_precision': 0.48401323042998895, 'eval_recall': 0.500570125427594, 'eval_f1': 0.49215246636771304, 'eval_accuracy': 0.9493167605960009, 'eval_runtime': 2.9259, 'eval_samples_per_second': 523.262, 'eval_steps_per_second': 65.621, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0193, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.2583106458187103, 'eval_precision': 0.4884233737596472, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.4966367713004485, 'eval_accuracy': 0.9483517331892226, 'eval_runtime': 2.9274, 'eval_samples_per_second': 522.999, 'eval_steps_per_second': 65.588, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0121, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.2733571529388428, 'eval_precision': 0.4977168949771689, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.4974329720479178, 'eval_accuracy': 0.9495097660773566, 'eval_runtime': 2.9281, 'eval_samples_per_second': 522.864, 'eval_steps_per_second': 65.571, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0061, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.30712467432022095, 'eval_precision': 0.4656810982048574, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.48355263157894735, 'eval_accuracy': 0.947309503589902, 'eval_runtime': 2.9499, 'eval_samples_per_second': 519.006, 'eval_steps_per_second': 65.088, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0054, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.304593950510025, 'eval_precision': 0.49837486457204766, 'eval_recall': 0.5245153933865451, 'eval_f1': 0.5111111111111111, 'eval_accuracy': 0.9495483671736278, 'eval_runtime': 2.9388, 'eval_samples_per_second': 520.965, 'eval_steps_per_second': 65.333, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0035, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3144848048686981, 'eval_precision': 0.4743718592964824, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.5042735042735041, 'eval_accuracy': 0.9477341156488844, 'eval_runtime': 3.0214, 'eval_samples_per_second': 506.723, 'eval_steps_per_second': 63.547, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0024, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.33999449014663696, 'eval_precision': 0.5023980815347722, 'eval_recall': 0.47776510832383123, 'eval_f1': 0.48977206312098187, 'eval_accuracy': 0.9501273836176948, 'eval_runtime': 2.9581, 'eval_samples_per_second': 517.558, 'eval_steps_per_second': 64.906, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0022, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.3351232707500458, 'eval_precision': 0.47310647639956094, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.482102908277405, 'eval_accuracy': 0.9486219408631205, 'eval_runtime': 2.952, 'eval_samples_per_second': 518.639, 'eval_steps_per_second': 65.042, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0019, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.3489789366722107, 'eval_precision': 0.5138387484957883, 'eval_recall': 0.4868871151653364, 'eval_f1': 0.5, 'eval_accuracy': 0.9508222033505751, 'eval_runtime': 2.9651, 'eval_samples_per_second': 516.34, 'eval_steps_per_second': 64.753, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0017, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.3711698651313782, 'eval_precision': 0.4868421052631579, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.4963666852990497, 'eval_accuracy': 0.9491237551146453, 'eval_runtime': 2.9466, 'eval_samples_per_second': 519.582, 'eval_steps_per_second': 65.16, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0017, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.3559931218624115, 'eval_precision': 0.5060639470782801, 'eval_recall': 0.5233751425313569, 'eval_f1': 0.51457399103139, 'eval_accuracy': 0.9511696132170153, 'eval_runtime': 2.9291, 'eval_samples_per_second': 522.689, 'eval_steps_per_second': 65.55, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0014, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.3665522336959839, 'eval_precision': 0.5213776722090261, 'eval_recall': 0.500570125427594, 'eval_f1': 0.510762070971495, 'eval_accuracy': 0.9509766077356597, 'eval_runtime': 2.8956, 'eval_samples_per_second': 528.726, 'eval_steps_per_second': 66.307, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0008, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3693469762802124, 'eval_precision': 0.5213776722090261, 'eval_recall': 0.500570125427594, 'eval_f1': 0.510762070971495, 'eval_accuracy': 0.951632826372269, 'eval_runtime': 2.9413, 'eval_samples_per_second': 520.521, 'eval_steps_per_second': 65.278, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0008, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.3726196587085724, 'eval_precision': 0.5027746947835738, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5095613048368954, 'eval_accuracy': 0.9503975912915927, 'eval_runtime': 2.9541, 'eval_samples_per_second': 518.27, 'eval_steps_per_second': 64.995, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.37712132930755615, 'eval_precision': 0.5104166666666666, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5066053991958644, 'eval_accuracy': 0.9507450011580328, 'eval_runtime': 2.9279, 'eval_samples_per_second': 522.898, 'eval_steps_per_second': 65.576, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.381894052028656, 'eval_precision': 0.52954808806489, 'eval_recall': 0.5210946408209807, 'eval_f1': 0.5252873563218391, 'eval_accuracy': 0.9519802362387092, 'eval_runtime': 2.9434, 'eval_samples_per_second': 520.155, 'eval_steps_per_second': 65.232, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.3869619071483612, 'eval_precision': 0.5217917675544794, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.5061655901350558, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9537, 'eval_samples_per_second': 518.325, 'eval_steps_per_second': 65.002, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.39172255992889404, 'eval_precision': 0.5107832009080591, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.5119453924914675, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 3.0144, 'eval_samples_per_second': 507.893, 'eval_steps_per_second': 63.694, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0005, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.39568570256233215, 'eval_precision': 0.5234093637454982, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.5099415204678364, 'eval_accuracy': 0.9515170230834555, 'eval_runtime': 2.9134, 'eval_samples_per_second': 525.5, 'eval_steps_per_second': 65.902, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.39373257756233215, 'eval_precision': 0.5155350978135789, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5131729667812143, 'eval_accuracy': 0.9514012197946422, 'eval_runtime': 2.954, 'eval_samples_per_second': 518.283, 'eval_steps_per_second': 64.997, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 878.4069, 'train_samples_per_second': 235.9, 'train_steps_per_second': 7.377, 'total_flos': 6696816021960792.0, 'train_loss': 0.034086302402831704, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9504
  predict_f1                 =      0.421
  predict_loss               =     0.1755
  predict_precision          =     0.4768
  predict_recall             =     0.3769
  predict_runtime            = 0:00:02.44
  predict_samples_per_second =    521.054
  predict_steps_per_second   =     65.132
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_32.json completed. F1: 0.4209726443768997
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_33.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_33.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6034.32 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6812.97 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6779.38 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6913.00 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6994.41 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7126.75 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7308.98 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6389.97 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6753.40 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7400.69 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7077.12 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7146.70 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6955.35 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NorBERT_3_large/checkpoint-270 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.6094, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7804, 'eval_samples_per_second': 264.863, 'eval_steps_per_second': 33.216, 'epoch': 1.0}
{'loss': 1.6094, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.771, 'eval_samples_per_second': 265.29, 'eval_steps_per_second': 33.27, 'epoch': 2.0}
{'loss': 1.6094, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.764, 'eval_samples_per_second': 265.614, 'eval_steps_per_second': 33.31, 'epoch': 3.0}
{'loss': 1.6094, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.994, 'eval_steps_per_second': 33.358, 'epoch': 4.0}
{'loss': 1.6094, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.8639, 'eval_samples_per_second': 261.09, 'eval_steps_per_second': 32.743, 'epoch': 5.0}
{'loss': 1.6094, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7381, 'eval_samples_per_second': 266.814, 'eval_steps_per_second': 33.461, 'epoch': 6.0}
{'loss': 1.6094, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7522, 'eval_samples_per_second': 266.158, 'eval_steps_per_second': 33.378, 'epoch': 7.0}
{'loss': 1.6094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7295, 'eval_samples_per_second': 267.214, 'eval_steps_per_second': 33.511, 'epoch': 8.0}
{'loss': 1.6094, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7546, 'eval_samples_per_second': 266.05, 'eval_steps_per_second': 33.365, 'epoch': 9.0}
{'loss': 1.6094, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7529, 'eval_samples_per_second': 266.129, 'eval_steps_per_second': 33.375, 'epoch': 10.0}
{'loss': 1.6094, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.762, 'eval_samples_per_second': 265.708, 'eval_steps_per_second': 33.322, 'epoch': 11.0}
{'loss': 1.6094, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7475, 'eval_samples_per_second': 266.374, 'eval_steps_per_second': 33.406, 'epoch': 12.0}
{'loss': 1.6094, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.147, 'eval_steps_per_second': 33.377, 'epoch': 13.0}
{'loss': 1.6094, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7362, 'eval_samples_per_second': 266.904, 'eval_steps_per_second': 33.472, 'epoch': 14.0}
{'loss': 1.6094, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7426, 'eval_samples_per_second': 266.604, 'eval_steps_per_second': 33.434, 'epoch': 15.0}
{'loss': 1.6094, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.8011, 'eval_samples_per_second': 263.916, 'eval_steps_per_second': 33.097, 'epoch': 16.0}
{'loss': 1.6094, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7397, 'eval_samples_per_second': 266.738, 'eval_steps_per_second': 33.451, 'epoch': 17.0}
{'loss': 1.6094, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.704, 'eval_steps_per_second': 33.447, 'epoch': 18.0}
{'loss': 1.6094, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.704, 'eval_samples_per_second': 268.41, 'eval_steps_per_second': 33.661, 'epoch': 19.0}
{'loss': 1.6094, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7405, 'eval_samples_per_second': 266.703, 'eval_steps_per_second': 33.447, 'epoch': 20.0}
{'loss': 1.6094, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7947, 'eval_samples_per_second': 264.207, 'eval_steps_per_second': 33.134, 'epoch': 21.0}
{'loss': 1.6094, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7208, 'eval_samples_per_second': 267.621, 'eval_steps_per_second': 33.562, 'epoch': 22.0}
{'loss': 1.6094, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7515, 'eval_samples_per_second': 266.191, 'eval_steps_per_second': 33.383, 'epoch': 23.0}
{'loss': 1.6094, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7375, 'eval_samples_per_second': 266.842, 'eval_steps_per_second': 33.464, 'epoch': 24.0}
{'train_runtime': 2446.352, 'train_samples_per_second': 84.704, 'train_steps_per_second': 2.649, 'train_loss': 1.6094363648214458, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     1.6094
  train_runtime            = 0:40:46.35
  train_samples            =       8634
  train_samples_per_second =     84.704
  train_steps_per_second   =      2.649
[{'loss': 1.6094, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7804, 'eval_samples_per_second': 264.863, 'eval_steps_per_second': 33.216, 'epoch': 1.0, 'step': 270}, {'loss': 1.6094, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.771, 'eval_samples_per_second': 265.29, 'eval_steps_per_second': 33.27, 'epoch': 2.0, 'step': 540}, {'loss': 1.6094, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.764, 'eval_samples_per_second': 265.614, 'eval_steps_per_second': 33.31, 'epoch': 3.0, 'step': 810}, {'loss': 1.6094, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.994, 'eval_steps_per_second': 33.358, 'epoch': 4.0, 'step': 1080}, {'loss': 1.6094, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.8639, 'eval_samples_per_second': 261.09, 'eval_steps_per_second': 32.743, 'epoch': 5.0, 'step': 1350}, {'loss': 1.6094, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7381, 'eval_samples_per_second': 266.814, 'eval_steps_per_second': 33.461, 'epoch': 6.0, 'step': 1620}, {'loss': 1.6094, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7522, 'eval_samples_per_second': 266.158, 'eval_steps_per_second': 33.378, 'epoch': 7.0, 'step': 1890}, {'loss': 1.6094, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7295, 'eval_samples_per_second': 267.214, 'eval_steps_per_second': 33.511, 'epoch': 8.0, 'step': 2160}, {'loss': 1.6094, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7546, 'eval_samples_per_second': 266.05, 'eval_steps_per_second': 33.365, 'epoch': 9.0, 'step': 2430}, {'loss': 1.6094, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7529, 'eval_samples_per_second': 266.129, 'eval_steps_per_second': 33.375, 'epoch': 10.0, 'step': 2700}, {'loss': 1.6094, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.762, 'eval_samples_per_second': 265.708, 'eval_steps_per_second': 33.322, 'epoch': 11.0, 'step': 2970}, {'loss': 1.6094, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7475, 'eval_samples_per_second': 266.374, 'eval_steps_per_second': 33.406, 'epoch': 12.0, 'step': 3240}, {'loss': 1.6094, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7525, 'eval_samples_per_second': 266.147, 'eval_steps_per_second': 33.377, 'epoch': 13.0, 'step': 3510}, {'loss': 1.6094, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7362, 'eval_samples_per_second': 266.904, 'eval_steps_per_second': 33.472, 'epoch': 14.0, 'step': 3780}, {'loss': 1.6094, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7426, 'eval_samples_per_second': 266.604, 'eval_steps_per_second': 33.434, 'epoch': 15.0, 'step': 4050}, {'loss': 1.6094, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.8011, 'eval_samples_per_second': 263.916, 'eval_steps_per_second': 33.097, 'epoch': 16.0, 'step': 4320}, {'loss': 1.6094, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7397, 'eval_samples_per_second': 266.738, 'eval_steps_per_second': 33.451, 'epoch': 17.0, 'step': 4590}, {'loss': 1.6094, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.704, 'eval_steps_per_second': 33.447, 'epoch': 18.0, 'step': 4860}, {'loss': 1.6094, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.704, 'eval_samples_per_second': 268.41, 'eval_steps_per_second': 33.661, 'epoch': 19.0, 'step': 5130}, {'loss': 1.6094, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7405, 'eval_samples_per_second': 266.703, 'eval_steps_per_second': 33.447, 'epoch': 20.0, 'step': 5400}, {'loss': 1.6094, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7947, 'eval_samples_per_second': 264.207, 'eval_steps_per_second': 33.134, 'epoch': 21.0, 'step': 5670}, {'loss': 1.6094, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7208, 'eval_samples_per_second': 267.621, 'eval_steps_per_second': 33.562, 'epoch': 22.0, 'step': 5940}, {'loss': 1.6094, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7515, 'eval_samples_per_second': 266.191, 'eval_steps_per_second': 33.383, 'epoch': 23.0, 'step': 6210}, {'loss': 1.6094, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.006298310907529345, 'eval_recall': 0.05017103762827822, 'eval_f1': 0.011191657128322523, 'eval_accuracy': 0.683084999613989, 'eval_runtime': 5.7375, 'eval_samples_per_second': 266.842, 'eval_steps_per_second': 33.464, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2446.352, 'train_samples_per_second': 84.704, 'train_steps_per_second': 2.649, 'total_flos': 2.3711735486578776e+16, 'train_loss': 1.6094363648214458, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.6749
  predict_f1                 =     0.0106
  predict_loss               =     1.6094
  predict_precision          =     0.0059
  predict_recall             =      0.049
  predict_runtime            = 0:00:04.81
  predict_samples_per_second =    264.104
  predict_steps_per_second   =     33.013
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_33.json completed. F1: 0.010605391073795845
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_13.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_13.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6062.25 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6814.83 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6784.39 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6893.37 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6950.05 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7086.61 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7264.13 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6349.70 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6718.53 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7296.02 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6939.90 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7078.31 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6901.11 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 2.5649, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7519, 'eval_samples_per_second': 266.174, 'eval_steps_per_second': 33.38, 'epoch': 1.0}
{'loss': 2.5649, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7035, 'eval_samples_per_second': 268.433, 'eval_steps_per_second': 33.664, 'epoch': 2.0}
{'loss': 2.5649, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7021, 'eval_samples_per_second': 268.496, 'eval_steps_per_second': 33.672, 'epoch': 3.0}
{'loss': 2.5649, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.334, 'eval_steps_per_second': 33.651, 'epoch': 4.0}
{'loss': 2.5649, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7019, 'eval_samples_per_second': 268.508, 'eval_steps_per_second': 33.673, 'epoch': 5.0}
{'loss': 2.5649, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6985, 'eval_samples_per_second': 268.669, 'eval_steps_per_second': 33.693, 'epoch': 6.0}
{'loss': 2.5649, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7057, 'eval_samples_per_second': 268.33, 'eval_steps_per_second': 33.651, 'epoch': 7.0}
{'loss': 2.5649, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.712, 'eval_samples_per_second': 268.03, 'eval_steps_per_second': 33.613, 'epoch': 8.0}
{'loss': 2.5649, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7159, 'eval_samples_per_second': 267.851, 'eval_steps_per_second': 33.591, 'epoch': 9.0}
{'loss': 2.5649, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.372, 'eval_steps_per_second': 33.656, 'epoch': 10.0}
{'loss': 2.5649, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7129, 'eval_samples_per_second': 267.989, 'eval_steps_per_second': 33.608, 'epoch': 11.0}
{'loss': 2.5649, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.005, 'eval_steps_per_second': 33.61, 'epoch': 12.0}
{'loss': 2.5649, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7049, 'eval_samples_per_second': 268.366, 'eval_steps_per_second': 33.655, 'epoch': 13.0}
{'loss': 2.5649, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7115, 'eval_samples_per_second': 268.056, 'eval_steps_per_second': 33.616, 'epoch': 14.0}
{'loss': 2.5649, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.943, 'eval_steps_per_second': 33.602, 'epoch': 15.0}
{'loss': 2.5649, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7113, 'eval_samples_per_second': 268.067, 'eval_steps_per_second': 33.618, 'epoch': 16.0}
{'loss': 2.5649, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.704, 'eval_samples_per_second': 268.408, 'eval_steps_per_second': 33.661, 'epoch': 17.0}
{'loss': 2.5649, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7012, 'eval_samples_per_second': 268.538, 'eval_steps_per_second': 33.677, 'epoch': 18.0}
{'loss': 2.5649, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6984, 'eval_samples_per_second': 268.671, 'eval_steps_per_second': 33.694, 'epoch': 19.0}
{'loss': 2.5649, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.003, 'eval_steps_per_second': 33.61, 'epoch': 20.0}
{'loss': 2.5649, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7135, 'eval_samples_per_second': 267.963, 'eval_steps_per_second': 33.605, 'epoch': 21.0}
{'loss': 2.5649, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7, 'eval_samples_per_second': 268.595, 'eval_steps_per_second': 33.684, 'epoch': 22.0}
{'loss': 2.5649, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.718, 'eval_samples_per_second': 267.751, 'eval_steps_per_second': 33.578, 'epoch': 23.0}
{'loss': 2.5649, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7058, 'eval_samples_per_second': 268.326, 'eval_steps_per_second': 33.65, 'epoch': 24.0}
{'train_runtime': 2612.2905, 'train_samples_per_second': 79.323, 'train_steps_per_second': 4.961, 'train_loss': 2.5649433654031637, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     2.5649
  train_runtime            = 0:43:32.29
  train_samples            =       8634
  train_samples_per_second =     79.323
  train_steps_per_second   =      4.961
[{'loss': 2.5649, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7519, 'eval_samples_per_second': 266.174, 'eval_steps_per_second': 33.38, 'epoch': 1.0, 'step': 540}, {'loss': 2.5649, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7035, 'eval_samples_per_second': 268.433, 'eval_steps_per_second': 33.664, 'epoch': 2.0, 'step': 1080}, {'loss': 2.5649, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7021, 'eval_samples_per_second': 268.496, 'eval_steps_per_second': 33.672, 'epoch': 3.0, 'step': 1620}, {'loss': 2.5649, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.334, 'eval_steps_per_second': 33.651, 'epoch': 4.0, 'step': 2160}, {'loss': 2.5649, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7019, 'eval_samples_per_second': 268.508, 'eval_steps_per_second': 33.673, 'epoch': 5.0, 'step': 2700}, {'loss': 2.5649, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6985, 'eval_samples_per_second': 268.669, 'eval_steps_per_second': 33.693, 'epoch': 6.0, 'step': 3240}, {'loss': 2.5649, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7057, 'eval_samples_per_second': 268.33, 'eval_steps_per_second': 33.651, 'epoch': 7.0, 'step': 3780}, {'loss': 2.5649, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.712, 'eval_samples_per_second': 268.03, 'eval_steps_per_second': 33.613, 'epoch': 8.0, 'step': 4320}, {'loss': 2.5649, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7159, 'eval_samples_per_second': 267.851, 'eval_steps_per_second': 33.591, 'epoch': 9.0, 'step': 4860}, {'loss': 2.5649, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.372, 'eval_steps_per_second': 33.656, 'epoch': 10.0, 'step': 5400}, {'loss': 2.5649, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7129, 'eval_samples_per_second': 267.989, 'eval_steps_per_second': 33.608, 'epoch': 11.0, 'step': 5940}, {'loss': 2.5649, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.005, 'eval_steps_per_second': 33.61, 'epoch': 12.0, 'step': 6480}, {'loss': 2.5649, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7049, 'eval_samples_per_second': 268.366, 'eval_steps_per_second': 33.655, 'epoch': 13.0, 'step': 7020}, {'loss': 2.5649, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7115, 'eval_samples_per_second': 268.056, 'eval_steps_per_second': 33.616, 'epoch': 14.0, 'step': 7560}, {'loss': 2.5649, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.943, 'eval_steps_per_second': 33.602, 'epoch': 15.0, 'step': 8100}, {'loss': 2.5649, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7113, 'eval_samples_per_second': 268.067, 'eval_steps_per_second': 33.618, 'epoch': 16.0, 'step': 8640}, {'loss': 2.5649, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.704, 'eval_samples_per_second': 268.408, 'eval_steps_per_second': 33.661, 'epoch': 17.0, 'step': 9180}, {'loss': 2.5649, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7012, 'eval_samples_per_second': 268.538, 'eval_steps_per_second': 33.677, 'epoch': 18.0, 'step': 9720}, {'loss': 2.5649, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6984, 'eval_samples_per_second': 268.671, 'eval_steps_per_second': 33.694, 'epoch': 19.0, 'step': 10260}, {'loss': 2.5649, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.003, 'eval_steps_per_second': 33.61, 'epoch': 20.0, 'step': 10800}, {'loss': 2.5649, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7135, 'eval_samples_per_second': 267.963, 'eval_steps_per_second': 33.605, 'epoch': 21.0, 'step': 11340}, {'loss': 2.5649, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7, 'eval_samples_per_second': 268.595, 'eval_steps_per_second': 33.684, 'epoch': 22.0, 'step': 11880}, {'loss': 2.5649, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.718, 'eval_samples_per_second': 267.751, 'eval_steps_per_second': 33.578, 'epoch': 23.0, 'step': 12420}, {'loss': 2.5649, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 2.5649492740631104, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7058, 'eval_samples_per_second': 268.326, 'eval_steps_per_second': 33.65, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2612.2905, 'train_samples_per_second': 79.323, 'train_steps_per_second': 4.961, 'total_flos': 2.055046283595774e+16, 'train_loss': 2.5649433654031637, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     2.5649
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.78
  predict_samples_per_second =    265.938
  predict_steps_per_second   =     33.242
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_13.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_06.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_06.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6340.31 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6920.10 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6819.42 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6920.14 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6971.12 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7092.41 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6267.54 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6613.05 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6744.17 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7301.48 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6949.68 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7038.86 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6856.05 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NB-BERT_base/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2691, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.21714377403259277, 'eval_precision': 0.25953259532595324, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.24970414201183433, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 2.3772, 'eval_samples_per_second': 644.043, 'eval_steps_per_second': 80.768, 'epoch': 1.0}
{'loss': 0.1843, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.2214147299528122, 'eval_precision': 0.27099841521394613, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.226790450928382, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.537, 'eval_steps_per_second': 81.332, 'epoch': 2.0}
{'loss': 0.1285, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.24545590579509735, 'eval_precision': 0.2772727272727273, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27774615822424586, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.623, 'eval_steps_per_second': 81.468, 'epoch': 3.0}
{'loss': 0.0913, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.28601202368736267, 'eval_precision': 0.3041289023162135, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3229946524064171, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3583, 'eval_samples_per_second': 649.203, 'eval_steps_per_second': 81.415, 'epoch': 4.0}
{'loss': 0.0643, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.32598933577537537, 'eval_precision': 0.2513181019332162, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.2838709677419355, 'eval_accuracy': 0.9284335675133174, 'eval_runtime': 2.3663, 'eval_samples_per_second': 646.994, 'eval_steps_per_second': 81.138, 'epoch': 5.0}
{'loss': 0.0447, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.364326536655426, 'eval_precision': 0.2894472361809045, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.08, 'eval_steps_per_second': 81.4, 'epoch': 6.0}
{'loss': 0.0296, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.40059712529182434, 'eval_precision': 0.29907502569373073, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31459459459459466, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3577, 'eval_samples_per_second': 649.357, 'eval_steps_per_second': 81.435, 'epoch': 7.0}
{'loss': 0.0216, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.41495493054389954, 'eval_precision': 0.29692832764505117, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2972665148063781, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.432, 'eval_samples_per_second': 629.533, 'eval_steps_per_second': 78.949, 'epoch': 8.0}
{'loss': 0.0143, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.4459426999092102, 'eval_precision': 0.2717391304347826, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2911593435680254, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3646, 'eval_samples_per_second': 647.474, 'eval_steps_per_second': 81.199, 'epoch': 9.0}
{'loss': 0.0115, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.4699440598487854, 'eval_precision': 0.28751311647429173, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2994535519125683, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3633, 'eval_samples_per_second': 647.821, 'eval_steps_per_second': 81.242, 'epoch': 10.0}
{'loss': 0.0086, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4863993525505066, 'eval_precision': 0.29692470837751855, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.498, 'eval_steps_per_second': 81.452, 'epoch': 11.0}
{'loss': 0.0066, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.5089361667633057, 'eval_precision': 0.3121319199057715, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3070683661645423, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.806, 'eval_steps_per_second': 81.366, 'epoch': 12.0}
{'loss': 0.006, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.517332136631012, 'eval_precision': 0.3004434589800443, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3046655424395728, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3663, 'eval_samples_per_second': 647.006, 'eval_steps_per_second': 81.14, 'epoch': 13.0}
{'loss': 0.0046, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.5313273668289185, 'eval_precision': 0.30594594594594593, 'eval_recall': 0.322690992018244, 'eval_f1': 0.31409544950055496, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.084, 'eval_steps_per_second': 81.275, 'epoch': 14.0}
{'loss': 0.0034, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.5586615800857544, 'eval_precision': 0.30625, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3200870985302124, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3651, 'eval_samples_per_second': 647.329, 'eval_steps_per_second': 81.18, 'epoch': 15.0}
{'loss': 0.0027, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.5667367577552795, 'eval_precision': 0.30829596412556054, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3109101187111363, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.358, 'eval_steps_per_second': 81.309, 'epoch': 16.0}
{'loss': 0.0019, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.5750528573989868, 'eval_precision': 0.3183856502242152, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32108535895986434, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.084, 'eval_steps_per_second': 81.15, 'epoch': 17.0}
{'loss': 0.0029, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.588092565536499, 'eval_precision': 0.3148558758314856, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3192804946599213, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.11, 'eval_steps_per_second': 81.278, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.6003920435905457, 'eval_precision': 0.29897959183673467, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3155627355950457, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.437, 'eval_steps_per_second': 81.445, 'epoch': 19.0}
{'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.5930312275886536, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3363, 'eval_samples_per_second': 655.32, 'eval_steps_per_second': 82.183, 'epoch': 20.0}
{'loss': 0.0014, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.5830755233764648, 'eval_precision': 0.30686695278969955, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3161967938087341, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.014, 'eval_steps_per_second': 81.643, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5947340130805969, 'eval_precision': 0.3054662379421222, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3149171270718232, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3627, 'eval_samples_per_second': 647.997, 'eval_steps_per_second': 81.264, 'epoch': 22.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.5959968566894531, 'eval_precision': 0.3169092945128779, 'eval_recall': 0.322690992018244, 'eval_f1': 0.31977401129943506, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.709, 'eval_steps_per_second': 81.604, 'epoch': 23.0}
{'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.6005991697311401, 'eval_precision': 0.315450643776824, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3250414593698176, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.771, 'eval_steps_per_second': 81.236, 'epoch': 24.0}
{'train_runtime': 1442.8458, 'train_samples_per_second': 143.616, 'train_steps_per_second': 17.964, 'train_loss': 0.03756056885108536, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0376
  train_runtime            = 0:24:02.84
  train_samples            =       8634
  train_samples_per_second =    143.616
  train_steps_per_second   =     17.964
[{'loss': 0.2691, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.21714377403259277, 'eval_precision': 0.25953259532595324, 'eval_recall': 0.24059293044469784, 'eval_f1': 0.24970414201183433, 'eval_accuracy': 0.9379680382922875, 'eval_runtime': 2.3772, 'eval_samples_per_second': 644.043, 'eval_steps_per_second': 80.768, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1843, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.2214147299528122, 'eval_precision': 0.27099841521394613, 'eval_recall': 0.1949828962371722, 'eval_f1': 0.226790450928382, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 2.3607, 'eval_samples_per_second': 648.537, 'eval_steps_per_second': 81.332, 'epoch': 2.0, 'step': 2160}, {'loss': 0.1285, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.24545590579509735, 'eval_precision': 0.2772727272727273, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27774615822424586, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.623, 'eval_steps_per_second': 81.468, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0913, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.28601202368736267, 'eval_precision': 0.3041289023162135, 'eval_recall': 0.3443557582668187, 'eval_f1': 0.3229946524064171, 'eval_accuracy': 0.9364239944414421, 'eval_runtime': 2.3583, 'eval_samples_per_second': 649.203, 'eval_steps_per_second': 81.415, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0643, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.32598933577537537, 'eval_precision': 0.2513181019332162, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.2838709677419355, 'eval_accuracy': 0.9284335675133174, 'eval_runtime': 2.3663, 'eval_samples_per_second': 646.994, 'eval_steps_per_second': 81.138, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0447, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.364326536655426, 'eval_precision': 0.2894472361809045, 'eval_recall': 0.32839224629418473, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9343781363390721, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.08, 'eval_steps_per_second': 81.4, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0296, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.40059712529182434, 'eval_precision': 0.29907502569373073, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.31459459459459466, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3577, 'eval_samples_per_second': 649.357, 'eval_steps_per_second': 81.435, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0216, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.41495493054389954, 'eval_precision': 0.29692832764505117, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.2972665148063781, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.432, 'eval_samples_per_second': 629.533, 'eval_steps_per_second': 78.949, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0143, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.4459426999092102, 'eval_precision': 0.2717391304347826, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.2911593435680254, 'eval_accuracy': 0.9328726935844978, 'eval_runtime': 2.3646, 'eval_samples_per_second': 647.474, 'eval_steps_per_second': 81.199, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0115, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.4699440598487854, 'eval_precision': 0.28751311647429173, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.2994535519125683, 'eval_accuracy': 0.9353817648421215, 'eval_runtime': 2.3633, 'eval_samples_per_second': 647.821, 'eval_steps_per_second': 81.242, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0086, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.4863993525505066, 'eval_precision': 0.29692470837751855, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.30769230769230765, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.498, 'eval_steps_per_second': 81.452, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0066, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.5089361667633057, 'eval_precision': 0.3121319199057715, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.3070683661645423, 'eval_accuracy': 0.9376592295221184, 'eval_runtime': 2.3597, 'eval_samples_per_second': 648.806, 'eval_steps_per_second': 81.366, 'epoch': 12.0, 'step': 12960}, {'loss': 0.006, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.517332136631012, 'eval_precision': 0.3004434589800443, 'eval_recall': 0.3090079817559863, 'eval_f1': 0.3046655424395728, 'eval_accuracy': 0.9348027483980546, 'eval_runtime': 2.3663, 'eval_samples_per_second': 647.006, 'eval_steps_per_second': 81.14, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0046, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.5313273668289185, 'eval_precision': 0.30594594594594593, 'eval_recall': 0.322690992018244, 'eval_f1': 0.31409544950055496, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.084, 'eval_steps_per_second': 81.275, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0034, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.5586615800857544, 'eval_precision': 0.30625, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3200870985302124, 'eval_accuracy': 0.9353431637458504, 'eval_runtime': 2.3651, 'eval_samples_per_second': 647.329, 'eval_steps_per_second': 81.18, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0027, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.5667367577552795, 'eval_precision': 0.30829596412556054, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3109101187111363, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.358, 'eval_steps_per_second': 81.309, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0019, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.5750528573989868, 'eval_precision': 0.3183856502242152, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.32108535895986434, 'eval_accuracy': 0.9369258086929669, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.084, 'eval_steps_per_second': 81.15, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0029, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.588092565536499, 'eval_precision': 0.3148558758314856, 'eval_recall': 0.3238312428734322, 'eval_f1': 0.3192804946599213, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3623, 'eval_samples_per_second': 648.11, 'eval_steps_per_second': 81.278, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0011, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.6003920435905457, 'eval_precision': 0.29897959183673467, 'eval_recall': 0.33409350057012543, 'eval_f1': 0.3155627355950457, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.3574, 'eval_samples_per_second': 649.437, 'eval_steps_per_second': 81.445, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.5930312275886536, 'eval_precision': 0.30371203599550056, 'eval_recall': 0.30786773090079816, 'eval_f1': 0.30577576443941107, 'eval_accuracy': 0.9358835790936463, 'eval_runtime': 2.3363, 'eval_samples_per_second': 655.32, 'eval_steps_per_second': 82.183, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0014, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.5830755233764648, 'eval_precision': 0.30686695278969955, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3161967938087341, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.014, 'eval_steps_per_second': 81.643, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0005, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.5947340130805969, 'eval_precision': 0.3054662379421222, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.3149171270718232, 'eval_accuracy': 0.9367328032116112, 'eval_runtime': 2.3627, 'eval_samples_per_second': 647.997, 'eval_steps_per_second': 81.264, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0005, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.5959968566894531, 'eval_precision': 0.3169092945128779, 'eval_recall': 0.322690992018244, 'eval_f1': 0.31977401129943506, 'eval_accuracy': 0.9375820273295762, 'eval_runtime': 2.3528, 'eval_samples_per_second': 650.709, 'eval_steps_per_second': 81.604, 'epoch': 23.0, 'step': 24840}, {'loss': 0.001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.6005991697311401, 'eval_precision': 0.315450643776824, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3250414593698176, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 2.3635, 'eval_samples_per_second': 647.771, 'eval_steps_per_second': 81.236, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1442.8458, 'train_samples_per_second': 143.616, 'train_steps_per_second': 17.964, 'total_flos': 5909182978626408.0, 'train_loss': 0.03756056885108536, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9383
  predict_f1                 =     0.2613
  predict_loss               =     0.2217
  predict_precision          =     0.2766
  predict_recall             =     0.2476
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    648.717
  predict_steps_per_second   =      81.09
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_06.json completed. F1: 0.26130653266331655
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_08.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_08.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6261.46 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6947.28 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6935.92 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7042.97 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7125.99 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7259.10 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7439.82 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6469.55 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6860.39 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7510.28 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7170.87 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7239.97 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7072.41 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 1.6095, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.976, 'eval_samples_per_second': 514.453, 'eval_steps_per_second': 64.517, 'epoch': 1.0}
{'loss': 1.6095, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.872, 'eval_steps_per_second': 64.695, 'epoch': 2.0}
{'loss': 1.6095, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9315, 'eval_samples_per_second': 522.252, 'eval_steps_per_second': 65.495, 'epoch': 3.0}
{'loss': 1.6095, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9365, 'eval_samples_per_second': 521.362, 'eval_steps_per_second': 65.383, 'epoch': 4.0}
{'loss': 1.6095, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9212, 'eval_samples_per_second': 524.096, 'eval_steps_per_second': 65.726, 'epoch': 5.0}
{'loss': 1.6095, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9599, 'eval_samples_per_second': 517.243, 'eval_steps_per_second': 64.866, 'epoch': 6.0}
{'loss': 1.6095, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9565, 'eval_samples_per_second': 517.84, 'eval_steps_per_second': 64.941, 'epoch': 7.0}
{'loss': 1.6095, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9592, 'eval_samples_per_second': 517.365, 'eval_steps_per_second': 64.882, 'epoch': 8.0}
{'loss': 1.6095, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0165, 'eval_samples_per_second': 507.547, 'eval_steps_per_second': 63.651, 'epoch': 9.0}
{'loss': 1.6095, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.114, 'eval_steps_per_second': 64.976, 'epoch': 10.0}
{'loss': 1.6095, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9361, 'eval_samples_per_second': 521.433, 'eval_steps_per_second': 65.392, 'epoch': 11.0}
{'loss': 1.6095, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.617, 'eval_steps_per_second': 65.039, 'epoch': 12.0}
{'loss': 1.6095, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9183, 'eval_samples_per_second': 524.628, 'eval_steps_per_second': 65.793, 'epoch': 13.0}
{'loss': 1.6095, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.45, 'eval_steps_per_second': 65.394, 'epoch': 14.0}
{'loss': 1.6095, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9194, 'eval_samples_per_second': 524.418, 'eval_steps_per_second': 65.766, 'epoch': 15.0}
{'loss': 1.6095, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9118, 'eval_samples_per_second': 525.795, 'eval_steps_per_second': 65.939, 'epoch': 16.0}
{'loss': 1.6095, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9369, 'eval_samples_per_second': 521.298, 'eval_steps_per_second': 65.375, 'epoch': 17.0}
{'loss': 1.6095, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9152, 'eval_samples_per_second': 525.17, 'eval_steps_per_second': 65.861, 'epoch': 18.0}
{'loss': 1.6095, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9584, 'eval_samples_per_second': 517.507, 'eval_steps_per_second': 64.9, 'epoch': 19.0}
{'loss': 1.6095, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9397, 'eval_samples_per_second': 520.798, 'eval_steps_per_second': 65.312, 'epoch': 20.0}
{'loss': 1.6095, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9077, 'eval_samples_per_second': 526.527, 'eval_steps_per_second': 66.031, 'epoch': 21.0}
{'loss': 1.6095, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.938, 'eval_samples_per_second': 521.107, 'eval_steps_per_second': 65.351, 'epoch': 22.0}
{'loss': 1.6095, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9095, 'eval_samples_per_second': 526.201, 'eval_steps_per_second': 65.99, 'epoch': 23.0}
{'loss': 1.6095, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9512, 'eval_samples_per_second': 518.781, 'eval_steps_per_second': 65.059, 'epoch': 24.0}
{'train_runtime': 1471.6695, 'train_samples_per_second': 140.803, 'train_steps_per_second': 17.613, 'train_loss': 1.6094611791916835, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     1.6095
  train_runtime            = 0:24:31.66
  train_samples            =       8634
  train_samples_per_second =    140.803
  train_steps_per_second   =     17.613
[{'loss': 1.6095, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.976, 'eval_samples_per_second': 514.453, 'eval_steps_per_second': 64.517, 'epoch': 1.0, 'step': 1080}, {'loss': 1.6095, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9678, 'eval_samples_per_second': 515.872, 'eval_steps_per_second': 64.695, 'epoch': 2.0, 'step': 2160}, {'loss': 1.6095, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9315, 'eval_samples_per_second': 522.252, 'eval_steps_per_second': 65.495, 'epoch': 3.0, 'step': 3240}, {'loss': 1.6095, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9365, 'eval_samples_per_second': 521.362, 'eval_steps_per_second': 65.383, 'epoch': 4.0, 'step': 4320}, {'loss': 1.6095, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9212, 'eval_samples_per_second': 524.096, 'eval_steps_per_second': 65.726, 'epoch': 5.0, 'step': 5400}, {'loss': 1.6095, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9599, 'eval_samples_per_second': 517.243, 'eval_steps_per_second': 64.866, 'epoch': 6.0, 'step': 6480}, {'loss': 1.6095, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9565, 'eval_samples_per_second': 517.84, 'eval_steps_per_second': 64.941, 'epoch': 7.0, 'step': 7560}, {'loss': 1.6095, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9592, 'eval_samples_per_second': 517.365, 'eval_steps_per_second': 64.882, 'epoch': 8.0, 'step': 8640}, {'loss': 1.6095, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0165, 'eval_samples_per_second': 507.547, 'eval_steps_per_second': 63.651, 'epoch': 9.0, 'step': 9720}, {'loss': 1.6095, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9549, 'eval_samples_per_second': 518.114, 'eval_steps_per_second': 64.976, 'epoch': 10.0, 'step': 10800}, {'loss': 1.6095, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9361, 'eval_samples_per_second': 521.433, 'eval_steps_per_second': 65.392, 'epoch': 11.0, 'step': 11880}, {'loss': 1.6095, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9521, 'eval_samples_per_second': 518.617, 'eval_steps_per_second': 65.039, 'epoch': 12.0, 'step': 12960}, {'loss': 1.6095, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9183, 'eval_samples_per_second': 524.628, 'eval_steps_per_second': 65.793, 'epoch': 13.0, 'step': 14040}, {'loss': 1.6095, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.45, 'eval_steps_per_second': 65.394, 'epoch': 14.0, 'step': 15120}, {'loss': 1.6095, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9194, 'eval_samples_per_second': 524.418, 'eval_steps_per_second': 65.766, 'epoch': 15.0, 'step': 16200}, {'loss': 1.6095, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9118, 'eval_samples_per_second': 525.795, 'eval_steps_per_second': 65.939, 'epoch': 16.0, 'step': 17280}, {'loss': 1.6095, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9369, 'eval_samples_per_second': 521.298, 'eval_steps_per_second': 65.375, 'epoch': 17.0, 'step': 18360}, {'loss': 1.6095, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9152, 'eval_samples_per_second': 525.17, 'eval_steps_per_second': 65.861, 'epoch': 18.0, 'step': 19440}, {'loss': 1.6095, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9584, 'eval_samples_per_second': 517.507, 'eval_steps_per_second': 64.9, 'epoch': 19.0, 'step': 20520}, {'loss': 1.6095, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9397, 'eval_samples_per_second': 520.798, 'eval_steps_per_second': 65.312, 'epoch': 20.0, 'step': 21600}, {'loss': 1.6095, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9077, 'eval_samples_per_second': 526.527, 'eval_steps_per_second': 66.031, 'epoch': 21.0, 'step': 22680}, {'loss': 1.6095, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.938, 'eval_samples_per_second': 521.107, 'eval_steps_per_second': 65.351, 'epoch': 22.0, 'step': 23760}, {'loss': 1.6095, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9095, 'eval_samples_per_second': 526.201, 'eval_steps_per_second': 65.99, 'epoch': 23.0, 'step': 24840}, {'loss': 1.6095, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 1.6094378232955933, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9512, 'eval_samples_per_second': 518.781, 'eval_steps_per_second': 65.059, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1471.6695, 'train_samples_per_second': 140.803, 'train_steps_per_second': 17.613, 'total_flos': 4945283721637740.0, 'train_loss': 1.6094611791916835, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     1.6094
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    514.351
  predict_steps_per_second   =     64.294
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_08.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_38.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_38.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5301.27 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6419.67 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6568.96 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6765.73 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6902.86 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7080.21 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6266.99 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6605.89 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6618.94 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7311.85 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6920.49 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7022.55 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6829.85 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.4414, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.26512202620506287, 'eval_precision': 0.16793893129770993, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.043650793650793655, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3895, 'eval_samples_per_second': 640.73, 'eval_steps_per_second': 80.353, 'epoch': 1.0}
{'loss': 0.2548, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.235127791762352, 'eval_precision': 0.17115384615384616, 'eval_recall': 0.10148232611174458, 'eval_f1': 0.12741589119541877, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.3709, 'eval_samples_per_second': 645.744, 'eval_steps_per_second': 80.982, 'epoch': 2.0}
{'loss': 0.2199, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.2252849042415619, 'eval_precision': 0.19746376811594202, 'eval_recall': 0.12428734321550741, 'eval_f1': 0.15255423372988106, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.163, 'eval_steps_per_second': 81.16, 'epoch': 3.0}
{'loss': 0.1905, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.22645489871501923, 'eval_precision': 0.24018475750577367, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.23866896156052783, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.52, 'eval_steps_per_second': 81.33, 'epoch': 4.0}
{'loss': 0.1639, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.22738347947597504, 'eval_precision': 0.22508038585209003, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23204419889502761, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.196, 'eval_steps_per_second': 81.791, 'epoch': 5.0}
{'loss': 0.1447, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.23316101729869843, 'eval_precision': 0.22075055187637968, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2243409983174425, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.243, 'eval_steps_per_second': 81.42, 'epoch': 6.0}
{'loss': 0.1286, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.2450849711894989, 'eval_precision': 0.23106423777564716, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.25104166666666666, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.28, 'eval_steps_per_second': 81.425, 'epoch': 7.0}
{'loss': 0.1147, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.2536560595035553, 'eval_precision': 0.23842364532019705, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.25581395348837205, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.3678, 'eval_samples_per_second': 646.601, 'eval_steps_per_second': 81.089, 'epoch': 8.0}
{'loss': 0.1048, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.259940505027771, 'eval_precision': 0.25955967555040554, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2574712643678161, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 2.3569, 'eval_samples_per_second': 649.579, 'eval_steps_per_second': 81.462, 'epoch': 9.0}
{'loss': 0.0933, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.268998920917511, 'eval_precision': 0.24405850091407677, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2709284627092846, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.05, 'eval_steps_per_second': 81.145, 'epoch': 10.0}
{'loss': 0.0848, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.27505767345428467, 'eval_precision': 0.24003707136237257, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2648261758691206, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.685, 'eval_steps_per_second': 81.1, 'epoch': 11.0}
{'loss': 0.0775, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.28889045119285583, 'eval_precision': 0.23581560283687944, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.26533665835411474, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.571, 'eval_steps_per_second': 81.712, 'epoch': 12.0}
{'loss': 0.0728, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.29087182879447937, 'eval_precision': 0.25100401606425704, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2669514148424987, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.348, 'eval_steps_per_second': 81.308, 'epoch': 13.0}
{'loss': 0.0673, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.29884520173072815, 'eval_precision': 0.2664756446991404, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.29002079002079006, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.3645, 'eval_samples_per_second': 647.507, 'eval_steps_per_second': 81.203, 'epoch': 14.0}
{'loss': 0.0632, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.30728965997695923, 'eval_precision': 0.25688073394495414, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2846975088967971, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.713, 'eval_steps_per_second': 81.103, 'epoch': 15.0}
{'loss': 0.0583, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.31039950251579285, 'eval_precision': 0.27765726681127983, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2846025569760979, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.401, 'eval_steps_per_second': 81.44, 'epoch': 16.0}
{'loss': 0.0553, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.312765508890152, 'eval_precision': 0.26554787759131293, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2846560846560846, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.4376, 'eval_samples_per_second': 628.081, 'eval_steps_per_second': 78.767, 'epoch': 17.0}
{'loss': 0.0516, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.32605379819869995, 'eval_precision': 0.25156110615521854, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2822822822822823, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.3643, 'eval_samples_per_second': 647.545, 'eval_steps_per_second': 81.208, 'epoch': 18.0}
{'loss': 0.0498, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3275357186794281, 'eval_precision': 0.25067144136078784, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.28084252758274825, 'eval_accuracy': 0.9300162124604339, 'eval_runtime': 2.364, 'eval_samples_per_second': 647.62, 'eval_steps_per_second': 81.217, 'epoch': 19.0}
{'loss': 0.0476, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.33205100893974304, 'eval_precision': 0.2560646900269542, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.2864321608040202, 'eval_accuracy': 0.9293599938238246, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.09, 'eval_steps_per_second': 81.15, 'epoch': 20.0}
{'loss': 0.0455, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3377097249031067, 'eval_precision': 0.2432195975503062, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2752475247524752, 'eval_accuracy': 0.9290897861499267, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.517, 'eval_steps_per_second': 81.204, 'epoch': 21.0}
{'loss': 0.0435, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.3361080586910248, 'eval_precision': 0.2640610104861773, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.28764278296988577, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.3669, 'eval_samples_per_second': 646.851, 'eval_steps_per_second': 81.12, 'epoch': 22.0}
{'loss': 0.0428, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.3384590744972229, 'eval_precision': 0.2587800369685767, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.28586013272077593, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.3742, 'eval_samples_per_second': 644.844, 'eval_steps_per_second': 80.869, 'epoch': 23.0}
{'loss': 0.0422, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.33796441555023193, 'eval_precision': 0.26103286384976526, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.28630278063851694, 'eval_accuracy': 0.9308268354821277, 'eval_runtime': 2.3639, 'eval_samples_per_second': 647.67, 'eval_steps_per_second': 81.223, 'epoch': 24.0}
{'train_runtime': 831.7421, 'train_samples_per_second': 249.135, 'train_steps_per_second': 3.895, 'train_loss': 0.11078061042008576, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.1108
  train_runtime            = 0:13:51.74
  train_samples            =       8634
  train_samples_per_second =    249.135
  train_steps_per_second   =      3.895
[{'loss': 0.4414, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.26512202620506287, 'eval_precision': 0.16793893129770993, 'eval_recall': 0.02508551881413911, 'eval_f1': 0.043650793650793655, 'eval_accuracy': 0.9355747703234771, 'eval_runtime': 2.3895, 'eval_samples_per_second': 640.73, 'eval_steps_per_second': 80.353, 'epoch': 1.0, 'step': 135}, {'loss': 0.2548, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.235127791762352, 'eval_precision': 0.17115384615384616, 'eval_recall': 0.10148232611174458, 'eval_f1': 0.12741589119541877, 'eval_accuracy': 0.9362309889600865, 'eval_runtime': 2.3709, 'eval_samples_per_second': 645.744, 'eval_steps_per_second': 80.982, 'epoch': 2.0, 'step': 270}, {'loss': 0.2199, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.2252849042415619, 'eval_precision': 0.19746376811594202, 'eval_recall': 0.12428734321550741, 'eval_f1': 0.15255423372988106, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3657, 'eval_samples_per_second': 647.163, 'eval_steps_per_second': 81.16, 'epoch': 3.0, 'step': 405}, {'loss': 0.1905, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.22645489871501923, 'eval_precision': 0.24018475750577367, 'eval_recall': 0.23717217787913342, 'eval_f1': 0.23866896156052783, 'eval_accuracy': 0.9361537867675442, 'eval_runtime': 2.3608, 'eval_samples_per_second': 648.52, 'eval_steps_per_second': 81.33, 'epoch': 4.0, 'step': 540}, {'loss': 0.1639, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.22738347947597504, 'eval_precision': 0.22508038585209003, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.23204419889502761, 'eval_accuracy': 0.9338763220875473, 'eval_runtime': 2.3475, 'eval_samples_per_second': 652.196, 'eval_steps_per_second': 81.791, 'epoch': 5.0, 'step': 675}, {'loss': 0.1447, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.23316101729869843, 'eval_precision': 0.22075055187637968, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2243409983174425, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3581, 'eval_samples_per_second': 649.243, 'eval_steps_per_second': 81.42, 'epoch': 6.0, 'step': 810}, {'loss': 0.1286, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.2450849711894989, 'eval_precision': 0.23106423777564716, 'eval_recall': 0.2748004561003421, 'eval_f1': 0.25104166666666666, 'eval_accuracy': 0.9331815023546669, 'eval_runtime': 2.358, 'eval_samples_per_second': 649.28, 'eval_steps_per_second': 81.425, 'epoch': 7.0, 'step': 945}, {'loss': 0.1147, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.2536560595035553, 'eval_precision': 0.23842364532019705, 'eval_recall': 0.2759407069555302, 'eval_f1': 0.25581395348837205, 'eval_accuracy': 0.9338377209912762, 'eval_runtime': 2.3678, 'eval_samples_per_second': 646.601, 'eval_steps_per_second': 81.089, 'epoch': 8.0, 'step': 1080}, {'loss': 0.1048, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.259940505027771, 'eval_precision': 0.25955967555040554, 'eval_recall': 0.2554161915621437, 'eval_f1': 0.2574712643678161, 'eval_accuracy': 0.9366169999227978, 'eval_runtime': 2.3569, 'eval_samples_per_second': 649.579, 'eval_steps_per_second': 81.462, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0933, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.268998920917511, 'eval_precision': 0.24405850091407677, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2709284627092846, 'eval_accuracy': 0.9314058519261947, 'eval_runtime': 2.3661, 'eval_samples_per_second': 647.05, 'eval_steps_per_second': 81.145, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0848, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.27505767345428467, 'eval_precision': 0.24003707136237257, 'eval_recall': 0.2953249714937286, 'eval_f1': 0.2648261758691206, 'eval_accuracy': 0.9321778738516174, 'eval_runtime': 2.3675, 'eval_samples_per_second': 646.685, 'eval_steps_per_second': 81.1, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0775, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.28889045119285583, 'eval_precision': 0.23581560283687944, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.26533665835411474, 'eval_accuracy': 0.9302092179417896, 'eval_runtime': 2.3497, 'eval_samples_per_second': 651.571, 'eval_steps_per_second': 81.712, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0728, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.29087182879447937, 'eval_precision': 0.25100401606425704, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2669514148424987, 'eval_accuracy': 0.9327954913919555, 'eval_runtime': 2.3614, 'eval_samples_per_second': 648.348, 'eval_steps_per_second': 81.308, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0673, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.29884520173072815, 'eval_precision': 0.2664756446991404, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.29002079002079006, 'eval_accuracy': 0.9324480815255153, 'eval_runtime': 2.3645, 'eval_samples_per_second': 647.507, 'eval_steps_per_second': 81.203, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0632, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.30728965997695923, 'eval_precision': 0.25688073394495414, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.2846975088967971, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.3674, 'eval_samples_per_second': 646.713, 'eval_steps_per_second': 81.103, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0583, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.31039950251579285, 'eval_precision': 0.27765726681127983, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.2846025569760979, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 2.3576, 'eval_samples_per_second': 649.401, 'eval_steps_per_second': 81.44, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0553, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.312765508890152, 'eval_precision': 0.26554787759131293, 'eval_recall': 0.30672748004561, 'eval_f1': 0.2846560846560846, 'eval_accuracy': 0.9337219177024627, 'eval_runtime': 2.4376, 'eval_samples_per_second': 628.081, 'eval_steps_per_second': 78.767, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0516, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.32605379819869995, 'eval_precision': 0.25156110615521854, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.2822822822822823, 'eval_accuracy': 0.9298232069790782, 'eval_runtime': 2.3643, 'eval_samples_per_second': 647.545, 'eval_steps_per_second': 81.208, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0498, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3275357186794281, 'eval_precision': 0.25067144136078784, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.28084252758274825, 'eval_accuracy': 0.9300162124604339, 'eval_runtime': 2.364, 'eval_samples_per_second': 647.62, 'eval_steps_per_second': 81.217, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0476, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.33205100893974304, 'eval_precision': 0.2560646900269542, 'eval_recall': 0.3249714937286203, 'eval_f1': 0.2864321608040202, 'eval_accuracy': 0.9293599938238246, 'eval_runtime': 2.366, 'eval_samples_per_second': 647.09, 'eval_steps_per_second': 81.15, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0455, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3377097249031067, 'eval_precision': 0.2432195975503062, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2752475247524752, 'eval_accuracy': 0.9290897861499267, 'eval_runtime': 2.3644, 'eval_samples_per_second': 647.517, 'eval_steps_per_second': 81.204, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0435, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.3361080586910248, 'eval_precision': 0.2640610104861773, 'eval_recall': 0.31584948688711517, 'eval_f1': 0.28764278296988577, 'eval_accuracy': 0.9315216552150081, 'eval_runtime': 2.3669, 'eval_samples_per_second': 646.851, 'eval_steps_per_second': 81.12, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0428, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3384590744972229, 'eval_precision': 0.2587800369685767, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.28586013272077593, 'eval_accuracy': 0.9305180267119586, 'eval_runtime': 2.3742, 'eval_samples_per_second': 644.844, 'eval_steps_per_second': 80.869, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0422, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.33796441555023193, 'eval_precision': 0.26103286384976526, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.28630278063851694, 'eval_accuracy': 0.9308268354821277, 'eval_runtime': 2.3639, 'eval_samples_per_second': 647.67, 'eval_steps_per_second': 81.223, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 831.7421, 'train_samples_per_second': 249.135, 'train_steps_per_second': 3.895, 'total_flos': 8936969334926268.0, 'train_loss': 0.11078061042008576, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9359
  predict_f1                 =     0.1492
  predict_loss               =     0.2276
  predict_precision          =     0.1943
  predict_recall             =     0.1211
  predict_runtime            = 0:00:01.96
  predict_samples_per_second =    645.843
  predict_steps_per_second   =      80.73
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_38.json completed. F1: 0.14920368818105617
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_05.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_05.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6868.92 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7259.51 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6850.82 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6975.38 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7048.83 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7195.91 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7378.00 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6457.82 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6867.72 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7530.45 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7120.56 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7188.26 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6967.20 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7246, 'eval_samples_per_second': 267.442, 'eval_steps_per_second': 33.539, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7009, 'eval_samples_per_second': 268.555, 'eval_steps_per_second': 33.679, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7224, 'eval_samples_per_second': 267.544, 'eval_steps_per_second': 33.552, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.004, 'eval_steps_per_second': 33.61, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7199, 'eval_samples_per_second': 267.663, 'eval_steps_per_second': 33.567, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7059, 'eval_samples_per_second': 268.32, 'eval_steps_per_second': 33.65, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6981, 'eval_samples_per_second': 268.687, 'eval_steps_per_second': 33.696, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7009, 'eval_samples_per_second': 268.556, 'eval_steps_per_second': 33.679, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6997, 'eval_samples_per_second': 268.611, 'eval_steps_per_second': 33.686, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.729, 'eval_steps_per_second': 33.575, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7105, 'eval_samples_per_second': 268.101, 'eval_steps_per_second': 33.622, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6802, 'eval_samples_per_second': 269.534, 'eval_steps_per_second': 33.802, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6838, 'eval_samples_per_second': 269.363, 'eval_steps_per_second': 33.78, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6827, 'eval_samples_per_second': 269.415, 'eval_steps_per_second': 33.787, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6893, 'eval_samples_per_second': 269.103, 'eval_steps_per_second': 33.748, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6708, 'eval_samples_per_second': 269.978, 'eval_steps_per_second': 33.857, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6958, 'eval_samples_per_second': 268.794, 'eval_steps_per_second': 33.709, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6762, 'eval_samples_per_second': 269.722, 'eval_steps_per_second': 33.825, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6732, 'eval_samples_per_second': 269.867, 'eval_steps_per_second': 33.844, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7654, 'eval_samples_per_second': 265.549, 'eval_steps_per_second': 33.302, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7, 'eval_samples_per_second': 268.597, 'eval_steps_per_second': 33.684, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6804, 'eval_samples_per_second': 269.524, 'eval_steps_per_second': 33.8, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6922, 'eval_samples_per_second': 268.965, 'eval_steps_per_second': 33.73, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6934, 'eval_samples_per_second': 268.908, 'eval_steps_per_second': 33.723, 'epoch': 24.0}
{'train_runtime': 3334.949, 'train_samples_per_second': 62.135, 'train_steps_per_second': 7.772, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:55:34.94
  train_samples            =       8634
  train_samples_per_second =     62.135
  train_steps_per_second   =      7.772
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7246, 'eval_samples_per_second': 267.442, 'eval_steps_per_second': 33.539, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7009, 'eval_samples_per_second': 268.555, 'eval_steps_per_second': 33.679, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7224, 'eval_samples_per_second': 267.544, 'eval_steps_per_second': 33.552, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7126, 'eval_samples_per_second': 268.004, 'eval_steps_per_second': 33.61, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7199, 'eval_samples_per_second': 267.663, 'eval_steps_per_second': 33.567, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7059, 'eval_samples_per_second': 268.32, 'eval_steps_per_second': 33.65, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6981, 'eval_samples_per_second': 268.687, 'eval_steps_per_second': 33.696, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7009, 'eval_samples_per_second': 268.556, 'eval_steps_per_second': 33.679, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6997, 'eval_samples_per_second': 268.611, 'eval_steps_per_second': 33.686, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.729, 'eval_steps_per_second': 33.575, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7105, 'eval_samples_per_second': 268.101, 'eval_steps_per_second': 33.622, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6802, 'eval_samples_per_second': 269.534, 'eval_steps_per_second': 33.802, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6838, 'eval_samples_per_second': 269.363, 'eval_steps_per_second': 33.78, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6827, 'eval_samples_per_second': 269.415, 'eval_steps_per_second': 33.787, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6893, 'eval_samples_per_second': 269.103, 'eval_steps_per_second': 33.748, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6708, 'eval_samples_per_second': 269.978, 'eval_steps_per_second': 33.857, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6958, 'eval_samples_per_second': 268.794, 'eval_steps_per_second': 33.709, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6762, 'eval_samples_per_second': 269.722, 'eval_steps_per_second': 33.825, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6732, 'eval_samples_per_second': 269.867, 'eval_steps_per_second': 33.844, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7654, 'eval_samples_per_second': 265.549, 'eval_steps_per_second': 33.302, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7, 'eval_samples_per_second': 268.597, 'eval_steps_per_second': 33.684, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6804, 'eval_samples_per_second': 269.524, 'eval_steps_per_second': 33.8, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6922, 'eval_samples_per_second': 268.965, 'eval_steps_per_second': 33.73, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6934, 'eval_samples_per_second': 268.908, 'eval_steps_per_second': 33.723, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3334.949, 'train_samples_per_second': 62.135, 'train_steps_per_second': 7.772, 'total_flos': 1.751000163794622e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.77
  predict_samples_per_second =    266.429
  predict_steps_per_second   =     33.304
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_05.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_09.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_09.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6781.03 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7254.70 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7063.56 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7115.84 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7154.82 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7280.80 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7456.53 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6500.38 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6936.69 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7403.43 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7037.42 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7156.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6998.86 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NorBERT_3_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.913, 'eval_steps_per_second': 33.473, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7095, 'eval_samples_per_second': 268.149, 'eval_steps_per_second': 33.628, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7341, 'eval_samples_per_second': 266.997, 'eval_steps_per_second': 33.484, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7288, 'eval_samples_per_second': 267.247, 'eval_steps_per_second': 33.515, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7555, 'eval_samples_per_second': 266.008, 'eval_steps_per_second': 33.36, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7388, 'eval_samples_per_second': 266.782, 'eval_steps_per_second': 33.457, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7174, 'eval_samples_per_second': 267.781, 'eval_steps_per_second': 33.582, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.501, 'eval_steps_per_second': 33.547, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7391, 'eval_samples_per_second': 266.765, 'eval_steps_per_second': 33.455, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.707, 'eval_steps_per_second': 33.447, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7368, 'eval_samples_per_second': 266.873, 'eval_steps_per_second': 33.468, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7217, 'eval_samples_per_second': 267.58, 'eval_steps_per_second': 33.557, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7258, 'eval_samples_per_second': 267.388, 'eval_steps_per_second': 33.533, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.505, 'eval_steps_per_second': 33.422, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.994, 'eval_steps_per_second': 33.358, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.733, 'eval_samples_per_second': 267.052, 'eval_steps_per_second': 33.49, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7141, 'eval_samples_per_second': 267.933, 'eval_steps_per_second': 33.601, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7868, 'eval_samples_per_second': 264.566, 'eval_steps_per_second': 33.179, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.094, 'eval_steps_per_second': 33.621, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7086, 'eval_samples_per_second': 268.193, 'eval_steps_per_second': 33.634, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7343, 'eval_samples_per_second': 266.991, 'eval_steps_per_second': 33.483, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7045, 'eval_samples_per_second': 268.384, 'eval_steps_per_second': 33.658, 'epoch': 24.0}
{'train_runtime': 3343.0816, 'train_samples_per_second': 61.984, 'train_steps_per_second': 7.753, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:55:43.08
  train_samples            =       8634
  train_samples_per_second =     61.984
  train_steps_per_second   =      7.753
[{'loss': 0.0, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7359, 'eval_samples_per_second': 266.913, 'eval_steps_per_second': 33.473, 'epoch': 1.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7095, 'eval_samples_per_second': 268.149, 'eval_steps_per_second': 33.628, 'epoch': 2.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7341, 'eval_samples_per_second': 266.997, 'eval_steps_per_second': 33.484, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7288, 'eval_samples_per_second': 267.247, 'eval_steps_per_second': 33.515, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7356, 'eval_samples_per_second': 266.929, 'eval_steps_per_second': 33.475, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7439, 'eval_samples_per_second': 266.543, 'eval_steps_per_second': 33.427, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7555, 'eval_samples_per_second': 266.008, 'eval_steps_per_second': 33.36, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7388, 'eval_samples_per_second': 266.782, 'eval_steps_per_second': 33.457, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7174, 'eval_samples_per_second': 267.781, 'eval_steps_per_second': 33.582, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.501, 'eval_steps_per_second': 33.547, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7391, 'eval_samples_per_second': 266.765, 'eval_steps_per_second': 33.455, 'epoch': 11.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7404, 'eval_samples_per_second': 266.707, 'eval_steps_per_second': 33.447, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7368, 'eval_samples_per_second': 266.873, 'eval_steps_per_second': 33.468, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7217, 'eval_samples_per_second': 267.58, 'eval_steps_per_second': 33.557, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7258, 'eval_samples_per_second': 267.388, 'eval_steps_per_second': 33.533, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7447, 'eval_samples_per_second': 266.505, 'eval_steps_per_second': 33.422, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7558, 'eval_samples_per_second': 265.994, 'eval_steps_per_second': 33.358, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.733, 'eval_samples_per_second': 267.052, 'eval_steps_per_second': 33.49, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7141, 'eval_samples_per_second': 267.933, 'eval_steps_per_second': 33.601, 'epoch': 19.0, 'step': 20520}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7868, 'eval_samples_per_second': 264.566, 'eval_steps_per_second': 33.179, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7107, 'eval_samples_per_second': 268.094, 'eval_steps_per_second': 33.621, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7086, 'eval_samples_per_second': 268.193, 'eval_steps_per_second': 33.634, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7343, 'eval_samples_per_second': 266.991, 'eval_steps_per_second': 33.483, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7045, 'eval_samples_per_second': 268.384, 'eval_steps_per_second': 33.658, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 3343.0816, 'train_samples_per_second': 61.984, 'train_steps_per_second': 7.753, 'total_flos': 1.751000163794622e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 25920}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.80
  predict_samples_per_second =    264.671
  predict_steps_per_second   =     33.084
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_09.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_47.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_47.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5696.69 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6750.58 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6841.84 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7018.93 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7136.82 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7323.22 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7496.40 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6550.29 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6867.22 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7604.65 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7207.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7266.49 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7066.61 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2077, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.13961097598075867, 'eval_precision': 0.46123650637880276, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.4957805907172996, 'eval_accuracy': 0.950783602254304, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.956, 'eval_steps_per_second': 41.128, 'epoch': 1.0}
{'loss': 0.1175, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.14495131373405457, 'eval_precision': 0.4482758620689655, 'eval_recall': 0.5929304446978335, 'eval_f1': 0.5105547373588611, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.553, 'eval_steps_per_second': 41.329, 'epoch': 2.0}
{'loss': 0.0691, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.14614690840244293, 'eval_precision': 0.5198285101822079, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5359116022099448, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.42, 'eval_steps_per_second': 41.312, 'epoch': 3.0}
{'loss': 0.0337, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2072228491306305, 'eval_precision': 0.5442260442260443, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5239503252513306, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.124, 'eval_steps_per_second': 41.275, 'epoch': 4.0}
{'loss': 0.0202, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.22796683013439178, 'eval_precision': 0.5138888888888888, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5100516944284894, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.246, 'eval_steps_per_second': 41.29, 'epoch': 5.0}
{'loss': 0.0149, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.23476481437683105, 'eval_precision': 0.4722483537158984, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5175257731958763, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.591, 'eval_steps_per_second': 41.333, 'epoch': 6.0}
{'loss': 0.0093, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.24998106062412262, 'eval_precision': 0.47623400365630714, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.528665651953323, 'eval_accuracy': 0.9517100285648112, 'eval_runtime': 4.73, 'eval_samples_per_second': 323.679, 'eval_steps_per_second': 40.592, 'epoch': 7.0}
{'loss': 0.0056, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.25985538959503174, 'eval_precision': 0.5318435754189944, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5372460496613995, 'eval_accuracy': 0.9558789469620937, 'eval_runtime': 4.6451, 'eval_samples_per_second': 329.591, 'eval_steps_per_second': 41.333, 'epoch': 8.0}
{'loss': 0.0033, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.2715620994567871, 'eval_precision': 0.49358341559723595, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5291005291005291, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.588, 'eval_steps_per_second': 41.333, 'epoch': 9.0}
{'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.2826768457889557, 'eval_precision': 0.5099800399201597, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.543906333155934, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6403, 'eval_samples_per_second': 329.936, 'eval_steps_per_second': 41.377, 'epoch': 10.0}
{'loss': 0.0034, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.2888725697994232, 'eval_precision': 0.5036958817317846, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5230263157894736, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6594, 'eval_samples_per_second': 328.58, 'eval_steps_per_second': 41.207, 'epoch': 11.0}
{'loss': 0.0017, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.31119927763938904, 'eval_precision': 0.5511904761904762, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5393127548048923, 'eval_accuracy': 0.9563421601173473, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.634, 'eval_steps_per_second': 41.339, 'epoch': 12.0}
{'loss': 0.001, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.3358868658542633, 'eval_precision': 0.5275590551181102, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5311438278595696, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.728, 'eval_steps_per_second': 41.351, 'epoch': 13.0}
{'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3323238790035248, 'eval_precision': 0.5519399249061326, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5262529832935561, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6468, 'eval_samples_per_second': 329.477, 'eval_steps_per_second': 41.319, 'epoch': 14.0}
{'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.3383822441101074, 'eval_precision': 0.5476744186046512, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.542314335060449, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.647, 'eval_samples_per_second': 329.457, 'eval_steps_per_second': 41.317, 'epoch': 15.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.34382566809654236, 'eval_precision': 0.534054054054054, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5482796892341844, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6423, 'eval_samples_per_second': 329.792, 'eval_steps_per_second': 41.359, 'epoch': 16.0}
{'loss': 0.0004, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3769378066062927, 'eval_precision': 0.5596221959858324, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5498839907192574, 'eval_accuracy': 0.9569983787539567, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.285, 'eval_steps_per_second': 41.295, 'epoch': 17.0}
{'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.37151744961738586, 'eval_precision': 0.5342465753424658, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5339418140330862, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.655, 'eval_steps_per_second': 41.341, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.3726736903190613, 'eval_precision': 0.5403800475059383, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5293775450843514, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.576, 'eval_steps_per_second': 41.332, 'epoch': 19.0}
{'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.3674595057964325, 'eval_precision': 0.5281146637265711, 'eval_recall': 0.5461801596351197, 'eval_f1': 0.5369955156950671, 'eval_accuracy': 0.9558403458658226, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.3698946535587311, 'eval_precision': 0.5480769230769231, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5336454066705676, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.164, 'eval_steps_per_second': 41.28, 'epoch': 21.0}
{'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.36858808994293213, 'eval_precision': 0.5295429208472687, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5355129650507329, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.617, 'eval_steps_per_second': 41.337, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.37339529395103455, 'eval_precision': 0.528, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5273972602739726, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.229, 'eval_steps_per_second': 41.288, 'epoch': 23.0}
{'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3746183216571808, 'eval_precision': 0.528, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5273972602739726, 'eval_accuracy': 0.9557245425770092, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.549, 'eval_steps_per_second': 41.328, 'epoch': 24.0}
{'train_runtime': 2079.4312, 'train_samples_per_second': 99.65, 'train_steps_per_second': 1.558, 'train_loss': 0.020662207568041338, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0207
  train_runtime            = 0:34:39.43
  train_samples            =       8634
  train_samples_per_second =      99.65
  train_steps_per_second   =      1.558
[{'loss': 0.2077, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.13961097598075867, 'eval_precision': 0.46123650637880276, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.4957805907172996, 'eval_accuracy': 0.950783602254304, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.956, 'eval_steps_per_second': 41.128, 'epoch': 1.0, 'step': 135}, {'loss': 0.1175, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.14495131373405457, 'eval_precision': 0.4482758620689655, 'eval_recall': 0.5929304446978335, 'eval_f1': 0.5105547373588611, 'eval_accuracy': 0.946730487145835, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.553, 'eval_steps_per_second': 41.329, 'epoch': 2.0, 'step': 270}, {'loss': 0.0691, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.14614690840244293, 'eval_precision': 0.5198285101822079, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5359116022099448, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6476, 'eval_samples_per_second': 329.42, 'eval_steps_per_second': 41.312, 'epoch': 3.0, 'step': 405}, {'loss': 0.0337, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2072228491306305, 'eval_precision': 0.5442260442260443, 'eval_recall': 0.5051311288483467, 'eval_f1': 0.5239503252513306, 'eval_accuracy': 0.955377132710569, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.124, 'eval_steps_per_second': 41.275, 'epoch': 4.0, 'step': 540}, {'loss': 0.0202, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.22796683013439178, 'eval_precision': 0.5138888888888888, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5100516944284894, 'eval_accuracy': 0.9527136570678607, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.246, 'eval_steps_per_second': 41.29, 'epoch': 5.0, 'step': 675}, {'loss': 0.0149, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.23476481437683105, 'eval_precision': 0.4722483537158984, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5175257731958763, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.591, 'eval_steps_per_second': 41.333, 'epoch': 6.0, 'step': 810}, {'loss': 0.0093, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.24998106062412262, 'eval_precision': 0.47623400365630714, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.528665651953323, 'eval_accuracy': 0.9517100285648112, 'eval_runtime': 4.73, 'eval_samples_per_second': 323.679, 'eval_steps_per_second': 40.592, 'epoch': 7.0, 'step': 945}, {'loss': 0.0056, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.25985538959503174, 'eval_precision': 0.5318435754189944, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5372460496613995, 'eval_accuracy': 0.9558789469620937, 'eval_runtime': 4.6451, 'eval_samples_per_second': 329.591, 'eval_steps_per_second': 41.333, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0033, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.2715620994567871, 'eval_precision': 0.49358341559723595, 'eval_recall': 0.5701254275940707, 'eval_f1': 0.5291005291005291, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.588, 'eval_steps_per_second': 41.333, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0029, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2826768457889557, 'eval_precision': 0.5099800399201597, 'eval_recall': 0.5826681870011402, 'eval_f1': 0.543906333155934, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6403, 'eval_samples_per_second': 329.936, 'eval_steps_per_second': 41.377, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0034, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2888725697994232, 'eval_precision': 0.5036958817317846, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5230263157894736, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6594, 'eval_samples_per_second': 328.58, 'eval_steps_per_second': 41.207, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0017, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.31119927763938904, 'eval_precision': 0.5511904761904762, 'eval_recall': 0.5279361459521095, 'eval_f1': 0.5393127548048923, 'eval_accuracy': 0.9563421601173473, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.634, 'eval_steps_per_second': 41.339, 'epoch': 12.0, 'step': 1620}, {'loss': 0.001, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.3358868658542633, 'eval_precision': 0.5275590551181102, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5311438278595696, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6432, 'eval_samples_per_second': 329.728, 'eval_steps_per_second': 41.351, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0012, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3323238790035248, 'eval_precision': 0.5519399249061326, 'eval_recall': 0.5028506271379704, 'eval_f1': 0.5262529832935561, 'eval_accuracy': 0.9564965645024319, 'eval_runtime': 4.6468, 'eval_samples_per_second': 329.477, 'eval_steps_per_second': 41.319, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0011, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3383822441101074, 'eval_precision': 0.5476744186046512, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.542314335060449, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.647, 'eval_samples_per_second': 329.457, 'eval_steps_per_second': 41.317, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.34382566809654236, 'eval_precision': 0.534054054054054, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5482796892341844, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6423, 'eval_samples_per_second': 329.792, 'eval_steps_per_second': 41.359, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0004, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3769378066062927, 'eval_precision': 0.5596221959858324, 'eval_recall': 0.540478905359179, 'eval_f1': 0.5498839907192574, 'eval_accuracy': 0.9569983787539567, 'eval_runtime': 4.6495, 'eval_samples_per_second': 329.285, 'eval_steps_per_second': 41.295, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0003, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.37151744961738586, 'eval_precision': 0.5342465753424658, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.5339418140330862, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6443, 'eval_samples_per_second': 329.655, 'eval_steps_per_second': 41.341, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.3726736903190613, 'eval_precision': 0.5403800475059383, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5293775450843514, 'eval_accuracy': 0.9564193623098896, 'eval_runtime': 4.6454, 'eval_samples_per_second': 329.576, 'eval_steps_per_second': 41.332, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0005, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.3674595057964325, 'eval_precision': 0.5281146637265711, 'eval_recall': 0.5461801596351197, 'eval_f1': 0.5369955156950671, 'eval_accuracy': 0.9558403458658226, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0005, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3698946535587311, 'eval_precision': 0.5480769230769231, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.5336454066705676, 'eval_accuracy': 0.9569211765614144, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.164, 'eval_steps_per_second': 41.28, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0002, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.36858808994293213, 'eval_precision': 0.5295429208472687, 'eval_recall': 0.5416191562143672, 'eval_f1': 0.5355129650507329, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.617, 'eval_steps_per_second': 41.337, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.37339529395103455, 'eval_precision': 0.528, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5273972602739726, 'eval_accuracy': 0.9560719524434494, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.229, 'eval_steps_per_second': 41.288, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0001, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3746183216571808, 'eval_precision': 0.528, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5273972602739726, 'eval_accuracy': 0.9557245425770092, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.549, 'eval_steps_per_second': 41.328, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2079.4312, 'train_samples_per_second': 99.65, 'train_steps_per_second': 1.558, 'total_flos': 2.5991352100330236e+16, 'train_loss': 0.020662207568041338, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9503
  predict_f1                 =     0.4955
  predict_loss               =      0.161
  predict_precision          =     0.4712
  predict_recall             =     0.5224
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.428
  predict_steps_per_second   =     40.679
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_47.json completed. F1: 0.495483870967742
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_17.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_17.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5634.92 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6596.26 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6671.32 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6825.71 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6918.17 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7093.17 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7266.58 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6367.14 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6673.93 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7253.07 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6930.73 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7057.80 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6881.50 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7418, 'eval_samples_per_second': 266.643, 'eval_steps_per_second': 33.439, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7302, 'eval_samples_per_second': 267.181, 'eval_steps_per_second': 33.507, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.719, 'eval_samples_per_second': 267.704, 'eval_steps_per_second': 33.572, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7061, 'eval_samples_per_second': 268.309, 'eval_steps_per_second': 33.648, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.944, 'eval_steps_per_second': 33.602, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7369, 'eval_samples_per_second': 266.87, 'eval_steps_per_second': 33.468, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.369, 'eval_steps_per_second': 33.656, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7195, 'eval_samples_per_second': 267.68, 'eval_steps_per_second': 33.569, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7132, 'eval_samples_per_second': 267.975, 'eval_steps_per_second': 33.606, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.719, 'eval_samples_per_second': 267.706, 'eval_steps_per_second': 33.572, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7099, 'eval_samples_per_second': 268.131, 'eval_steps_per_second': 33.626, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7444, 'eval_samples_per_second': 266.523, 'eval_steps_per_second': 33.424, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.479, 'eval_steps_per_second': 33.419, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7033, 'eval_samples_per_second': 268.441, 'eval_steps_per_second': 33.665, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7118, 'eval_samples_per_second': 268.04, 'eval_steps_per_second': 33.614, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7092, 'eval_samples_per_second': 268.163, 'eval_steps_per_second': 33.63, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6971, 'eval_samples_per_second': 268.731, 'eval_steps_per_second': 33.701, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7074, 'eval_samples_per_second': 268.246, 'eval_steps_per_second': 33.64, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6984, 'eval_samples_per_second': 268.67, 'eval_steps_per_second': 33.693, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6916, 'eval_samples_per_second': 268.994, 'eval_steps_per_second': 33.734, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7003, 'eval_samples_per_second': 268.582, 'eval_steps_per_second': 33.682, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6981, 'eval_samples_per_second': 268.686, 'eval_steps_per_second': 33.695, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7124, 'eval_samples_per_second': 268.014, 'eval_steps_per_second': 33.611, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7201, 'eval_samples_per_second': 267.654, 'eval_steps_per_second': 33.566, 'epoch': 24.0}
{'train_runtime': 2607.64, 'train_samples_per_second': 79.465, 'train_steps_per_second': 4.97, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:43:27.63
  train_samples            =       8634
  train_samples_per_second =     79.465
  train_steps_per_second   =       4.97
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7418, 'eval_samples_per_second': 266.643, 'eval_steps_per_second': 33.439, 'epoch': 1.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7302, 'eval_samples_per_second': 267.181, 'eval_steps_per_second': 33.507, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.719, 'eval_samples_per_second': 267.704, 'eval_steps_per_second': 33.572, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7061, 'eval_samples_per_second': 268.309, 'eval_steps_per_second': 33.648, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7139, 'eval_samples_per_second': 267.944, 'eval_steps_per_second': 33.602, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7369, 'eval_samples_per_second': 266.87, 'eval_steps_per_second': 33.468, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7048, 'eval_samples_per_second': 268.369, 'eval_steps_per_second': 33.656, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7195, 'eval_samples_per_second': 267.68, 'eval_steps_per_second': 33.569, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7132, 'eval_samples_per_second': 267.975, 'eval_steps_per_second': 33.606, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.719, 'eval_samples_per_second': 267.706, 'eval_steps_per_second': 33.572, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7099, 'eval_samples_per_second': 268.131, 'eval_steps_per_second': 33.626, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7444, 'eval_samples_per_second': 266.523, 'eval_steps_per_second': 33.424, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7453, 'eval_samples_per_second': 266.479, 'eval_steps_per_second': 33.419, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7033, 'eval_samples_per_second': 268.441, 'eval_steps_per_second': 33.665, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7118, 'eval_samples_per_second': 268.04, 'eval_steps_per_second': 33.614, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7092, 'eval_samples_per_second': 268.163, 'eval_steps_per_second': 33.63, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6971, 'eval_samples_per_second': 268.731, 'eval_steps_per_second': 33.701, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7074, 'eval_samples_per_second': 268.246, 'eval_steps_per_second': 33.64, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6984, 'eval_samples_per_second': 268.67, 'eval_steps_per_second': 33.693, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6916, 'eval_samples_per_second': 268.994, 'eval_steps_per_second': 33.734, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7003, 'eval_samples_per_second': 268.582, 'eval_steps_per_second': 33.682, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6981, 'eval_samples_per_second': 268.686, 'eval_steps_per_second': 33.695, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7124, 'eval_samples_per_second': 268.014, 'eval_steps_per_second': 33.611, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7201, 'eval_samples_per_second': 267.654, 'eval_steps_per_second': 33.566, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2607.64, 'train_samples_per_second': 79.465, 'train_steps_per_second': 4.97, 'total_flos': 2.054990708407374e+16, 'train_loss': 0.0, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.82
  predict_samples_per_second =    263.791
  predict_steps_per_second   =     32.974
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_17.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_47.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_47.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7154.59 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7519.51 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7250.03 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7263.92 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7293.38 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7412.50 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7542.74 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6579.89 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 7063.97 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7602.92 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7197.70 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7243.29 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7044.12 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2897, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19916367530822754, 'eval_precision': 0.25101214574898784, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.26595174262734583, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.6906, 'eval_samples_per_second': 326.4, 'eval_steps_per_second': 40.933, 'epoch': 1.0}
{'loss': 0.1793, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.19355428218841553, 'eval_precision': 0.2736625514403292, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28772309356408865, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.842, 'eval_steps_per_second': 41.239, 'epoch': 2.0}
{'loss': 0.1195, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.20329658687114716, 'eval_precision': 0.30760986066452306, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31712707182320443, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.739, 'eval_steps_per_second': 41.227, 'epoch': 3.0}
{'loss': 0.0796, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2356506586074829, 'eval_precision': 0.31823461091753774, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.31530494821634064, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 4.6528, 'eval_samples_per_second': 329.049, 'eval_steps_per_second': 41.265, 'epoch': 4.0}
{'loss': 0.0511, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.26515182852745056, 'eval_precision': 0.2714007782101167, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.2929133858267717, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.147, 'eval_steps_per_second': 41.278, 'epoch': 5.0}
{'loss': 0.0317, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.30050358176231384, 'eval_precision': 0.2680722891566265, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2851041110517886, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 4.6616, 'eval_samples_per_second': 328.431, 'eval_steps_per_second': 41.188, 'epoch': 6.0}
{'loss': 0.0194, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3468335270881653, 'eval_precision': 0.2906220984215413, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3203684749232344, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.733, 'eval_samples_per_second': 323.471, 'eval_steps_per_second': 40.566, 'epoch': 7.0}
{'loss': 0.012, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.35923299193382263, 'eval_precision': 0.31016597510373445, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32482346550787616, 'eval_accuracy': 0.9397436887207596, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 8.0}
{'loss': 0.0086, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3707813620567322, 'eval_precision': 0.3094983991462113, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3197353914002205, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6518, 'eval_samples_per_second': 329.121, 'eval_steps_per_second': 41.274, 'epoch': 9.0}
{'loss': 0.0059, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.38664114475250244, 'eval_precision': 0.2874132804757185, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3075291622481442, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.965, 'eval_steps_per_second': 41.255, 'epoch': 10.0}
{'loss': 0.0033, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.4138156473636627, 'eval_precision': 0.31671858774662515, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33152173913043476, 'eval_accuracy': 0.9399366942021153, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.988, 'eval_steps_per_second': 41.258, 'epoch': 11.0}
{'loss': 0.002, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.4243291914463043, 'eval_precision': 0.3165236051502146, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.326147042564953, 'eval_accuracy': 0.9413263336678762, 'eval_runtime': 4.6575, 'eval_samples_per_second': 328.715, 'eval_steps_per_second': 41.224, 'epoch': 12.0}
{'loss': 0.0012, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.4485931396484375, 'eval_precision': 0.3306818181818182, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.33124644280022764, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.827, 'eval_steps_per_second': 41.238, 'epoch': 13.0}
{'loss': 0.0016, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.4345487058162689, 'eval_precision': 0.3139896373056995, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3289902280130293, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 4.6554, 'eval_samples_per_second': 328.867, 'eval_steps_per_second': 41.243, 'epoch': 14.0}
{'loss': 0.0015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.4427987039089203, 'eval_precision': 0.31190019193857965, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.33871808233454925, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.106, 'eval_steps_per_second': 41.273, 'epoch': 15.0}
{'loss': 0.0016, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4528367817401886, 'eval_precision': 0.3191489361702128, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.33021463951568525, 'eval_accuracy': 0.9422141588821122, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.103, 'eval_steps_per_second': 41.272, 'epoch': 16.0}
{'loss': 0.0011, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.4460115432739258, 'eval_precision': 0.29958246346555323, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3128065395095368, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6485, 'eval_samples_per_second': 329.35, 'eval_steps_per_second': 41.303, 'epoch': 17.0}
{'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.4618564248085022, 'eval_precision': 0.3108695652173913, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3183082915971063, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6499, 'eval_samples_per_second': 329.257, 'eval_steps_per_second': 41.292, 'epoch': 18.0}
{'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.46603479981422424, 'eval_precision': 0.3366890380313199, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.33992094861660077, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.6414, 'eval_samples_per_second': 329.859, 'eval_steps_per_second': 41.367, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.46523040533065796, 'eval_precision': 0.3415154749199573, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.3528114663726571, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.6492, 'eval_samples_per_second': 329.306, 'eval_steps_per_second': 41.298, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.47105035185813904, 'eval_precision': 0.33157338965153116, 'eval_recall': 0.3580387685290764, 'eval_f1': 0.34429824561403505, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.549, 'eval_steps_per_second': 41.328, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4769510328769684, 'eval_precision': 0.3404255319148936, 'eval_recall': 0.346636259977195, 'eval_f1': 0.34350282485875705, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.127, 'eval_steps_per_second': 41.275, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.47921323776245117, 'eval_precision': 0.3307943416757345, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3385300668151448, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 4.6491, 'eval_samples_per_second': 329.309, 'eval_steps_per_second': 41.298, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.48078492283821106, 'eval_precision': 0.3374439461883408, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.34030525720746185, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.264, 'eval_steps_per_second': 41.292, 'epoch': 24.0}
{'train_runtime': 2074.7925, 'train_samples_per_second': 99.873, 'train_steps_per_second': 1.562, 'train_loss': 0.0338289717177826, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0338
  train_runtime            = 0:34:34.79
  train_samples            =       8634
  train_samples_per_second =     99.873
  train_steps_per_second   =      1.562
[{'loss': 0.2897, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.19916367530822754, 'eval_precision': 0.25101214574898784, 'eval_recall': 0.28278221208665905, 'eval_f1': 0.26595174262734583, 'eval_accuracy': 0.9385470547363545, 'eval_runtime': 4.6906, 'eval_samples_per_second': 326.4, 'eval_steps_per_second': 40.933, 'epoch': 1.0, 'step': 135}, {'loss': 0.1793, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.19355428218841553, 'eval_precision': 0.2736625514403292, 'eval_recall': 0.3033067274800456, 'eval_f1': 0.28772309356408865, 'eval_accuracy': 0.9380838415811009, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.842, 'eval_steps_per_second': 41.239, 'epoch': 2.0, 'step': 270}, {'loss': 0.1195, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.20329658687114716, 'eval_precision': 0.30760986066452306, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.31712707182320443, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6572, 'eval_samples_per_second': 328.739, 'eval_steps_per_second': 41.227, 'epoch': 3.0, 'step': 405}, {'loss': 0.0796, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.2356506586074829, 'eval_precision': 0.31823461091753774, 'eval_recall': 0.3124287343215507, 'eval_f1': 0.31530494821634064, 'eval_accuracy': 0.9441056125993978, 'eval_runtime': 4.6528, 'eval_samples_per_second': 329.049, 'eval_steps_per_second': 41.265, 'epoch': 4.0, 'step': 540}, {'loss': 0.0511, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.26515182852745056, 'eval_precision': 0.2714007782101167, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.2929133858267717, 'eval_accuracy': 0.9357677758048328, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.147, 'eval_steps_per_second': 41.278, 'epoch': 5.0, 'step': 675}, {'loss': 0.0317, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.30050358176231384, 'eval_precision': 0.2680722891566265, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.2851041110517886, 'eval_accuracy': 0.9347255462055122, 'eval_runtime': 4.6616, 'eval_samples_per_second': 328.431, 'eval_steps_per_second': 41.188, 'epoch': 6.0, 'step': 810}, {'loss': 0.0194, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.3468335270881653, 'eval_precision': 0.2906220984215413, 'eval_recall': 0.35689851767388825, 'eval_f1': 0.3203684749232344, 'eval_accuracy': 0.9378522350034741, 'eval_runtime': 4.733, 'eval_samples_per_second': 323.471, 'eval_steps_per_second': 40.566, 'epoch': 7.0, 'step': 945}, {'loss': 0.012, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.35923299193382263, 'eval_precision': 0.31016597510373445, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.32482346550787616, 'eval_accuracy': 0.9397436887207596, 'eval_runtime': 4.6445, 'eval_samples_per_second': 329.637, 'eval_steps_per_second': 41.339, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0086, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.3707813620567322, 'eval_precision': 0.3094983991462113, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3197353914002205, 'eval_accuracy': 0.9409017216088937, 'eval_runtime': 4.6518, 'eval_samples_per_second': 329.121, 'eval_steps_per_second': 41.274, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0059, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.38664114475250244, 'eval_precision': 0.2874132804757185, 'eval_recall': 0.330672748004561, 'eval_f1': 0.3075291622481442, 'eval_accuracy': 0.9376978306183895, 'eval_runtime': 4.654, 'eval_samples_per_second': 328.965, 'eval_steps_per_second': 41.255, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0033, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.4138156473636627, 'eval_precision': 0.31671858774662515, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.33152173913043476, 'eval_accuracy': 0.9399366942021153, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.988, 'eval_steps_per_second': 41.258, 'epoch': 11.0, 'step': 1485}, {'loss': 0.002, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.4243291914463043, 'eval_precision': 0.3165236051502146, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.326147042564953, 'eval_accuracy': 0.9413263336678762, 'eval_runtime': 4.6575, 'eval_samples_per_second': 328.715, 'eval_steps_per_second': 41.224, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0012, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.4485931396484375, 'eval_precision': 0.3306818181818182, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.33124644280022764, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 4.6559, 'eval_samples_per_second': 328.827, 'eval_steps_per_second': 41.238, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0016, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.4345487058162689, 'eval_precision': 0.3139896373056995, 'eval_recall': 0.34549600912200684, 'eval_f1': 0.3289902280130293, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 4.6554, 'eval_samples_per_second': 328.867, 'eval_steps_per_second': 41.243, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0015, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.4427987039089203, 'eval_precision': 0.31190019193857965, 'eval_recall': 0.37058152793614596, 'eval_f1': 0.33871808233454925, 'eval_accuracy': 0.9386242569288967, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.106, 'eval_steps_per_second': 41.273, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0016, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.4528367817401886, 'eval_precision': 0.3191489361702128, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.33021463951568525, 'eval_accuracy': 0.9422141588821122, 'eval_runtime': 4.652, 'eval_samples_per_second': 329.103, 'eval_steps_per_second': 41.272, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0011, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.4460115432739258, 'eval_precision': 0.29958246346555323, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.3128065395095368, 'eval_accuracy': 0.9401683007797421, 'eval_runtime': 4.6485, 'eval_samples_per_second': 329.35, 'eval_steps_per_second': 41.303, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0006, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.4618564248085022, 'eval_precision': 0.3108695652173913, 'eval_recall': 0.3261117445838084, 'eval_f1': 0.3183082915971063, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6499, 'eval_samples_per_second': 329.257, 'eval_steps_per_second': 41.292, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0005, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.46603479981422424, 'eval_precision': 0.3366890380313199, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.33992094861660077, 'eval_accuracy': 0.9424843665560102, 'eval_runtime': 4.6414, 'eval_samples_per_second': 329.859, 'eval_steps_per_second': 41.367, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.46523040533065796, 'eval_precision': 0.3415154749199573, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.3528114663726571, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.6492, 'eval_samples_per_second': 329.306, 'eval_steps_per_second': 41.298, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.47105035185813904, 'eval_precision': 0.33157338965153116, 'eval_recall': 0.3580387685290764, 'eval_f1': 0.34429824561403505, 'eval_accuracy': 0.9408245194163515, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.549, 'eval_steps_per_second': 41.328, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.4769510328769684, 'eval_precision': 0.3404255319148936, 'eval_recall': 0.346636259977195, 'eval_f1': 0.34350282485875705, 'eval_accuracy': 0.9427931753261792, 'eval_runtime': 4.6517, 'eval_samples_per_second': 329.127, 'eval_steps_per_second': 41.275, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.47921323776245117, 'eval_precision': 0.3307943416757345, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3385300668151448, 'eval_accuracy': 0.9420983555932988, 'eval_runtime': 4.6491, 'eval_samples_per_second': 329.309, 'eval_steps_per_second': 41.298, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.48078492283821106, 'eval_precision': 0.3374439461883408, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.34030525720746185, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.264, 'eval_steps_per_second': 41.292, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2074.7925, 'train_samples_per_second': 99.873, 'train_steps_per_second': 1.562, 'total_flos': 2.5992057086835036e+16, 'train_loss': 0.0338289717177826, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9368
  predict_f1                 =      0.287
  predict_loss               =     0.2098
  predict_precision          =     0.2805
  predict_recall             =     0.2939
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.501
  predict_steps_per_second   =     40.688
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_47.json completed. F1: 0.2870431893687707
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_43.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_43.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6953.65 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7355.02 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7116.60 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7149.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7188.17 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7310.25 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7441.57 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6474.53 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6942.32 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7520.62 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7154.60 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7172.86 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7002.73 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-bin_NB-BERT_large/checkpoint-135 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2286, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.1434222310781479, 'eval_precision': 0.48094170403587444, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.48501978518937255, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 1.0}
{'loss': 0.1331, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.14263655245304108, 'eval_precision': 0.4838393731635651, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5205479452054794, 'eval_accuracy': 0.9486991430556628, 'eval_runtime': 4.6599, 'eval_samples_per_second': 328.545, 'eval_steps_per_second': 41.202, 'epoch': 2.0}
{'loss': 0.0902, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1427047848701477, 'eval_precision': 0.5569461827284106, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5310262529832936, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.226, 'eval_steps_per_second': 41.288, 'epoch': 3.0}
{'loss': 0.0597, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.1669512540102005, 'eval_precision': 0.5774456521739131, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.5269683818970862, 'eval_accuracy': 0.9570369798502277, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.589, 'eval_steps_per_second': 41.333, 'epoch': 4.0}
{'loss': 0.0401, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.18643943965435028, 'eval_precision': 0.5223880597014925, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5205949656750573, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.447, 'eval_steps_per_second': 41.315, 'epoch': 5.0}
{'loss': 0.0265, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.2031964212656021, 'eval_precision': 0.49341438703140833, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5225321888412018, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.139, 'eval_steps_per_second': 41.277, 'epoch': 6.0}
{'loss': 0.0185, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.20965829491615295, 'eval_precision': 0.5025853154084798, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5271149674620389, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 4.7323, 'eval_samples_per_second': 323.523, 'eval_steps_per_second': 40.572, 'epoch': 7.0}
{'loss': 0.0133, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.23918035626411438, 'eval_precision': 0.5125, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5356559608056614, 'eval_accuracy': 0.9536786844746391, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.985, 'eval_steps_per_second': 41.257, 'epoch': 8.0}
{'loss': 0.0097, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.24338474869728088, 'eval_precision': 0.5111583421891605, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5291529152915291, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 4.6469, 'eval_samples_per_second': 329.469, 'eval_steps_per_second': 41.318, 'epoch': 9.0}
{'loss': 0.0072, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.2592637836933136, 'eval_precision': 0.5230078563411896, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5271493212669683, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.481, 'eval_steps_per_second': 41.32, 'epoch': 10.0}
{'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.2723284959793091, 'eval_precision': 0.5393258426966292, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5432937181663836, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.746, 'eval_steps_per_second': 41.353, 'epoch': 11.0}
{'loss': 0.0039, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.284130334854126, 'eval_precision': 0.4994944388270981, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5294748124330119, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.626, 'eval_steps_per_second': 41.338, 'epoch': 12.0}
{'loss': 0.0031, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.30373021960258484, 'eval_precision': 0.5428240740740741, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5387708213670304, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.327, 'eval_steps_per_second': 41.3, 'epoch': 13.0}
{'loss': 0.0024, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.3163530230522156, 'eval_precision': 0.5328947368421053, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5433202906651762, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.456, 'eval_steps_per_second': 41.316, 'epoch': 14.0}
{'loss': 0.0023, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3164263665676117, 'eval_precision': 0.5296052631578947, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5399664617104527, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.151, 'eval_steps_per_second': 41.278, 'epoch': 15.0}
{'loss': 0.0023, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.3295346796512604, 'eval_precision': 0.5246981339187706, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5346756152125279, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.843, 'eval_steps_per_second': 41.24, 'epoch': 16.0}
{'loss': 0.0015, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.3282619118690491, 'eval_precision': 0.5278969957081545, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5439469320066335, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.552, 'eval_steps_per_second': 41.329, 'epoch': 17.0}
{'loss': 0.0012, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.3344796597957611, 'eval_precision': 0.5260915867944622, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5440528634361234, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.25, 'eval_steps_per_second': 41.291, 'epoch': 18.0}
{'loss': 0.0012, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.34796229004859924, 'eval_precision': 0.5376712328767124, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5373645179691957, 'eval_accuracy': 0.9544507064000618, 'eval_runtime': 4.6573, 'eval_samples_per_second': 328.73, 'eval_steps_per_second': 41.225, 'epoch': 19.0}
{'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.34115439653396606, 'eval_precision': 0.5365296803652968, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5362236166571591, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.174, 'eval_steps_per_second': 41.281, 'epoch': 20.0}
{'loss': 0.0007, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.3471478819847107, 'eval_precision': 0.5211267605633803, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5344444444444444, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 4.6459, 'eval_samples_per_second': 329.537, 'eval_steps_per_second': 41.327, 'epoch': 21.0}
{'loss': 0.0007, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.35254937410354614, 'eval_precision': 0.5314917127071823, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5398428731762066, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.6492, 'eval_samples_per_second': 329.301, 'eval_steps_per_second': 41.297, 'epoch': 22.0}
{'loss': 0.0007, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.3564954996109009, 'eval_precision': 0.5359550561797752, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5398981324278438, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 23.0}
{'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3562158942222595, 'eval_precision': 0.5294759825327511, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5409927495817065, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.6426, 'eval_samples_per_second': 329.77, 'eval_steps_per_second': 41.356, 'epoch': 24.0}
{'train_runtime': 2078.1221, 'train_samples_per_second': 99.713, 'train_steps_per_second': 1.559, 'train_loss': 0.027268157979864396, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0273
  train_runtime            = 0:34:38.12
  train_samples            =       8634
  train_samples_per_second =     99.713
  train_steps_per_second   =      1.559
[{'loss': 0.2286, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.1434222310781479, 'eval_precision': 0.48094170403587444, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.48501978518937255, 'eval_accuracy': 0.9505905967729483, 'eval_runtime': 4.6659, 'eval_samples_per_second': 328.128, 'eval_steps_per_second': 41.15, 'epoch': 1.0, 'step': 135}, {'loss': 0.1331, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.14263655245304108, 'eval_precision': 0.4838393731635651, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5205479452054794, 'eval_accuracy': 0.9486991430556628, 'eval_runtime': 4.6599, 'eval_samples_per_second': 328.545, 'eval_steps_per_second': 41.202, 'epoch': 2.0, 'step': 270}, {'loss': 0.0902, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1427047848701477, 'eval_precision': 0.5569461827284106, 'eval_recall': 0.507411630558723, 'eval_f1': 0.5310262529832936, 'eval_accuracy': 0.9558017447695515, 'eval_runtime': 4.6503, 'eval_samples_per_second': 329.226, 'eval_steps_per_second': 41.288, 'epoch': 3.0, 'step': 405}, {'loss': 0.0597, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.1669512540102005, 'eval_precision': 0.5774456521739131, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.5269683818970862, 'eval_accuracy': 0.9570369798502277, 'eval_runtime': 4.6452, 'eval_samples_per_second': 329.589, 'eval_steps_per_second': 41.333, 'epoch': 4.0, 'step': 540}, {'loss': 0.0401, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.18643943965435028, 'eval_precision': 0.5223880597014925, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5205949656750573, 'eval_accuracy': 0.955106925036671, 'eval_runtime': 4.6472, 'eval_samples_per_second': 329.447, 'eval_steps_per_second': 41.315, 'epoch': 5.0, 'step': 675}, {'loss': 0.0265, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.2031964212656021, 'eval_precision': 0.49341438703140833, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5225321888412018, 'eval_accuracy': 0.9527522581641319, 'eval_runtime': 4.6515, 'eval_samples_per_second': 329.139, 'eval_steps_per_second': 41.277, 'epoch': 6.0, 'step': 810}, {'loss': 0.0185, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.20965829491615295, 'eval_precision': 0.5025853154084798, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5271149674620389, 'eval_accuracy': 0.9535242800895546, 'eval_runtime': 4.7323, 'eval_samples_per_second': 323.523, 'eval_steps_per_second': 40.572, 'epoch': 7.0, 'step': 945}, {'loss': 0.0133, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.23918035626411438, 'eval_precision': 0.5125, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5356559608056614, 'eval_accuracy': 0.9536786844746391, 'eval_runtime': 4.6537, 'eval_samples_per_second': 328.985, 'eval_steps_per_second': 41.257, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0097, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.24338474869728088, 'eval_precision': 0.5111583421891605, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5291529152915291, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 4.6469, 'eval_samples_per_second': 329.469, 'eval_steps_per_second': 41.318, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0072, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.2592637836933136, 'eval_precision': 0.5230078563411896, 'eval_recall': 0.5313568985176739, 'eval_f1': 0.5271493212669683, 'eval_accuracy': 0.9538330888597236, 'eval_runtime': 4.6467, 'eval_samples_per_second': 329.481, 'eval_steps_per_second': 41.32, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0059, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.2723284959793091, 'eval_precision': 0.5393258426966292, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5432937181663836, 'eval_accuracy': 0.9549139195553153, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.746, 'eval_steps_per_second': 41.353, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0039, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.284130334854126, 'eval_precision': 0.4994944388270981, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5294748124330119, 'eval_accuracy': 0.9532154713193854, 'eval_runtime': 4.6447, 'eval_samples_per_second': 329.626, 'eval_steps_per_second': 41.338, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0031, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.30373021960258484, 'eval_precision': 0.5428240740740741, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5387708213670304, 'eval_accuracy': 0.9548367173627731, 'eval_runtime': 4.6489, 'eval_samples_per_second': 329.327, 'eval_steps_per_second': 41.3, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0024, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.3163530230522156, 'eval_precision': 0.5328947368421053, 'eval_recall': 0.5541619156214367, 'eval_f1': 0.5433202906651762, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.6471, 'eval_samples_per_second': 329.456, 'eval_steps_per_second': 41.316, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0023, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.3164263665676117, 'eval_precision': 0.5296052631578947, 'eval_recall': 0.5507411630558723, 'eval_f1': 0.5399664617104527, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6514, 'eval_samples_per_second': 329.151, 'eval_steps_per_second': 41.278, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0023, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.3295346796512604, 'eval_precision': 0.5246981339187706, 'eval_recall': 0.5450399087799316, 'eval_f1': 0.5346756152125279, 'eval_accuracy': 0.9544121053037906, 'eval_runtime': 4.6557, 'eval_samples_per_second': 328.843, 'eval_steps_per_second': 41.24, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0015, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.3282619118690491, 'eval_precision': 0.5278969957081545, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5439469320066335, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6457, 'eval_samples_per_second': 329.552, 'eval_steps_per_second': 41.329, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0012, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.3344796597957611, 'eval_precision': 0.5260915867944622, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5440528634361234, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.65, 'eval_samples_per_second': 329.25, 'eval_steps_per_second': 41.291, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0012, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.34796229004859924, 'eval_precision': 0.5376712328767124, 'eval_recall': 0.5370581527936146, 'eval_f1': 0.5373645179691957, 'eval_accuracy': 0.9544507064000618, 'eval_runtime': 4.6573, 'eval_samples_per_second': 328.73, 'eval_steps_per_second': 41.225, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0012, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.34115439653396606, 'eval_precision': 0.5365296803652968, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5362236166571591, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.651, 'eval_samples_per_second': 329.174, 'eval_steps_per_second': 41.281, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0007, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.3471478819847107, 'eval_precision': 0.5211267605633803, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5344444444444444, 'eval_accuracy': 0.9541804987261638, 'eval_runtime': 4.6459, 'eval_samples_per_second': 329.537, 'eval_steps_per_second': 41.327, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0007, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.35254937410354614, 'eval_precision': 0.5314917127071823, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5398428731762066, 'eval_accuracy': 0.9547595151702308, 'eval_runtime': 4.6492, 'eval_samples_per_second': 329.301, 'eval_steps_per_second': 41.297, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0007, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.3564954996109009, 'eval_precision': 0.5359550561797752, 'eval_recall': 0.5438996579247435, 'eval_f1': 0.5398981324278438, 'eval_accuracy': 0.9550297228441288, 'eval_runtime': 4.6611, 'eval_samples_per_second': 328.465, 'eval_steps_per_second': 41.192, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0004, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.3562158942222595, 'eval_precision': 0.5294759825327511, 'eval_recall': 0.5530216647662486, 'eval_f1': 0.5409927495817065, 'eval_accuracy': 0.9545279085926041, 'eval_runtime': 4.6426, 'eval_samples_per_second': 329.77, 'eval_steps_per_second': 41.356, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 2078.1221, 'train_samples_per_second': 99.713, 'train_steps_per_second': 1.559, 'total_flos': 2.5991352100330236e+16, 'train_loss': 0.027268157979864396, 'epoch': 24.0, 'step': 3240}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =      0.948
  predict_f1                 =       0.51
  predict_loss               =     0.1511
  predict_precision          =     0.4841
  predict_recall             =     0.5388
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.462
  predict_steps_per_second   =     40.683
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_43.json completed. F1: 0.5099806825499034
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_10.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_10.json
01191518_tsa-intensity_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6481.06 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7095.89 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6931.99 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6929.49 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7000.20 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7146.72 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6297.16 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6650.74 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6794.61 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7345.40 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7002.54 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7098.04 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6948.81 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2643, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.22262491285800934, 'eval_precision': 0.23294117647058823, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.22929936305732485, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3783, 'eval_samples_per_second': 643.725, 'eval_steps_per_second': 80.728, 'epoch': 1.0}
{'loss': 0.1824, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.24903331696987152, 'eval_precision': 0.28378378378378377, 'eval_recall': 0.14367160775370583, 'eval_f1': 0.1907645722937169, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 2.3583, 'eval_samples_per_second': 649.205, 'eval_steps_per_second': 81.416, 'epoch': 2.0}
{'loss': 0.1261, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.2478121817111969, 'eval_precision': 0.25735294117647056, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.24808033077377437, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.879, 'eval_steps_per_second': 81.626, 'epoch': 3.0}
{'loss': 0.0874, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.3200053572654724, 'eval_precision': 0.26125244618395305, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.28120063191153233, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.095, 'eval_steps_per_second': 81.402, 'epoch': 4.0}
{'loss': 0.0626, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.31916606426239014, 'eval_precision': 0.2446183953033268, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2632964718272775, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.3629, 'eval_samples_per_second': 647.924, 'eval_steps_per_second': 81.255, 'epoch': 5.0}
{'loss': 0.0425, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.37445998191833496, 'eval_precision': 0.228430566967954, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2655205348615091, 'eval_accuracy': 0.9262333050258628, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.484, 'eval_steps_per_second': 81.325, 'epoch': 6.0}
{'loss': 0.0294, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.42397698760032654, 'eval_precision': 0.28405797101449276, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3075313807531381, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.3685, 'eval_samples_per_second': 646.409, 'eval_steps_per_second': 81.065, 'epoch': 7.0}
{'loss': 0.0208, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.42880678176879883, 'eval_precision': 0.24025385312783318, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2676767676767677, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.4325, 'eval_samples_per_second': 629.4, 'eval_steps_per_second': 78.932, 'epoch': 8.0}
{'loss': 0.0147, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.47460711002349854, 'eval_precision': 0.26492942453854507, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27141268075639596, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.111, 'eval_steps_per_second': 81.278, 'epoch': 9.0}
{'loss': 0.0104, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.4972269833087921, 'eval_precision': 0.2875816993464052, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.294150417827298, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.161, 'eval_steps_per_second': 81.41, 'epoch': 10.0}
{'loss': 0.0096, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.5097392797470093, 'eval_precision': 0.28051391862955033, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28934290447266703, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.698, 'eval_steps_per_second': 81.352, 'epoch': 11.0}
{'loss': 0.007, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.5260416269302368, 'eval_precision': 0.3156596794081381, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.3033175355450237, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3577, 'eval_samples_per_second': 649.373, 'eval_steps_per_second': 81.437, 'epoch': 12.0}
{'loss': 0.0064, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.5593456029891968, 'eval_precision': 0.29036004645760743, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.28768699654775604, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.515, 'eval_steps_per_second': 81.705, 'epoch': 13.0}
{'loss': 0.0056, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.554034411907196, 'eval_precision': 0.2822857142857143, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2819634703196347, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.301, 'eval_steps_per_second': 81.428, 'epoch': 14.0}
{'loss': 0.0048, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5422898530960083, 'eval_precision': 0.29069767441860467, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2878526194588371, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.866, 'eval_steps_per_second': 81.624, 'epoch': 15.0}
{'loss': 0.0034, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.57059246301651, 'eval_precision': 0.2984542211652794, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2922002328288708, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.606, 'eval_steps_per_second': 81.466, 'epoch': 16.0}
{'loss': 0.0033, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.5850701928138733, 'eval_precision': 0.28202247191011237, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2840973401245049, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3432, 'eval_samples_per_second': 653.369, 'eval_steps_per_second': 81.938, 'epoch': 17.0}
{'loss': 0.0023, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.5852802395820618, 'eval_precision': 0.31295843520782396, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30206489675516224, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3515, 'eval_samples_per_second': 651.065, 'eval_steps_per_second': 81.649, 'epoch': 18.0}
{'loss': 0.0011, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.6025508642196655, 'eval_precision': 0.3183023872679045, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2942979767014101, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.04, 'eval_steps_per_second': 81.646, 'epoch': 19.0}
{'loss': 0.001, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.6224603652954102, 'eval_precision': 0.3160493827160494, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30349733254297573, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.461, 'eval_steps_per_second': 81.699, 'epoch': 20.0}
{'loss': 0.0008, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.6244406700134277, 'eval_precision': 0.3114754098360656, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2958083832335329, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3513, 'eval_samples_per_second': 651.124, 'eval_steps_per_second': 81.656, 'epoch': 21.0}
{'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.6275057792663574, 'eval_precision': 0.3140096618357488, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.30498533724340177, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.023, 'eval_steps_per_second': 81.644, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.6324394345283508, 'eval_precision': 0.3175182481751825, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.3072395526780459, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.827, 'eval_steps_per_second': 81.744, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.6360811591148376, 'eval_precision': 0.31863979848866497, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.3028126870137641, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.486, 'eval_steps_per_second': 81.451, 'epoch': 24.0}
{'train_runtime': 1434.7574, 'train_samples_per_second': 144.426, 'train_steps_per_second': 18.066, 'train_loss': 0.03695791930443159, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.037
  train_runtime            = 0:23:54.75
  train_samples            =       8634
  train_samples_per_second =    144.426
  train_steps_per_second   =     18.066
[{'loss': 0.2643, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 1080}, {'eval_loss': 0.22262491285800934, 'eval_precision': 0.23294117647058823, 'eval_recall': 0.22576966932725198, 'eval_f1': 0.22929936305732485, 'eval_accuracy': 0.9350729560719524, 'eval_runtime': 2.3783, 'eval_samples_per_second': 643.725, 'eval_steps_per_second': 80.728, 'epoch': 1.0, 'step': 1080}, {'loss': 0.1824, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 2160}, {'eval_loss': 0.24903331696987152, 'eval_precision': 0.28378378378378377, 'eval_recall': 0.14367160775370583, 'eval_f1': 0.1907645722937169, 'eval_accuracy': 0.938971666795337, 'eval_runtime': 2.3583, 'eval_samples_per_second': 649.205, 'eval_steps_per_second': 81.416, 'epoch': 2.0, 'step': 2160}, {'loss': 0.1261, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 3240}, {'eval_loss': 0.2478121817111969, 'eval_precision': 0.25735294117647056, 'eval_recall': 0.2394526795895097, 'eval_f1': 0.24808033077377437, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 2.3522, 'eval_samples_per_second': 650.879, 'eval_steps_per_second': 81.626, 'epoch': 3.0, 'step': 3240}, {'loss': 0.0874, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 4320}, {'eval_loss': 0.3200053572654724, 'eval_precision': 0.26125244618395305, 'eval_recall': 0.30444697833523376, 'eval_f1': 0.28120063191153233, 'eval_accuracy': 0.9316760596000926, 'eval_runtime': 2.3587, 'eval_samples_per_second': 649.095, 'eval_steps_per_second': 81.402, 'epoch': 4.0, 'step': 4320}, {'loss': 0.0626, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 5400}, {'eval_loss': 0.31916606426239014, 'eval_precision': 0.2446183953033268, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2632964718272775, 'eval_accuracy': 0.9320234694665328, 'eval_runtime': 2.3629, 'eval_samples_per_second': 647.924, 'eval_steps_per_second': 81.255, 'epoch': 5.0, 'step': 5400}, {'loss': 0.0425, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 6480}, {'eval_loss': 0.37445998191833496, 'eval_precision': 0.228430566967954, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.2655205348615091, 'eval_accuracy': 0.9262333050258628, 'eval_runtime': 2.3609, 'eval_samples_per_second': 648.484, 'eval_steps_per_second': 81.325, 'epoch': 6.0, 'step': 6480}, {'loss': 0.0294, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 7560}, {'eval_loss': 0.42397698760032654, 'eval_precision': 0.28405797101449276, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.3075313807531381, 'eval_accuracy': 0.9315988574075503, 'eval_runtime': 2.3685, 'eval_samples_per_second': 646.409, 'eval_steps_per_second': 81.065, 'epoch': 7.0, 'step': 7560}, {'loss': 0.0208, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 8640}, {'eval_loss': 0.42880678176879883, 'eval_precision': 0.24025385312783318, 'eval_recall': 0.30216647662485746, 'eval_f1': 0.2676767676767677, 'eval_accuracy': 0.9302478190380606, 'eval_runtime': 2.4325, 'eval_samples_per_second': 629.4, 'eval_steps_per_second': 78.932, 'epoch': 8.0, 'step': 8640}, {'loss': 0.0147, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 9720}, {'eval_loss': 0.47460711002349854, 'eval_precision': 0.26492942453854507, 'eval_recall': 0.2782212086659065, 'eval_f1': 0.27141268075639596, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.3622, 'eval_samples_per_second': 648.111, 'eval_steps_per_second': 81.278, 'epoch': 9.0, 'step': 9720}, {'loss': 0.0104, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 10800}, {'eval_loss': 0.4972269833087921, 'eval_precision': 0.2875816993464052, 'eval_recall': 0.3010262257696693, 'eval_f1': 0.294150417827298, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 2.3584, 'eval_samples_per_second': 649.161, 'eval_steps_per_second': 81.41, 'epoch': 10.0, 'step': 10800}, {'loss': 0.0096, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 11880}, {'eval_loss': 0.5097392797470093, 'eval_precision': 0.28051391862955033, 'eval_recall': 0.29874572405929306, 'eval_f1': 0.28934290447266703, 'eval_accuracy': 0.9342623330502586, 'eval_runtime': 2.3601, 'eval_samples_per_second': 648.698, 'eval_steps_per_second': 81.352, 'epoch': 11.0, 'step': 11880}, {'loss': 0.007, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 12960}, {'eval_loss': 0.5260416269302368, 'eval_precision': 0.3156596794081381, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.3033175355450237, 'eval_accuracy': 0.9384312514475411, 'eval_runtime': 2.3577, 'eval_samples_per_second': 649.373, 'eval_steps_per_second': 81.437, 'epoch': 12.0, 'step': 12960}, {'loss': 0.0064, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 14040}, {'eval_loss': 0.5593456029891968, 'eval_precision': 0.29036004645760743, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.28768699654775604, 'eval_accuracy': 0.9335675133173782, 'eval_runtime': 2.3499, 'eval_samples_per_second': 651.515, 'eval_steps_per_second': 81.705, 'epoch': 13.0, 'step': 14040}, {'loss': 0.0056, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 15120}, {'eval_loss': 0.554034411907196, 'eval_precision': 0.2822857142857143, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2819634703196347, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 2.3579, 'eval_samples_per_second': 649.301, 'eval_steps_per_second': 81.428, 'epoch': 14.0, 'step': 15120}, {'loss': 0.0048, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 16200}, {'eval_loss': 0.5422898530960083, 'eval_precision': 0.29069767441860467, 'eval_recall': 0.28506271379703535, 'eval_f1': 0.2878526194588371, 'eval_accuracy': 0.9341465297614452, 'eval_runtime': 2.3523, 'eval_samples_per_second': 650.866, 'eval_steps_per_second': 81.624, 'epoch': 15.0, 'step': 16200}, {'loss': 0.0034, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 17280}, {'eval_loss': 0.57059246301651, 'eval_precision': 0.2984542211652794, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2922002328288708, 'eval_accuracy': 0.9355361692272061, 'eval_runtime': 2.3568, 'eval_samples_per_second': 649.606, 'eval_steps_per_second': 81.466, 'epoch': 16.0, 'step': 17280}, {'loss': 0.0033, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 18360}, {'eval_loss': 0.5850701928138733, 'eval_precision': 0.28202247191011237, 'eval_recall': 0.2862029646522235, 'eval_f1': 0.2840973401245049, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 2.3432, 'eval_samples_per_second': 653.369, 'eval_steps_per_second': 81.938, 'epoch': 17.0, 'step': 18360}, {'loss': 0.0023, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 19440}, {'eval_loss': 0.5852802395820618, 'eval_precision': 0.31295843520782396, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30206489675516224, 'eval_accuracy': 0.9361923878638153, 'eval_runtime': 2.3515, 'eval_samples_per_second': 651.065, 'eval_steps_per_second': 81.649, 'epoch': 18.0, 'step': 19440}, {'loss': 0.0011, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 20520}, {'eval_loss': 0.6025508642196655, 'eval_precision': 0.3183023872679045, 'eval_recall': 0.27366020524515394, 'eval_f1': 0.2942979767014101, 'eval_accuracy': 0.9378908360997452, 'eval_runtime': 2.3516, 'eval_samples_per_second': 651.04, 'eval_steps_per_second': 81.646, 'epoch': 19.0, 'step': 20520}, {'loss': 0.001, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 21600}, {'eval_loss': 0.6224603652954102, 'eval_precision': 0.3160493827160494, 'eval_recall': 0.2919042189281642, 'eval_f1': 0.30349733254297573, 'eval_accuracy': 0.937273218559407, 'eval_runtime': 2.3501, 'eval_samples_per_second': 651.461, 'eval_steps_per_second': 81.699, 'epoch': 20.0, 'step': 21600}, {'loss': 0.0008, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 22680}, {'eval_loss': 0.6244406700134277, 'eval_precision': 0.3114754098360656, 'eval_recall': 0.28164196123147095, 'eval_f1': 0.2958083832335329, 'eval_accuracy': 0.9362695900563576, 'eval_runtime': 2.3513, 'eval_samples_per_second': 651.124, 'eval_steps_per_second': 81.656, 'epoch': 21.0, 'step': 22680}, {'loss': 0.0005, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 23760}, {'eval_loss': 0.6275057792663574, 'eval_precision': 0.3140096618357488, 'eval_recall': 0.29646522234891676, 'eval_f1': 0.30498533724340177, 'eval_accuracy': 0.9359221801899174, 'eval_runtime': 2.3517, 'eval_samples_per_second': 651.023, 'eval_steps_per_second': 81.644, 'epoch': 22.0, 'step': 23760}, {'loss': 0.0003, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 24840}, {'eval_loss': 0.6324394345283508, 'eval_precision': 0.3175182481751825, 'eval_recall': 0.2976054732041049, 'eval_f1': 0.3072395526780459, 'eval_accuracy': 0.935806376901104, 'eval_runtime': 2.3488, 'eval_samples_per_second': 651.827, 'eval_steps_per_second': 81.744, 'epoch': 23.0, 'step': 24840}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 25920}, {'eval_loss': 0.6360811591148376, 'eval_precision': 0.31863979848866497, 'eval_recall': 0.28848346636259975, 'eval_f1': 0.3028126870137641, 'eval_accuracy': 0.936385393345171, 'eval_runtime': 2.3572, 'eval_samples_per_second': 649.486, 'eval_steps_per_second': 81.451, 'epoch': 24.0, 'step': 25920}, {'train_runtime': 1434.7574, 'train_samples_per_second': 144.426, 'train_steps_per_second': 18.066, 'total_flos': 5909182978626408.0, 'train_loss': 0.03695791930443159, 'epoch': 24.0, 'step': 25920}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9359
  predict_f1                 =     0.2205
  predict_loss               =     0.2263
  predict_precision          =     0.2343
  predict_recall             =     0.2082
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    651.844
  predict_steps_per_second   =     81.481
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_base_10.json completed. F1: 0.22046109510086453
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_34.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-base and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_34.json
01191518_tsa-bin_NB-BERT_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5605.19 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6627.06 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6701.47 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6884.47 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7013.77 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7186.20 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 6341.50 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6687.08 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6731.42 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7390.02 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7039.63 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7198.47 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 7003.91 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2063, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.14931096136569977, 'eval_precision': 0.45134575569358176, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.47314161692892026, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3444, 'eval_samples_per_second': 653.043, 'eval_steps_per_second': 81.897, 'epoch': 1.0}
{'loss': 0.1238, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.15588198602199554, 'eval_precision': 0.5249221183800623, 'eval_recall': 0.38426453819840367, 'eval_f1': 0.4437129690585912, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3368, 'eval_samples_per_second': 655.168, 'eval_steps_per_second': 82.163, 'epoch': 2.0}
{'loss': 0.0717, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.17919261753559113, 'eval_precision': 0.41085899513776336, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.48034107058266223, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.3514, 'eval_samples_per_second': 651.089, 'eval_steps_per_second': 81.652, 'epoch': 3.0}
{'loss': 0.0408, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.2045900821685791, 'eval_precision': 0.46206115515288787, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.4636363636363636, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3429, 'eval_samples_per_second': 653.468, 'eval_steps_per_second': 81.95, 'epoch': 4.0}
{'loss': 0.0253, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2384187877178192, 'eval_precision': 0.5129198966408268, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.48092065414900054, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3404, 'eval_samples_per_second': 654.156, 'eval_steps_per_second': 82.037, 'epoch': 5.0}
{'loss': 0.0161, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.26766639947891235, 'eval_precision': 0.47848898216159497, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4983606557377049, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.3398, 'eval_samples_per_second': 654.323, 'eval_steps_per_second': 82.057, 'epoch': 6.0}
{'loss': 0.0102, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.2861703634262085, 'eval_precision': 0.4760892667375133, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.49284928492849284, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.3413, 'eval_samples_per_second': 653.907, 'eval_steps_per_second': 82.005, 'epoch': 7.0}
{'loss': 0.0082, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.29171520471572876, 'eval_precision': 0.46524064171123, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.48013245033112584, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3391, 'eval_samples_per_second': 654.535, 'eval_steps_per_second': 82.084, 'epoch': 8.0}
{'loss': 0.0062, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.3231334388256073, 'eval_precision': 0.45195353748680045, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.46929824561403505, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.4154, 'eval_samples_per_second': 633.859, 'eval_steps_per_second': 79.491, 'epoch': 9.0}
{'loss': 0.0037, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.3423340618610382, 'eval_precision': 0.4580233793836344, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.47414741474147415, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.3346, 'eval_samples_per_second': 655.78, 'eval_steps_per_second': 82.24, 'epoch': 10.0}
{'loss': 0.0038, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.35040363669395447, 'eval_precision': 0.4515235457063712, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49897959183673457, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.3388, 'eval_samples_per_second': 654.623, 'eval_steps_per_second': 82.095, 'epoch': 11.0}
{'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.3595394492149353, 'eval_precision': 0.5, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4868344060854301, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3354, 'eval_samples_per_second': 655.568, 'eval_steps_per_second': 82.214, 'epoch': 12.0}
{'loss': 0.0025, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.36556848883628845, 'eval_precision': 0.47157894736842104, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4904214559386973, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.989, 'eval_steps_per_second': 81.765, 'epoch': 13.0}
{'loss': 0.002, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.3697609007358551, 'eval_precision': 0.4748603351955307, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4796839729119639, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.334, 'eval_samples_per_second': 655.965, 'eval_steps_per_second': 82.263, 'epoch': 14.0}
{'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.38171008229255676, 'eval_precision': 0.4972253052164262, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5039370078740159, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3345, 'eval_samples_per_second': 655.813, 'eval_steps_per_second': 82.244, 'epoch': 15.0}
{'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.4059678316116333, 'eval_precision': 0.45691382765531063, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4864, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.3414, 'eval_samples_per_second': 653.883, 'eval_steps_per_second': 82.002, 'epoch': 16.0}
{'loss': 0.0013, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.3947426974773407, 'eval_precision': 0.4779874213836478, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4980884762424905, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 2.3414, 'eval_samples_per_second': 653.877, 'eval_steps_per_second': 82.002, 'epoch': 17.0}
{'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.41762205958366394, 'eval_precision': 0.49643705463182897, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4863292611983711, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3463, 'eval_samples_per_second': 652.504, 'eval_steps_per_second': 81.829, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.42351317405700684, 'eval_precision': 0.49710312862108924, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.4931034482758621, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.3374, 'eval_samples_per_second': 655.002, 'eval_steps_per_second': 82.143, 'epoch': 19.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.43011224269866943, 'eval_precision': 0.504739336492891, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.49506101104009304, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3382, 'eval_samples_per_second': 654.776, 'eval_steps_per_second': 82.114, 'epoch': 20.0}
{'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.42658400535583496, 'eval_precision': 0.49398907103825135, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5044642857142856, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3339, 'eval_samples_per_second': 655.994, 'eval_steps_per_second': 82.267, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.4290198087692261, 'eval_precision': 0.4988558352402746, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.49800114220445457, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3353, 'eval_samples_per_second': 655.604, 'eval_steps_per_second': 82.218, 'epoch': 22.0}
{'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.43061327934265137, 'eval_precision': 0.4915635545556805, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.49490373725934317, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 2.3347, 'eval_samples_per_second': 655.768, 'eval_steps_per_second': 82.239, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.43271979689598083, 'eval_precision': 0.4889380530973451, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4963503649635036, 'eval_accuracy': 0.9481201266115957, 'eval_runtime': 2.3374, 'eval_samples_per_second': 654.989, 'eval_steps_per_second': 82.141, 'epoch': 24.0}
{'train_runtime': 863.1845, 'train_samples_per_second': 240.06, 'train_steps_per_second': 7.507, 'train_loss': 0.02209111757714439, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0221
  train_runtime            = 0:14:23.18
  train_samples            =       8634
  train_samples_per_second =     240.06
  train_steps_per_second   =      7.507
[{'loss': 0.2063, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.14931096136569977, 'eval_precision': 0.45134575569358176, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.47314161692892026, 'eval_accuracy': 0.9474253068787154, 'eval_runtime': 2.3444, 'eval_samples_per_second': 653.043, 'eval_steps_per_second': 81.897, 'epoch': 1.0, 'step': 270}, {'loss': 0.1238, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.15588198602199554, 'eval_precision': 0.5249221183800623, 'eval_recall': 0.38426453819840367, 'eval_f1': 0.4437129690585912, 'eval_accuracy': 0.9505519956766773, 'eval_runtime': 2.3368, 'eval_samples_per_second': 655.168, 'eval_steps_per_second': 82.163, 'epoch': 2.0, 'step': 540}, {'loss': 0.0717, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.17919261753559113, 'eval_precision': 0.41085899513776336, 'eval_recall': 0.5781071835803877, 'eval_f1': 0.48034107058266223, 'eval_accuracy': 0.9412491314753338, 'eval_runtime': 2.3514, 'eval_samples_per_second': 651.089, 'eval_steps_per_second': 81.652, 'epoch': 3.0, 'step': 810}, {'loss': 0.0408, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.2045900821685791, 'eval_precision': 0.46206115515288787, 'eval_recall': 0.4652223489167617, 'eval_f1': 0.4636363636363636, 'eval_accuracy': 0.9475025090712577, 'eval_runtime': 2.3429, 'eval_samples_per_second': 653.468, 'eval_steps_per_second': 81.95, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0253, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.2384187877178192, 'eval_precision': 0.5129198966408268, 'eval_recall': 0.4526795895096921, 'eval_f1': 0.48092065414900054, 'eval_accuracy': 0.9493939627885432, 'eval_runtime': 2.3404, 'eval_samples_per_second': 654.156, 'eval_steps_per_second': 82.037, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0161, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.26766639947891235, 'eval_precision': 0.47848898216159497, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4983606557377049, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.3398, 'eval_samples_per_second': 654.323, 'eval_steps_per_second': 82.057, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0102, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.2861703634262085, 'eval_precision': 0.4760892667375133, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.49284928492849284, 'eval_accuracy': 0.9468848915309195, 'eval_runtime': 2.3413, 'eval_samples_per_second': 653.907, 'eval_steps_per_second': 82.005, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0082, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.29171520471572876, 'eval_precision': 0.46524064171123, 'eval_recall': 0.4960091220068415, 'eval_f1': 0.48013245033112584, 'eval_accuracy': 0.9476569134563422, 'eval_runtime': 2.3391, 'eval_samples_per_second': 654.535, 'eval_steps_per_second': 82.084, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0062, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3231334388256073, 'eval_precision': 0.45195353748680045, 'eval_recall': 0.4880273660205245, 'eval_f1': 0.46929824561403505, 'eval_accuracy': 0.946460279471937, 'eval_runtime': 2.4154, 'eval_samples_per_second': 633.859, 'eval_steps_per_second': 79.491, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0037, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.3423340618610382, 'eval_precision': 0.4580233793836344, 'eval_recall': 0.49144811858608894, 'eval_f1': 0.47414741474147415, 'eval_accuracy': 0.9459198641241411, 'eval_runtime': 2.3346, 'eval_samples_per_second': 655.78, 'eval_steps_per_second': 82.24, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0038, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.35040363669395447, 'eval_precision': 0.4515235457063712, 'eval_recall': 0.5575826681870011, 'eval_f1': 0.49897959183673457, 'eval_accuracy': 0.9446074268509226, 'eval_runtime': 2.3388, 'eval_samples_per_second': 654.623, 'eval_steps_per_second': 82.095, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0024, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.3595394492149353, 'eval_precision': 0.5, 'eval_recall': 0.47434435575826683, 'eval_f1': 0.4868344060854301, 'eval_accuracy': 0.948197328804138, 'eval_runtime': 2.3354, 'eval_samples_per_second': 655.568, 'eval_steps_per_second': 82.214, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0025, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.36556848883628845, 'eval_precision': 0.47157894736842104, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.4904214559386973, 'eval_accuracy': 0.9466918860495638, 'eval_runtime': 2.3482, 'eval_samples_per_second': 651.989, 'eval_steps_per_second': 81.765, 'epoch': 13.0, 'step': 3510}, {'loss': 0.002, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.3697609007358551, 'eval_precision': 0.4748603351955307, 'eval_recall': 0.4846066134549601, 'eval_f1': 0.4796839729119639, 'eval_accuracy': 0.9475797112637999, 'eval_runtime': 2.334, 'eval_samples_per_second': 655.965, 'eval_steps_per_second': 82.263, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0016, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.38171008229255676, 'eval_precision': 0.4972253052164262, 'eval_recall': 0.5108323831242874, 'eval_f1': 0.5039370078740159, 'eval_accuracy': 0.9491623562109164, 'eval_runtime': 2.3345, 'eval_samples_per_second': 655.813, 'eval_steps_per_second': 82.244, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0011, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.4059678316116333, 'eval_precision': 0.45691382765531063, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4864, 'eval_accuracy': 0.9459970663166833, 'eval_runtime': 2.3414, 'eval_samples_per_second': 653.883, 'eval_steps_per_second': 82.002, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0013, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3947426974773407, 'eval_precision': 0.4779874213836478, 'eval_recall': 0.5199543899657925, 'eval_f1': 0.4980884762424905, 'eval_accuracy': 0.946769088242106, 'eval_runtime': 2.3414, 'eval_samples_per_second': 653.877, 'eval_steps_per_second': 82.002, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0009, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.41762205958366394, 'eval_precision': 0.49643705463182897, 'eval_recall': 0.4766248574686431, 'eval_f1': 0.4863292611983711, 'eval_accuracy': 0.9479271211302401, 'eval_runtime': 2.3463, 'eval_samples_per_second': 652.504, 'eval_steps_per_second': 81.829, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0007, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.42351317405700684, 'eval_precision': 0.49710312862108924, 'eval_recall': 0.48916761687571264, 'eval_f1': 0.4931034482758621, 'eval_accuracy': 0.9489307496332896, 'eval_runtime': 2.3374, 'eval_samples_per_second': 655.002, 'eval_steps_per_second': 82.143, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0004, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.43011224269866943, 'eval_precision': 0.504739336492891, 'eval_recall': 0.48574686431014824, 'eval_f1': 0.49506101104009304, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3382, 'eval_samples_per_second': 654.776, 'eval_steps_per_second': 82.114, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0004, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.42658400535583496, 'eval_precision': 0.49398907103825135, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.5044642857142856, 'eval_accuracy': 0.9482745309966804, 'eval_runtime': 2.3339, 'eval_samples_per_second': 655.994, 'eval_steps_per_second': 82.267, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0003, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.4290198087692261, 'eval_precision': 0.4988558352402746, 'eval_recall': 0.49714937286202965, 'eval_f1': 0.49800114220445457, 'eval_accuracy': 0.9488921485370184, 'eval_runtime': 2.3353, 'eval_samples_per_second': 655.604, 'eval_steps_per_second': 82.218, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0004, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.43061327934265137, 'eval_precision': 0.4915635545556805, 'eval_recall': 0.4982896237172178, 'eval_f1': 0.49490373725934317, 'eval_accuracy': 0.9484289353817649, 'eval_runtime': 2.3347, 'eval_samples_per_second': 655.768, 'eval_steps_per_second': 82.239, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.43271979689598083, 'eval_precision': 0.4889380530973451, 'eval_recall': 0.5039908779931584, 'eval_f1': 0.4963503649635036, 'eval_accuracy': 0.9481201266115957, 'eval_runtime': 2.3374, 'eval_samples_per_second': 654.989, 'eval_steps_per_second': 82.141, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 863.1845, 'train_samples_per_second': 240.06, 'train_steps_per_second': 7.507, 'total_flos': 7895714136063000.0, 'train_loss': 0.02209111757714439, 'epoch': 24.0, 'step': 6480}]

Evaluation, NbAiLab/nb-bert-base
***** predict metrics *****
  predict_accuracy           =     0.9492
  predict_f1                 =     0.4456
  predict_loss               =     0.1605
  predict_precision          =     0.4397
  predict_recall             =     0.4517
  predict_runtime            = 0:00:01.95
  predict_samples_per_second =    650.256
  predict_steps_per_second   =     81.282
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_base_34.json completed. F1: 0.44563758389261743
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_19.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_19.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 7006.98 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7383.84 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7163.88 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7181.98 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7243.27 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7349.28 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7480.85 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6502.60 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6985.73 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7485.91 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7089.82 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7189.93 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6971.08 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2688, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.19635741412639618, 'eval_precision': 0.26153846153846155, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24622812311406156, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6694, 'eval_samples_per_second': 327.878, 'eval_steps_per_second': 41.119, 'epoch': 1.0}
{'loss': 0.1725, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.19970077276229858, 'eval_precision': 0.26874115983026875, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2398989898989899, 'eval_accuracy': 0.942715973133637, 'eval_runtime': 4.6402, 'eval_samples_per_second': 329.941, 'eval_steps_per_second': 41.377, 'epoch': 2.0}
{'loss': 0.1208, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.2102888822555542, 'eval_precision': 0.27180899908172634, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.301119023397762, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.316, 'eval_steps_per_second': 41.299, 'epoch': 3.0}
{'loss': 0.0825, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.25012895464897156, 'eval_precision': 0.301994301994302, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.3295336787564767, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 4.6425, 'eval_samples_per_second': 329.78, 'eval_steps_per_second': 41.357, 'epoch': 4.0}
{'loss': 0.0527, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.2730976939201355, 'eval_precision': 0.2838095238095238, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30928905033731185, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 4.6478, 'eval_samples_per_second': 329.406, 'eval_steps_per_second': 41.31, 'epoch': 5.0}
{'loss': 0.0317, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.317344605922699, 'eval_precision': 0.2909796314258002, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.31446540880503143, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.646, 'eval_steps_per_second': 41.34, 'epoch': 6.0}
{'loss': 0.0203, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.3758101463317871, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.32193396226415094, 'eval_accuracy': 0.9437968038292287, 'eval_runtime': 4.6437, 'eval_samples_per_second': 329.691, 'eval_steps_per_second': 41.346, 'epoch': 7.0}
{'loss': 0.0146, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.37392663955688477, 'eval_precision': 0.2668463611859838, 'eval_recall': 0.338654503990878, 'eval_f1': 0.29849246231155774, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.6409, 'eval_samples_per_second': 329.89, 'eval_steps_per_second': 41.371, 'epoch': 8.0}
{'loss': 0.0105, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.372639924287796, 'eval_precision': 0.3038105046343975, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31926406926406925, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6385, 'eval_samples_per_second': 330.064, 'eval_steps_per_second': 41.393, 'epoch': 9.0}
{'loss': 0.0064, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.39363977313041687, 'eval_precision': 0.31126482213438733, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3335097935415564, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.372, 'eval_steps_per_second': 41.306, 'epoch': 10.0}
{'loss': 0.0047, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.4198765754699707, 'eval_precision': 0.329004329004329, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3375902276513048, 'eval_accuracy': 0.9440670115031267, 'eval_runtime': 4.6396, 'eval_samples_per_second': 329.986, 'eval_steps_per_second': 41.383, 'epoch': 11.0}
{'loss': 0.0036, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.4446052312850952, 'eval_precision': 0.2997002997002997, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3194888178913738, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6451, 'eval_samples_per_second': 329.597, 'eval_steps_per_second': 41.334, 'epoch': 12.0}
{'loss': 0.0032, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.46706971526145935, 'eval_precision': 0.33495145631067963, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32451499118165783, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 4.6332, 'eval_samples_per_second': 330.439, 'eval_steps_per_second': 41.44, 'epoch': 13.0}
{'loss': 0.0026, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.47510603070259094, 'eval_precision': 0.3428912783751493, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.33488914819136517, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.6427, 'eval_samples_per_second': 329.767, 'eval_steps_per_second': 41.356, 'epoch': 14.0}
{'loss': 0.0016, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.49501487612724304, 'eval_precision': 0.3353080568720379, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32887855897733875, 'eval_accuracy': 0.9445688257546514, 'eval_runtime': 4.6341, 'eval_samples_per_second': 330.374, 'eval_steps_per_second': 41.432, 'epoch': 15.0}
{'loss': 0.0018, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.48942285776138306, 'eval_precision': 0.2960172228202368, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3045404208194906, 'eval_accuracy': 0.9411333281865205, 'eval_runtime': 4.6423, 'eval_samples_per_second': 329.793, 'eval_steps_per_second': 41.359, 'epoch': 16.0}
{'loss': 0.0011, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.5186097025871277, 'eval_precision': 0.3249138920780712, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32379862700228834, 'eval_accuracy': 0.9442214158882112, 'eval_runtime': 4.6258, 'eval_samples_per_second': 330.969, 'eval_steps_per_second': 41.506, 'epoch': 17.0}
{'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.534567654132843, 'eval_precision': 0.2885181550539745, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31012658227848106, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 4.6355, 'eval_samples_per_second': 330.28, 'eval_steps_per_second': 41.42, 'epoch': 18.0}
{'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.5272712111473083, 'eval_precision': 0.30467899891186073, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.311804008908686, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6298, 'eval_samples_per_second': 330.682, 'eval_steps_per_second': 41.47, 'epoch': 19.0}
{'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.5342576503753662, 'eval_precision': 0.30992196209587514, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3134160090191657, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.639, 'eval_samples_per_second': 330.028, 'eval_steps_per_second': 41.388, 'epoch': 20.0}
{'loss': 0.0005, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.5427663326263428, 'eval_precision': 0.3102310231023102, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.31578947368421056, 'eval_accuracy': 0.9419053501119432, 'eval_runtime': 4.7093, 'eval_samples_per_second': 325.102, 'eval_steps_per_second': 40.77, 'epoch': 21.0}
{'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.5437899827957153, 'eval_precision': 0.3082872928176796, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3131313131313132, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6341, 'eval_samples_per_second': 330.375, 'eval_steps_per_second': 41.432, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.5509259104728699, 'eval_precision': 0.30032292787944026, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30897009966777417, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 4.6306, 'eval_samples_per_second': 330.625, 'eval_steps_per_second': 41.463, 'epoch': 23.0}
{'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5520333647727966, 'eval_precision': 0.30726872246696035, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3126050420168067, 'eval_accuracy': 0.9422527599783834, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.747, 'eval_steps_per_second': 41.353, 'epoch': 24.0}
{'train_runtime': 2358.2731, 'train_samples_per_second': 87.868, 'train_steps_per_second': 5.496, 'train_loss': 0.03346267350385954, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0335
  train_runtime            = 0:39:18.27
  train_samples            =       8634
  train_samples_per_second =     87.868
  train_steps_per_second   =      5.496
[{'loss': 0.2688, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.19635741412639618, 'eval_precision': 0.26153846153846155, 'eval_recall': 0.23261117445838084, 'eval_f1': 0.24622812311406156, 'eval_accuracy': 0.9417123446305875, 'eval_runtime': 4.6694, 'eval_samples_per_second': 327.878, 'eval_steps_per_second': 41.119, 'epoch': 1.0, 'step': 540}, {'loss': 0.1725, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.19970077276229858, 'eval_precision': 0.26874115983026875, 'eval_recall': 0.21664766248574688, 'eval_f1': 0.2398989898989899, 'eval_accuracy': 0.942715973133637, 'eval_runtime': 4.6402, 'eval_samples_per_second': 329.941, 'eval_steps_per_second': 41.377, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1208, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.2102888822555542, 'eval_precision': 0.27180899908172634, 'eval_recall': 0.33751425313568983, 'eval_f1': 0.301119023397762, 'eval_accuracy': 0.936655601019069, 'eval_runtime': 4.649, 'eval_samples_per_second': 329.316, 'eval_steps_per_second': 41.299, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0825, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.25012895464897156, 'eval_precision': 0.301994301994302, 'eval_recall': 0.36259977194982895, 'eval_f1': 0.3295336787564767, 'eval_accuracy': 0.9373118196556782, 'eval_runtime': 4.6425, 'eval_samples_per_second': 329.78, 'eval_steps_per_second': 41.357, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0527, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.2730976939201355, 'eval_precision': 0.2838095238095238, 'eval_recall': 0.33979475484606614, 'eval_f1': 0.30928905033731185, 'eval_accuracy': 0.937543426233305, 'eval_runtime': 4.6478, 'eval_samples_per_second': 329.406, 'eval_steps_per_second': 41.31, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0317, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.317344605922699, 'eval_precision': 0.2909796314258002, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.31446540880503143, 'eval_accuracy': 0.9397822898170308, 'eval_runtime': 4.6444, 'eval_samples_per_second': 329.646, 'eval_steps_per_second': 41.34, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0203, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.3758101463317871, 'eval_precision': 0.3333333333333333, 'eval_recall': 0.3112884834663626, 'eval_f1': 0.32193396226415094, 'eval_accuracy': 0.9437968038292287, 'eval_runtime': 4.6437, 'eval_samples_per_second': 329.691, 'eval_steps_per_second': 41.346, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0146, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.37392663955688477, 'eval_precision': 0.2668463611859838, 'eval_recall': 0.338654503990878, 'eval_f1': 0.29849246231155774, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.6409, 'eval_samples_per_second': 329.89, 'eval_steps_per_second': 41.371, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0105, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.372639924287796, 'eval_precision': 0.3038105046343975, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.31926406926406925, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6385, 'eval_samples_per_second': 330.064, 'eval_steps_per_second': 41.393, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0064, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.39363977313041687, 'eval_precision': 0.31126482213438733, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3335097935415564, 'eval_accuracy': 0.939550683239404, 'eval_runtime': 4.6482, 'eval_samples_per_second': 329.372, 'eval_steps_per_second': 41.306, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0047, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.4198765754699707, 'eval_precision': 0.329004329004329, 'eval_recall': 0.346636259977195, 'eval_f1': 0.3375902276513048, 'eval_accuracy': 0.9440670115031267, 'eval_runtime': 4.6396, 'eval_samples_per_second': 329.986, 'eval_steps_per_second': 41.383, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0036, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.4446052312850952, 'eval_precision': 0.2997002997002997, 'eval_recall': 0.34207525655644244, 'eval_f1': 0.3194888178913738, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6451, 'eval_samples_per_second': 329.597, 'eval_steps_per_second': 41.334, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0032, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.46706971526145935, 'eval_precision': 0.33495145631067963, 'eval_recall': 0.314709236031927, 'eval_f1': 0.32451499118165783, 'eval_accuracy': 0.9443758202732958, 'eval_runtime': 4.6332, 'eval_samples_per_second': 330.439, 'eval_steps_per_second': 41.44, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0026, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.47510603070259094, 'eval_precision': 0.3428912783751493, 'eval_recall': 0.3272519954389966, 'eval_f1': 0.33488914819136517, 'eval_accuracy': 0.9436810005404154, 'eval_runtime': 4.6427, 'eval_samples_per_second': 329.767, 'eval_steps_per_second': 41.356, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0016, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.49501487612724304, 'eval_precision': 0.3353080568720379, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32887855897733875, 'eval_accuracy': 0.9445688257546514, 'eval_runtime': 4.6341, 'eval_samples_per_second': 330.374, 'eval_steps_per_second': 41.432, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0018, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.48942285776138306, 'eval_precision': 0.2960172228202368, 'eval_recall': 0.31356898517673887, 'eval_f1': 0.3045404208194906, 'eval_accuracy': 0.9411333281865205, 'eval_runtime': 4.6423, 'eval_samples_per_second': 329.793, 'eval_steps_per_second': 41.359, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0011, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.5186097025871277, 'eval_precision': 0.3249138920780712, 'eval_recall': 0.322690992018244, 'eval_f1': 0.32379862700228834, 'eval_accuracy': 0.9442214158882112, 'eval_runtime': 4.6258, 'eval_samples_per_second': 330.969, 'eval_steps_per_second': 41.506, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0011, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.534567654132843, 'eval_precision': 0.2885181550539745, 'eval_recall': 0.3352337514253136, 'eval_f1': 0.31012658227848106, 'eval_accuracy': 0.9388172624102524, 'eval_runtime': 4.6355, 'eval_samples_per_second': 330.28, 'eval_steps_per_second': 41.42, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0007, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5272712111473083, 'eval_precision': 0.30467899891186073, 'eval_recall': 0.31927023945267957, 'eval_f1': 0.311804008908686, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6298, 'eval_samples_per_second': 330.682, 'eval_steps_per_second': 41.47, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0007, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5342576503753662, 'eval_precision': 0.30992196209587514, 'eval_recall': 0.3169897377423033, 'eval_f1': 0.3134160090191657, 'eval_accuracy': 0.941287732571605, 'eval_runtime': 4.639, 'eval_samples_per_second': 330.028, 'eval_steps_per_second': 41.388, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0005, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.5427663326263428, 'eval_precision': 0.3102310231023102, 'eval_recall': 0.3215507411630559, 'eval_f1': 0.31578947368421056, 'eval_accuracy': 0.9419053501119432, 'eval_runtime': 4.7093, 'eval_samples_per_second': 325.102, 'eval_steps_per_second': 40.77, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0003, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.5437899827957153, 'eval_precision': 0.3082872928176796, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3131313131313132, 'eval_accuracy': 0.9417509457268587, 'eval_runtime': 4.6341, 'eval_samples_per_second': 330.375, 'eval_steps_per_second': 41.432, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0003, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5509259104728699, 'eval_precision': 0.30032292787944026, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.30897009966777417, 'eval_accuracy': 0.9419439512082143, 'eval_runtime': 4.6306, 'eval_samples_per_second': 330.625, 'eval_steps_per_second': 41.463, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0002, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5520333647727966, 'eval_precision': 0.30726872246696035, 'eval_recall': 0.3181299885974915, 'eval_f1': 0.3126050420168067, 'eval_accuracy': 0.9422527599783834, 'eval_runtime': 4.643, 'eval_samples_per_second': 329.747, 'eval_steps_per_second': 41.353, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2358.2731, 'train_samples_per_second': 87.868, 'train_steps_per_second': 5.496, 'total_flos': 1.9842535878870816e+16, 'train_loss': 0.03346267350385954, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9402
  predict_f1                 =     0.2706
  predict_loss               =      0.212
  predict_precision          =     0.2944
  predict_recall             =     0.2503
  predict_runtime            = 0:00:03.89
  predict_samples_per_second =    326.228
  predict_steps_per_second   =     40.778
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_19.json completed. F1: 0.2705882352941177
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_29.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_29.json
01191518_tsa-bin_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6301.91 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 6915.36 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6823.22 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6930.56 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7026.14 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7168.07 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7349.70 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6418.86 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6790.25 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7232.17 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6942.63 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7060.56 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6876.79 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.6184, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.4057682454586029, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7488, 'eval_samples_per_second': 266.319, 'eval_steps_per_second': 33.399, 'epoch': 1.0}
{'loss': 0.4668, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.45804184675216675, 'eval_precision': 1.0, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022779043280182236, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.7053, 'eval_samples_per_second': 268.347, 'eval_steps_per_second': 33.653, 'epoch': 2.0}
{'loss': 0.408, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.3874915838241577, 'eval_precision': 0.36, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.019955654101995568, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.744, 'eval_steps_per_second': 33.703, 'epoch': 3.0}
{'loss': 0.336, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.35004639625549316, 'eval_precision': 0.390625, 'eval_recall': 0.028506271379703536, 'eval_f1': 0.05313496280552604, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.743, 'eval_steps_per_second': 33.703, 'epoch': 4.0}
{'loss': 0.3024, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.3187958002090454, 'eval_precision': 0.5084745762711864, 'eval_recall': 0.03420752565564424, 'eval_f1': 0.06410256410256411, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 5.6888, 'eval_samples_per_second': 269.126, 'eval_steps_per_second': 33.751, 'epoch': 5.0}
{'loss': 0.2735, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.33638259768486023, 'eval_precision': 0.4626865671641791, 'eval_recall': 0.03534777651083238, 'eval_f1': 0.0656779661016949, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 5.686, 'eval_samples_per_second': 269.256, 'eval_steps_per_second': 33.767, 'epoch': 6.0}
{'loss': 0.2902, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.335705429315567, 'eval_precision': 0.39080459770114945, 'eval_recall': 0.03876852907639681, 'eval_f1': 0.07053941908713693, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 5.6837, 'eval_samples_per_second': 269.369, 'eval_steps_per_second': 33.781, 'epoch': 7.0}
{'loss': 0.2599, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.3050141930580139, 'eval_precision': 0.43846153846153846, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.11320754716981132, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.689, 'eval_steps_per_second': 33.57, 'epoch': 8.0}
{'loss': 0.2778, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.3471388518810272, 'eval_precision': 0.42207792207792205, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.12609117361784675, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 5.6689, 'eval_samples_per_second': 270.068, 'eval_steps_per_second': 33.869, 'epoch': 9.0}
{'loss': 0.2713, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.33117738366127014, 'eval_precision': 0.35602094240837695, 'eval_recall': 0.07753705815279362, 'eval_f1': 0.12734082397003746, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 5.7018, 'eval_samples_per_second': 268.512, 'eval_steps_per_second': 33.674, 'epoch': 10.0}
{'loss': 0.2511, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.36935052275657654, 'eval_precision': 0.32460732984293195, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.11610486891385768, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 5.6919, 'eval_samples_per_second': 268.979, 'eval_steps_per_second': 33.732, 'epoch': 11.0}
{'loss': 0.2622, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.32802730798721313, 'eval_precision': 0.36403508771929827, 'eval_recall': 0.09464082098061574, 'eval_f1': 0.1502262443438914, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 5.7636, 'eval_samples_per_second': 265.633, 'eval_steps_per_second': 33.313, 'epoch': 12.0}
{'loss': 0.2318, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.32550758123397827, 'eval_precision': 0.413265306122449, 'eval_recall': 0.09236031927023945, 'eval_f1': 0.15097856477166824, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 5.6932, 'eval_samples_per_second': 268.919, 'eval_steps_per_second': 33.725, 'epoch': 13.0}
{'loss': 0.2203, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.307648241519928, 'eval_precision': 0.4827586206896552, 'eval_recall': 0.15963511972633979, 'eval_f1': 0.23993144815766923, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 5.7076, 'eval_samples_per_second': 268.239, 'eval_steps_per_second': 33.639, 'epoch': 14.0}
{'loss': 0.2274, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.3069210350513458, 'eval_precision': 0.42318059299191374, 'eval_recall': 0.1790193842645382, 'eval_f1': 0.25160256410256415, 'eval_accuracy': 0.9390488689878792, 'eval_runtime': 5.7089, 'eval_samples_per_second': 268.176, 'eval_steps_per_second': 33.631, 'epoch': 15.0}
{'loss': 0.2139, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.31351590156555176, 'eval_precision': 0.43103448275862066, 'eval_recall': 0.17103762827822122, 'eval_f1': 0.24489795918367346, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 5.696, 'eval_samples_per_second': 268.786, 'eval_steps_per_second': 33.708, 'epoch': 16.0}
{'loss': 0.2294, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.3296239674091339, 'eval_precision': 0.3872340425531915, 'eval_recall': 0.20752565564424175, 'eval_f1': 0.2702301410541945, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 5.7489, 'eval_samples_per_second': 266.31, 'eval_steps_per_second': 33.397, 'epoch': 17.0}
{'loss': 0.2329, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.33650240302085876, 'eval_precision': 0.3860759493670886, 'eval_recall': 0.20866590649942987, 'eval_f1': 0.27091043671354553, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 5.6776, 'eval_samples_per_second': 269.656, 'eval_steps_per_second': 33.817, 'epoch': 18.0}
{'loss': 0.2322, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.33136481046676636, 'eval_precision': 0.37423312883435583, 'eval_recall': 0.20866590649942987, 'eval_f1': 0.2679355783308931, 'eval_accuracy': 0.9411719292827916, 'eval_runtime': 5.6828, 'eval_samples_per_second': 269.41, 'eval_steps_per_second': 33.786, 'epoch': 19.0}
{'loss': 0.2271, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.33729350566864014, 'eval_precision': 0.39215686274509803, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2883922134102379, 'eval_accuracy': 0.9422913610746545, 'eval_runtime': 5.6979, 'eval_samples_per_second': 268.694, 'eval_steps_per_second': 33.696, 'epoch': 20.0}
{'loss': 0.2263, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.3337319493293762, 'eval_precision': 0.39759036144578314, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.3168724279835391, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 5.7144, 'eval_samples_per_second': 267.917, 'eval_steps_per_second': 33.599, 'epoch': 21.0}
{'loss': 0.2124, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.33167558908462524, 'eval_precision': 0.397459165154265, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.3067226890756303, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 5.7085, 'eval_samples_per_second': 268.195, 'eval_steps_per_second': 33.634, 'epoch': 22.0}
{'loss': 0.2146, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.3316224217414856, 'eval_precision': 0.40186915887850466, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.3045325779036827, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.332, 'eval_steps_per_second': 33.651, 'epoch': 23.0}
{'loss': 0.2109, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.3323594331741333, 'eval_precision': 0.4059040590405904, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.310077519379845, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 5.6936, 'eval_samples_per_second': 268.897, 'eval_steps_per_second': 33.722, 'epoch': 24.0}
{'train_runtime': 2446.401, 'train_samples_per_second': 84.702, 'train_steps_per_second': 2.649, 'train_loss': 0.27904789477218817, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.279
  train_runtime            = 0:40:46.40
  train_samples            =       8634
  train_samples_per_second =     84.702
  train_steps_per_second   =      2.649
[{'loss': 0.6184, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': 0.4057682454586029, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7488, 'eval_samples_per_second': 266.319, 'eval_steps_per_second': 33.399, 'epoch': 1.0, 'step': 270}, {'loss': 0.4668, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': 0.45804184675216675, 'eval_precision': 1.0, 'eval_recall': 0.0011402508551881414, 'eval_f1': 0.0022779043280182236, 'eval_accuracy': 0.9342237319539874, 'eval_runtime': 5.7053, 'eval_samples_per_second': 268.347, 'eval_steps_per_second': 33.653, 'epoch': 2.0, 'step': 540}, {'loss': 0.408, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': 0.3874915838241577, 'eval_precision': 0.36, 'eval_recall': 0.010262257696693273, 'eval_f1': 0.019955654101995568, 'eval_accuracy': 0.9343009341465298, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.744, 'eval_steps_per_second': 33.703, 'epoch': 3.0, 'step': 810}, {'loss': 0.336, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': 0.35004639625549316, 'eval_precision': 0.390625, 'eval_recall': 0.028506271379703536, 'eval_f1': 0.05313496280552604, 'eval_accuracy': 0.9346483440129699, 'eval_runtime': 5.6969, 'eval_samples_per_second': 268.743, 'eval_steps_per_second': 33.703, 'epoch': 4.0, 'step': 1080}, {'loss': 0.3024, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': 0.3187958002090454, 'eval_precision': 0.5084745762711864, 'eval_recall': 0.03420752565564424, 'eval_f1': 0.06410256410256411, 'eval_accuracy': 0.9350343549756813, 'eval_runtime': 5.6888, 'eval_samples_per_second': 269.126, 'eval_steps_per_second': 33.751, 'epoch': 5.0, 'step': 1350}, {'loss': 0.2735, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': 0.33638259768486023, 'eval_precision': 0.4626865671641791, 'eval_recall': 0.03534777651083238, 'eval_f1': 0.0656779661016949, 'eval_accuracy': 0.9351501582644947, 'eval_runtime': 5.686, 'eval_samples_per_second': 269.256, 'eval_steps_per_second': 33.767, 'epoch': 6.0, 'step': 1620}, {'loss': 0.2902, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': 0.335705429315567, 'eval_precision': 0.39080459770114945, 'eval_recall': 0.03876852907639681, 'eval_f1': 0.07053941908713693, 'eval_accuracy': 0.9345711418204277, 'eval_runtime': 5.6837, 'eval_samples_per_second': 269.369, 'eval_steps_per_second': 33.781, 'epoch': 7.0, 'step': 1890}, {'loss': 0.2599, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': 0.3050141930580139, 'eval_precision': 0.43846153846153846, 'eval_recall': 0.06499429874572406, 'eval_f1': 0.11320754716981132, 'eval_accuracy': 0.9353045626495793, 'eval_runtime': 5.7193, 'eval_samples_per_second': 267.689, 'eval_steps_per_second': 33.57, 'epoch': 8.0, 'step': 2160}, {'loss': 0.2778, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': 0.3471388518810272, 'eval_precision': 0.42207792207792205, 'eval_recall': 0.07411630558722919, 'eval_f1': 0.12609117361784675, 'eval_accuracy': 0.9356905736122906, 'eval_runtime': 5.6689, 'eval_samples_per_second': 270.068, 'eval_steps_per_second': 33.869, 'epoch': 9.0, 'step': 2430}, {'loss': 0.2713, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': 0.33117738366127014, 'eval_precision': 0.35602094240837695, 'eval_recall': 0.07753705815279362, 'eval_f1': 0.12734082397003746, 'eval_accuracy': 0.9347641473017834, 'eval_runtime': 5.7018, 'eval_samples_per_second': 268.512, 'eval_steps_per_second': 33.674, 'epoch': 10.0, 'step': 2700}, {'loss': 0.2511, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': 0.36935052275657654, 'eval_precision': 0.32460732984293195, 'eval_recall': 0.07069555302166476, 'eval_f1': 0.11610486891385768, 'eval_accuracy': 0.9344553385316143, 'eval_runtime': 5.6919, 'eval_samples_per_second': 268.979, 'eval_steps_per_second': 33.732, 'epoch': 11.0, 'step': 2970}, {'loss': 0.2622, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': 0.32802730798721313, 'eval_precision': 0.36403508771929827, 'eval_recall': 0.09464082098061574, 'eval_f1': 0.1502262443438914, 'eval_accuracy': 0.9359993823824596, 'eval_runtime': 5.7636, 'eval_samples_per_second': 265.633, 'eval_steps_per_second': 33.313, 'epoch': 12.0, 'step': 3240}, {'loss': 0.2318, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': 0.32550758123397827, 'eval_precision': 0.413265306122449, 'eval_recall': 0.09236031927023945, 'eval_f1': 0.15097856477166824, 'eval_accuracy': 0.936076584575002, 'eval_runtime': 5.6932, 'eval_samples_per_second': 268.919, 'eval_steps_per_second': 33.725, 'epoch': 13.0, 'step': 3510}, {'loss': 0.2203, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': 0.307648241519928, 'eval_precision': 0.4827586206896552, 'eval_recall': 0.15963511972633979, 'eval_f1': 0.23993144815766923, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 5.7076, 'eval_samples_per_second': 268.239, 'eval_steps_per_second': 33.639, 'epoch': 14.0, 'step': 3780}, {'loss': 0.2274, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': 0.3069210350513458, 'eval_precision': 0.42318059299191374, 'eval_recall': 0.1790193842645382, 'eval_f1': 0.25160256410256415, 'eval_accuracy': 0.9390488689878792, 'eval_runtime': 5.7089, 'eval_samples_per_second': 268.176, 'eval_steps_per_second': 33.631, 'epoch': 15.0, 'step': 4050}, {'loss': 0.2139, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': 0.31351590156555176, 'eval_precision': 0.43103448275862066, 'eval_recall': 0.17103762827822122, 'eval_f1': 0.24489795918367346, 'eval_accuracy': 0.9391646722766926, 'eval_runtime': 5.696, 'eval_samples_per_second': 268.786, 'eval_steps_per_second': 33.708, 'epoch': 16.0, 'step': 4320}, {'loss': 0.2294, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': 0.3296239674091339, 'eval_precision': 0.3872340425531915, 'eval_recall': 0.20752565564424175, 'eval_f1': 0.2702301410541945, 'eval_accuracy': 0.9410561259939783, 'eval_runtime': 5.7489, 'eval_samples_per_second': 266.31, 'eval_steps_per_second': 33.397, 'epoch': 17.0, 'step': 4590}, {'loss': 0.2329, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': 0.33650240302085876, 'eval_precision': 0.3860759493670886, 'eval_recall': 0.20866590649942987, 'eval_f1': 0.27091043671354553, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 5.6776, 'eval_samples_per_second': 269.656, 'eval_steps_per_second': 33.817, 'epoch': 18.0, 'step': 4860}, {'loss': 0.2322, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': 0.33136481046676636, 'eval_precision': 0.37423312883435583, 'eval_recall': 0.20866590649942987, 'eval_f1': 0.2679355783308931, 'eval_accuracy': 0.9411719292827916, 'eval_runtime': 5.6828, 'eval_samples_per_second': 269.41, 'eval_steps_per_second': 33.786, 'epoch': 19.0, 'step': 5130}, {'loss': 0.2271, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': 0.33729350566864014, 'eval_precision': 0.39215686274509803, 'eval_recall': 0.22805017103762829, 'eval_f1': 0.2883922134102379, 'eval_accuracy': 0.9422913610746545, 'eval_runtime': 5.6979, 'eval_samples_per_second': 268.694, 'eval_steps_per_second': 33.696, 'epoch': 20.0, 'step': 5400}, {'loss': 0.2263, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': 0.3337319493293762, 'eval_precision': 0.39759036144578314, 'eval_recall': 0.2633979475484607, 'eval_f1': 0.3168724279835391, 'eval_accuracy': 0.9431019840963484, 'eval_runtime': 5.7144, 'eval_samples_per_second': 267.917, 'eval_steps_per_second': 33.599, 'epoch': 21.0, 'step': 5670}, {'loss': 0.2124, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': 0.33167558908462524, 'eval_precision': 0.397459165154265, 'eval_recall': 0.24971493728620298, 'eval_f1': 0.3067226890756303, 'eval_accuracy': 0.9426773720373659, 'eval_runtime': 5.7085, 'eval_samples_per_second': 268.195, 'eval_steps_per_second': 33.634, 'epoch': 22.0, 'step': 5940}, {'loss': 0.2146, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': 0.3316224217414856, 'eval_precision': 0.40186915887850466, 'eval_recall': 0.2451539338654504, 'eval_f1': 0.3045325779036827, 'eval_accuracy': 0.9431791862888906, 'eval_runtime': 5.7056, 'eval_samples_per_second': 268.332, 'eval_steps_per_second': 33.651, 'epoch': 23.0, 'step': 6210}, {'loss': 0.2109, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': 0.3323594331741333, 'eval_precision': 0.4059040590405904, 'eval_recall': 0.2508551881413911, 'eval_f1': 0.310077519379845, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 5.6936, 'eval_samples_per_second': 268.897, 'eval_steps_per_second': 33.722, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 2446.401, 'train_samples_per_second': 84.702, 'train_steps_per_second': 2.649, 'total_flos': 2.3711735486578776e+16, 'train_loss': 0.27904789477218817, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9336
  predict_f1                 =     0.1032
  predict_loss               =     0.3102
  predict_precision          =     0.3729
  predict_recall             =     0.0599
  predict_runtime            = 0:00:04.77
  predict_samples_per_second =    266.559
  predict_steps_per_second   =      33.32
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_large_29.json completed. F1: 0.10316529894490035
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_15.json
01191518_tsa-bin_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6856.22 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7249.57 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6992.87 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7015.37 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7070.57 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7173.24 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7344.67 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6417.54 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6855.45 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7458.45 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7071.13 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7105.06 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6944.63 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
01191518_tsa-bin_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2049, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.13815927505493164, 'eval_precision': 0.5146198830409356, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5080831408775981, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 4.671, 'eval_samples_per_second': 327.764, 'eval_steps_per_second': 41.104, 'epoch': 1.0}
{'loss': 0.1245, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.1414378583431244, 'eval_precision': 0.5918367346938775, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.5195137555982087, 'eval_accuracy': 0.9575773951980237, 'eval_runtime': 4.6616, 'eval_samples_per_second': 328.431, 'eval_steps_per_second': 41.188, 'epoch': 2.0}
{'loss': 0.0868, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.1482182890176773, 'eval_precision': 0.5236559139784946, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5390149418926398, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6615, 'eval_samples_per_second': 328.433, 'eval_steps_per_second': 41.188, 'epoch': 3.0}
{'loss': 0.0574, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.17350947856903076, 'eval_precision': 0.49461312438785504, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5321390937829295, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6673, 'eval_samples_per_second': 328.026, 'eval_steps_per_second': 41.137, 'epoch': 4.0}
{'loss': 0.0377, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.19032184779644012, 'eval_precision': 0.4883068288119738, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5364850976361768, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.307, 'eval_steps_per_second': 41.172, 'epoch': 5.0}
{'loss': 0.0251, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.21066896617412567, 'eval_precision': 0.48628192999053926, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5315408479834539, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6587, 'eval_samples_per_second': 328.635, 'eval_steps_per_second': 41.214, 'epoch': 6.0}
{'loss': 0.0173, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.2312827706336975, 'eval_precision': 0.48736462093862815, 'eval_recall': 0.6157354618015963, 'eval_f1': 0.5440806045340051, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6652, 'eval_samples_per_second': 328.172, 'eval_steps_per_second': 41.155, 'epoch': 7.0}
{'loss': 0.0118, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.2521781325340271, 'eval_precision': 0.5083743842364532, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5454545454545455, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.954, 'eval_steps_per_second': 41.128, 'epoch': 8.0}
{'loss': 0.0084, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.278617262840271, 'eval_precision': 0.47623400365630714, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.528665651953323, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 4.6579, 'eval_samples_per_second': 328.69, 'eval_steps_per_second': 41.22, 'epoch': 9.0}
{'loss': 0.0062, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.3149521052837372, 'eval_precision': 0.5491400491400491, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5286812536960377, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.536, 'eval_steps_per_second': 41.201, 'epoch': 10.0}
{'loss': 0.0045, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.31747815012931824, 'eval_precision': 0.5195767195767196, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5389681668496159, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.71, 'eval_steps_per_second': 41.223, 'epoch': 11.0}
{'loss': 0.0042, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.34182146191596985, 'eval_precision': 0.5478971962616822, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5412579342181189, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.369, 'eval_steps_per_second': 41.18, 'epoch': 12.0}
{'loss': 0.0029, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.3634512722492218, 'eval_precision': 0.5394431554524362, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5347901092581944, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.659, 'eval_samples_per_second': 328.614, 'eval_steps_per_second': 41.211, 'epoch': 13.0}
{'loss': 0.002, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.35760191082954407, 'eval_precision': 0.5200845665961945, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5397696105320899, 'eval_accuracy': 0.9539874932448081, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.535, 'eval_steps_per_second': 41.201, 'epoch': 14.0}
{'loss': 0.0022, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.378327876329422, 'eval_precision': 0.533256880733945, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5317324185248714, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.234, 'eval_steps_per_second': 41.163, 'epoch': 15.0}
{'loss': 0.0014, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.38566285371780396, 'eval_precision': 0.5200411099691675, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5470270270270271, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.66, 'eval_samples_per_second': 328.54, 'eval_steps_per_second': 41.202, 'epoch': 16.0}
{'loss': 0.0014, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.40459564328193665, 'eval_precision': 0.5739570164348925, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5443645083932853, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.235, 'eval_steps_per_second': 41.163, 'epoch': 17.0}
{'loss': 0.0013, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.39025959372520447, 'eval_precision': 0.5283018867924528, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5505188421627526, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.06, 'eval_steps_per_second': 41.141, 'epoch': 18.0}
{'loss': 0.0012, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.3988668620586395, 'eval_precision': 0.534054054054054, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5482796892341844, 'eval_accuracy': 0.9543735042075195, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 19.0}
{'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.401056706905365, 'eval_precision': 0.5449500554938956, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5523059617547806, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 4.6653, 'eval_samples_per_second': 328.165, 'eval_steps_per_second': 41.155, 'epoch': 20.0}
{'loss': 0.0007, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.4068601131439209, 'eval_precision': 0.5312169312169313, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5510428100987925, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.737, 'eval_samples_per_second': 323.197, 'eval_steps_per_second': 40.532, 'epoch': 21.0}
{'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.41156503558158875, 'eval_precision': 0.5402792696025779, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5564159292035398, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.483, 'eval_steps_per_second': 41.194, 'epoch': 22.0}
{'loss': 0.0003, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.4233362674713135, 'eval_precision': 0.5377777777777778, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5447383230163195, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.792, 'eval_steps_per_second': 41.233, 'epoch': 23.0}
{'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.42434534430503845, 'eval_precision': 0.5374301675977654, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5428893905191874, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.196, 'eval_steps_per_second': 41.158, 'epoch': 24.0}
{'train_runtime': 2353.311, 'train_samples_per_second': 88.053, 'train_steps_per_second': 5.507, 'train_loss': 0.025151029614340743, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0252
  train_runtime            = 0:39:13.31
  train_samples            =       8634
  train_samples_per_second =     88.053
  train_steps_per_second   =      5.507
[{'loss': 0.2049, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.13815927505493164, 'eval_precision': 0.5146198830409356, 'eval_recall': 0.5017103762827823, 'eval_f1': 0.5080831408775981, 'eval_accuracy': 0.9542190998224349, 'eval_runtime': 4.671, 'eval_samples_per_second': 327.764, 'eval_steps_per_second': 41.104, 'epoch': 1.0, 'step': 540}, {'loss': 0.1245, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.1414378583431244, 'eval_precision': 0.5918367346938775, 'eval_recall': 0.4629418472063854, 'eval_f1': 0.5195137555982087, 'eval_accuracy': 0.9575773951980237, 'eval_runtime': 4.6616, 'eval_samples_per_second': 328.431, 'eval_steps_per_second': 41.188, 'epoch': 2.0, 'step': 1080}, {'loss': 0.0868, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.1482182890176773, 'eval_precision': 0.5236559139784946, 'eval_recall': 0.5553021664766249, 'eval_f1': 0.5390149418926398, 'eval_accuracy': 0.9550683239403999, 'eval_runtime': 4.6615, 'eval_samples_per_second': 328.433, 'eval_steps_per_second': 41.188, 'epoch': 3.0, 'step': 1620}, {'loss': 0.0574, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.17350947856903076, 'eval_precision': 0.49461312438785504, 'eval_recall': 0.5758266818700114, 'eval_f1': 0.5321390937829295, 'eval_accuracy': 0.9534470778970123, 'eval_runtime': 4.6673, 'eval_samples_per_second': 328.026, 'eval_steps_per_second': 41.137, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0377, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.19032184779644012, 'eval_precision': 0.4883068288119738, 'eval_recall': 0.5952109464082098, 'eval_f1': 0.5364850976361768, 'eval_accuracy': 0.9520960395275225, 'eval_runtime': 4.6633, 'eval_samples_per_second': 328.307, 'eval_steps_per_second': 41.172, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0251, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.21066896617412567, 'eval_precision': 0.48628192999053926, 'eval_recall': 0.5860889395667047, 'eval_f1': 0.5315408479834539, 'eval_accuracy': 0.9520188373349803, 'eval_runtime': 4.6587, 'eval_samples_per_second': 328.635, 'eval_steps_per_second': 41.214, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0173, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.2312827706336975, 'eval_precision': 0.48736462093862815, 'eval_recall': 0.6157354618015963, 'eval_f1': 0.5440806045340051, 'eval_accuracy': 0.9514398208909133, 'eval_runtime': 4.6652, 'eval_samples_per_second': 328.172, 'eval_steps_per_second': 41.155, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0118, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.2521781325340271, 'eval_precision': 0.5083743842364532, 'eval_recall': 0.5883694412770809, 'eval_f1': 0.5454545454545455, 'eval_accuracy': 0.9532540724156566, 'eval_runtime': 4.6683, 'eval_samples_per_second': 327.954, 'eval_steps_per_second': 41.128, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0084, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.278617262840271, 'eval_precision': 0.47623400365630714, 'eval_recall': 0.5940706955530216, 'eval_f1': 0.528665651953323, 'eval_accuracy': 0.9522504439126072, 'eval_runtime': 4.6579, 'eval_samples_per_second': 328.69, 'eval_steps_per_second': 41.22, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0062, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3149521052837372, 'eval_precision': 0.5491400491400491, 'eval_recall': 0.5096921322690992, 'eval_f1': 0.5286812536960377, 'eval_accuracy': 0.9549525206515865, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.536, 'eval_steps_per_second': 41.201, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0045, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.31747815012931824, 'eval_precision': 0.5195767195767196, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5389681668496159, 'eval_accuracy': 0.9541032965336216, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.71, 'eval_steps_per_second': 41.223, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0042, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.34182146191596985, 'eval_precision': 0.5478971962616822, 'eval_recall': 0.5347776510832383, 'eval_f1': 0.5412579342181189, 'eval_accuracy': 0.9557631436732803, 'eval_runtime': 4.6624, 'eval_samples_per_second': 328.369, 'eval_steps_per_second': 41.18, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0029, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.3634512722492218, 'eval_precision': 0.5394431554524362, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5347901092581944, 'eval_accuracy': 0.9552613294217556, 'eval_runtime': 4.659, 'eval_samples_per_second': 328.614, 'eval_steps_per_second': 41.211, 'epoch': 13.0, 'step': 7020}, {'loss': 0.002, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.35760191082954407, 'eval_precision': 0.5200845665961945, 'eval_recall': 0.5610034207525656, 'eval_f1': 0.5397696105320899, 'eval_accuracy': 0.9539874932448081, 'eval_runtime': 4.6601, 'eval_samples_per_second': 328.535, 'eval_steps_per_second': 41.201, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0022, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.378327876329422, 'eval_precision': 0.533256880733945, 'eval_recall': 0.5302166476624858, 'eval_f1': 0.5317324185248714, 'eval_accuracy': 0.9546437118814174, 'eval_runtime': 4.6644, 'eval_samples_per_second': 328.234, 'eval_steps_per_second': 41.163, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0014, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.38566285371780396, 'eval_precision': 0.5200411099691675, 'eval_recall': 0.5769669327251995, 'eval_f1': 0.5470270270270271, 'eval_accuracy': 0.9540646954373504, 'eval_runtime': 4.66, 'eval_samples_per_second': 328.54, 'eval_steps_per_second': 41.202, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0014, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.40459564328193665, 'eval_precision': 0.5739570164348925, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5443645083932853, 'eval_accuracy': 0.9561877557322628, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.235, 'eval_steps_per_second': 41.163, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0013, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.39025959372520447, 'eval_precision': 0.5283018867924528, 'eval_recall': 0.5746864310148233, 'eval_f1': 0.5505188421627526, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.6668, 'eval_samples_per_second': 328.06, 'eval_steps_per_second': 41.141, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0012, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.3988668620586395, 'eval_precision': 0.534054054054054, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5482796892341844, 'eval_accuracy': 0.9543735042075195, 'eval_runtime': 4.6643, 'eval_samples_per_second': 328.238, 'eval_steps_per_second': 41.164, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0008, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.401056706905365, 'eval_precision': 0.5449500554938956, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5523059617547806, 'eval_accuracy': 0.9546051107851463, 'eval_runtime': 4.6653, 'eval_samples_per_second': 328.165, 'eval_steps_per_second': 41.155, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0007, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.4068601131439209, 'eval_precision': 0.5312169312169313, 'eval_recall': 0.572405929304447, 'eval_f1': 0.5510428100987925, 'eval_accuracy': 0.9539488921485371, 'eval_runtime': 4.737, 'eval_samples_per_second': 323.197, 'eval_steps_per_second': 40.532, 'epoch': 21.0, 'step': 11340}, {'loss': 0.0004, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.41156503558158875, 'eval_precision': 0.5402792696025779, 'eval_recall': 0.5735461801596351, 'eval_f1': 0.5564159292035398, 'eval_accuracy': 0.9538716899559947, 'eval_runtime': 4.6608, 'eval_samples_per_second': 328.483, 'eval_steps_per_second': 41.194, 'epoch': 22.0, 'step': 11880}, {'loss': 0.0003, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.4233362674713135, 'eval_precision': 0.5377777777777778, 'eval_recall': 0.5518814139110604, 'eval_f1': 0.5447383230163195, 'eval_accuracy': 0.9542963020149772, 'eval_runtime': 4.6564, 'eval_samples_per_second': 328.792, 'eval_steps_per_second': 41.233, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0003, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.42434534430503845, 'eval_precision': 0.5374301675977654, 'eval_recall': 0.548460661345496, 'eval_f1': 0.5428893905191874, 'eval_accuracy': 0.9541418976298927, 'eval_runtime': 4.6649, 'eval_samples_per_second': 328.196, 'eval_steps_per_second': 41.158, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2353.311, 'train_samples_per_second': 88.053, 'train_steps_per_second': 5.507, 'total_flos': 1.9841997686762016e+16, 'train_loss': 0.025151029614340743, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9527
  predict_f1                 =     0.4826
  predict_loss               =      0.148
  predict_precision          =      0.495
  predict_recall             =     0.4707
  predict_runtime            = 0:00:03.91
  predict_samples_per_second =    324.815
  predict_steps_per_second   =     40.602
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NB-BERT_large_15.json completed. F1: 0.4825662482566248
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_28.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_28.json
01191518_tsa-intensity_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6699.92 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7159.84 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6931.86 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6962.90 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7000.75 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7137.25 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7294.61 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6363.79 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6793.07 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7311.31 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 6967.51 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7026.45 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6851.94 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.876, 'eval_steps_per_second': 64.82, 'epoch': 1.0}
{'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9782, 'eval_samples_per_second': 514.065, 'eval_steps_per_second': 64.468, 'epoch': 2.0}
{'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9471, 'eval_samples_per_second': 519.487, 'eval_steps_per_second': 65.148, 'epoch': 3.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9479, 'eval_samples_per_second': 519.353, 'eval_steps_per_second': 65.131, 'epoch': 4.0}
{'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9182, 'eval_samples_per_second': 524.636, 'eval_steps_per_second': 65.794, 'epoch': 5.0}
{'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9582, 'eval_samples_per_second': 517.538, 'eval_steps_per_second': 64.904, 'epoch': 6.0}
{'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9255, 'eval_samples_per_second': 523.336, 'eval_steps_per_second': 65.631, 'epoch': 7.0}
{'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.752, 'eval_steps_per_second': 65.432, 'epoch': 8.0}
{'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9696, 'eval_samples_per_second': 515.559, 'eval_steps_per_second': 64.655, 'epoch': 9.0}
{'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0286, 'eval_samples_per_second': 505.507, 'eval_steps_per_second': 63.395, 'epoch': 10.0}
{'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9254, 'eval_samples_per_second': 523.35, 'eval_steps_per_second': 65.632, 'epoch': 11.0}
{'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9419, 'eval_samples_per_second': 520.405, 'eval_steps_per_second': 65.263, 'epoch': 12.0}
{'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.93, 'eval_samples_per_second': 522.521, 'eval_steps_per_second': 65.528, 'epoch': 13.0}
{'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9511, 'eval_samples_per_second': 518.796, 'eval_steps_per_second': 65.061, 'epoch': 14.0}
{'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9566, 'eval_samples_per_second': 517.822, 'eval_steps_per_second': 64.939, 'epoch': 15.0}
{'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9665, 'eval_samples_per_second': 516.102, 'eval_steps_per_second': 64.723, 'epoch': 16.0}
{'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.957, 'eval_samples_per_second': 517.752, 'eval_steps_per_second': 64.93, 'epoch': 17.0}
{'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9476, 'eval_samples_per_second': 519.399, 'eval_steps_per_second': 65.137, 'epoch': 18.0}
{'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9439, 'eval_samples_per_second': 520.059, 'eval_steps_per_second': 65.22, 'epoch': 19.0}
{'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8929, 'eval_samples_per_second': 529.228, 'eval_steps_per_second': 66.37, 'epoch': 20.0}
{'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.464, 'eval_steps_per_second': 65.396, 'epoch': 21.0}
{'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0161, 'eval_samples_per_second': 507.616, 'eval_steps_per_second': 63.659, 'epoch': 22.0}
{'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9356, 'eval_samples_per_second': 521.535, 'eval_steps_per_second': 65.405, 'epoch': 23.0}
{'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9265, 'eval_samples_per_second': 523.147, 'eval_steps_per_second': 65.607, 'epoch': 24.0}
{'train_runtime': 871.1969, 'train_samples_per_second': 237.852, 'train_steps_per_second': 7.438, 'train_loss': 0.0, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =        0.0
  train_runtime            = 0:14:31.19
  train_samples            =       8634
  train_samples_per_second =    237.852
  train_steps_per_second   =      7.438
[{'loss': 0.0, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 270}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.962, 'eval_samples_per_second': 516.876, 'eval_steps_per_second': 64.82, 'epoch': 1.0, 'step': 270}, {'loss': 0.0, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 540}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9782, 'eval_samples_per_second': 514.065, 'eval_steps_per_second': 64.468, 'epoch': 2.0, 'step': 540}, {'loss': 0.0, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 810}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9471, 'eval_samples_per_second': 519.487, 'eval_steps_per_second': 65.148, 'epoch': 3.0, 'step': 810}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 1080}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9479, 'eval_samples_per_second': 519.353, 'eval_steps_per_second': 65.131, 'epoch': 4.0, 'step': 1080}, {'loss': 0.0, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 1350}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9182, 'eval_samples_per_second': 524.636, 'eval_steps_per_second': 65.794, 'epoch': 5.0, 'step': 1350}, {'loss': 0.0, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 1620}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9582, 'eval_samples_per_second': 517.538, 'eval_steps_per_second': 64.904, 'epoch': 6.0, 'step': 1620}, {'loss': 0.0, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 1890}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9255, 'eval_samples_per_second': 523.336, 'eval_steps_per_second': 65.631, 'epoch': 7.0, 'step': 1890}, {'loss': 0.0, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 2160}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9343, 'eval_samples_per_second': 521.752, 'eval_steps_per_second': 65.432, 'epoch': 8.0, 'step': 2160}, {'loss': 0.0, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 2430}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9696, 'eval_samples_per_second': 515.559, 'eval_steps_per_second': 64.655, 'epoch': 9.0, 'step': 2430}, {'loss': 0.0, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 2700}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0286, 'eval_samples_per_second': 505.507, 'eval_steps_per_second': 63.395, 'epoch': 10.0, 'step': 2700}, {'loss': 0.0, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 2970}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9254, 'eval_samples_per_second': 523.35, 'eval_steps_per_second': 65.632, 'epoch': 11.0, 'step': 2970}, {'loss': 0.0, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 3240}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9419, 'eval_samples_per_second': 520.405, 'eval_steps_per_second': 65.263, 'epoch': 12.0, 'step': 3240}, {'loss': 0.0, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 3510}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.93, 'eval_samples_per_second': 522.521, 'eval_steps_per_second': 65.528, 'epoch': 13.0, 'step': 3510}, {'loss': 0.0, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 3780}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9511, 'eval_samples_per_second': 518.796, 'eval_steps_per_second': 65.061, 'epoch': 14.0, 'step': 3780}, {'loss': 0.0, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 4050}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9566, 'eval_samples_per_second': 517.822, 'eval_steps_per_second': 64.939, 'epoch': 15.0, 'step': 4050}, {'loss': 0.0, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 4320}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9665, 'eval_samples_per_second': 516.102, 'eval_steps_per_second': 64.723, 'epoch': 16.0, 'step': 4320}, {'loss': 0.0, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 4590}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.957, 'eval_samples_per_second': 517.752, 'eval_steps_per_second': 64.93, 'epoch': 17.0, 'step': 4590}, {'loss': 0.0, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 4860}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9476, 'eval_samples_per_second': 519.399, 'eval_steps_per_second': 65.137, 'epoch': 18.0, 'step': 4860}, {'loss': 0.0, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 5130}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9439, 'eval_samples_per_second': 520.059, 'eval_steps_per_second': 65.22, 'epoch': 19.0, 'step': 5130}, {'loss': 0.0, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 5400}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.8929, 'eval_samples_per_second': 529.228, 'eval_steps_per_second': 66.37, 'epoch': 20.0, 'step': 5400}, {'loss': 0.0, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 5670}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.464, 'eval_steps_per_second': 65.396, 'epoch': 21.0, 'step': 5670}, {'loss': 0.0, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 5940}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 3.0161, 'eval_samples_per_second': 507.616, 'eval_steps_per_second': 63.659, 'epoch': 22.0, 'step': 5940}, {'loss': 0.0, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 6210}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9356, 'eval_samples_per_second': 521.535, 'eval_steps_per_second': 65.405, 'epoch': 23.0, 'step': 6210}, {'loss': 0.0, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 6480}, {'eval_loss': nan, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9265, 'eval_samples_per_second': 523.147, 'eval_steps_per_second': 65.607, 'epoch': 24.0, 'step': 6480}, {'train_runtime': 871.1969, 'train_samples_per_second': 237.852, 'train_steps_per_second': 7.438, 'total_flos': 6697297123666968.0, 'train_loss': 0.0, 'epoch': 24.0, 'step': 6480}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =        nan
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    514.233
  predict_steps_per_second   =     64.279
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_base_28.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_15.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_15.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6948.64 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7318.26 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7059.97 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7137.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7179.01 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7306.75 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7452.30 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6491.63 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6949.31 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7529.51 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7143.76 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7166.63 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6988.14 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NB-BERT_large/checkpoint-540 already exists and is non-empty.Saving will proceed but saved results may be invalid.
01191518_tsa-intensity_NB-BERT_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.2983, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0}
{'eval_loss': 0.20553052425384521, 'eval_precision': 0.2804718217562254, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2609756097560975, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6804, 'eval_samples_per_second': 327.11, 'eval_steps_per_second': 41.022, 'epoch': 1.0}
{'loss': 0.1887, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0}
{'eval_loss': 0.20009024441242218, 'eval_precision': 0.3053016453382084, 'eval_recall': 0.1904218928164196, 'eval_f1': 0.23455056179775283, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.242, 'eval_steps_per_second': 41.164, 'epoch': 2.0}
{'loss': 0.1443, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0}
{'eval_loss': 0.20398321747779846, 'eval_precision': 0.27192118226600986, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2917547568710359, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 4.6562, 'eval_samples_per_second': 328.81, 'eval_steps_per_second': 41.235, 'epoch': 3.0}
{'loss': 0.1052, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0}
{'eval_loss': 0.22504210472106934, 'eval_precision': 0.2947052947052947, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3141640042598509, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6582, 'eval_samples_per_second': 328.666, 'eval_steps_per_second': 41.217, 'epoch': 4.0}
{'loss': 0.0767, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0}
{'eval_loss': 0.25409746170043945, 'eval_precision': 0.28079242032730406, 'eval_recall': 0.3717217787913341, 'eval_f1': 0.3199214916584887, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.112, 'eval_steps_per_second': 41.273, 'epoch': 5.0}
{'loss': 0.0553, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0}
{'eval_loss': 0.2712973356246948, 'eval_precision': 0.2954971857410882, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3242408646423057, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.472, 'eval_steps_per_second': 41.193, 'epoch': 6.0}
{'loss': 0.0411, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0}
{'eval_loss': 0.31076306104660034, 'eval_precision': 0.3225806451612903, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.337323177366703, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 4.6603, 'eval_samples_per_second': 328.517, 'eval_steps_per_second': 41.199, 'epoch': 7.0}
{'loss': 0.0306, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0}
{'eval_loss': 0.3279170095920563, 'eval_precision': 0.3224155578300921, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.33980582524271846, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6602, 'eval_samples_per_second': 328.529, 'eval_steps_per_second': 41.2, 'epoch': 8.0}
{'loss': 0.0219, 'learning_rate': 6.25e-06, 'epoch': 9.0}
{'eval_loss': 0.3569074273109436, 'eval_precision': 0.2932187201528176, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3191268191268191, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.713, 'eval_steps_per_second': 41.223, 'epoch': 9.0}
{'loss': 0.0155, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0}
{'eval_loss': 0.3651246130466461, 'eval_precision': 0.3186022610483042, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.33513513513513515, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.758, 'eval_steps_per_second': 41.229, 'epoch': 10.0}
{'loss': 0.0123, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0}
{'eval_loss': 0.40213245153427124, 'eval_precision': 0.29038112522686027, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.3233956543708944, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.6487, 'eval_samples_per_second': 329.338, 'eval_steps_per_second': 41.302, 'epoch': 11.0}
{'loss': 0.0094, 'learning_rate': 5e-06, 'epoch': 12.0}
{'eval_loss': 0.42540085315704346, 'eval_precision': 0.3268186753528773, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3348164627363737, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.163, 'eval_steps_per_second': 41.28, 'epoch': 12.0}
{'loss': 0.0076, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0}
{'eval_loss': 0.43383365869522095, 'eval_precision': 0.30924548352816156, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3201320132013202, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6618, 'eval_samples_per_second': 328.411, 'eval_steps_per_second': 41.185, 'epoch': 13.0}
{'loss': 0.0056, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0}
{'eval_loss': 0.4462151825428009, 'eval_precision': 0.3323045267489712, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.3493780421849649, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 4.658, 'eval_samples_per_second': 328.682, 'eval_steps_per_second': 41.219, 'epoch': 14.0}
{'loss': 0.0045, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0}
{'eval_loss': 0.4775524437427521, 'eval_precision': 0.3357664233576642, 'eval_recall': 0.3671607753705815, 'eval_f1': 0.35076252723311546, 'eval_accuracy': 0.9413263336678762, 'eval_runtime': 4.6496, 'eval_samples_per_second': 329.279, 'eval_steps_per_second': 41.294, 'epoch': 15.0}
{'loss': 0.0031, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0}
{'eval_loss': 0.48547470569610596, 'eval_precision': 0.31473684210526315, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3273125342090859, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6462, 'eval_samples_per_second': 329.517, 'eval_steps_per_second': 41.324, 'epoch': 16.0}
{'loss': 0.0029, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0}
{'eval_loss': 0.49590447545051575, 'eval_precision': 0.3216132368148914, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3373101952277657, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.6393, 'eval_samples_per_second': 330.004, 'eval_steps_per_second': 41.385, 'epoch': 17.0}
{'loss': 0.0025, 'learning_rate': 2.5e-06, 'epoch': 18.0}
{'eval_loss': 0.4975694417953491, 'eval_precision': 0.3237791932059448, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3353490929081913, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6508, 'eval_samples_per_second': 329.191, 'eval_steps_per_second': 41.283, 'epoch': 18.0}
{'loss': 0.0017, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0}
{'eval_loss': 0.5096769332885742, 'eval_precision': 0.32077393075356414, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3388918773534158, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.261, 'eval_steps_per_second': 41.292, 'epoch': 19.0}
{'loss': 0.0015, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0}
{'eval_loss': 0.5105122327804565, 'eval_precision': 0.333694474539545, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3422222222222222, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.614, 'eval_steps_per_second': 41.336, 'epoch': 20.0}
{'loss': 0.0012, 'learning_rate': 1.25e-06, 'epoch': 21.0}
{'eval_loss': 0.5209368467330933, 'eval_precision': 0.31636726546906185, 'eval_recall': 0.3614595210946408, 'eval_f1': 0.3374135178286322, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.7163, 'eval_samples_per_second': 324.622, 'eval_steps_per_second': 40.71, 'epoch': 21.0}
{'loss': 0.001, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0}
{'eval_loss': 0.5294426083564758, 'eval_precision': 0.3084677419354839, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3274478330658106, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.906, 'eval_steps_per_second': 41.247, 'epoch': 22.0}
{'loss': 0.001, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0}
{'eval_loss': 0.5277125835418701, 'eval_precision': 0.3151515151515151, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.3342260310658811, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 4.6594, 'eval_samples_per_second': 328.587, 'eval_steps_per_second': 41.207, 'epoch': 23.0}
{'loss': 0.0007, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.5252576470375061, 'eval_precision': 0.3176593521421108, 'eval_recall': 0.346636259977195, 'eval_f1': 0.33151581243184297, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.717, 'eval_steps_per_second': 41.349, 'epoch': 24.0}
{'train_runtime': 2341.4606, 'train_samples_per_second': 88.499, 'train_steps_per_second': 5.535, 'train_loss': 0.043029413726410747, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =      0.043
  train_runtime            = 0:39:01.46
  train_samples            =       8634
  train_samples_per_second =     88.499
  train_steps_per_second   =      5.535
[{'loss': 0.2983, 'learning_rate': 9.583333333333335e-06, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.20553052425384521, 'eval_precision': 0.2804718217562254, 'eval_recall': 0.24401368301026224, 'eval_f1': 0.2609756097560975, 'eval_accuracy': 0.9405543117424535, 'eval_runtime': 4.6804, 'eval_samples_per_second': 327.11, 'eval_steps_per_second': 41.022, 'epoch': 1.0, 'step': 540}, {'loss': 0.1887, 'learning_rate': 9.166666666666666e-06, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.20009024441242218, 'eval_precision': 0.3053016453382084, 'eval_recall': 0.1904218928164196, 'eval_f1': 0.23455056179775283, 'eval_accuracy': 0.9433721917702462, 'eval_runtime': 4.6642, 'eval_samples_per_second': 328.242, 'eval_steps_per_second': 41.164, 'epoch': 2.0, 'step': 1080}, {'loss': 0.1443, 'learning_rate': 8.750000000000001e-06, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.20398321747779846, 'eval_precision': 0.27192118226600986, 'eval_recall': 0.314709236031927, 'eval_f1': 0.2917547568710359, 'eval_accuracy': 0.93839265035127, 'eval_runtime': 4.6562, 'eval_samples_per_second': 328.81, 'eval_steps_per_second': 41.235, 'epoch': 3.0, 'step': 1620}, {'loss': 0.1052, 'learning_rate': 8.333333333333334e-06, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.22504210472106934, 'eval_precision': 0.2947052947052947, 'eval_recall': 0.3363740022805017, 'eval_f1': 0.3141640042598509, 'eval_accuracy': 0.9396278854319463, 'eval_runtime': 4.6582, 'eval_samples_per_second': 328.666, 'eval_steps_per_second': 41.217, 'epoch': 4.0, 'step': 2160}, {'loss': 0.0767, 'learning_rate': 7.916666666666667e-06, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.25409746170043945, 'eval_precision': 0.28079242032730406, 'eval_recall': 0.3717217787913341, 'eval_f1': 0.3199214916584887, 'eval_accuracy': 0.9360379834787308, 'eval_runtime': 4.6519, 'eval_samples_per_second': 329.112, 'eval_steps_per_second': 41.273, 'epoch': 5.0, 'step': 2700}, {'loss': 0.0553, 'learning_rate': 7.500000000000001e-06, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.2712973356246948, 'eval_precision': 0.2954971857410882, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3242408646423057, 'eval_accuracy': 0.9385856558326257, 'eval_runtime': 4.661, 'eval_samples_per_second': 328.472, 'eval_steps_per_second': 41.193, 'epoch': 6.0, 'step': 3240}, {'loss': 0.0411, 'learning_rate': 7.083333333333335e-06, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.31076306104660034, 'eval_precision': 0.3225806451612903, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.337323177366703, 'eval_accuracy': 0.9406701150312669, 'eval_runtime': 4.6603, 'eval_samples_per_second': 328.517, 'eval_steps_per_second': 41.199, 'epoch': 7.0, 'step': 3780}, {'loss': 0.0306, 'learning_rate': 6.666666666666667e-06, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.3279170095920563, 'eval_precision': 0.3224155578300921, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.33980582524271846, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6602, 'eval_samples_per_second': 328.529, 'eval_steps_per_second': 41.2, 'epoch': 8.0, 'step': 4320}, {'loss': 0.0219, 'learning_rate': 6.25e-06, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.3569074273109436, 'eval_precision': 0.2932187201528176, 'eval_recall': 0.3500570125427594, 'eval_f1': 0.3191268191268191, 'eval_accuracy': 0.9402069018760133, 'eval_runtime': 4.6576, 'eval_samples_per_second': 328.713, 'eval_steps_per_second': 41.223, 'epoch': 9.0, 'step': 4860}, {'loss': 0.0155, 'learning_rate': 5.833333333333334e-06, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.3651246130466461, 'eval_precision': 0.3186022610483042, 'eval_recall': 0.35347776510832385, 'eval_f1': 0.33513513513513515, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6569, 'eval_samples_per_second': 328.758, 'eval_steps_per_second': 41.229, 'epoch': 10.0, 'step': 5400}, {'loss': 0.0123, 'learning_rate': 5.416666666666667e-06, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.40213245153427124, 'eval_precision': 0.29038112522686027, 'eval_recall': 0.36488027366020526, 'eval_f1': 0.3233956543708944, 'eval_accuracy': 0.9363467922488998, 'eval_runtime': 4.6487, 'eval_samples_per_second': 329.338, 'eval_steps_per_second': 41.302, 'epoch': 11.0, 'step': 5940}, {'loss': 0.0094, 'learning_rate': 5e-06, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.42540085315704346, 'eval_precision': 0.3268186753528773, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3348164627363737, 'eval_accuracy': 0.9416351424380452, 'eval_runtime': 4.6512, 'eval_samples_per_second': 329.163, 'eval_steps_per_second': 41.28, 'epoch': 12.0, 'step': 6480}, {'loss': 0.0076, 'learning_rate': 4.583333333333333e-06, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.43383365869522095, 'eval_precision': 0.30924548352816156, 'eval_recall': 0.33181299885974913, 'eval_f1': 0.3201320132013202, 'eval_accuracy': 0.9406315139349958, 'eval_runtime': 4.6618, 'eval_samples_per_second': 328.411, 'eval_steps_per_second': 41.185, 'epoch': 13.0, 'step': 7020}, {'loss': 0.0056, 'learning_rate': 4.166666666666667e-06, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.4462151825428009, 'eval_precision': 0.3323045267489712, 'eval_recall': 0.36830102622576966, 'eval_f1': 0.3493780421849649, 'eval_accuracy': 0.9407859183200803, 'eval_runtime': 4.658, 'eval_samples_per_second': 328.682, 'eval_steps_per_second': 41.219, 'epoch': 14.0, 'step': 7560}, {'loss': 0.0045, 'learning_rate': 3.7500000000000005e-06, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.4775524437427521, 'eval_precision': 0.3357664233576642, 'eval_recall': 0.3671607753705815, 'eval_f1': 0.35076252723311546, 'eval_accuracy': 0.9413263336678762, 'eval_runtime': 4.6496, 'eval_samples_per_second': 329.279, 'eval_steps_per_second': 41.294, 'epoch': 15.0, 'step': 8100}, {'loss': 0.0031, 'learning_rate': 3.3333333333333333e-06, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.48547470569610596, 'eval_precision': 0.31473684210526315, 'eval_recall': 0.3409350057012543, 'eval_f1': 0.3273125342090859, 'eval_accuracy': 0.9412105303790628, 'eval_runtime': 4.6462, 'eval_samples_per_second': 329.517, 'eval_steps_per_second': 41.324, 'epoch': 16.0, 'step': 8640}, {'loss': 0.0029, 'learning_rate': 2.916666666666667e-06, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.49590447545051575, 'eval_precision': 0.3216132368148914, 'eval_recall': 0.35461801596351195, 'eval_f1': 0.3373101952277657, 'eval_accuracy': 0.9410175248977071, 'eval_runtime': 4.6393, 'eval_samples_per_second': 330.004, 'eval_steps_per_second': 41.385, 'epoch': 17.0, 'step': 9180}, {'loss': 0.0025, 'learning_rate': 2.5e-06, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.4975694417953491, 'eval_precision': 0.3237791932059448, 'eval_recall': 0.34777651083238315, 'eval_f1': 0.3353490929081913, 'eval_accuracy': 0.9420211534007565, 'eval_runtime': 4.6508, 'eval_samples_per_second': 329.191, 'eval_steps_per_second': 41.283, 'epoch': 18.0, 'step': 9720}, {'loss': 0.0017, 'learning_rate': 2.0833333333333334e-06, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.5096769332885742, 'eval_precision': 0.32077393075356414, 'eval_recall': 0.35917901938426455, 'eval_f1': 0.3388918773534158, 'eval_accuracy': 0.9404385084536401, 'eval_runtime': 4.6498, 'eval_samples_per_second': 329.261, 'eval_steps_per_second': 41.292, 'epoch': 19.0, 'step': 10260}, {'loss': 0.0015, 'learning_rate': 1.6666666666666667e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.5105122327804565, 'eval_precision': 0.333694474539545, 'eval_recall': 0.35119726339794755, 'eval_f1': 0.3422222222222222, 'eval_accuracy': 0.942445765459739, 'eval_runtime': 4.6448, 'eval_samples_per_second': 329.614, 'eval_steps_per_second': 41.336, 'epoch': 20.0, 'step': 10800}, {'loss': 0.0012, 'learning_rate': 1.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.5209368467330933, 'eval_precision': 0.31636726546906185, 'eval_recall': 0.3614595210946408, 'eval_f1': 0.3374135178286322, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.7163, 'eval_samples_per_second': 324.622, 'eval_steps_per_second': 40.71, 'epoch': 21.0, 'step': 11340}, {'loss': 0.001, 'learning_rate': 8.333333333333333e-07, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.5294426083564758, 'eval_precision': 0.3084677419354839, 'eval_recall': 0.34891676168757124, 'eval_f1': 0.3274478330658106, 'eval_accuracy': 0.9403227051648266, 'eval_runtime': 4.6548, 'eval_samples_per_second': 328.906, 'eval_steps_per_second': 41.247, 'epoch': 22.0, 'step': 11880}, {'loss': 0.001, 'learning_rate': 4.1666666666666667e-07, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.5277125835418701, 'eval_precision': 0.3151515151515151, 'eval_recall': 0.3557582668187001, 'eval_f1': 0.3342260310658811, 'eval_accuracy': 0.9407473172238091, 'eval_runtime': 4.6594, 'eval_samples_per_second': 328.587, 'eval_steps_per_second': 41.207, 'epoch': 23.0, 'step': 12420}, {'loss': 0.0007, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.5252576470375061, 'eval_precision': 0.3176593521421108, 'eval_recall': 0.346636259977195, 'eval_f1': 0.33151581243184297, 'eval_accuracy': 0.9414421369566895, 'eval_runtime': 4.6434, 'eval_samples_per_second': 329.717, 'eval_steps_per_second': 41.349, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2341.4606, 'train_samples_per_second': 88.499, 'train_steps_per_second': 5.535, 'total_flos': 1.9842535878870816e+16, 'train_loss': 0.043029413726410747, 'epoch': 24.0, 'step': 12960}]

Evaluation, NbAiLab/nb-bert-large
***** predict metrics *****
  predict_accuracy           =     0.9437
  predict_f1                 =     0.2523
  predict_loss               =     0.2076
  predict_precision          =     0.3234
  predict_recall             =     0.2068
  predict_runtime            = 0:00:03.90
  predict_samples_per_second =    325.893
  predict_steps_per_second   =     40.737
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_15.json completed. F1: 0.25228215767634854
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_40.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_40.json
01191518_tsa-bin_NorBERT_3_base Our label2id: {'O': 0, 'B-targ-Negative': 1, 'I-targ-Negative': 2, 'B-targ-Positive': 3, 'I-targ-Positive': 4}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6835.81 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7182.68 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7036.47 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7071.17 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7125.51 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7254.00 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7420.97 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6463.39 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6904.00 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7461.58 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7093.93 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7115.31 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6947.14 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-bin_NorBERT_3_base Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.806, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.32413649559020996, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9714, 'eval_samples_per_second': 515.251, 'eval_steps_per_second': 64.617, 'epoch': 1.0}
{'loss': 0.2449, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0}
{'eval_loss': 0.20152314007282257, 'eval_precision': 0.1953232462173315, 'eval_recall': 0.1619156214367161, 'eval_f1': 0.17705735660847882, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 2.9839, 'eval_samples_per_second': 513.089, 'eval_steps_per_second': 64.346, 'epoch': 2.0}
{'loss': 0.1894, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0}
{'eval_loss': 0.1880926489830017, 'eval_precision': 0.4387755102040816, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3851567498400512, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 3.0829, 'eval_samples_per_second': 496.611, 'eval_steps_per_second': 62.279, 'epoch': 3.0}
{'loss': 0.1326, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.17757995426654816, 'eval_precision': 0.4387755102040816, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.44002274019329163, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.012, 'eval_steps_per_second': 64.837, 'epoch': 4.0}
{'loss': 0.0952, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.18219731748104095, 'eval_precision': 0.4441887226697353, 'eval_recall': 0.44013683010262256, 'eval_f1': 0.44215349369988544, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.9298, 'eval_samples_per_second': 522.564, 'eval_steps_per_second': 65.534, 'epoch': 5.0}
{'loss': 0.0669, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0}
{'eval_loss': 0.19355185329914093, 'eval_precision': 0.4726890756302521, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.4920721705850191, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.9786, 'eval_samples_per_second': 514.008, 'eval_steps_per_second': 64.461, 'epoch': 6.0}
{'loss': 0.0476, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.20630986988544464, 'eval_precision': 0.47775628626692457, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5170068027210885, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.9384, 'eval_samples_per_second': 521.029, 'eval_steps_per_second': 65.341, 'epoch': 7.0}
{'loss': 0.0338, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0}
{'eval_loss': 0.21901781857013702, 'eval_precision': 0.4967105263157895, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5064281721632198, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.9711, 'eval_samples_per_second': 515.304, 'eval_steps_per_second': 64.623, 'epoch': 8.0}
{'loss': 0.0247, 'learning_rate': 1.25e-05, 'epoch': 9.0}
{'eval_loss': 0.22751957178115845, 'eval_precision': 0.4861386138613861, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5204027556968732, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 2.9464, 'eval_samples_per_second': 519.623, 'eval_steps_per_second': 65.165, 'epoch': 9.0}
{'loss': 0.0184, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0}
{'eval_loss': 0.23778949677944183, 'eval_precision': 0.490216271884655, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5151515151515152, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 3.0335, 'eval_samples_per_second': 504.692, 'eval_steps_per_second': 63.293, 'epoch': 10.0}
{'loss': 0.0141, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0}
{'eval_loss': 0.25181350111961365, 'eval_precision': 0.4968944099378882, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5208898534997287, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.9446, 'eval_samples_per_second': 519.932, 'eval_steps_per_second': 65.204, 'epoch': 11.0}
{'loss': 0.0117, 'learning_rate': 1e-05, 'epoch': 12.0}
{'eval_loss': 0.2599886655807495, 'eval_precision': 0.48911917098445595, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.512486427795874, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 2.9647, 'eval_samples_per_second': 516.413, 'eval_steps_per_second': 64.762, 'epoch': 12.0}
{'loss': 0.0091, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0}
{'eval_loss': 0.2583851218223572, 'eval_precision': 0.49377593360995853, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5171102661596959, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.9483, 'eval_samples_per_second': 519.274, 'eval_steps_per_second': 65.121, 'epoch': 13.0}
{'loss': 0.0077, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0}
{'eval_loss': 0.27018845081329346, 'eval_precision': 0.5051194539249146, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5056947608200455, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.896, 'eval_steps_per_second': 64.948, 'epoch': 14.0}
{'loss': 0.0066, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0}
{'eval_loss': 0.27167513966560364, 'eval_precision': 0.4935897435897436, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5096525096525097, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.9629, 'eval_samples_per_second': 516.726, 'eval_steps_per_second': 64.802, 'epoch': 15.0}
{'loss': 0.0055, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0}
{'eval_loss': 0.2745054066181183, 'eval_precision': 0.49266247379454925, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5133806663025668, 'eval_accuracy': 0.9507064000617618, 'eval_runtime': 2.9758, 'eval_samples_per_second': 514.488, 'eval_steps_per_second': 64.521, 'epoch': 16.0}
{'loss': 0.0049, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0}
{'eval_loss': 0.27485892176628113, 'eval_precision': 0.4988962472406181, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.50701065619742, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.9697, 'eval_samples_per_second': 515.545, 'eval_steps_per_second': 64.654, 'epoch': 17.0}
{'loss': 0.0048, 'learning_rate': 5e-06, 'epoch': 18.0}
{'eval_loss': 0.2750405967235565, 'eval_precision': 0.4978021978021978, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5069949636261892, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.9566, 'eval_samples_per_second': 517.832, 'eval_steps_per_second': 64.94, 'epoch': 18.0}
{'loss': 0.0044, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0}
{'eval_loss': 0.2804894745349884, 'eval_precision': 0.4978723404255319, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.515134837644469, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.9606, 'eval_samples_per_second': 517.125, 'eval_steps_per_second': 64.852, 'epoch': 19.0}
{'loss': 0.0038, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0}
{'eval_loss': 0.281669557094574, 'eval_precision': 0.5138248847926268, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5111747851002867, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 2.9514, 'eval_samples_per_second': 518.743, 'eval_steps_per_second': 65.055, 'epoch': 20.0}
{'loss': 0.0037, 'learning_rate': 2.5e-06, 'epoch': 21.0}
{'eval_loss': 0.2814384996891022, 'eval_precision': 0.5016685205784205, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.507882882882883, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9617, 'eval_samples_per_second': 516.925, 'eval_steps_per_second': 64.827, 'epoch': 21.0}
{'loss': 0.0034, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.2846806049346924, 'eval_precision': 0.5016611295681063, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5089887640449438, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.453, 'eval_steps_per_second': 65.395, 'epoch': 22.0}
{'loss': 0.0031, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0}
{'eval_loss': 0.28527942299842834, 'eval_precision': 0.5106861642294713, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5141562853907135, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.0473, 'eval_samples_per_second': 502.404, 'eval_steps_per_second': 63.006, 'epoch': 23.0}
{'loss': 0.0031, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.28563249111175537, 'eval_precision': 0.5078125, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5132543711223915, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9387, 'eval_samples_per_second': 520.973, 'eval_steps_per_second': 65.334, 'epoch': 24.0}
{'train_runtime': 839.3653, 'train_samples_per_second': 246.872, 'train_steps_per_second': 3.86, 'train_loss': 0.0727188670248897, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.0727
  train_runtime            = 0:13:59.36
  train_samples            =       8634
  train_samples_per_second =    246.872
  train_steps_per_second   =       3.86
[{'loss': 0.806, 'learning_rate': 1.916666666666667e-05, 'epoch': 1.0, 'step': 135}, {'eval_loss': 0.32413649559020996, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 2.9714, 'eval_samples_per_second': 515.251, 'eval_steps_per_second': 64.617, 'epoch': 1.0, 'step': 135}, {'loss': 0.2449, 'learning_rate': 1.8333333333333333e-05, 'epoch': 2.0, 'step': 270}, {'eval_loss': 0.20152314007282257, 'eval_precision': 0.1953232462173315, 'eval_recall': 0.1619156214367161, 'eval_f1': 0.17705735660847882, 'eval_accuracy': 0.9392418744692349, 'eval_runtime': 2.9839, 'eval_samples_per_second': 513.089, 'eval_steps_per_second': 64.346, 'epoch': 2.0, 'step': 270}, {'loss': 0.1894, 'learning_rate': 1.7500000000000002e-05, 'epoch': 3.0, 'step': 405}, {'eval_loss': 0.1880926489830017, 'eval_precision': 0.4387755102040816, 'eval_recall': 0.34321550741163054, 'eval_f1': 0.3851567498400512, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 3.0829, 'eval_samples_per_second': 496.611, 'eval_steps_per_second': 62.279, 'epoch': 3.0, 'step': 405}, {'loss': 0.1326, 'learning_rate': 1.6666666666666667e-05, 'epoch': 4.0, 'step': 540}, {'eval_loss': 0.17757995426654816, 'eval_precision': 0.4387755102040816, 'eval_recall': 0.4412770809578107, 'eval_f1': 0.44002274019329163, 'eval_accuracy': 0.9457654597390566, 'eval_runtime': 2.9612, 'eval_samples_per_second': 517.012, 'eval_steps_per_second': 64.837, 'epoch': 4.0, 'step': 540}, {'loss': 0.0952, 'learning_rate': 1.5833333333333333e-05, 'epoch': 5.0, 'step': 675}, {'eval_loss': 0.18219731748104095, 'eval_precision': 0.4441887226697353, 'eval_recall': 0.44013683010262256, 'eval_f1': 0.44215349369988544, 'eval_accuracy': 0.9482359299004092, 'eval_runtime': 2.9298, 'eval_samples_per_second': 522.564, 'eval_steps_per_second': 65.534, 'epoch': 5.0, 'step': 675}, {'loss': 0.0669, 'learning_rate': 1.5000000000000002e-05, 'epoch': 6.0, 'step': 810}, {'eval_loss': 0.19355185329914093, 'eval_precision': 0.4726890756302521, 'eval_recall': 0.5131128848346637, 'eval_f1': 0.4920721705850191, 'eval_accuracy': 0.9480815255153247, 'eval_runtime': 2.9786, 'eval_samples_per_second': 514.008, 'eval_steps_per_second': 64.461, 'epoch': 6.0, 'step': 810}, {'loss': 0.0476, 'learning_rate': 1.416666666666667e-05, 'epoch': 7.0, 'step': 945}, {'eval_loss': 0.20630986988544464, 'eval_precision': 0.47775628626692457, 'eval_recall': 0.5632839224629419, 'eval_f1': 0.5170068027210885, 'eval_accuracy': 0.9485447386705782, 'eval_runtime': 2.9384, 'eval_samples_per_second': 521.029, 'eval_steps_per_second': 65.341, 'epoch': 7.0, 'step': 945}, {'loss': 0.0338, 'learning_rate': 1.3333333333333333e-05, 'epoch': 8.0, 'step': 1080}, {'eval_loss': 0.21901781857013702, 'eval_precision': 0.4967105263157895, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5064281721632198, 'eval_accuracy': 0.9506291978692195, 'eval_runtime': 2.9711, 'eval_samples_per_second': 515.304, 'eval_steps_per_second': 64.623, 'epoch': 8.0, 'step': 1080}, {'loss': 0.0247, 'learning_rate': 1.25e-05, 'epoch': 9.0, 'step': 1215}, {'eval_loss': 0.22751957178115845, 'eval_precision': 0.4861386138613861, 'eval_recall': 0.5598631698973774, 'eval_f1': 0.5204027556968732, 'eval_accuracy': 0.9498185748475256, 'eval_runtime': 2.9464, 'eval_samples_per_second': 519.623, 'eval_steps_per_second': 65.165, 'epoch': 9.0, 'step': 1215}, {'loss': 0.0184, 'learning_rate': 1.1666666666666668e-05, 'epoch': 10.0, 'step': 1350}, {'eval_loss': 0.23778949677944183, 'eval_precision': 0.490216271884655, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5151515151515152, 'eval_accuracy': 0.9497027715587123, 'eval_runtime': 3.0335, 'eval_samples_per_second': 504.692, 'eval_steps_per_second': 63.293, 'epoch': 10.0, 'step': 1350}, {'loss': 0.0141, 'learning_rate': 1.0833333333333334e-05, 'epoch': 11.0, 'step': 1485}, {'eval_loss': 0.25181350111961365, 'eval_precision': 0.4968944099378882, 'eval_recall': 0.5473204104903079, 'eval_f1': 0.5208898534997287, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.9446, 'eval_samples_per_second': 519.932, 'eval_steps_per_second': 65.204, 'epoch': 11.0, 'step': 1485}, {'loss': 0.0117, 'learning_rate': 1e-05, 'epoch': 12.0, 'step': 1620}, {'eval_loss': 0.2599886655807495, 'eval_precision': 0.48911917098445595, 'eval_recall': 0.5381984036488028, 'eval_f1': 0.512486427795874, 'eval_accuracy': 0.9493553616922721, 'eval_runtime': 2.9647, 'eval_samples_per_second': 516.413, 'eval_steps_per_second': 64.762, 'epoch': 12.0, 'step': 1620}, {'loss': 0.0091, 'learning_rate': 9.166666666666666e-06, 'epoch': 13.0, 'step': 1755}, {'eval_loss': 0.2583851218223572, 'eval_precision': 0.49377593360995853, 'eval_recall': 0.5427594070695553, 'eval_f1': 0.5171102661596959, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.9483, 'eval_samples_per_second': 519.274, 'eval_steps_per_second': 65.121, 'epoch': 13.0, 'step': 1755}, {'loss': 0.0077, 'learning_rate': 8.333333333333334e-06, 'epoch': 14.0, 'step': 1890}, {'eval_loss': 0.27018845081329346, 'eval_precision': 0.5051194539249146, 'eval_recall': 0.5062713797035348, 'eval_f1': 0.5056947608200455, 'eval_accuracy': 0.950474793484135, 'eval_runtime': 2.9562, 'eval_samples_per_second': 517.896, 'eval_steps_per_second': 64.948, 'epoch': 14.0, 'step': 1890}, {'loss': 0.0066, 'learning_rate': 7.500000000000001e-06, 'epoch': 15.0, 'step': 2025}, {'eval_loss': 0.27167513966560364, 'eval_precision': 0.4935897435897436, 'eval_recall': 0.5267958950969214, 'eval_f1': 0.5096525096525097, 'eval_accuracy': 0.9501659847139658, 'eval_runtime': 2.9629, 'eval_samples_per_second': 516.726, 'eval_steps_per_second': 64.802, 'epoch': 15.0, 'step': 2025}, {'loss': 0.0055, 'learning_rate': 6.666666666666667e-06, 'epoch': 16.0, 'step': 2160}, {'eval_loss': 0.2745054066181183, 'eval_precision': 0.49266247379454925, 'eval_recall': 0.5359179019384265, 'eval_f1': 0.5133806663025668, 'eval_accuracy': 0.9507064000617618, 'eval_runtime': 2.9758, 'eval_samples_per_second': 514.488, 'eval_steps_per_second': 64.521, 'epoch': 16.0, 'step': 2160}, {'loss': 0.0049, 'learning_rate': 5.833333333333334e-06, 'epoch': 17.0, 'step': 2295}, {'eval_loss': 0.27485892176628113, 'eval_precision': 0.4988962472406181, 'eval_recall': 0.5153933865450399, 'eval_f1': 0.50701065619742, 'eval_accuracy': 0.9506677989654906, 'eval_runtime': 2.9697, 'eval_samples_per_second': 515.545, 'eval_steps_per_second': 64.654, 'epoch': 17.0, 'step': 2295}, {'loss': 0.0048, 'learning_rate': 5e-06, 'epoch': 18.0, 'step': 2430}, {'eval_loss': 0.2750405967235565, 'eval_precision': 0.4978021978021978, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5069949636261892, 'eval_accuracy': 0.9500501814251525, 'eval_runtime': 2.9566, 'eval_samples_per_second': 517.832, 'eval_steps_per_second': 64.94, 'epoch': 18.0, 'step': 2430}, {'loss': 0.0044, 'learning_rate': 4.166666666666667e-06, 'epoch': 19.0, 'step': 2565}, {'eval_loss': 0.2804894745349884, 'eval_precision': 0.4978723404255319, 'eval_recall': 0.5336374002280502, 'eval_f1': 0.515134837644469, 'eval_accuracy': 0.950204585810237, 'eval_runtime': 2.9606, 'eval_samples_per_second': 517.125, 'eval_steps_per_second': 64.852, 'epoch': 19.0, 'step': 2565}, {'loss': 0.0038, 'learning_rate': 3.3333333333333333e-06, 'epoch': 20.0, 'step': 2700}, {'eval_loss': 0.281669557094574, 'eval_precision': 0.5138248847926268, 'eval_recall': 0.508551881413911, 'eval_f1': 0.5111747851002867, 'eval_accuracy': 0.951053809928202, 'eval_runtime': 2.9514, 'eval_samples_per_second': 518.743, 'eval_steps_per_second': 65.055, 'epoch': 20.0, 'step': 2700}, {'loss': 0.0037, 'learning_rate': 2.5e-06, 'epoch': 21.0, 'step': 2835}, {'eval_loss': 0.2814384996891022, 'eval_precision': 0.5016685205784205, 'eval_recall': 0.5142531356898518, 'eval_f1': 0.507882882882883, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9617, 'eval_samples_per_second': 516.925, 'eval_steps_per_second': 64.827, 'epoch': 21.0, 'step': 2835}, {'loss': 0.0034, 'learning_rate': 1.6666666666666667e-06, 'epoch': 22.0, 'step': 2970}, {'eval_loss': 0.2846806049346924, 'eval_precision': 0.5016611295681063, 'eval_recall': 0.5165336374002281, 'eval_f1': 0.5089887640449438, 'eval_accuracy': 0.9509380066393885, 'eval_runtime': 2.936, 'eval_samples_per_second': 521.453, 'eval_steps_per_second': 65.395, 'epoch': 22.0, 'step': 2970}, {'loss': 0.0031, 'learning_rate': 8.333333333333333e-07, 'epoch': 23.0, 'step': 3105}, {'eval_loss': 0.28527942299842834, 'eval_precision': 0.5106861642294713, 'eval_recall': 0.5176738882554162, 'eval_f1': 0.5141562853907135, 'eval_accuracy': 0.9512082143132865, 'eval_runtime': 3.0473, 'eval_samples_per_second': 502.404, 'eval_steps_per_second': 63.006, 'epoch': 23.0, 'step': 3105}, {'loss': 0.0031, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 3240}, {'eval_loss': 0.28563249111175537, 'eval_precision': 0.5078125, 'eval_recall': 0.5188141391106044, 'eval_f1': 0.5132543711223915, 'eval_accuracy': 0.9508608044468463, 'eval_runtime': 2.9387, 'eval_samples_per_second': 520.973, 'eval_steps_per_second': 65.334, 'epoch': 24.0, 'step': 3240}, {'train_runtime': 839.3653, 'train_samples_per_second': 246.872, 'train_steps_per_second': 3.86, 'total_flos': 7641716291195580.0, 'train_loss': 0.0727188670248897, 'epoch': 24.0, 'step': 3240}]

Evaluation, ltg/norbert3-base
***** predict metrics *****
  predict_accuracy           =     0.9488
  predict_f1                 =     0.4221
  predict_loss               =     0.1806
  predict_precision          =     0.4339
  predict_recall             =     0.4109
  predict_runtime            = 0:00:02.47
  predict_samples_per_second =    513.905
  predict_steps_per_second   =     64.238
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-bin_NorBERT_3_base_40.json completed. F1: 0.42208245981830894
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_21.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_21.json
01191518_tsa-intensity_NorBERT_3_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 5388.42 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:01, 6406.20 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 6533.65 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 6703.44 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 6837.45 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 6998.04 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:01<00:00, 7201.86 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6301.44 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6578.63 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7371.40 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7017.56 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7038.73 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6871.09 examples/s]
You're using a PreTrainedTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NorBERT_3_large/checkpoint-540 already exists and is non-empty.Saving will proceed but saved results may be invalid.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
01191518_tsa-intensity_NorBERT_3_large Ready to train. Train dataset labels are now: ['idx', 'tokens', 'tsa_tags', 'input_ids', 'token_type_ids', 'attention_mask', 'labels']
{'loss': 0.7029, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0}
{'eval_loss': 0.4628281891345978, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7195, 'eval_samples_per_second': 267.68, 'eval_steps_per_second': 33.569, 'epoch': 1.0}
{'loss': 0.6456, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0}
{'eval_loss': 0.7043643593788147, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7064, 'eval_samples_per_second': 268.295, 'eval_steps_per_second': 33.646, 'epoch': 2.0}
{'loss': 0.6036, 'learning_rate': 4.375e-05, 'epoch': 3.0}
{'eval_loss': 0.6973606944084167, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7201, 'eval_samples_per_second': 267.651, 'eval_steps_per_second': 33.566, 'epoch': 3.0}
{'loss': 0.6137, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0}
{'eval_loss': 0.6167799830436707, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6847, 'eval_samples_per_second': 269.318, 'eval_steps_per_second': 33.775, 'epoch': 4.0}
{'loss': 0.573, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0}
{'eval_loss': 0.8902586102485657, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.499, 'eval_steps_per_second': 33.547, 'epoch': 5.0}
{'loss': 0.5427, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0}
{'eval_loss': 0.7016043663024902, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7215, 'eval_samples_per_second': 267.588, 'eval_steps_per_second': 33.558, 'epoch': 6.0}
{'loss': 0.5546, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0}
{'eval_loss': 0.6011141538619995, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.72, 'eval_samples_per_second': 267.656, 'eval_steps_per_second': 33.566, 'epoch': 7.0}
{'loss': 0.5068, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0}
{'eval_loss': 0.5266714692115784, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.83, 'eval_steps_per_second': 33.714, 'epoch': 8.0}
{'loss': 0.4726, 'learning_rate': 3.125e-05, 'epoch': 9.0}
{'eval_loss': 0.6226876974105835, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7083, 'eval_samples_per_second': 268.208, 'eval_steps_per_second': 33.635, 'epoch': 9.0}
{'loss': 0.492, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0}
{'eval_loss': 0.5893234610557556, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6805, 'eval_samples_per_second': 269.518, 'eval_steps_per_second': 33.8, 'epoch': 10.0}
{'loss': 0.4926, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0}
{'eval_loss': 0.49001845717430115, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.809, 'eval_steps_per_second': 33.585, 'epoch': 11.0}
{'loss': 0.4875, 'learning_rate': 2.5e-05, 'epoch': 12.0}
{'eval_loss': 0.5567618012428284, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7169, 'eval_samples_per_second': 267.803, 'eval_steps_per_second': 33.585, 'epoch': 12.0}
{'loss': 0.4842, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0}
{'eval_loss': 0.6441789865493774, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.691, 'eval_samples_per_second': 269.02, 'eval_steps_per_second': 33.737, 'epoch': 13.0}
{'loss': 0.494, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0}
{'eval_loss': 0.5626211166381836, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7138, 'eval_samples_per_second': 267.946, 'eval_steps_per_second': 33.603, 'epoch': 14.0}
{'loss': 0.4975, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0}
{'eval_loss': 0.5687924027442932, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6956, 'eval_samples_per_second': 268.805, 'eval_steps_per_second': 33.71, 'epoch': 15.0}
{'loss': 0.5097, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0}
{'eval_loss': 0.6098456978797913, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6903, 'eval_samples_per_second': 269.052, 'eval_steps_per_second': 33.741, 'epoch': 16.0}
{'loss': 0.5407, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0}
{'eval_loss': 0.6346501708030701, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6835, 'eval_samples_per_second': 269.376, 'eval_steps_per_second': 33.782, 'epoch': 17.0}
{'loss': 0.5997, 'learning_rate': 1.25e-05, 'epoch': 18.0}
{'eval_loss': 0.7052807807922363, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6887, 'eval_samples_per_second': 269.128, 'eval_steps_per_second': 33.751, 'epoch': 18.0}
{'loss': 0.585, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0}
{'eval_loss': 0.684402585029602, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 19.0}
{'loss': 0.5653, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0}
{'eval_loss': 0.6955111026763916, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7228, 'eval_samples_per_second': 267.524, 'eval_steps_per_second': 33.55, 'epoch': 20.0}
{'loss': 0.5927, 'learning_rate': 6.25e-06, 'epoch': 21.0}
{'eval_loss': 0.6908101439476013, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.881, 'eval_steps_per_second': 33.72, 'epoch': 21.0}
{'loss': 0.5582, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0}
{'eval_loss': 0.6546476483345032, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7159, 'eval_samples_per_second': 267.848, 'eval_steps_per_second': 33.59, 'epoch': 22.0}
{'loss': 0.5565, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0}
{'eval_loss': 0.6729499697685242, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6955, 'eval_samples_per_second': 268.81, 'eval_steps_per_second': 33.711, 'epoch': 23.0}
{'loss': 0.5565, 'learning_rate': 0.0, 'epoch': 24.0}
{'eval_loss': 0.6684461832046509, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.726, 'eval_steps_per_second': 33.575, 'epoch': 24.0}
{'train_runtime': 2613.8327, 'train_samples_per_second': 79.277, 'train_steps_per_second': 4.958, 'train_loss': 0.5511534796820746, 'epoch': 24.0}
***** train metrics *****
  epoch                    =       24.0
  train_loss               =     0.5512
  train_runtime            = 0:43:33.83
  train_samples            =       8634
  train_samples_per_second =     79.277
  train_steps_per_second   =      4.958
[{'loss': 0.7029, 'learning_rate': 4.791666666666667e-05, 'epoch': 1.0, 'step': 540}, {'eval_loss': 0.4628281891345978, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7195, 'eval_samples_per_second': 267.68, 'eval_steps_per_second': 33.569, 'epoch': 1.0, 'step': 540}, {'loss': 0.6456, 'learning_rate': 4.5833333333333334e-05, 'epoch': 2.0, 'step': 1080}, {'eval_loss': 0.7043643593788147, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7064, 'eval_samples_per_second': 268.295, 'eval_steps_per_second': 33.646, 'epoch': 2.0, 'step': 1080}, {'loss': 0.6036, 'learning_rate': 4.375e-05, 'epoch': 3.0, 'step': 1620}, {'eval_loss': 0.6973606944084167, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7201, 'eval_samples_per_second': 267.651, 'eval_steps_per_second': 33.566, 'epoch': 3.0, 'step': 1620}, {'loss': 0.6137, 'learning_rate': 4.166666666666667e-05, 'epoch': 4.0, 'step': 2160}, {'eval_loss': 0.6167799830436707, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6847, 'eval_samples_per_second': 269.318, 'eval_steps_per_second': 33.775, 'epoch': 4.0, 'step': 2160}, {'loss': 0.573, 'learning_rate': 3.958333333333333e-05, 'epoch': 5.0, 'step': 2700}, {'eval_loss': 0.8902586102485657, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7234, 'eval_samples_per_second': 267.499, 'eval_steps_per_second': 33.547, 'epoch': 5.0, 'step': 2700}, {'loss': 0.5427, 'learning_rate': 3.7500000000000003e-05, 'epoch': 6.0, 'step': 3240}, {'eval_loss': 0.7016043663024902, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7215, 'eval_samples_per_second': 267.588, 'eval_steps_per_second': 33.558, 'epoch': 6.0, 'step': 3240}, {'loss': 0.5546, 'learning_rate': 3.541666666666667e-05, 'epoch': 7.0, 'step': 3780}, {'eval_loss': 0.6011141538619995, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.72, 'eval_samples_per_second': 267.656, 'eval_steps_per_second': 33.566, 'epoch': 7.0, 'step': 3780}, {'loss': 0.5068, 'learning_rate': 3.3333333333333335e-05, 'epoch': 8.0, 'step': 4320}, {'eval_loss': 0.5266714692115784, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.695, 'eval_samples_per_second': 268.83, 'eval_steps_per_second': 33.714, 'epoch': 8.0, 'step': 4320}, {'loss': 0.4726, 'learning_rate': 3.125e-05, 'epoch': 9.0, 'step': 4860}, {'eval_loss': 0.6226876974105835, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7083, 'eval_samples_per_second': 268.208, 'eval_steps_per_second': 33.635, 'epoch': 9.0, 'step': 4860}, {'loss': 0.492, 'learning_rate': 2.916666666666667e-05, 'epoch': 10.0, 'step': 5400}, {'eval_loss': 0.5893234610557556, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6805, 'eval_samples_per_second': 269.518, 'eval_steps_per_second': 33.8, 'epoch': 10.0, 'step': 5400}, {'loss': 0.4926, 'learning_rate': 2.7083333333333332e-05, 'epoch': 11.0, 'step': 5940}, {'eval_loss': 0.49001845717430115, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7168, 'eval_samples_per_second': 267.809, 'eval_steps_per_second': 33.585, 'epoch': 11.0, 'step': 5940}, {'loss': 0.4875, 'learning_rate': 2.5e-05, 'epoch': 12.0, 'step': 6480}, {'eval_loss': 0.5567618012428284, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7169, 'eval_samples_per_second': 267.803, 'eval_steps_per_second': 33.585, 'epoch': 12.0, 'step': 6480}, {'loss': 0.4842, 'learning_rate': 2.2916666666666667e-05, 'epoch': 13.0, 'step': 7020}, {'eval_loss': 0.6441789865493774, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.691, 'eval_samples_per_second': 269.02, 'eval_steps_per_second': 33.737, 'epoch': 13.0, 'step': 7020}, {'loss': 0.494, 'learning_rate': 2.0833333333333336e-05, 'epoch': 14.0, 'step': 7560}, {'eval_loss': 0.5626211166381836, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7138, 'eval_samples_per_second': 267.946, 'eval_steps_per_second': 33.603, 'epoch': 14.0, 'step': 7560}, {'loss': 0.4975, 'learning_rate': 1.8750000000000002e-05, 'epoch': 15.0, 'step': 8100}, {'eval_loss': 0.5687924027442932, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6956, 'eval_samples_per_second': 268.805, 'eval_steps_per_second': 33.71, 'epoch': 15.0, 'step': 8100}, {'loss': 0.5097, 'learning_rate': 1.6666666666666667e-05, 'epoch': 16.0, 'step': 8640}, {'eval_loss': 0.6098456978797913, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6903, 'eval_samples_per_second': 269.052, 'eval_steps_per_second': 33.741, 'epoch': 16.0, 'step': 8640}, {'loss': 0.5407, 'learning_rate': 1.4583333333333335e-05, 'epoch': 17.0, 'step': 9180}, {'eval_loss': 0.6346501708030701, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6835, 'eval_samples_per_second': 269.376, 'eval_steps_per_second': 33.782, 'epoch': 17.0, 'step': 9180}, {'loss': 0.5997, 'learning_rate': 1.25e-05, 'epoch': 18.0, 'step': 9720}, {'eval_loss': 0.7052807807922363, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6887, 'eval_samples_per_second': 269.128, 'eval_steps_per_second': 33.751, 'epoch': 18.0, 'step': 9720}, {'loss': 0.585, 'learning_rate': 1.0416666666666668e-05, 'epoch': 19.0, 'step': 10260}, {'eval_loss': 0.684402585029602, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.705, 'eval_samples_per_second': 268.36, 'eval_steps_per_second': 33.655, 'epoch': 19.0, 'step': 10260}, {'loss': 0.5653, 'learning_rate': 8.333333333333334e-06, 'epoch': 20.0, 'step': 10800}, {'eval_loss': 0.6955111026763916, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7228, 'eval_samples_per_second': 267.524, 'eval_steps_per_second': 33.55, 'epoch': 20.0, 'step': 10800}, {'loss': 0.5927, 'learning_rate': 6.25e-06, 'epoch': 21.0, 'step': 11340}, {'eval_loss': 0.6908101439476013, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.694, 'eval_samples_per_second': 268.881, 'eval_steps_per_second': 33.72, 'epoch': 21.0, 'step': 11340}, {'loss': 0.5582, 'learning_rate': 4.166666666666667e-06, 'epoch': 22.0, 'step': 11880}, {'eval_loss': 0.6546476483345032, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7159, 'eval_samples_per_second': 267.848, 'eval_steps_per_second': 33.59, 'epoch': 22.0, 'step': 11880}, {'loss': 0.5565, 'learning_rate': 2.0833333333333334e-06, 'epoch': 23.0, 'step': 12420}, {'eval_loss': 0.6729499697685242, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.6955, 'eval_samples_per_second': 268.81, 'eval_steps_per_second': 33.711, 'epoch': 23.0, 'step': 12420}, {'loss': 0.5565, 'learning_rate': 0.0, 'epoch': 24.0, 'step': 12960}, {'eval_loss': 0.6684461832046509, 'eval_precision': 0.0, 'eval_recall': 0.0, 'eval_f1': 0.0, 'eval_accuracy': 0.9341851308577164, 'eval_runtime': 5.7185, 'eval_samples_per_second': 267.726, 'eval_steps_per_second': 33.575, 'epoch': 24.0, 'step': 12960}, {'train_runtime': 2613.8327, 'train_samples_per_second': 79.277, 'train_steps_per_second': 4.958, 'total_flos': 2.055046283595774e+16, 'train_loss': 0.5511534796820746, 'epoch': 24.0, 'step': 12960}]

Evaluation, ltg/norbert3-large
***** predict metrics *****
  predict_accuracy           =     0.9327
  predict_f1                 =        0.0
  predict_loss               =     0.4738
  predict_precision          =        0.0
  predict_recall             =        0.0
  predict_runtime            = 0:00:04.76
  predict_samples_per_second =    267.017
  predict_steps_per_second   =     33.377
Train and save best epoch to /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NorBERT_3_large_21.json completed. F1: 0.0
/fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_11.json
Using the `WANDB_DISABLED` environment variable is deprecated and will be removed in v5. Use the --report_to flag to control the integrations used for logging result (for instance --report_to none).
Some weights of BertForTokenClassification were not initialized from the model checkpoint at NbAiLab/nb-bert-large and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Numpy: 1.22.3
PyTorch: 1.12.1
Transformers: 4.36.2



***Loading config file: /fp/homes01/u01/ec-egilron/sqlabel-github/configs/fox/01191518_tsa-intensity_NB-BERT_large_11.json
01191518_tsa-intensity_NB-BERT_large Our label2id: {'O': 0, 'B-targ-Negative-1': 1, 'I-targ-Negative-1': 2, 'B-targ-Negative-2': 3, 'I-targ-Negative-2': 4, 'B-targ-Negative-3': 5, 'I-targ-Negative-3': 6, 'B-targ-Positive-1': 7, 'I-targ-Positive-1': 8, 'B-targ-Positive-2': 9, 'I-targ-Positive-2': 10, 'B-targ-Positive-3': 11, 'I-targ-Positive-3': 12}
Running tokenizer on train dataset:   0%|          | 0/8634 [00:00<?, ? examples/s]Asking to truncate to max_length but no maximum length is provided and the model has no predefined maximum length. Default to no truncation.
Running tokenizer on train dataset:  12%|█▏        | 1000/8634 [00:00<00:01, 6961.52 examples/s]Running tokenizer on train dataset:  23%|██▎       | 2000/8634 [00:00<00:00, 7301.78 examples/s]Running tokenizer on train dataset:  35%|███▍      | 3000/8634 [00:00<00:00, 7110.50 examples/s]Running tokenizer on train dataset:  46%|████▋     | 4000/8634 [00:00<00:00, 7114.29 examples/s]Running tokenizer on train dataset:  58%|█████▊    | 5000/8634 [00:00<00:00, 7148.69 examples/s]Running tokenizer on train dataset:  69%|██████▉   | 6000/8634 [00:00<00:00, 7253.58 examples/s]Running tokenizer on train dataset:  81%|████████  | 7000/8634 [00:00<00:00, 7400.66 examples/s]Running tokenizer on train dataset:  93%|█████████▎| 8000/8634 [00:01<00:00, 6462.29 examples/s]Running tokenizer on train dataset: 100%|██████████| 8634/8634 [00:01<00:00, 6922.45 examples/s]
Running tokenizer on validation dataset:   0%|          | 0/1531 [00:00<?, ? examples/s]Running tokenizer on validation dataset:  65%|██████▌   | 1000/1531 [00:00<00:00, 7387.24 examples/s]Running tokenizer on validation dataset: 100%|██████████| 1531/1531 [00:00<00:00, 7005.42 examples/s]
Running tokenizer on test dataset:   0%|          | 0/1272 [00:00<?, ? examples/s]Running tokenizer on test dataset:  79%|███████▊  | 1000/1272 [00:00<00:00, 7039.19 examples/s]Running tokenizer on test dataset: 100%|██████████| 1272/1272 [00:00<00:00, 6878.59 examples/s]
You're using a BertTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
/fp/homes01/u01/ec-egilron/venvs/transformers/lib/python3.10/site-packages/seqeval/metrics/v1.py:57: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
Checkpoint destination directory /cluster/work/projects/ec30/egilron/tsa-hf/01191518_tsa-intensity_NB-BERT_large/checkpoint-1080 already exists and is non-empty.Saving will proceed but saved results may be invalid.
slurmstepd: error: *** JOB 411003 ON gpu-8 CANCELLED AT 2024-01-21T14:54:02 DUE TO TIME LIMIT ***

Task and CPU usage stats:
JobID           JobName  AllocCPUS   NTasks     MinCPU MinCPUTask     AveCPU    Elapsed ExitCode 
------------ ---------- ---------- -------- ---------- ---------- ---------- ---------- -------- 
411003       tsa_norbe+          1                                             23:00:27      0:0 
411003.batch      batch          1        1   22:34:09          0   22:34:09   23:00:28     0:15 
411003.exte+     extern          1        1   00:00:00          0   00:00:00   23:00:27      0:0 

Memory usage stats:
JobID            MaxRSS MaxRSSTask     AveRSS MaxPages   MaxPagesTask   AvePages 
------------ ---------- ---------- ---------- -------- -------------- ---------- 
411003                                                                           
411003.batch   4314900K          0   4314900K        0              0          0 
411003.exte+          0          0          0        0              0          0 

Disk usage stats:
JobID         MaxDiskRead MaxDiskReadTask    AveDiskRead MaxDiskWrite MaxDiskWriteTask   AveDiskWrite 
------------ ------------ --------------- -------------- ------------ ---------------- -------------- 
411003                                                                                                
411003.batch    34223.68M               0      34223.68M  3106466.91M                0    3106466.91M 
411003.exte+        0.01M               0          0.01M        0.00M                0          0.00M 

GPU usage stats:
Error: Unable to retrieve job statistics. Return: Setting not configured.

Job 411003 completed at Sun Jan 21 14:54:04 CET 2024
